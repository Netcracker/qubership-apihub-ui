{"version":3,"file":"SidebarWithTags-f0b982eb.js","sources":["../../packages/shared/src/stories/samples/tags-samples.ts","../../packages/shared/src/components/SidebarWithTags/TagListSkeleton.tsx","../../packages/shared/src/components/SidebarWithTags/TagListItem.tsx","../../packages/shared/src/components/SidebarWithTags/TagList.tsx","../../packages/shared/src/components/SidebarWithTags/SidebarWithTags.tsx"],"sourcesContent":["/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const operationTags = [\n  'default',\n  'Cats',\n  'Dogs',\n  'Books',\n  'Magazines',\n  'Admin',\n]\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC, RefObject } from 'react'\nimport { memo } from 'react'\nimport { List, ListItem, Skeleton } from '@mui/material'\n\nexport type TagListSkeletonProps = {\n  count?: number\n}\n\nexport const TagListSkeleton: FC<TagListSkeletonProps> = memo<TagListSkeletonProps>(({ count = 6 }) => {\n  return (\n    <List>\n      {[...Array(count)].map((_, index) => (\n        <TagSkeleton key={index}/>\n      ))}\n    </List>\n  )\n})\n\ntype TagSkeletonProps = {\n  refObject?: RefObject<HTMLDivElement>\n}\n\nexport const TagSkeleton: FC<TagSkeletonProps> = memo<TagSkeletonProps>(({ refObject }) => {\n  return (\n    <ListItem>\n      <Skeleton ref={refObject} sx={{}} variant=\"rectangular\" width={116} height={15}/>\n    </ListItem>\n  )\n})\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC } from 'react'\nimport * as React from 'react'\nimport { memo, useCallback } from 'react'\nimport { ListItem, ListItemButton, ListItemText } from '@mui/material'\n\nexport const TagListItem: FC<{\n  tag: string\n  selected: boolean\n  onClick: (value?: string) => void\n}> = memo((props) => {\n  const { tag, selected, onClick } = props\n\n  const handleTagClick = useCallback(() => {\n    onClick(selected ? '' : tag)\n  }, [onClick, selected, tag])\n\n  return (\n    <ListItem\n      sx={{ p: 0 }}\n    >\n      <ListItemButton\n        sx={{\n          height: '36px',\n          alignItems: 'center',\n        }}\n        selected={selected}\n        onClick={handleTagClick}\n      >\n        <ListItemText primary={tag} primaryTypographyProps={{ sx: { mt: 1 } }}/>\n      </ListItemButton>\n    </ListItem>\n  )\n})\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC } from 'react'\nimport * as React from 'react'\nimport { memo, useRef } from 'react'\nimport { List } from '@mui/material'\nimport { NAVIGATION_PLACEHOLDER_AREA, NO_SEARCH_RESULTS, Placeholder } from '../Placeholder'\nimport { isNotEmpty } from '../../utils/arrays'\nimport type { Tags } from '../../entities/operations'\nimport { useIntersectionObserver } from '../../hooks/common/useIntersectionObserver'\nimport type { HasNextPage, IsFetchingNextPage } from '../../utils/aliases'\nimport { TagListSkeleton, TagSkeleton } from './TagListSkeleton'\nimport { TagListItem } from './TagListItem'\n\nexport type TagListProps = {\n  searchValue: string\n  tags: Tags\n  areTagsLoading: boolean\n  fetchNextTagsPage?: () => Promise<void>\n  isNextTagsPageFetching?: IsFetchingNextPage\n  hasNextTagsPage?: HasNextPage\n  selectedTag?: string\n  onSelectTag: (value?: string) => void\n}\n\nexport const TagList: FC<TagListProps> = memo<TagListProps>((props) => {\n  const {\n    searchValue,\n    tags,\n    areTagsLoading,\n    fetchNextTagsPage,\n    hasNextTagsPage,\n    isNextTagsPageFetching,\n    selectedTag,\n    onSelectTag,\n  } = props\n\n  const ref = useRef<HTMLDivElement>(null)\n  useIntersectionObserver(ref, isNextTagsPageFetching, hasNextTagsPage, fetchNextTagsPage)\n\n  if (areTagsLoading) {\n    return (\n      <TagListSkeleton/>\n    )\n  }\n\n  return (\n    <Placeholder\n      invisible={isNotEmpty(tags)}\n      area={NAVIGATION_PLACEHOLDER_AREA}\n      message={searchValue ? NO_SEARCH_RESULTS : 'No tags'}\n    >\n      <List>\n        {tags.map((tag) => {\n          return (\n            <TagListItem\n              key={tag}\n              tag={tag}\n              selected={tag === selectedTag}\n              onClick={onSelectTag}\n            />\n          )\n        })}\n        {hasNextTagsPage && <TagSkeleton key=\"tag-skeleton\" refObject={ref}/>}\n      </List>\n    </Placeholder>\n  )\n})\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC } from 'react'\nimport * as React from 'react'\nimport { memo, useEffect, useState } from 'react'\nimport { Box, Typography } from '@mui/material'\nimport { TagList } from './TagList'\nimport { SearchBar } from '../SearchBar'\nimport type { Tags } from '../../entities/operations'\nimport type { HasNextPage, IsFetchingNextPage } from '../../utils/aliases'\n\nexport type SidebarWithTagsProps = {\n  tags: Tags\n  areTagsLoading: boolean\n  fetchNextTagsPage?: () => Promise<void>\n  isNextTagsPageFetching?: IsFetchingNextPage\n  hasNextTagsPage?: HasNextPage\n  onSearch?: (value: string) => void\n  selectedTag?: string\n  onSelectTag: (value?: string) => void\n}\n\n// First Order Component //\nexport const SidebarWithTags: FC<SidebarWithTagsProps> = memo<SidebarWithTagsProps>((props) => {\n  const {\n    tags, areTagsLoading, fetchNextTagsPage, hasNextTagsPage, isNextTagsPageFetching,\n    onSearch, selectedTag, onSelectTag,\n  } = props\n\n  const [searchValue, setSearchValue] = useState('')\n\n  useEffect(() => onSearch?.(searchValue), [onSearch, searchValue])\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      overflow=\"hidden\"\n      height=\"100%\"\n    >\n      <Box mx={2} mt={2}>\n        <Typography width=\"100%\" noWrap variant=\"button\">\n          Filters by Tag\n        </Typography>\n      </Box>\n      <Box mx={2} mb={1} mt={1}>\n        <SearchBar\n          placeholder=\"Search tags\"\n          onValueChange={setSearchValue}\n          data-testid=\"SearchTags\"\n        />\n      </Box>\n      <Box overflow=\"auto\" flexGrow={1} data-testid=\"TagsList\">\n        <TagList\n          searchValue={searchValue}\n          tags={tags}\n          areTagsLoading={areTagsLoading}\n          fetchNextTagsPage={fetchNextTagsPage}\n          isNextTagsPageFetching={isNextTagsPageFetching}\n          hasNextTagsPage={hasNextTagsPage}\n          selectedTag={selectedTag}\n          onSelectTag={onSelectTag}\n        />\n      </Box>\n    </Box>\n  )\n})\n"],"names":["operationTags","TagListSkeleton","memo","count","jsx","List","_","index","TagSkeleton","refObject","ListItem","Skeleton","TagListItem","props","tag","selected","onClick","handleTagClick","useCallback","ListItemButton","ListItemText","TagList","searchValue","tags","areTagsLoading","fetchNextTagsPage","hasNextTagsPage","isNextTagsPageFetching","selectedTag","onSelectTag","ref","useRef","useIntersectionObserver","Placeholder","isNotEmpty","NAVIGATION_PLACEHOLDER_AREA","NO_SEARCH_RESULTS","jsxs","SidebarWithTags","onSearch","setSearchValue","useState","useEffect","Box","Typography","SearchBar"],"mappings":"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"}