{"version":3,"file":"PackageDialogForm.stories-b964c6d7.js","sources":["../../node_modules/@mui/material/ListItemIcon/ListItemIcon.js","../../node_modules/@mui/icons-material/WorkspacesOutlined.js","../../packages/shared/src/components/Forms/PackageDialogForm.tsx"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemIconUtilityClass } from './listItemIconClasses';\nimport ListContext from '../List/ListContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemIconUtilityClass, classes);\n};\nconst ListItemIconRoot = styled('div', {\n  name: 'MuiListItemIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  color: (theme.vars || theme).palette.action.active,\n  flexShrink: 0,\n  display: 'inline-flex'\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\nconst ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemIcon'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemIconRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@mui/icons-material` SVG icon element.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemIcon;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 15c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2m0-2c-2.2 0-4 1.8-4 4s1.8 4 4 4 4-1.8 4-4-1.8-4-4-4zm6-8c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2m0-2C9.8 3 8 4.8 8 7s1.8 4 4 4 4-1.8 4-4-1.8-4-4-4zm6 12c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2m0-2c-2.2 0-4 1.8-4 4s1.8 4 4 4 4-1.8 4-4-1.8-4-4-4z\"\n}), 'WorkspacesOutlined');\nexports.default = _default;","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC } from 'react'\nimport { memo, useEffect, useMemo } from 'react'\nimport type { Package, PackageKind } from '../../entities/packages'\nimport { EMPTY_PACKAGE, WORKSPACE_KIND } from '../../entities/packages'\nimport {\n  Autocomplete,\n  Button,\n  Checkbox,\n  debounce,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControlLabel,\n  ListItem,\n  TextField,\n} from '@mui/material'\nimport { DEFAULT_DEBOUNCE } from '../../utils/constants'\nimport { Controller, useForm } from 'react-hook-form'\nimport { DialogForm } from '../DialogForm'\nimport { disableAutocompleteSearch } from '../../utils/mui'\nimport { GroupIcon } from '../../icons/GroupIcon'\nimport { ALIAS_VALIDATION_RULES } from '../../utils/validations'\nimport { LoadingButton } from '@mui/lab'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport WorkspacesOutlinedIcon from '@mui/icons-material/WorkspacesOutlined'\nimport ListItemText from '@mui/material/ListItemText'\n\nexport type PackageDialogFormProps = {\n  open: boolean\n  setOpen: (value: boolean) => void\n  onSubmit: (value: Package) => void\n  title: string\n  kind: PackageKind\n  currentWorkspace?: Package\n  isLoading?: boolean\n  parentPackage?: Package | null\n  packages?: ReadonlyArray<Package>\n  arePackagesLoading?: boolean\n  submitError?: Error | null\n  packageSearch?: string\n  onPackageSearch?: (testFilter: string) => void\n  submitText?: string\n}\n\nexport const PackageDialogForm: FC<PackageDialogFormProps> = memo<PackageDialogFormProps>(({\n  open,\n  setOpen,\n  onSubmit,\n  title,\n  currentWorkspace,\n  isLoading = false,\n  parentPackage,\n  kind,\n  packages = [],\n  arePackagesLoading = false,\n  submitError,\n  packageSearch = '',\n  onPackageSearch,\n  submitText = 'Submit',\n}) => {\n  const isWorkspace = kind === WORKSPACE_KIND\n  const debouncedOnPackageInputChange = useMemo(\n    () => debounce((_, value: string) => onPackageSearch?.(value), DEFAULT_DEBOUNCE),\n    [onPackageSearch],\n  )\n\n  const includeSelectedWorkspace = currentWorkspace && currentWorkspace.name.toLowerCase().includes(packageSearch.toLowerCase())\n\n  const defaultValues: Partial<Package> = useMemo(() => ({\n    ...EMPTY_PACKAGE,\n    kind: kind,\n    parentGroup: parentPackage?.key,\n  }), [parentPackage, kind])\n\n  const { handleSubmit, control, setValue, reset, formState: { errors } } = useForm<Package>({ defaultValues })\n\n  useEffect(() => {\n    !open && reset()\n  }, [open, reset])\n\n  return (\n    <DialogForm\n      open={open}\n      onClose={() => setOpen(false)}\n      onSubmit={handleSubmit(onSubmit)}\n    >\n      <DialogTitle>{title}</DialogTitle>\n\n      <DialogContent>\n        <Controller\n          name=\"name\"\n          control={control}\n          render={({ field }) => <TextField {...field} autoFocus required label=\"Name\" data-testid=\"NameTextField\"/>}\n        />\n        {!isWorkspace && <Controller\n          name=\"parentGroup\"\n          control={control}\n          render={() => <Autocomplete<Package>\n            options={includeSelectedWorkspace ? [currentWorkspace, ...packages] : packages}\n            loading={arePackagesLoading}\n            filterOptions={disableAutocompleteSearch}\n            defaultValue={parentPackage}\n            getOptionLabel={({ name }) => name}\n            renderOption={(props, { key, name, kind }) => (\n              <ListItem {...props} key={key}>\n                <ListItemIcon sx={{ minWidth: 3, mr: 1 }}>\n                  {kind === WORKSPACE_KIND ? <WorkspaceIcon/> : <GroupIcon/>}\n                </ListItemIcon>\n                <ListItemText>\n                  {name}\n                </ListItemText>\n              </ListItem>\n            )}\n            isOptionEqualToValue={(option, value) => option.key === value.key}\n            renderInput={(params) => <TextField {...params} required label=\"Workspace/Parent Group\"/>}\n            onChange={(_, value) => setValue('parentGroup', value?.key ?? '')}\n            onInputChange={debouncedOnPackageInputChange}\n            data-testid=\"ParentAutocomplete\"\n          />}\n        />}\n        <Controller\n          name=\"alias\"\n          control={control}\n          rules={{ validate: ALIAS_VALIDATION_RULES }}\n          render={({ field }) => (\n            <TextField\n              {...field}\n              required\n              label=\"Alias\"\n              error={!!errors.alias || !!submitError}\n              helperText={!!errors.alias && errors.alias?.message || !!submitError && submitError.message}\n              data-testid=\"AliasTextField\"\n            />\n          )}\n        />\n        <Controller\n          name=\"description\"\n          control={control}\n          render={({ field }) => <TextField {...field} multiline rows=\"4\" type=\"text\" label=\"Description\" data-testid=\"DescriptionTextField\"/>}\n        />\n        <Controller\n          name=\"packageVisibility\"\n          control={control}\n          render={({ field }) => (\n            <FormControlLabel\n              {...field}\n              control={<Checkbox data-testid=\"PackageVisibilityCheckbox\"/>}\n              label=\"Private\"\n            />\n          )}\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <LoadingButton variant=\"contained\" type=\"submit\" loading={isLoading} data-testid={`${submitText}Button`}>\n          {submitText}\n        </LoadingButton>\n        <Button variant=\"outlined\" onClick={() => setOpen(false)} data-testid=\"CancelButton\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </DialogForm>\n  )\n})\n\nexport const WorkspaceIcon: FC = memo(() => (\n  <WorkspacesOutlinedIcon\n    sx={{\n      height: '20px',\n      width: '20px',\n    }}\n  />\n))\n"],"names":["_excluded","useUtilityClasses","ownerState","alignItems","classes","composeClasses","getListItemIconUtilityClass","ListItemIconRoot","styled","props","styles","theme","_extends","ListItemIcon","React.forwardRef","inProps","ref","useThemeProps","className","other","_objectWithoutPropertiesLoose","context","React.useContext","ListContext","_jsx","clsx","ListItemIcon$1","_interopRequireDefault","require$$0","WorkspacesOutlined","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","_default","PackageDialogForm","memo","open","setOpen","onSubmit","title","currentWorkspace","isLoading","parentPackage","kind","packages","arePackagesLoading","submitError","packageSearch","onPackageSearch","submitText","isWorkspace","WORKSPACE_KIND","debouncedOnPackageInputChange","useMemo","debounce","_","value","DEFAULT_DEBOUNCE","includeSelectedWorkspace","defaultValues","EMPTY_PACKAGE","handleSubmit","control","setValue","reset","errors","useForm","useEffect","jsxs","DialogForm","jsx","DialogTitle","DialogContent","Controller","field","TextField","Autocomplete","disableAutocompleteSearch","name","key","kind2","createElement","ListItem","WorkspaceIcon","GroupIcon","ListItemText","option","params","ALIAS_VALIDATION_RULES","_a","FormControlLabel","Checkbox","DialogActions","LoadingButton","Button","WorkspacesOutlinedIcon"],"mappings":"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","x_google_ignoreList":[0,1]}