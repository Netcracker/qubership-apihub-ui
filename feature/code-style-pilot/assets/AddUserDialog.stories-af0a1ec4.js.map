{"version":3,"file":"AddUserDialog.stories-af0a1ec4.js","sources":["../../packages/shared/src/types/dialogs.ts","../../packages/shared/src/components/Users/AddUserDialog.tsx"],"sourcesContent":["/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const SHOW_ADD_USER_DIALOG = 'show-add-user-dialog'\nexport const SHOW_USER_ROLES_DIALOG = 'show-user-roles-dialog'\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined'\nimport SearchOutlinedIcon from '@mui/icons-material/SearchOutlined'\nimport { Box, Button, Chip, DialogActions, DialogContent, DialogTitle, ListItem } from '@mui/material'\nimport type { FC } from 'react'\nimport React, { memo, useCallback, useState } from 'react'\nimport { Controller, useForm } from 'react-hook-form'\nimport { useDebounce } from 'react-use'\nimport { CheckIcon } from '../../icons/CheckIcon'\nimport { SHOW_ADD_USER_DIALOG } from '../../types/dialogs'\nimport type { Role, Roles } from '../../types/roles'\nimport type { User } from '../../types/user'\nimport { DEFAULT_DEBOUNCE } from '../../utils/constants'\nimport { DialogForm } from '../DialogForm'\nimport { MultipleSelectorAutocomplete } from '../MultipleSelectorAutocomplete'\nimport type { PopupProps } from '../PopupDelegate'\nimport { PopupDelegate } from '../PopupDelegate'\nimport { UserAvatar } from './UserAvatar'\n\nexport type AddUserDialogProps = {\n  users: ReadonlyArray<User> | undefined\n  roles: Roles\n  onConfirm: (users: User[], roles: Role[]) => void\n  setUserSearch: (search: string) => void\n  isUsersLoading: boolean\n}\n\nexport const AddUserDialog: FC<AddUserDialogProps> = memo((props) => {\n  const {\n    users,\n    roles,\n    onConfirm,\n    setUserSearch,\n    isUsersLoading,\n  } = props\n  return (\n    <PopupDelegate\n      type={SHOW_ADD_USER_DIALOG}\n      render={props => (\n        <AddUserPopup\n          {...props}\n          users={users}\n          roles={roles}\n          onConfirm={onConfirm}\n          setUserSearch={setUserSearch}\n          isUsersLoading={isUsersLoading}\n        />\n      )}\n    />\n  )\n})\n\ntype AddUserPopupProps = PopupProps & AddUserDialogProps\n\ntype AddUserForm = {\n  users: User[]\n  roles: Role[]\n}\n\nexport const AddUserPopup: FC<AddUserPopupProps> = memo<AddUserPopupProps>((props) => {\n  const {\n    open,\n    setOpen,\n    users,\n    roles,\n    onConfirm,\n    setUserSearch,\n    isUsersLoading,\n  } = props\n\n  const { handleSubmit, control } = useForm<AddUserForm>()\n\n  const [searchValue, setSearchValue] = useState('')\n  useDebounce(() => setUserSearch(searchValue), DEFAULT_DEBOUNCE, [searchValue])\n\n  const onConfirmCallback = useCallback((formData: AddUserForm): void => {\n    const { users, roles } = formData\n    onConfirm(users, roles)\n    setOpen(false)\n  }, [onConfirm, setOpen])\n\n  const onClose = useCallback(() => {\n    setOpen(false)\n  }, [setOpen])\n\n  return (\n    <DialogForm\n      open={open}\n      onClose={onClose}\n      onSubmit={handleSubmit(onConfirmCallback)}\n    >\n      <DialogTitle>\n        Add User\n      </DialogTitle>\n      <DialogContent>\n        <Controller\n          name=\"users\"\n          control={control}\n          render={({ field: { value, onChange } }) => (\n            <MultipleSelectorAutocomplete<User>\n              id=\"user-selector\"\n              options={users ?? []}\n              value={value}\n              inputLabel=\"User\"\n              icon={<SearchOutlinedIcon />}\n              isLoading={isUsersLoading}\n              onChange={onChange}\n              getOptionLabel={(option) => option.name ?? option}\n              setInputSearch={setSearchValue}\n              renderOption={(props, { key, name, avatarUrl }) => {\n                const selected = value?.some(user => user.key === key)\n                return (\n                  <ListItem {...props} key={name} sx={{ pointerEvents: selected ? 'none' : '' }}>\n                    {selected ? <CheckIcon /> : null}\n                    <UserAvatar\n                      sx={{\n                        marginLeft: selected ? '6px' : '21px',\n                        marginRight: '6px',\n                      }}\n                      name={name}\n                      src={avatarUrl}\n                      size=\"small\"\n                    />\n                    {name}\n                  </ListItem>\n                )\n              }}\n              renderTags={(value: User[], getTagProps) =>\n                value.map((option: User, index: number) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    sx={DEFAULT_CHIP_STYLE}\n                    avatar={<CheckIcon />}\n                    deleteIcon={<CloseOutlinedIcon />}\n                    label={option?.name}\n                    {...getTagProps({ index })}\n                    data-testid=\"UserChip\"\n                  />\n                ))}\n              testId=\"UsersAutocomplete\"\n            />\n          )}\n        />\n        <Controller\n          name=\"roles\"\n          control={control}\n          render={({ field: { value, onChange } }) => (\n            <MultipleSelectorAutocomplete<Role>\n              id=\"roles-selector\"\n              options={roles ?? []}\n              value={value}\n              inputLabel=\"Role\"\n              onChange={onChange}\n              getOptionLabel={(option) => option.role ?? option}\n              renderOption={(props, { key, role }) => {\n                const selected = value?.some(role => role.key === key)\n                return (\n                  <ListItem\n                    {...props}\n                    key={role}\n                    sx={{ pointerEvents: selected ? 'none' : '' }}\n                    data-testid={`${role}ListItem`}\n                  >\n                    {selected ? <CheckIcon /> : null}\n                    <Box sx={{ marginLeft: selected ? '6px' : '21px' }}>\n                      {role}\n                    </Box>\n                  </ListItem>\n                )\n              }}\n              renderTags={(value: Roles, getTagProps) =>\n                value.map((option: Role, index: number) => (\n                  <Chip\n                    variant=\"outlined\"\n                    size=\"small\"\n                    sx={DEFAULT_CHIP_STYLE}\n                    avatar={<CheckIcon />}\n                    deleteIcon={<CloseOutlinedIcon />}\n                    label={option?.role}\n                    {...getTagProps({ index })}\n                  />\n                ))}\n              testId=\"RolesAutocomplete\"\n            />\n          )}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" type=\"submit\" data-testid=\"AddButton\">\n          Add\n        </Button>\n        <Button variant=\"outlined\" onClick={() => setOpen(false)} data-testid=\"CancelButton\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </DialogForm>\n  )\n})\n\nconst DEFAULT_CHIP_STYLE = {\n  border: 'none',\n  width: '350px',\n  display: 'flex',\n  justifyContent: 'space-between',\n  '.MuiChip-label': {\n    mr: 'auto',\n  },\n  '&:hover': {\n    backgroundColor: '#2E3A5217',\n    '& .MuiChip-deleteIcon': {\n      display: 'block',\n    },\n  },\n  '& .MuiChip-deleteIcon': {\n    display: 'none',\n  },\n}\n"],"names":["SHOW_ADD_USER_DIALOG","AddUserDialog","memo","props","users","roles","onConfirm","setUserSearch","isUsersLoading","jsx","PopupDelegate","props2","AddUserPopup","open","setOpen","handleSubmit","control","useForm","searchValue","setSearchValue","useState","useDebounce","DEFAULT_DEBOUNCE","onConfirmCallback","useCallback","formData","users2","roles2","onClose","jsxs","DialogForm","DialogTitle","DialogContent","Controller","value","onChange","MultipleSelectorAutocomplete","SearchOutlinedIcon","option","key","name","avatarUrl","selected","user","createElement","ListItem","CheckIcon","UserAvatar","value2","getTagProps","index","Chip","DEFAULT_CHIP_STYLE","CloseOutlinedIcon","role","role2","Box","DialogActions","Button"],"mappings":"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"}