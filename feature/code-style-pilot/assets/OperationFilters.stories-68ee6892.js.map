{"version":3,"file":"OperationFilters.stories-68ee6892.js","sources":["../../node_modules/@mui/icons-material/ExpandMore.js","../../packages/shared/src/components/OperationFilters/ApiAudienceFilter.tsx","../../packages/shared/src/components/OperationFilters/ApiKindFilter.tsx","../../packages/shared/src/components/OperationFilters/DashboardPackageSelector.tsx","../../packages/shared/src/components/OperationFilters/OperationGroupFilter.tsx","../../packages/shared/src/components/OperationFilters/OperationFilters.tsx","../../packages/shared/src/stories/samples/version-content-samples.ts"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexports.default = _default;","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Autocomplete, InputLabel, TextField } from '@mui/material'\nimport type { FC } from 'react'\nimport { memo } from 'react'\nimport type { ApiAudience } from '../../entities/operations'\nimport { API_AUDIENCES } from '../../entities/operations'\nimport { OptionItem } from '../OptionItem'\n\nexport type ApiAudienceFilterProps = {\n  onSelectApiAudience: (value?: ApiAudience) => void\n  value?: ApiAudience\n}\n\nconst FILTER_API_AUDIENCE_LABEL = 'Filter by API Audience'\n\nexport const ApiAudienceFilter: FC<ApiAudienceFilterProps> = memo<ApiAudienceFilterProps>((props) => {\n  const { value, onSelectApiAudience } = props\n  return (\n    <>\n      <InputLabel>\n        {FILTER_API_AUDIENCE_LABEL}\n      </InputLabel>\n      <Autocomplete\n        forcePopupIcon={true}\n        value={value}\n        options={Object.keys(API_AUDIENCES).map(apiAudience => apiAudience as ApiAudience)}\n        renderOption={(props, apiAudience) => (\n          <OptionItem\n            key={apiAudience}\n            props={props}\n            title={API_AUDIENCES[apiAudience as ApiAudience]!}\n            testId={`Option-${apiAudience}`}\n          />\n        )}\n        isOptionEqualToValue={(option, value) => option === value}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            id=\"api-audience-filter\"\n            placeholder=\"API Audience\"\n            sx={{ '& .MuiInputBase-root': { pt: '1px', pb: '1px' } }}\n          />\n        )}\n        getOptionLabel={(option: ApiAudience) => API_AUDIENCES[option] ?? ''}\n        onChange={(_, option) => onSelectApiAudience(option ?? undefined)}\n        data-testid=\"ApiAudienceFilter\"\n      />\n    </>\n  )\n})\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Autocomplete, InputLabel, TextField } from '@mui/material'\nimport type { FC } from 'react'\nimport * as React from 'react'\nimport { memo } from 'react'\nimport type { ApiKind } from '../../entities/operations'\nimport { API_KINDS } from '../../entities/operations'\nimport { OptionItem } from '../OptionItem'\n\nexport type ApiKindFilterProps = {\n  onSelectApiKind: (value?: ApiKind) => void\n  value?: ApiKind\n  required?: boolean\n  labelText?: string\n}\n\nconst FILTER_API_KIND_LABEL = 'Filter by API Kind'\n\nexport const ApiKindFilter: FC<ApiKindFilterProps> = memo<ApiKindFilterProps>((props) => {\n  const { value, onSelectApiKind, required = false, labelText } = props\n  return (\n    <>\n      <InputLabel required={required}>\n        {labelText ?? FILTER_API_KIND_LABEL}\n      </InputLabel>\n      <Autocomplete\n        forcePopupIcon={true}\n        value={value}\n        options={Object.keys(API_KINDS).map(apiKind => apiKind as ApiKind)}\n        renderOption={(props, apiKind) => (\n          <OptionItem\n            key={apiKind}\n            props={props}\n            title={API_KINDS[apiKind as ApiKind]!}\n            testId={`Option-${apiKind}`}\n          />\n        )}\n        isOptionEqualToValue={(option, value) => option === value}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            id=\"api-kind-filter\"\n            placeholder=\"API Kind\"\n            sx={{ '& .MuiInputBase-root': { pt: '1px', pb: '1px' } }}\n          />\n        )}\n        getOptionLabel={(option: ApiKind) => API_KINDS[option] ?? ''}\n        onChange={(_, option) => onSelectApiKind(option ?? undefined)}\n        data-testid=\"ApiKindFilter\"\n      />\n    </>\n  )\n})\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Autocomplete, debounce, InputLabel, TextField } from '@mui/material'\nimport type { FC, SyntheticEvent } from 'react'\nimport * as React from 'react'\nimport { memo, useCallback, useMemo, useState } from 'react'\nimport type { Key } from '../../entities/keys'\nimport type { PackageReference } from '../../entities/version-references'\nimport { DEFAULT_DEBOUNCE } from '../../utils/constants'\nimport { disableAutocompleteSearch } from '../../utils/mui'\nimport { OptionItem } from '../OptionItem'\n\nconst PACKAGE_FILTER_LABEL_TEXT = 'Filter by Package'\n\nexport type DashboardPackageSelectorProps = {\n  defaultPackageKey?: Key\n  required?: boolean\n  labelText?: string\n  disableClearable?: boolean\n  onSelectPackage: (packageRef: PackageReference | null) => void\n  references: PackageReference[]\n  isLoading: boolean\n}\n\nexport const DashboardPackageSelector: FC<DashboardPackageSelectorProps> = memo<DashboardPackageSelectorProps>(\n  (props) => {\n    const {\n      onSelectPackage,\n      defaultPackageKey,\n      required = true,\n      disableClearable = false,\n      labelText = PACKAGE_FILTER_LABEL_TEXT,\n      references,\n      isLoading,\n    } = props\n\n    const [searchValue, setSearchValue] = useState<string>('')\n    const onInputChange = useCallback((_: SyntheticEvent, value: string) => setSearchValue(value), [])\n\n    const filteredReferences = useMemo(\n      () => (searchValue\n        ? references.filter(ref => ref.name?.toLowerCase().includes(searchValue.toLowerCase()))\n        : references),\n      [references, searchValue],\n    )\n\n    const value = useMemo(\n      () => references.find((ref) => ref.key === defaultPackageKey) ?? null,\n      [defaultPackageKey, references],\n    )\n\n    return (\n      <>\n        <InputLabel required={required} htmlFor=\"package-select\">{labelText}</InputLabel>\n        <Autocomplete\n          freeSolo\n          loading={isLoading}\n          disableClearable={disableClearable}\n          forcePopupIcon={true}\n          options={filteredReferences}\n          filterOptions={disableAutocompleteSearch}\n          value={value}\n          renderOption={(props, { key, name }) => <OptionItem key={key} props={props} title={name!} />}\n          getOptionLabel={(option) => option.name ?? ''}\n          isOptionEqualToValue={(option, value) => option.key === value.key}\n          onInputChange={debounce(onInputChange, DEFAULT_DEBOUNCE)}\n          onChange={(_, option) => onSelectPackage(option)}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              id=\"package-select\"\n              placeholder=\"Package\"\n              sx={{\n                '& .MuiInputBase-root': {\n                  pt: '1px',\n                  pb: '1px',\n                },\n              }}\n              value={searchValue}\n              onKeyDown={event => event.stopPropagation()}\n            />\n          )}\n          data-testid=\"PackageFilter\"\n        />\n      </>\n    )\n  },\n)\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Autocomplete, InputLabel, TextField } from '@mui/material'\nimport type { FC } from 'react'\nimport * as React from 'react'\nimport { useMemo } from 'react'\nimport type { ApiType } from '../../entities/api-types'\nimport type { OperationGroupName } from '../../entities/operation-groups'\nimport { ALL_OPERATION_GROUPS, UNGROUPED_OPERATION_GROUP } from '../../entities/operation-groups'\nimport type { PackageVersionContent } from '../../entities/version-contents'\nimport { slugify } from '../../utils/files'\nimport { OptionItem } from '../OptionItem'\n\nexport type OperationGroupFilterProps = Partial<{\n  required: boolean\n  labelText: string\n  value: OperationGroupName\n  onSelectValue: (value?: OperationGroupName) => void\n  isLoading: boolean\n  apiType: ApiType\n  versionContent: PackageVersionContent | null\n}>\n\nconst FILTER_GROUP_LABEL = 'Filter by Group'\n\nexport const OperationGroupFilter: FC<OperationGroupFilterProps> = (props) => {\n  const {\n    required = false,\n    labelText,\n    value,\n    onSelectValue,\n    isLoading,\n    apiType,\n    versionContent,\n  } = props\n\n  const options: OperationGroupName[] = useOperationGroupsFromPackageVersionContent(\n    apiType as ApiType,\n    versionContent,\n  )\n\n  return (\n    <>\n      <InputLabel required={required}>\n        {labelText ?? FILTER_GROUP_LABEL}\n      </InputLabel>\n      <Autocomplete<OperationGroupName>\n        loading={isLoading}\n        disabled={!isLoading && options.length === SYNTHETIC_OPERATION_GROUPS.length}\n        forcePopupIcon={true}\n        value={value}\n        options={options}\n        renderOption={(props, groupName) => (\n          <OptionItem\n            key={groupName}\n            props={props}\n            title={groupName}\n            testId={`FilterByGroup-Option-${slugify(groupName)}`}\n          />\n        )}\n        isOptionEqualToValue={(option, value) => option === value}\n        getOptionLabel={(option: OperationGroupName) => option ?? ''}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            id=\"operation-group-filter\"\n            placeholder=\"Group\"\n            sx={{ '& .MuiInputBase-root': { pt: '1px', pb: '1px' } }}\n          />\n        )}\n        onChange={(_, option) => onSelectValue?.(option ?? undefined)}\n        data-testid=\"OperationGroupFilter\"\n      />\n    </>\n  )\n}\n\nexport function useOperationGroupsFromPackageVersionContent(\n  apiType?: ApiType,\n  versionContent?: PackageVersionContent | null,\n): OperationGroupName[] {\n  const groupsFromContent = useMemo(() => {\n    return (versionContent?.operationGroups ?? [])\n      .filter(({ apiType: groupApiType }) => groupApiType === apiType)\n      .map(({ groupName }) => groupName)\n  }, [apiType, versionContent?.operationGroups])\n\n  return [\n    ...SYNTHETIC_OPERATION_GROUPS,\n    ...groupsFromContent,\n  ]\n}\n\nconst SYNTHETIC_OPERATION_GROUPS = [\n  ALL_OPERATION_GROUPS,\n  UNGROUPED_OPERATION_GROUP,\n]\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport { Accordion, AccordionDetails, AccordionSummary, Box, Typography } from '@mui/material'\nimport type { FC, SyntheticEvent } from 'react'\nimport { memo, useCallback } from 'react'\nimport type { ApiType } from '../../entities/api-types'\nimport type { OperationGroupName } from '../../entities/operation-groups'\nimport type { ApiAudience, ApiKind, Tags } from '../../entities/operations'\nimport type { PackageVersionContent } from '../../entities/version-contents'\nimport type { PackageReference } from '../../entities/version-references'\nimport type { HasNextPage, IsFetchingNextPage } from '../../utils/aliases'\nimport { SidebarWithTags } from '../SidebarWithTags/SidebarWithTags'\nimport { ApiAudienceFilter } from './ApiAudienceFilter'\nimport { ApiKindFilter } from './ApiKindFilter'\nimport { DashboardPackageSelector } from './DashboardPackageSelector'\nimport { OperationGroupFilter } from './OperationGroupFilter'\n\nexport type OperationFiltersProps = {\n  selectedPackageKey?: string\n  onSelectPackage?: (packageRef: PackageReference | null) => void\n  selectedOperationGroupName?: OperationGroupName\n  onSelectOperationGroup?: (operationGroupName?: OperationGroupName) => void\n  selectedApiAudience?: ApiAudience\n  onSelectApiAudience?: (value?: ApiAudience) => void\n  selectedApiKind?: ApiKind\n  onSelectApiKind?: (value?: ApiKind) => void\n  hiddenGeneralFilters: boolean\n  onClickExpandCollapseButton: (value: boolean) => void\n  areTagsLoading: boolean\n  fetchNextTagsPage?: () => Promise<void>\n  isNextTagsPageFetching?: IsFetchingNextPage\n  hasNextTagsPage?: HasNextPage\n  isReferencesLoading: boolean\n  isPackageVersionContentLoading: boolean\n  tags: Tags\n  references: PackageReference[]\n  apiType: ApiType\n  versionContent: PackageVersionContent | null\n  onTagSearch?: (value: string) => void\n  selectedTag?: string\n  onSelectTag: (value?: string) => void\n}\n\n// First Order Component //\nexport const OperationFilters: FC<OperationFiltersProps> = memo<OperationFiltersProps>(props => {\n  const {\n    selectedPackageKey,\n    selectedOperationGroupName,\n    selectedApiAudience,\n    selectedApiKind,\n    onSelectPackage,\n    onSelectOperationGroup,\n    onSelectApiAudience,\n    onSelectApiKind,\n    onClickExpandCollapseButton,\n    areTagsLoading,\n    fetchNextTagsPage,\n    hasNextTagsPage,\n    isNextTagsPageFetching,\n    isReferencesLoading,\n    isPackageVersionContentLoading,\n    hiddenGeneralFilters,\n    tags,\n    references,\n    versionContent,\n    apiType,\n    onSelectTag,\n    onTagSearch,\n    selectedTag,\n  } = props\n\n  const onChange = useCallback(\n    (_event: SyntheticEvent, expanded: boolean) => onClickExpandCollapseButton(!expanded),\n    [onClickExpandCollapseButton],\n  )\n\n  return (\n    <>\n      <Box\n        sx={{\n          borderBottom: '1px solid #D9D9D9',\n          p: 2,\n        }}\n      >\n        <Accordion\n          expanded={!hiddenGeneralFilters}\n          onChange={onChange}\n          data-testid=\"GeneralFiltersAccordion\"\n        >\n          <AccordionSummary\n            sx={{ p: 0 }}\n            expandIcon={<ExpandMoreIcon />}\n          >\n            <Typography width=\"100%\" noWrap variant=\"button\">\n              General Filters\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            {onSelectPackage && (\n              <DashboardPackageSelector\n                onSelectPackage={onSelectPackage}\n                references={references}\n                isLoading={isReferencesLoading}\n                defaultPackageKey={selectedPackageKey}\n                required={false}\n              />\n            )}\n            {onSelectOperationGroup && (\n              <Box sx={{ mt: onSelectPackage ? 1 : 0 }}>\n                <OperationGroupFilter\n                  value={selectedOperationGroupName}\n                  onSelectValue={onSelectOperationGroup}\n                  isLoading={isPackageVersionContentLoading}\n                  apiType={apiType as ApiType}\n                  versionContent={versionContent}\n                />\n              </Box>\n            )}\n            {onSelectApiAudience && (\n              <Box sx={{ mt: onSelectPackage || onSelectOperationGroup ? 1 : 0 }}>\n                <ApiAudienceFilter\n                  value={selectedApiAudience}\n                  onSelectApiAudience={onSelectApiAudience}\n                />\n              </Box>\n            )}\n            {onSelectApiKind && (\n              <Box sx={{ mt: onSelectPackage || onSelectOperationGroup || onSelectApiAudience ? 1 : 0 }}>\n                <ApiKindFilter\n                  value={selectedApiKind}\n                  onSelectApiKind={onSelectApiKind}\n                />\n              </Box>\n            )}\n          </AccordionDetails>\n        </Accordion>\n      </Box>\n      <SidebarWithTags\n        tags={tags}\n        areTagsLoading={areTagsLoading}\n        fetchNextTagsPage={fetchNextTagsPage}\n        isNextTagsPageFetching={isNextTagsPageFetching}\n        hasNextTagsPage={hasNextTagsPage}\n        onSearch={onTagSearch}\n        selectedTag={selectedTag}\n        onSelectTag={onSelectTag}\n      />\n    </>\n  )\n})\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { PackageVersionContent } from '../../entities/version-contents'\n\nexport const versionContent: PackageVersionContent = {\n  'createdAt': 'Fri Oct 06 2023',\n  'createdBy': {\n    name: 'John Williams',\n    type: 'user',\n    id: 'JW_1234',\n  },\n  'status': 'draft',\n  'version': '2023.1@3',\n  'revisionsCount': 3,\n  'packageKey': 'PSB.alint-dash',\n  'key': 'c90f0e0d-005c-4349-a93c-8418822e06b2',\n  'latestRevision': true,\n  'operationGroups': [],\n}\n"],"names":["_interopRequireDefault","require$$0","ExpandMore","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","_default","FILTER_API_AUDIENCE_LABEL","ApiAudienceFilter","memo","props","value","onSelectApiAudience","jsxs","Fragment","jsx","InputLabel","Autocomplete","API_AUDIENCES","apiAudience","props2","OptionItem","option","value2","params","TextField","_","FILTER_API_KIND_LABEL","ApiKindFilter","onSelectApiKind","required","labelText","API_KINDS","apiKind","PACKAGE_FILTER_LABEL_TEXT","DashboardPackageSelector","onSelectPackage","defaultPackageKey","disableClearable","references","isLoading","searchValue","setSearchValue","useState","onInputChange","useCallback","filteredReferences","useMemo","ref","_a","disableAutocompleteSearch","key","name","debounce","DEFAULT_DEBOUNCE","event","FILTER_GROUP_LABEL","OperationGroupFilter","onSelectValue","apiType","versionContent","options","useOperationGroupsFromPackageVersionContent","SYNTHETIC_OPERATION_GROUPS","groupName","slugify","groupsFromContent","groupApiType","ALL_OPERATION_GROUPS","UNGROUPED_OPERATION_GROUP","OperationFilters","selectedPackageKey","selectedOperationGroupName","selectedApiAudience","selectedApiKind","onSelectOperationGroup","onClickExpandCollapseButton","areTagsLoading","fetchNextTagsPage","hasNextTagsPage","isNextTagsPageFetching","isReferencesLoading","isPackageVersionContentLoading","hiddenGeneralFilters","tags","onSelectTag","onTagSearch","selectedTag","onChange","_event","expanded","Box","Accordion","AccordionSummary","ExpandMoreIcon","Typography","AccordionDetails","SidebarWithTags"],"mappings":"y5FAEIA,GAAyBC,EAC7B,OAAO,eAAeC,EAAS,aAAc,CAC3C,MAAO,EACT,CAAC,EACD,IAAeC,EAAAD,EAAA,QAAG,OACdE,GAAiBJ,GAAuBK,EAAA,CAAgC,EACxEC,GAAcC,EACdC,MAAeJ,GAAe,YAA2BE,GAAY,KAAK,OAAQ,CACpF,EAAG,8CACL,CAAC,EAAG,YAAY,EAChBH,EAAAD,EAAA,QAAkBM,GCgBlB,MAAAC,GAAA,yBAEOC,EAAAC,EAAAA,KAAAC,GAAA,CACL,KAAA,CAAA,MAAAC,EAAA,oBAAAC,CAAA,EAAAF,EACA,OAAAG,EAAAC,EAAA,CAAA,SAAA,CAEIC,EAAAC,EAAA,CAAA,SAAAT,EAAA,CAAA,EAEAQ,EACAE,EAAC,CAAA,eAAA,GACiB,MAAAN,EAChB,QAAA,OAAA,KAAAO,CAAA,EAAA,IAAAC,GAAAA,CAAA,EACiF,aAAA,CAAAC,EAAAD,IAAAJ,EAE/EM,EAAC,CAAA,MAAAD,EAEQ,MAAAF,EAAAC,CAAA,EACwC,OAAA,UAAAA,CAAA,EAClB,EAAAA,CAHxB,EAIP,qBAAA,CAAAG,EAAAC,IAAAD,IAAAC,EAEkD,YAAAC,GAAAT,EAElDU,EAAC,CAAA,GAAAD,EACK,GAAA,sBACD,YAAA,eACS,GAAA,CAAA,uBAAA,CAAA,GAAA,MAAA,GAAA,MAAA,CAC2C,CAAA,EACzD,eAAAF,GAAAJ,EAAAI,CAAA,GAAA,GAEgE,SAAA,CAAAI,EAAAJ,IAAAV,EAAAU,GAAA,MAAA,EACF,cAAA,mBACpD,CAAA,CACd,CAAA,CAAA,CAGN,CAAA,wbCjCA,MAAAK,GAAA,qBAEOC,EAAAnB,EAAAA,KAAAC,GAAA,CACL,KAAA,CAAA,MAAAC,EAAA,gBAAAkB,EAAA,SAAAC,EAAA,GAAA,UAAAC,CAAA,EAAArB,EACA,OAAAG,EAAAC,EAAA,CAAA,SAAA,CAEIC,EAAAC,EAAA,CAAA,SAAAc,EAAA,SAAAC,GAAAJ,GAAA,EAEAZ,EACAE,EAAC,CAAA,eAAA,GACiB,MAAAN,EAChB,QAAA,OAAA,KAAAqB,CAAA,EAAA,IAAAC,GAAAA,CAAA,EACiE,aAAA,CAAAb,EAAAa,IAAAlB,EAE/DM,EAAC,CAAA,MAAAD,EAEQ,MAAAY,EAAAC,CAAA,EAC4B,OAAA,UAAAA,CAAA,EACV,EAAAA,CAHpB,EAIP,qBAAA,CAAAX,EAAAC,IAAAD,IAAAC,EAEkD,YAAAC,GAAAT,EAElDU,EAAC,CAAA,GAAAD,EACK,GAAA,kBACD,YAAA,WACS,GAAA,CAAA,uBAAA,CAAA,GAAA,MAAA,GAAA,MAAA,CAC2C,CAAA,EACzD,eAAAF,GAAAU,EAAAV,CAAA,GAAA,GAEwD,SAAA,CAAAI,EAAAJ,IAAAO,EAAAP,GAAA,MAAA,EACE,cAAA,eAChD,CAAA,CACd,CAAA,CAAA,CAGN,CAAA,+lBCzCA,MAAAY,GAAA,oBAYOC,EAAA1B,EAAA,KAAoEC,GAAA,CAEvE,KAAA,CAAM,gBAAA0B,EACJ,kBAAAC,EACA,SAAAP,EAAA,GACW,iBAAAQ,EAAA,GACQ,UAAAP,EAAAG,GACP,WAAAK,EACZ,UAAAC,CACA,EAAA9B,EAGF,CAAA+B,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACAC,EAAAC,EAAA,YAAA,CAAAnB,EAAAH,IAAAmB,EAAAnB,CAAA,EAAA,CAAA,CAAA,EAEAuB,EAAAC,EAAA,QAA2B,IAAAN,EAAAF,EAAA,OAAAS,GAAA,OAAA,OAAAC,EAAAD,EAAA,OAAA,YAAAC,EAAA,cAAA,SAAAR,EAAA,YAAA,GAAA,EAAAF,EAGrB,CAAAA,EAAAE,CAAA,CACoB,EAG1B9B,EAAAoC,EAAA,QAAc,IAAAR,EAAA,KAAAS,GAAAA,EAAA,MAAAX,CAAA,GAAA,KACqD,CAAAA,EAAAE,CAAA,CACnC,EAGhC,OAAA1B,EAAAC,EAAA,CAAA,SAAA,CAEIC,EAAAC,EAAA,CAAA,SAAAc,EAAA,QAAA,iBAAA,SAAAC,EAAA,EAAoEhB,EACpEE,EAAC,CAAA,SAAA,GACS,QAAAuB,EACC,iBAAAF,EACT,eAAA,GACgB,QAAAQ,EACP,cAAAI,GACM,MAAAvC,EACf,aAAA,CAAAS,EAAA,CAAA,IAAA+B,EAAA,KAAAC,CAAA,IAAArC,EAAAM,EAAA,CAAA,MAAAD,EAAA,MAAAgC,CAAA,EAAAD,CAAA,EAC0F,eAAA7B,GAAAA,EAAA,MAAA,GAC/C,qBAAA,CAAAA,EAAAC,IAAAD,EAAA,MAAAC,EAAA,IACmB,cAAA8B,GAAAT,EAAAU,EAAA,EACP,SAAA,CAAA5B,EAAAJ,IAAAc,EAAAd,CAAA,EACR,YAAAE,GAAAT,EAE7CU,EAAC,CAAA,GAAAD,EACK,GAAA,iBACD,YAAA,UACS,GAAA,CACR,uBAAA,CACsB,GAAA,MAClB,GAAA,KACA,CACN,EACF,MAAAiB,EACO,UAAAc,GAAAA,EAAA,gBAAA,CACmC,CAAA,EAC5C,cAAA,eAEU,CAAA,CACd,CAAA,CAAA,CACF,CAGN,8vCChEA,MAAAC,GAAA,kBAEOC,EAAA/C,GAAA,CACL,KAAA,CAAM,SAAAoB,EAAA,GACO,UAAAC,EACX,MAAApB,EACA,cAAA+C,EACA,UAAAlB,EACA,QAAAmB,EACA,eAAAC,CACA,EAAAlD,EAGFmD,EAAAC,GAAsCH,EACpCC,CACA,EAGF,OAAA/C,EAAAC,EAAA,CAAA,SAAA,CAEIC,EAAAC,EAAA,CAAA,SAAAc,EAAA,SAAAC,GAAAyB,GAAA,EAEAzC,EACAE,EAAC,CAAA,QAAAuB,EACU,SAAA,CAAAA,GAAAqB,EAAA,SAAAE,EAAA,OAC6D,eAAA,GACtD,MAAApD,EAChB,QAAAkD,EACA,aAAA,CAAAzC,EAAA4C,IAAAjD,EAEEM,EAAC,CAAA,MAAAD,EAEQ,MAAA4C,EACA,OAAA,wBAAAC,GAAAD,CAAA,CAAA,EAC2C,EAAAA,CAH7C,EAIP,qBAAA,CAAA1C,EAAAC,IAAAD,IAAAC,EAEkD,eAAAD,GAAAA,GAAA,GACM,YAAAE,GAAAT,EAExDU,EAAC,CAAA,GAAAD,EACK,GAAA,yBACD,YAAA,QACS,GAAA,CAAA,uBAAA,CAAA,GAAA,MAAA,GAAA,MAAA,CAC2C,CAAA,EACzD,SAAA,CAAAE,EAAAJ,IAAAoC,GAAA,YAAAA,EAAApC,GAAA,QAE0D,cAAA,sBAChD,CAAA,CACd,CAAA,CAAA,CAGN,EAEO,SAAAwC,GAAAH,EAAAC,EAAA,CAIL,MAAAM,EAAAnB,EAAAA,QAAA,MACEa,GAAA,YAAAA,EAAA,kBAAA,CAAA,GAAA,OAAA,CAAA,CAAA,QAAAO,CAAA,IAAAA,IAAAR,CAAA,EAAA,IAAA,CAAA,CAAA,UAAAK,CAAA,IAAAA,CAAA,EAEmC,CAAAL,EAAAC,GAAA,YAAAA,EAAA,eAAA,CAAA,EAGrC,MAAA,CAAO,GAAAG,EACF,GAAAG,CACA,CAEP,CAEA,MAAAH,EAAA,CAAmCK,GACjCC,EAEF,0mCCnDO,MAAAC,EAAA7D,EAAAA,KAAAC,GAAA,CACL,KAAA,CAAM,mBAAA6D,EACJ,2BAAAC,EACA,oBAAAC,EACA,gBAAAC,EACA,gBAAAtC,EACA,uBAAAuC,EACA,oBAAA/D,EACA,gBAAAiB,EACA,4BAAA+C,EACA,eAAAC,EACA,kBAAAC,EACA,gBAAAC,EACA,uBAAAC,EACA,oBAAAC,EACA,+BAAAC,EACA,qBAAAC,EACA,KAAAC,EACA,WAAA7C,EACA,eAAAqB,EACA,QAAAD,EACA,YAAA0B,EACA,YAAAC,EACA,YAAAC,CACA,EAAA7E,EAGF8E,EAAA3C,EAAA,YAAiB,CAAA4C,GAAAC,IAAAd,EAAA,CAAAc,CAAA,EACqE,CAAAd,CAAA,CACxD,EAG9B,OAAA/D,EAAAC,EAAA,CAAA,SAAA,CAEIC,EAAA4E,EAAC,CAAA,GAAA,CACK,aAAA,oBACY,EAAA,CACX,EACL,SAAA9E,EAEA+E,GAAC,CAAA,SAAA,CAAAT,EACY,SAAAK,EACX,cAAA,0BACY,SAAA,CAEZzE,EAAA8E,GAAC,CAAA,GAAA,CAAA,EAAA,CAAA,EACY,WAAA9E,EAAA+E,EAAA,EAAA,EACiB,SAAA/E,EAAAgF,GAAA,CAAA,MAAA,OAAA,OAAA,GAAA,QAAA,SAAA,SAAA,iBAAA,CAAA,CAI5B,CAAA,EACFlF,EAAAmF,GAAA,CAAA,SAAA,CAEG5D,GAAArB,EACCoB,EAAC,CAAA,gBAAAC,EACC,WAAAG,EACA,UAAA0C,EACW,kBAAAV,EACQ,SAAA,EACT,CAAA,EACZI,GAAA5D,EAAA4E,EAAA,CAAA,GAAA,CAAA,GAAAvD,EAAA,EAAA,CAAA,EAAA,SAAArB,EAIE0C,EAAC,CAAA,MAAAe,EACQ,cAAAG,EACQ,UAAAO,EACJ,QAAAvB,EACX,eAAAC,CACA,CAAA,EAAA,EAEJhD,GAAAG,EAAA4E,EAAA,CAAA,GAAA,CAAA,GAAAvD,GAAAuC,EAAA,EAAA,CAAA,EAAA,SAAA5D,EAIEP,EAAC,CAAA,MAAAiE,EACQ,oBAAA7D,CACP,CAAA,EAAA,EAEJiB,GAAAd,EAAA4E,EAAA,CAAA,GAAA,CAAA,GAAAvD,GAAAuC,GAAA/D,EAAA,EAAA,CAAA,EAAA,SAAAG,EAIEa,EAAC,CAAA,MAAA8C,EACQ,gBAAA7C,CACP,CAAA,EAAA,CAEJ,EAAA,CAEJ,CAAA,CAAA,CACF,CAAA,EACFd,EACAkF,EAAC,CAAA,KAAAb,EACC,eAAAP,EACA,kBAAAC,EACA,uBAAAE,EACA,gBAAAD,EACA,SAAAO,EACU,YAAAC,EACV,YAAAF,CACA,CAAA,CACF,CAAA,CAAA,CAGN,CAAA,oqHClJO,MAAMzB,GAAwC,CACnD,UAAa,kBACb,UAAa,CACX,KAAM,gBACN,KAAM,OACN,GAAI,SACN,EACA,OAAU,QACV,QAAW,WACX,eAAkB,EAClB,WAAc,iBACd,IAAO,uCACP,eAAkB,GAClB,gBAAmB,CAAC,CACtB;;;;;;;;;;;;;","x_google_ignoreList":[0]}