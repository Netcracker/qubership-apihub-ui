{"version":3,"file":"MultipleSelectorAutocomplete-f578e97d.js","sources":["../../packages/shared/src/components/MultipleSelectorAutocomplete.tsx"],"sourcesContent":["/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Autocomplete, CircularProgress, TextField } from '@mui/material'\nimport type { HTMLAttributes, ReactElement } from 'react'\nimport type { AutocompleteRenderGetTagProps } from '@mui/material/Autocomplete/Autocomplete'\nimport { genericMemo } from '../utils/components'\nimport type { TestableProps } from './Testable'\n\nexport type MultipleSelectorAutocompleteProps<Item extends object> = {\n  id: string\n  options: ReadonlyArray<Item>\n  value: Item[]\n  inputLabel: string\n  icon?: ReactElement\n  isLoading?: boolean\n  onChange: (value: Item[]) => void\n  getOptionLabel: (option: Item) => string\n  renderOption: (props: HTMLAttributes<HTMLLIElement>, value: Item) => ReactElement\n  renderTags: (value: Item[], getTagProps: AutocompleteRenderGetTagProps) => ReactElement[]\n  setInputSearch?: (search: string) => void\n} & TestableProps\n\nfunction renderMultipleSelectorAutocomplete<Item extends object>(props: MultipleSelectorAutocompleteProps<Item>): ReactElement {\n  const {\n    options,\n    value,\n    inputLabel,\n    onChange,\n    id,\n    icon,\n    isLoading,\n    getOptionLabel,\n    renderOption,\n    renderTags,\n    testId,\n    setInputSearch,\n  } = props\n\n  return (\n    <Autocomplete\n      id={id}\n      multiple\n      disableClearable\n      sx={icon ? DEFAULT_AUTOCOMPLETE_STYLE : DEFAULT_AUTOCOMPLETE_STYLE_WITH_DEFAULT_ICON}\n      popupIcon={icon}\n      loading={isLoading}\n      loadingText={<CircularProgress size={16}/>}\n      value={value}\n      options={options}\n      getOptionLabel={(option) => getOptionLabel(option)}\n      onChange={(_, value) => {onChange(value)}}\n      renderOption={(props, option) => renderOption(props, option)}\n      renderTags={(value: Item[], getTagProps) => renderTags(value, getTagProps)}\n      renderInput={(params) =>\n        <TextField\n          {...params}\n          label={inputLabel}\n          required={!value || value.length === 0}\n          onChange={(event) => setInputSearch?.(event?.target?.value ?? '')}\n        />\n      }\n      data-testid={testId}\n    />\n  )\n}\n\nexport const MultipleSelectorAutocomplete = genericMemo(renderMultipleSelectorAutocomplete)\n\nconst DEFAULT_AUTOCOMPLETE_STYLE = {\n  '& .MuiAutocomplete-popupIndicator': {\n    transform: 'none',\n  },\n  '& .MuiAutocomplete-endAdornment': {\n    top: '10px',\n  },\n  '& .MuiFilledInput-root': {\n    pl: '2px',\n  },\n  '& .MuiAutocomplete-tag': {\n    mt: 0,\n    pl: '8px',\n  },\n  '& .MuiAutocomplete-input': {\n    ml: '8px',\n  },\n}\n\nconst DEFAULT_AUTOCOMPLETE_STYLE_WITH_DEFAULT_ICON = {\n  '& .MuiAutocomplete-endAdornment': {\n    top: '10px',\n  },\n  '& .MuiFilledInput-root': {\n    pl: '2px',\n  },\n  '& .MuiAutocomplete-tag': {\n    mt: 0,\n    pl: '8px',\n  },\n  '& .MuiAutocomplete-input': {\n    ml: '8px',\n  },\n}\n"],"names":["renderMultipleSelectorAutocomplete","props","options","value","inputLabel","onChange","id","icon","isLoading","getOptionLabel","renderOption","renderTags","testId","setInputSearch","jsx","Autocomplete","DEFAULT_AUTOCOMPLETE_STYLE","DEFAULT_AUTOCOMPLETE_STYLE_WITH_DEFAULT_ICON","CircularProgress","option","_","value2","props2","getTagProps","params","TextField","event","_a","MultipleSelectorAutocomplete","genericMemo"],"mappings":"yOAoCA,SAAAA,EAAAC,EAAA,CACE,KAAA,CAAM,QAAAC,EACJ,MAAAC,EACA,WAAAC,EACA,SAAAC,EACA,GAAAC,EACA,KAAAC,EACA,UAAAC,EACA,eAAAC,EACA,aAAAC,EACA,WAAAC,EACA,OAAAC,EACA,eAAAC,CACA,EAAAZ,EAGF,OAAAa,EACEC,EAAC,CAAA,GAAAT,EACC,SAAA,GACQ,iBAAA,GACQ,GAAAC,EAAAS,EAAAC,EACwB,UAAAV,EAC7B,QAAAC,EACF,YAAAM,EAAAI,EAAA,CAAA,KAAA,EAAA,CAAA,EAC+B,MAAAf,EACxC,QAAAD,EACA,eAAAiB,GAAAV,EAAAU,CAAA,EACiD,SAAA,CAAAC,EAAAC,IAAA,CACxBhB,EAAAgB,CAAA,CAAc,EAAC,aAAA,CAAAC,EAAAH,IAAAT,EAAAY,EAAAH,CAAA,EACmB,WAAA,CAAAE,EAAAE,IAAAZ,EAAAU,EAAAE,CAAA,EACc,YAAAC,GAAAV,EAEvEW,EAAC,CAAA,GAAAD,EACK,MAAApB,EACG,SAAA,CAAAD,GAAAA,EAAA,SAAA,EAC8B,SAAAuB,UAAA,OAAAb,GAAA,YAAAA,IAAAc,EAAAD,GAAA,YAAAA,EAAA,SAAA,YAAAC,EAAA,QAAA,IAC2B,CAAA,EAClE,cAAAf,CAEW,CAAA,CAGnB,CAEO,MAAAgB,EAAAC,EAAA7B,CAAA,EAEPgB,EAAA,CAAmC,oCAAA,CACI,UAAA,MACxB,EACb,kCAAA,CACmC,IAAA,MAC5B,EACP,yBAAA,CAC0B,GAAA,KACpB,EACN,yBAAA,CAC0B,GAAA,EACpB,GAAA,KACA,EACN,2BAAA,CAC4B,GAAA,KACtB,CAER,EAEAC,EAAA,CAAqD,kCAAA,CAChB,IAAA,MAC5B,EACP,yBAAA,CAC0B,GAAA,KACpB,EACN,yBAAA,CAC0B,GAAA,EACpB,GAAA,KACA,EACN,2BAAA,CAC4B,GAAA,KACtB,CAER"}