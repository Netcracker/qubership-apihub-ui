/**
 * @remix-run/router v1.11.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function w(){return w=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},w.apply(this,arguments)}var m;(function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"})(m||(m={}));function A(e){e===void 0&&(e={});let{initialEntries:n=["/"],initialIndex:t,v5Compat:a=!1}=e,r;r=n.map((i,c)=>d(i,typeof i=="string"?null:i.state,c===0?"default":void 0));let s=u(t??r.length-1),l=m.Pop,o=null;function u(i){return Math.min(Math.max(i,0),r.length-1)}function g(){return r[s]}function d(i,c,p){c===void 0&&(c=null);let $=W(r?g().pathname:"/",i,c,p);return v($.pathname.charAt(0)==="/","relative pathnames are not supported in memory history: "+JSON.stringify(i)),$}function h(i){return typeof i=="string"?i:C(i)}return{get index(){return s},get action(){return l},get location(){return g()},createHref:h,createURL(i){return new URL(h(i),"http://localhost")},encodeLocation(i){let c=typeof i=="string"?x(i):i;return{pathname:c.pathname||"",search:c.search||"",hash:c.hash||""}},push(i,c){l=m.Push;let p=d(i,c);s+=1,r.splice(s,r.length,p),a&&o&&o({action:l,location:p,delta:1})},replace(i,c){l=m.Replace;let p=d(i,c);r[s]=p,a&&o&&o({action:l,location:p,delta:0})},go(i){l=m.Pop;let c=u(s+i),p=r[c];s=c,o&&o({action:l,location:p,delta:i})},listen(i){return o=i,()=>{o=null}}}}function y(e,n){if(e===!1||e===null||typeof e>"u")throw new Error(n)}function v(e,n){if(!e){typeof console<"u"&&console.warn(n);try{throw new Error(n)}catch{}}}function S(){return Math.random().toString(36).substr(2,8)}function W(e,n,t,a){return t===void 0&&(t=null),w({pathname:typeof e=="string"?e:e.pathname,search:"",hash:""},typeof n=="string"?x(n):n,{state:t,key:n&&n.key||a||S()})}function C(e){let{pathname:n="/",search:t="",hash:a=""}=e;return t&&t!=="?"&&(n+=t.charAt(0)==="?"?t:"?"+t),a&&a!=="#"&&(n+=a.charAt(0)==="#"?a:"#"+a),n}function x(e){let n={};if(e){let t=e.indexOf("#");t>=0&&(n.hash=e.substr(t),e=e.substr(0,t));let a=e.indexOf("?");a>=0&&(n.search=e.substr(a),e=e.substr(0,a)),e&&(n.pathname=e)}return n}var L;(function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"})(L||(L={}));function T(e,n){n===void 0&&(n={});let t=e;t.endsWith("*")&&t!=="*"&&!t.endsWith("/*")&&(v(!1,'Route path "'+t+'" will be treated as if it were '+('"'+t.replace(/\*$/,"/*")+'" because the `*` character must ')+"always follow a `/` in the pattern. To get rid of this warning, "+('please change the route path to "'+t.replace(/\*$/,"/*")+'".')),t=t.replace(/\*$/,"/*"));const a=t.startsWith("/")?"/":"",r=l=>l==null?"":typeof l=="string"?l:String(l),s=t.split(/\/+/).map((l,o,u)=>{if(o===u.length-1&&l==="*")return r(n["*"]);const d=l.match(/^:(\w+)(\??)$/);if(d){const[,h,f]=d;let i=n[h];return y(f==="?"||i!=null,'Missing ":'+h+'" param'),r(i)}return l.replace(/\?$/g,"")}).filter(l=>!!l);return a+s.join("/")}function H(e,n){typeof e=="string"&&(e={path:e,caseSensitive:!1,end:!0});let[t,a]=M(e.path,e.caseSensitive,e.end),r=n.match(t);if(!r)return null;let s=r[0],l=s.replace(/(.)\/+$/,"$1"),o=r.slice(1);return{params:a.reduce((g,d,h)=>{let{paramName:f,isOptional:i}=d;if(f==="*"){let p=o[h]||"";l=s.slice(0,s.length-p.length).replace(/(.)\/+$/,"$1")}const c=o[h];return i&&!c?g[f]=void 0:g[f]=E(c||"",f),g},{}),pathname:s,pathnameBase:l,pattern:e}}function M(e,n,t){n===void 0&&(n=!1),t===void 0&&(t=!0),v(e==="*"||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were '+('"'+e.replace(/\*$/,"/*")+'" because the `*` character must ')+"always follow a `/` in the pattern. To get rid of this warning, "+('please change the route path to "'+e.replace(/\*$/,"/*")+'".'));let a=[],r="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:(\w+)(\?)?/g,(l,o,u)=>(a.push({paramName:o,isOptional:u!=null}),u?"/?([^\\/]+)?":"/([^\\/]+)"));return e.endsWith("*")?(a.push({paramName:"*"}),r+=e==="*"||e==="/*"?"(.*)$":"(?:\\/(.+)|\\/*)$"):t?r+="\\/*$":e!==""&&e!=="/"&&(r+="(?:(?=\\/|$))"),[new RegExp(r,n?void 0:"i"),a]}function E(e,n){try{return decodeURIComponent(e)}catch(t){return v(!1,'The value for the URL param "'+n+'" will not be decoded because'+(' the string "'+e+'" is a malformed URL segment. This is probably')+(" due to a bad percent encoding ("+t+").")),e}}function N(e,n){if(n==="/")return e;if(!e.toLowerCase().startsWith(n.toLowerCase()))return null;let t=n.endsWith("/")?n.length-1:n.length,a=e.charAt(t);return a&&a!=="/"?null:e.slice(t)||"/"}function I(e,n){n===void 0&&(n="/");let{pathname:t,search:a="",hash:r=""}=typeof e=="string"?x(e):e;return{pathname:t?t.startsWith("/")?t:O(t,n):n,search:j(a),hash:R(r)}}function O(e,n){let t=n.replace(/\/+$/,"").split("/");return e.split("/").forEach(r=>{r===".."?t.length>1&&t.pop():r!=="."&&t.push(r)}),t.length>1?t.join("/"):"/"}function P(e,n,t,a){return"Cannot include a '"+e+"' character in a manually specified "+("`to."+n+"` field ["+JSON.stringify(a)+"].  Please separate it out to the ")+("`to."+t+"` field. Alternatively you may provide the full path as ")+'a string in <Link to="..."> and the router will parse it for you.'}function k(e){return e.filter((n,t)=>t===0||n.route.path&&n.route.path.length>0)}function z(e,n,t,a){a===void 0&&(a=!1);let r;typeof e=="string"?r=x(e):(r=w({},e),y(!r.pathname||!r.pathname.includes("?"),P("?","pathname","search",r)),y(!r.pathname||!r.pathname.includes("#"),P("#","pathname","hash",r)),y(!r.search||!r.search.includes("#"),P("#","search","hash",r)));let s=e===""||r.pathname==="",l=s?"/":r.pathname,o;if(a||l==null)o=t;else{let h=n.length-1;if(l.startsWith("..")){let f=l.split("/");for(;f[0]==="..";)f.shift(),h-=1;r.pathname=f.join("/")}o=h>=0?n[h]:"/"}let u=I(r,o),g=l&&l!=="/"&&l.endsWith("/"),d=(s||l===".")&&t.endsWith("/");return!u.pathname.endsWith("/")&&(g||d)&&(u.pathname+="/"),u}const B=e=>e.join("/").replace(/\/\/+/g,"/"),j=e=>!e||e==="?"?"":e.startsWith("?")?e:"?"+e,R=e=>!e||e==="#"?"":e.startsWith("#")?e:"#"+e,b=["post","put","patch","delete"];new Set(b);const U=["get",...b];new Set(U);export{m as A,C as a,T as b,A as c,k as g,y as i,B as j,H as m,x as p,z as r,N as s};
//# sourceMappingURL=router-3bda5a86.js.map
