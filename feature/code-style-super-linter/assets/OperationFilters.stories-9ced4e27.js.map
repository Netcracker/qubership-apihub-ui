{"version":3,"file":"OperationFilters.stories-9ced4e27.js","sources":["../../packages/shared/src/components/OperationFilters/DashboardPackageSelector.tsx","../../packages/shared/src/components/OperationFilters/OperationGroupFilter.tsx","../../packages/shared/src/components/OperationFilters/ApiKindFilter.tsx","../../node_modules/@mui/icons-material/ExpandMore.js","../../packages/shared/src/components/OperationFilters/ApiAudienceFilter.tsx","../../packages/shared/src/components/OperationFilters/OperationFilters.tsx","../../packages/shared/src/stories/samples/version-content-samples.ts"],"sourcesContent":["/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC, SyntheticEvent } from 'react'\nimport * as React from 'react'\nimport { memo, useCallback, useMemo, useState } from 'react'\nimport { Autocomplete, debounce, InputLabel, TextField } from '@mui/material'\nimport { OptionItem } from '../OptionItem'\nimport { disableAutocompleteSearch } from '../../utils/mui'\nimport { DEFAULT_DEBOUNCE } from '../../utils/constants'\nimport type { PackageReference } from '../../entities/version-references'\nimport type { Key } from '../../entities/keys'\n\nconst PACKAGE_FILTER_LABEL_TEXT = 'Filter by Package'\n\nexport type DashboardPackageSelectorProps = {\n  defaultPackageKey?: Key\n  required?: boolean\n  labelText?: string\n  disableClearable?: boolean\n  onSelectPackage: (packageRef: PackageReference | null) => void\n  references: PackageReference[]\n  isLoading: boolean\n}\n\nexport const DashboardPackageSelector: FC<DashboardPackageSelectorProps> = memo<DashboardPackageSelectorProps>(\n  (props) => {\n    const {\n      onSelectPackage,\n      defaultPackageKey,\n      required = true,\n      disableClearable = false,\n      labelText = PACKAGE_FILTER_LABEL_TEXT,\n      references,\n      isLoading,\n    } = props\n\n    const [searchValue, setSearchValue] = useState<string>('')\n    const onInputChange = useCallback((_: SyntheticEvent, value: string) => setSearchValue(value), [])\n\n    const filteredReferences = useMemo(\n      () =>\n        searchValue\n          ? references.filter((ref) => ref.name?.toLowerCase().includes(searchValue.toLowerCase()))\n          : references,\n      [references, searchValue],\n    )\n\n    const value = useMemo(\n      () => references.find((ref) => ref.key === defaultPackageKey) ?? null,\n      [defaultPackageKey, references],\n    )\n\n    return (\n      <>\n        <InputLabel required={required} htmlFor=\"package-select\">\n          {labelText}\n        </InputLabel>\n        <Autocomplete\n          freeSolo\n          loading={isLoading}\n          disableClearable={disableClearable}\n          forcePopupIcon={true}\n          options={filteredReferences}\n          filterOptions={disableAutocompleteSearch}\n          value={value}\n          renderOption={(props, { key, name }) => <OptionItem key={key} props={props} title={name!} />}\n          getOptionLabel={(option) => option.name ?? ''}\n          isOptionEqualToValue={(option, value) => option.key === value.key}\n          onInputChange={debounce(onInputChange, DEFAULT_DEBOUNCE)}\n          onChange={(_, option) => onSelectPackage(option)}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              id=\"package-select\"\n              placeholder=\"Package\"\n              sx={{\n                '& .MuiInputBase-root': {\n                  pt: '1px',\n                  pb: '1px',\n                },\n              }}\n              value={searchValue}\n              onKeyDown={(event) => event.stopPropagation()}\n            />\n          )}\n          data-testid=\"PackageFilter\"\n        />\n      </>\n    )\n  },\n)\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC } from 'react'\nimport * as React from 'react'\nimport { useMemo } from 'react'\nimport { Autocomplete, InputLabel, TextField } from '@mui/material'\nimport { OptionItem } from '../OptionItem'\nimport { slugify } from '../../utils/files'\nimport type { OperationGroupName } from '../../entities/operation-groups'\nimport { ALL_OPERATION_GROUPS, UNGROUPED_OPERATION_GROUP } from '../../entities/operation-groups'\nimport type { PackageVersionContent } from '../../entities/version-contents'\nimport type { ApiType } from '../../entities/api-types'\n\nexport type OperationGroupFilterProps = Partial<{\n  required: boolean\n  labelText: string\n  value: OperationGroupName\n  onSelectValue: (value?: OperationGroupName) => void\n  isLoading: boolean\n  apiType: ApiType\n  versionContent: PackageVersionContent | null\n}>\n\nconst FILTER_GROUP_LABEL = 'Filter by Group'\n\nexport const OperationGroupFilter: FC<OperationGroupFilterProps> = (props) => {\n  const { required = false, labelText, value, onSelectValue, isLoading, apiType, versionContent } = props\n\n  const options: OperationGroupName[] = useOperationGroupsFromPackageVersionContent(apiType as ApiType, versionContent)\n\n  return (\n    <>\n      <InputLabel required={required}>{labelText ?? FILTER_GROUP_LABEL}</InputLabel>\n      <Autocomplete<OperationGroupName>\n        loading={isLoading}\n        disabled={!isLoading && options.length === SYNTHETIC_OPERATION_GROUPS.length}\n        forcePopupIcon={true}\n        value={value}\n        options={options}\n        renderOption={(props, groupName) => (\n          <OptionItem\n            key={groupName}\n            props={props}\n            title={groupName}\n            testId={`FilterByGroup-Option-${slugify(groupName)}`}\n          />\n        )}\n        isOptionEqualToValue={(option, value) => option === value}\n        getOptionLabel={(option: OperationGroupName) => option ?? ''}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            id=\"operation-group-filter\"\n            placeholder=\"Group\"\n            sx={{ '& .MuiInputBase-root': { pt: '1px', pb: '1px' } }}\n          />\n        )}\n        onChange={(_, option) => onSelectValue?.(option ?? undefined)}\n        data-testid=\"OperationGroupFilter\"\n      />\n    </>\n  )\n}\n\nexport function useOperationGroupsFromPackageVersionContent(\n  apiType?: ApiType,\n  versionContent?: PackageVersionContent | null,\n): OperationGroupName[] {\n  const groupsFromContent = useMemo(() => {\n    return (versionContent?.operationGroups ?? [])\n      .filter(({ apiType: groupApiType }) => groupApiType === apiType)\n      .map(({ groupName }) => groupName)\n  }, [apiType, versionContent?.operationGroups])\n\n  return [...SYNTHETIC_OPERATION_GROUPS, ...groupsFromContent]\n}\n\nconst SYNTHETIC_OPERATION_GROUPS = [ALL_OPERATION_GROUPS, UNGROUPED_OPERATION_GROUP]\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC } from 'react'\nimport * as React from 'react'\nimport { memo } from 'react'\nimport { Autocomplete, InputLabel, TextField } from '@mui/material'\nimport { OptionItem } from '../OptionItem'\nimport type { ApiKind } from '../../entities/operations'\nimport { API_KINDS } from '../../entities/operations'\n\nexport type ApiKindFilterProps = {\n  onSelectApiKind: (value?: ApiKind) => void\n  value?: ApiKind\n  required?: boolean\n  labelText?: string\n}\n\nconst FILTER_API_KIND_LABEL = 'Filter by API Kind'\n\nexport const ApiKindFilter: FC<ApiKindFilterProps> = memo<ApiKindFilterProps>((props) => {\n  const { value, onSelectApiKind, required = false, labelText } = props\n  return (\n    <>\n      <InputLabel required={required}>{labelText ?? FILTER_API_KIND_LABEL}</InputLabel>\n      <Autocomplete\n        forcePopupIcon={true}\n        value={value}\n        options={Object.keys(API_KINDS).map((apiKind) => apiKind as ApiKind)}\n        renderOption={(props, apiKind) => (\n          <OptionItem key={apiKind} props={props} title={API_KINDS[apiKind as ApiKind]!} testId={`Option-${apiKind}`} />\n        )}\n        isOptionEqualToValue={(option, value) => option === value}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            id=\"api-kind-filter\"\n            placeholder=\"API Kind\"\n            sx={{ '& .MuiInputBase-root': { pt: '1px', pb: '1px' } }}\n          />\n        )}\n        getOptionLabel={(option: ApiKind) => API_KINDS[option] ?? ''}\n        onChange={(_, option) => onSelectApiKind(option ?? undefined)}\n        data-testid=\"ApiKindFilter\"\n      />\n    </>\n  )\n})\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexports.default = _default;","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC } from 'react'\nimport { memo } from 'react'\nimport { Autocomplete, InputLabel, TextField } from '@mui/material'\nimport { OptionItem } from '../OptionItem'\nimport type { ApiAudience } from '../../entities/operations'\nimport { API_AUDIENCES } from '../../entities/operations'\n\nexport type ApiAudienceFilterProps = {\n  onSelectApiAudience: (value?: ApiAudience) => void\n  value?: ApiAudience\n}\n\nconst FILTER_API_AUDIENCE_LABEL = 'Filter by API Audience'\n\nexport const ApiAudienceFilter: FC<ApiAudienceFilterProps> = memo<ApiAudienceFilterProps>((props) => {\n  const { value, onSelectApiAudience } = props\n  return (\n    <>\n      <InputLabel>{FILTER_API_AUDIENCE_LABEL}</InputLabel>\n      <Autocomplete\n        forcePopupIcon={true}\n        value={value}\n        options={Object.keys(API_AUDIENCES).map((apiAudience) => apiAudience as ApiAudience)}\n        renderOption={(props, apiAudience) => (\n          <OptionItem\n            key={apiAudience}\n            props={props}\n            title={API_AUDIENCES[apiAudience as ApiAudience]!}\n            testId={`Option-${apiAudience}`}\n          />\n        )}\n        isOptionEqualToValue={(option, value) => option === value}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            id=\"api-audience-filter\"\n            placeholder=\"API Audience\"\n            sx={{ '& .MuiInputBase-root': { pt: '1px', pb: '1px' } }}\n          />\n        )}\n        getOptionLabel={(option: ApiAudience) => API_AUDIENCES[option] ?? ''}\n        onChange={(_, option) => onSelectApiAudience(option ?? undefined)}\n        data-testid=\"ApiAudienceFilter\"\n      />\n    </>\n  )\n})\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC, SyntheticEvent } from 'react'\nimport { memo, useCallback } from 'react'\nimport { Accordion, AccordionDetails, AccordionSummary, Box, Typography } from '@mui/material'\nimport { DashboardPackageSelector } from './DashboardPackageSelector'\nimport { OperationGroupFilter } from './OperationGroupFilter'\nimport { ApiKindFilter } from './ApiKindFilter'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport type { PackageReference } from '../../entities/version-references'\nimport type { OperationGroupName } from '../../entities/operation-groups'\nimport type { ApiAudience, ApiKind, Tags } from '../../entities/operations'\nimport type { PackageVersionContent } from '../../entities/version-contents'\nimport { SidebarWithTags } from '../SidebarWithTags/SidebarWithTags'\nimport type { ApiType } from '../../entities/api-types'\nimport { ApiAudienceFilter } from './ApiAudienceFilter'\nimport type { HasNextPage, IsFetchingNextPage } from '../../utils/aliases'\n\nexport type OperationFiltersProps = {\n  selectedPackageKey?: string\n  onSelectPackage?: (packageRef: PackageReference | null) => void\n  selectedOperationGroupName?: OperationGroupName\n  onSelectOperationGroup?: (operationGroupName?: OperationGroupName) => void\n  selectedApiAudience?: ApiAudience\n  onSelectApiAudience?: (value?: ApiAudience) => void\n  selectedApiKind?: ApiKind\n  onSelectApiKind?: (value?: ApiKind) => void\n  hiddenGeneralFilters: boolean\n  onClickExpandCollapseButton: (value: boolean) => void\n  areTagsLoading: boolean\n  fetchNextTagsPage?: () => Promise<void>\n  isNextTagsPageFetching?: IsFetchingNextPage\n  hasNextTagsPage?: HasNextPage\n  isReferencesLoading: boolean\n  isPackageVersionContentLoading: boolean\n  tags: Tags\n  references: PackageReference[]\n  apiType: ApiType\n  versionContent: PackageVersionContent | null\n  onTagSearch?: (value: string) => void\n  selectedTag?: string\n  onSelectTag: (value?: string) => void\n}\n\n// First Order Component //\nexport const OperationFilters: FC<OperationFiltersProps> = memo<OperationFiltersProps>((props) => {\n  const {\n    selectedPackageKey,\n    selectedOperationGroupName,\n    selectedApiAudience,\n    selectedApiKind,\n    onSelectPackage,\n    onSelectOperationGroup,\n    onSelectApiAudience,\n    onSelectApiKind,\n    onClickExpandCollapseButton,\n    areTagsLoading,\n    fetchNextTagsPage,\n    hasNextTagsPage,\n    isNextTagsPageFetching,\n    isReferencesLoading,\n    isPackageVersionContentLoading,\n    hiddenGeneralFilters,\n    tags,\n    references,\n    versionContent,\n    apiType,\n    onSelectTag,\n    onTagSearch,\n    selectedTag,\n  } = props\n\n  const onChange = useCallback(\n    (_event: SyntheticEvent, expanded: boolean) => onClickExpandCollapseButton(!expanded),\n    [onClickExpandCollapseButton],\n  )\n\n  return (\n    <>\n      <Box\n        sx={{\n          borderBottom: '1px solid #D9D9D9',\n          p: 2,\n        }}\n      >\n        <Accordion expanded={!hiddenGeneralFilters} onChange={onChange} data-testid=\"GeneralFiltersAccordion\">\n          <AccordionSummary sx={{ p: 0 }} expandIcon={<ExpandMoreIcon />}>\n            <Typography width=\"100%\" noWrap variant=\"button\">\n              General Filters\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            {onSelectPackage && (\n              <DashboardPackageSelector\n                onSelectPackage={onSelectPackage}\n                references={references}\n                isLoading={isReferencesLoading}\n                defaultPackageKey={selectedPackageKey}\n                required={false}\n              />\n            )}\n            {onSelectOperationGroup && (\n              <Box sx={{ mt: onSelectPackage ? 1 : 0 }}>\n                <OperationGroupFilter\n                  value={selectedOperationGroupName}\n                  onSelectValue={onSelectOperationGroup}\n                  isLoading={isPackageVersionContentLoading}\n                  apiType={apiType as ApiType}\n                  versionContent={versionContent}\n                />\n              </Box>\n            )}\n            {onSelectApiAudience && (\n              <Box sx={{ mt: onSelectPackage || onSelectOperationGroup ? 1 : 0 }}>\n                <ApiAudienceFilter value={selectedApiAudience} onSelectApiAudience={onSelectApiAudience} />\n              </Box>\n            )}\n            {onSelectApiKind && (\n              <Box sx={{ mt: onSelectPackage || onSelectOperationGroup || onSelectApiAudience ? 1 : 0 }}>\n                <ApiKindFilter value={selectedApiKind} onSelectApiKind={onSelectApiKind} />\n              </Box>\n            )}\n          </AccordionDetails>\n        </Accordion>\n      </Box>\n      <SidebarWithTags\n        tags={tags}\n        areTagsLoading={areTagsLoading}\n        fetchNextTagsPage={fetchNextTagsPage}\n        isNextTagsPageFetching={isNextTagsPageFetching}\n        hasNextTagsPage={hasNextTagsPage}\n        onSearch={onTagSearch}\n        selectedTag={selectedTag}\n        onSelectTag={onSelectTag}\n      />\n    </>\n  )\n})\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { PackageVersionContent } from '../../entities/version-contents'\n\nexport const versionContent: PackageVersionContent = {\n  createdAt: 'Fri Oct 06 2023',\n  createdBy: {\n    name: 'John Williams',\n    type: 'user',\n    id: 'JW_1234',\n  },\n  status: 'draft',\n  version: '2023.1@3',\n  revisionsCount: 3,\n  packageKey: 'PSB.alint-dash',\n  key: 'c90f0e0d-005c-4349-a93c-8418822e06b2',\n  latestRevision: true,\n  operationGroups: [],\n}\n"],"names":["PACKAGE_FILTER_LABEL_TEXT","DashboardPackageSelector","memo","props","onSelectPackage","defaultPackageKey","required","disableClearable","labelText","references","isLoading","searchValue","setSearchValue","useState","onInputChange","useCallback","_","value2","filteredReferences","useMemo","ref","_a","value","jsxs","Fragment","jsx","InputLabel","Autocomplete","disableAutocompleteSearch","props2","key","name","OptionItem","option","debounce","DEFAULT_DEBOUNCE","params","TextField","event","FILTER_GROUP_LABEL","OperationGroupFilter","onSelectValue","apiType","versionContent","options","useOperationGroupsFromPackageVersionContent","SYNTHETIC_OPERATION_GROUPS","groupName","slugify","groupsFromContent","groupApiType","ALL_OPERATION_GROUPS","UNGROUPED_OPERATION_GROUP","FILTER_API_KIND_LABEL","ApiKindFilter","onSelectApiKind","API_KINDS","apiKind","_interopRequireDefault","require$$0","ExpandMore","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","_default","FILTER_API_AUDIENCE_LABEL","ApiAudienceFilter","onSelectApiAudience","API_AUDIENCES","apiAudience","OperationFilters","selectedPackageKey","selectedOperationGroupName","selectedApiAudience","selectedApiKind","onSelectOperationGroup","onClickExpandCollapseButton","areTagsLoading","fetchNextTagsPage","hasNextTagsPage","isNextTagsPageFetching","isReferencesLoading","isPackageVersionContentLoading","hiddenGeneralFilters","tags","onSelectTag","onTagSearch","selectedTag","onChange","_event","expanded","Box","Accordion","AccordionSummary","ExpandMoreIcon","Typography","AccordionDetails","SidebarWithTags"],"mappings":"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","x_google_ignoreList":[3]}