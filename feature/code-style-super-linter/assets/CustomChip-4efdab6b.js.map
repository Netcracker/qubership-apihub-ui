{"version":3,"file":"CustomChip-4efdab6b.js","sources":["../../packages/shared/src/components/CustomChip.tsx"],"sourcesContent":["/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ElementType, FC, ReactNode } from 'react'\nimport React, { memo, useMemo } from 'react'\nimport Chip from '@mui/material/Chip'\nimport type { ChipProps, ChipPropsColorOverrides } from '@mui/material/Chip/Chip'\nimport type { OverridableStringUnion } from '@mui/types'\nimport { CHIP_COLOR_OVERRIDES } from '../themes/palette'\n\nexport type CustomChipProps = {\n  value: string\n  label?: ReactNode | string\n  component?: ElementType\n  isExtraSmall?: boolean\n} & ChipProps\n\nexport const CustomChip: FC<CustomChipProps> = memo<CustomChipProps>(\n  ({ value, label, component = 'div', isExtraSmall = false, sx, ...props }) => {\n    const isCustomColor = useMemo(() => Object.keys(CHIP_COLOR_OVERRIDES).includes(value), [value])\n\n    //to support many usages in UI\n    const sxOverrides = useMemo(\n      () =>\n        isExtraSmall\n          ? {\n              ...sx,\n              ...extraSmallStyles,\n            }\n          : sx,\n      [isExtraSmall, sx],\n    )\n\n    return (\n      <Chip\n        {...props}\n        sx={sxOverrides}\n        size=\"small\"\n        label={label ?? value}\n        component={component}\n        color={isCustomColor ? (value as ChipColor) : 'default'}\n      />\n    )\n  },\n)\n\ntype ChipColor = OverridableStringUnion<\n  'default' | 'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning',\n  ChipPropsColorOverrides\n>\n\nconst extraSmallStyles = {\n  height: '14px',\n  px: '4px',\n  '> span': {\n    px: '4px',\n    fontSize: '11px',\n  },\n}\n"],"names":["CustomChip","memo","value","label","component","isExtraSmall","sx","props","isCustomColor","useMemo","CHIP_COLOR_OVERRIDES","sxOverrides","extraSmallStyles","jsx","Chip"],"mappings":"uKA8BO,MAAAA,EAAAC,EAAA,KAAwC,CAAA,CAAA,MAAAC,EAAA,MAAAC,EAAA,UAAAC,EAAA,MAAA,aAAAC,EAAA,GAAA,GAAAC,EAAA,GAAAC,KAAA,CAE3C,MAAAC,EAAAC,EAAAA,QAAA,IAAA,OAAA,KAAAC,CAAA,EAAA,SAAAR,CAAA,EAAA,CAAAA,CAAA,CAAA,EAGAS,EAAAF,EAAA,QAAoB,IAAAJ,EAAA,CAGZ,GAAAC,EACK,GAAAM,CACA,EAAAN,EAEL,CAAAD,EAAAC,CAAA,CACW,EAGnB,OAAAO,EACEC,EAAC,CAAA,GAAAP,EACK,GAAAI,EACA,KAAA,QACC,MAAAR,GAAAD,EACW,UAAAE,EAChB,MAAAI,EAAAN,EAAA,SAC8C,CAAA,CAChD,CAGN,EAOAU,EAAA,CAAyB,OAAA,OACf,GAAA,MACJ,SAAA,CACM,GAAA,MACJ,SAAA,MACM,CAEd;;;;;;;;"}