{"version":3,"file":"MenuButton-571aeca5.js","sources":["../../packages/shared/src/components/Buttons/MenuButton.tsx"],"sourcesContent":["/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC, MouseEvent, ReactNode } from 'react'\nimport * as React from 'react'\nimport { memo, useRef, useState } from 'react'\nimport type { ButtonProps, MenuProps } from '@mui/material'\nimport { Button, CircularProgress, Menu } from '@mui/material'\nimport { alpha, styled } from '@mui/material/styles'\n\nexport type MenuButtonProps = Partial<\n  {\n    title: ReactNode\n    icon: ReactNode\n    alignItems: 'normal' | 'center'\n    onClick: (event: MouseEvent) => void\n    onItemClick: (event: MouseEvent) => void\n    onClose: () => void\n    multiple: boolean\n    isLoading?: boolean\n  } & ButtonProps\n>\n\nexport const MenuButton: FC<MenuButtonProps> = memo<MenuButtonProps>(\n  ({\n    variant,\n    color,\n    title,\n    icon,\n    children,\n    alignItems,\n    onClick,\n    onItemClick,\n    onClose,\n    sx,\n    multiple = false,\n    isLoading = false,\n    ...props\n  }) => {\n    const [anchor, setAnchor] = useState<HTMLElement>()\n    const buttonRef = useRef<HTMLElement>()\n    const iconOrLoadingIndicator = isLoading ? <CircularProgress sx={{ ml: '2px', mt: '2px' }} size={16} /> : icon\n\n    return (\n      <>\n        {title ? (\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          <Button\n            {...props}\n            sx={sx}\n            ref={buttonRef}\n            color={color}\n            variant={variant}\n            onClick={(event) => {\n              setAnchor(event.currentTarget)\n              onClick?.(event)\n            }}\n            {...(title && iconOrLoadingIndicator ? { endIcon: iconOrLoadingIndicator } : {})}\n          >\n            {title}\n          </Button>\n        ) : (\n          <Button\n            {...props}\n            sx={{ width: 32, minWidth: 32, p: 1.25, ...sx }}\n            variant={variant}\n            size=\"small\"\n            onClick={(event) => {\n              setAnchor(event.currentTarget)\n              onClick?.(event)\n            }}\n          >\n            {iconOrLoadingIndicator}\n          </Button>\n        )}\n        <MenuButtonItems\n          anchorEl={anchor}\n          open={!!anchor}\n          onClick={(event) => {\n            onItemClick?.(event)\n            if (multiple) {\n              return\n            }\n            setAnchor(undefined)\n            onClose?.()\n          }}\n          onClose={() => {\n            setAnchor(undefined)\n            onClose?.()\n          }}\n          PaperProps={{\n            sx: { width: alignItems === 'center' ? buttonRef.current?.offsetWidth : 'auto' },\n            style: { marginTop: alignItems === 'center' ? '-8px' : '8px' },\n          }}\n          anchorOrigin={\n            alignItems === 'center'\n              ? { vertical: 'top', horizontal: 'left' }\n              : {\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                }\n          }\n          transformOrigin={\n            alignItems === 'center'\n              ? { vertical: 'bottom', horizontal: 'left' }\n              : {\n                  vertical: 'top',\n                  horizontal: 'right',\n                }\n          }\n        >\n          {children}\n        </MenuButtonItems>\n      </>\n    )\n  },\n)\n\nexport const MenuButtonItems = styled(memo<MenuProps>((props) => <Menu {...props} />))(\n  ({\n    theme: {\n      palette: { action, grey, mode, primary, text },\n      spacing,\n    },\n  }) => ({\n    '& .MuiPaper-root': {\n      borderRadius: 6,\n      marginTop: spacing(1),\n      minWidth: 90,\n      color: mode === 'light' ? 'rgb(55, 65, 81)' : grey[300],\n      boxShadow:\n        'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\n      '& .MuiMenu-list': {\n        padding: '4px 0',\n      },\n      '& .MuiMenuItem-root': {\n        '& .MuiSvgIcon-root': {\n          fontSize: 18,\n          color: text.secondary,\n          marginRight: spacing(1.5),\n        },\n        '&:active': {\n          backgroundColor: alpha(primary.main, action.selectedOpacity),\n        },\n      },\n    },\n  }),\n)\n"],"names":["MenuButton","memo","variant","color","title","icon","children","alignItems","onClick","onItemClick","onClose","sx","multiple","isLoading","props","anchor","setAnchor","useState","buttonRef","useRef","iconOrLoadingIndicator","jsx","CircularProgress","jsxs","Fragment","Button","event","MenuButtonItems","_a","styled","Menu","action","grey","mode","primary","text","spacing","alpha"],"mappings":"uRAoCO,MAAAA,EAAAC,EAAA,KAAwC,CAAA,CAC5C,QAAAC,EACC,MAAAC,EACA,MAAAC,EACA,KAAAC,EACA,SAAAC,EACA,WAAAC,EACA,QAAAC,EACA,YAAAC,EACA,QAAAC,EACA,GAAAC,EACA,SAAAC,EAAA,GACW,UAAAC,EAAA,GACC,GAAAC,CACT,IAAA,OAEH,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EACAC,EAAAC,EAAAA,SACAC,EAAAP,EAAAQ,EAAAC,EAAA,CAAA,GAAA,CAAA,GAAA,MAAA,GAAA,KAAA,EAAA,KAAA,EAAA,CAAA,EAAAjB,EAEA,OAAAkB,EAAAC,EAAA,CAAA,SAAA,CAEKpB,EAAAiB,EAGCI,EAAC,CAAA,GAAAX,EACK,GAAAH,EACJ,IAAAO,EACK,MAAAf,EACL,QAAAD,EACA,QAAAwB,GAAA,CAEEV,EAAAU,EAAA,aAAA,EACAlB,GAAA,MAAAA,EAAAkB,EAAe,EACjB,GAAAtB,GAAAgB,EAAA,CAAA,QAAAA,CAAA,EAAA,CAAA,EAC8E,SAAAhB,CAE7E,CAAA,EACHiB,EAEAI,EAAC,CAAA,GAAAX,EACK,GAAA,CAAA,MAAA,GAAA,SAAA,GAAA,EAAA,KAAA,GAAAH,CAAA,EAC0C,QAAAT,EAC9C,KAAA,QACK,QAAAwB,GAAA,CAEHV,EAAAU,EAAA,aAAA,EACAlB,GAAA,MAAAA,EAAAkB,EAAe,EACjB,SAAAN,CAEC,CAAA,EACHC,EAEFM,EAAC,CAAA,SAAAZ,EACW,KAAA,CAAA,CAAAA,EACF,QAAAW,GAAA,CAENjB,GAAA,MAAAA,EAAAiB,GACA,CAAAd,IAGAI,EAAA,MAAA,EACAN,GAAA,MAAAA,IAAU,EACZ,QAAA,IAAA,CAEEM,EAAA,MAAA,EACAN,GAAA,MAAAA,GAAU,EACZ,WAAA,CACY,GAAA,CAAA,MAAAH,IAAA,UAAAqB,EAAAV,EAAA,UAAA,YAAAU,EAAA,YAAA,MAAA,EACqE,MAAA,CAAA,UAAArB,IAAA,SAAA,OAAA,KAAA,CAClB,EAC/D,aAAAA,IAAA,SAAA,CAAA,SAAA,MAAA,WAAA,QAAA,CAIM,SAAA,SACY,WAAA,OACE,EACd,gBAAAA,IAAA,SAAA,CAAA,SAAA,SAAA,WAAA,QAAA,CAKA,SAAA,MACY,WAAA,OACE,EACd,SAAAD,CAGL,CAAA,CACH,CAAA,CAAA,CACF,CAGN,EAEOqB,EAAAE,EAAA5B,EAAA,KAAAa,GAAAO,EAAAS,EAAA,CAAA,GAAAhB,CAAA,CAAA,CAAA,CAAA,EAA8E,CAAA,CAClF,MAAA,CACQ,QAAA,CAAA,OAAAiB,EAAA,KAAAC,EAAA,KAAAC,EAAA,QAAAC,EAAA,KAAAC,CAAA,EACwC,QAAAC,CAC7C,CACF,KAAA,CACK,mBAAA,CACe,aAAA,EACJ,UAAAA,EAAA,CAAA,EACM,SAAA,GACV,MAAAH,IAAA,QAAA,kBAAAD,EAAA,GAAA,EAC4C,UAAA,uJAEpD,kBAAA,CACiB,QAAA,OACR,EACX,sBAAA,CACuB,qBAAA,CACC,SAAA,GACV,MAAAG,EAAA,UACE,YAAAC,EAAA,GAAA,CACY,EAC1B,WAAA,CACY,gBAAAC,EAAAH,EAAA,KAAAH,EAAA,eAAA,CACiD,CAC7D,CACF,CACF,EAEJ;;;;;;;;;;;;;;;;"}