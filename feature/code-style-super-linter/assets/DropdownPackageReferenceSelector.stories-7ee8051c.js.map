{"version":3,"file":"DropdownPackageReferenceSelector.stories-7ee8051c.js","sources":["../../packages/shared/src/components/DropdownPackageReferenceSelector.tsx"],"sourcesContent":["/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC } from 'react'\nimport { memo, useState } from 'react'\nimport { Box, Button, List, ListItem, ListItemButton, ListItemText } from '@mui/material'\nimport KeyboardArrowDownOutlinedIcon from '@mui/icons-material/KeyboardArrowDownOutlined'\nimport type { Key } from '../entities/keys'\nimport { MenuButtonItems } from './Buttons/MenuButton'\nimport { NAVIGATION_PLACEHOLDER_AREA, NO_SEARCH_RESULTS, Placeholder } from './Placeholder'\nimport { SearchBar } from './SearchBar'\nimport { isNotEmpty } from '../utils/arrays'\nimport { LoadingIndicator } from './LoadingIndicator'\nimport type { PackageReference } from '../entities/version-references'\n\nexport interface DropdownPackageReferenceSelectorProps {\n  searchValue: string\n  loading: boolean\n  references: PackageReference[]\n  onSearch: (value: string) => void\n  selectedPackage: PackageReference | null\n  defaultPackageKey: string | undefined\n  onSearchParam: (key: Key | undefined) => void\n}\n\n// First Order Component //\nexport const DropdownPackageReferenceSelector: FC<DropdownPackageReferenceSelectorProps> = memo(\n  ({ selectedPackage, references, loading, searchValue, onSearch, defaultPackageKey, onSearchParam }) => {\n    const [anchor, setAnchor] = useState<HTMLElement>()\n\n    return (\n      <Box display=\"flex\" alignItems=\"center\" gap={2} overflow=\"hidden\" data-testid=\"PackageSelector\">\n        <Button\n          sx={{\n            minWidth: 4,\n            maxWidth: '200px',\n            width: '200px',\n            height: 20,\n            p: 0,\n            textOverflow: 'ellipsis',\n            boxShadow: 'none',\n            '&:hover': {\n              boxShadow: 'none',\n            },\n          }}\n          variant=\"text\"\n          onClick={({ currentTarget }) => setAnchor(currentTarget)}\n          endIcon={<KeyboardArrowDownOutlinedIcon />}\n        >\n          <span\n            style={{\n              textOverflow: 'ellipsis',\n              whiteSpace: 'nowrap',\n              overflow: 'hidden',\n              width: '100%',\n            }}\n          >\n            {`${selectedPackage?.name ?? ''}`}\n          </span>\n          <MenuButtonItems\n            anchorEl={anchor}\n            open={!!anchor}\n            onClick={(event) => event.stopPropagation()}\n            onClose={() => setAnchor(undefined)}\n          >\n            <Box\n              sx={{ p: 2 }}\n              overflow=\"hidden\"\n              display=\"grid\"\n              gap={1}\n              gridTemplateAreas=\"\n              'searchbar'\n              'content'\n            \"\n            >\n              <Box gridArea=\"searchbar\" overflow=\"hidden\">\n                <SearchBar value={searchValue} onValueChange={onSearch} data-testid=\"SearchPackage\" />\n              </Box>\n              <Box gridArea=\"content\">\n                {loading ? (\n                  <LoadingIndicator />\n                ) : (\n                  <Placeholder\n                    invisible={isNotEmpty(references)}\n                    area={NAVIGATION_PLACEHOLDER_AREA}\n                    message={searchValue ? NO_SEARCH_RESULTS : 'No package references'}\n                  >\n                    <List>\n                      {references.map((reference) => {\n                        return (\n                          <ListItem key={reference.key} sx={{ p: 0 }}>\n                            <ListItemButton\n                              sx={{\n                                height: '36px',\n                                alignItems: 'center',\n                              }}\n                              selected={reference.key === defaultPackageKey}\n                              onClick={() => onSearchParam(reference.key)}\n                            >\n                              <ListItemText primary={reference.name} primaryTypographyProps={{ sx: { mt: 1 } }} />\n                            </ListItemButton>\n                          </ListItem>\n                        )\n                      })}\n                    </List>\n                  </Placeholder>\n                )}\n              </Box>\n            </Box>\n          </MenuButtonItems>\n        </Button>\n      </Box>\n    )\n  },\n)\n"],"names":["DropdownPackageReferenceSelector","memo","selectedPackage","references","loading","searchValue","onSearch","defaultPackageKey","onSearchParam","anchor","setAnchor","useState","jsx","Box","jsxs","Button","currentTarget","KeyboardArrowDownOutlinedIcon","MenuButtonItems","event","SearchBar","LoadingIndicator","Placeholder","isNotEmpty","NAVIGATION_PLACEHOLDER_AREA","NO_SEARCH_RESULTS","List","reference","ListItem","ListItemButton","ListItemText"],"mappings":"uyEAuCO,MAAAA,EAAAC,EAAA,KAAoF,CAAA,CAAA,gBAAAC,EAAA,WAAAC,EAAA,QAAAC,EAAA,YAAAC,EAAA,SAAAC,EAAA,kBAAAC,EAAA,cAAAC,KAAA,CAEvF,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAEA,OAAAC,EAAAC,EAAA,CAAA,QAAA,OAAA,WAAA,SAAA,IAAA,EAAA,SAAA,SAAA,cAAA,kBAAA,SAAAC,EAEIC,EAAC,CAAA,GAAA,CACK,SAAA,EACQ,SAAA,QACA,MAAA,QACH,OAAA,GACC,EAAA,EACL,aAAA,WACW,UAAA,OACH,UAAA,CACA,UAAA,MACE,CACb,EACF,QAAA,OACQ,QAAA,CAAA,CAAA,cAAAC,KAAAN,EAAAM,CAAA,EAC+C,QAAAJ,EAAAK,EAAA,EAAA,EACf,SAAA,CAExCL,EAAA,OAAC,CAAA,MAAA,CACQ,aAAA,WACS,WAAA,SACF,SAAA,SACF,MAAA,MACH,EACT,SAAA,IAAAV,GAAA,YAAAA,EAAA,OAAA,EAAA,EAE+B,CAAA,EACjCU,EACAM,EAAC,CAAA,SAAAT,EACW,KAAA,CAAA,CAAAA,EACF,QAAAU,GAAAA,EAAA,gBAAA,EACkC,QAAA,IAAAT,EAAA,MAAA,EACR,SAAAI,EAElCD,EAAC,CAAA,GAAA,CAAA,EAAA,CAAA,EACY,SAAA,SACF,QAAA,OACD,IAAA,EACH,kBAAA;AAAA;AAAA;AAAA,cACa,SAAA,CAKlBD,EAAAC,EAAA,CAAA,SAAA,YAAA,SAAA,SAAA,SAAAD,EAAAQ,EAAA,CAAA,MAAAf,EAAA,cAAAC,EAAA,cAAA,eAAA,CAAA,EAAA,EAEAM,EAAAC,EAAA,CAAA,SAAA,UAAA,SAAAT,EAAAQ,EAAAS,EAAA,CAAA,CAAA,EAAAT,EAKIU,EAAC,CAAA,UAAAC,EAAApB,CAAA,EACiC,KAAAqB,EAC1B,QAAAnB,EAAAoB,EAAA,wBACqC,SAAAb,EAAAc,EAAA,CAAA,SAAAvB,EAAA,IAAAwB,GAIvCf,EAAAgB,EAAA,CAAA,GAAA,CAAA,EAAA,CAAA,EAAA,SAAAhB,EAEIiB,EAAC,CAAA,GAAA,CACK,OAAA,OACM,WAAA,QACI,EACd,SAAAF,EAAA,MAAApB,EAC4B,QAAA,IAAAC,EAAAmB,EAAA,GAAA,EACc,SAAAf,EAAAkB,EAAA,CAAA,QAAAH,EAAA,KAAA,uBAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAEwC,CAAA,GAAAA,EAAA,GAAA,CAEtF,EAAA,CAGN,CAAA,EAAA,CAGN,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CAAA,CAAA,CAEJ,CAGN;;;;;;;;;;;;;;;"}