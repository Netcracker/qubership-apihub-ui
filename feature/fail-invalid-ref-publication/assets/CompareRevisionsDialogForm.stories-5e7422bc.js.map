{"version":3,"file":"CompareRevisionsDialogForm.stories-5e7422bc.js","sources":["../../packages/shared/src/components/LatestRevisionMark.tsx","../../packages/shared/src/components/CompareRevisionsDialogForm.tsx","../../packages/shared/src/stories/samples/revisions-samples.ts"],"sourcesContent":["/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC } from 'react'\nimport { memo } from 'react'\nimport { Typography } from '@mui/material'\n\nexport type LatestRevisionMarkProps = {\n  latest: boolean | undefined\n}\n\nexport const LatestRevisionMark: FC<LatestRevisionMarkProps> = memo<LatestRevisionMarkProps>(({ latest = false }) => {\n  return (\n    <Typography\n      variant=\"subtitle2\"\n      fontSize={13}\n    >\n      {`${latest ? ' (latest)' : ''}`}\n    </Typography>\n  )\n})\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC } from 'react'\nimport * as React from 'react'\nimport { memo } from 'react'\nimport {\n  Autocomplete,\n  Box,\n  Button,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  ListItem,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport type { Control, UseFormSetValue } from 'react-hook-form'\nimport { Controller } from 'react-hook-form'\nimport { LoadingButton } from '@mui/lab'\nimport { DialogForm } from './DialogForm'\nimport { CustomChip } from './CustomChip'\nimport { Swapper } from './Swapper'\nimport { LatestRevisionMark } from './LatestRevisionMark'\nimport type { Revision, Revisions } from '../entities/revisions'\nimport { REVISION_DELIMITER } from '../entities/versions'\n\nexport type CompareRevisionsDialogFormData = {\n  originalRevision: Revision | null\n  changedRevision: Revision | null\n}\n\nexport type CompareRevisionsDialogData = {\n  control: Control<CompareRevisionsDialogFormData>\n  setValue: UseFormSetValue<CompareRevisionsDialogFormData>\n  originalRevisions: Revisions\n  changedRevisions: Revisions\n  isApiTypeFetching: boolean\n  onSubmit: () => void\n  onSwap: () => void\n  isRevisionsLoading: boolean | undefined\n}\n\nexport type CompareRevisionsDialogFormProps = CompareRevisionsDialogData & {\n  open: boolean\n  setOpen: (value: boolean) => void\n}\n\n// First Order Component //\nexport const CompareRevisionsDialogForm: FC<CompareRevisionsDialogFormProps> = memo(({\n  open,\n  setOpen,\n  setValue,\n  control,\n  onSubmit,\n  onSwap,\n  isApiTypeFetching,\n  originalRevisions,\n  changedRevisions,\n  isRevisionsLoading,\n}) => {\n  return (\n    <DialogForm\n      open={open}\n      onClose={() => setOpen(false)}\n      onSubmit={onSubmit}\n      maxWidth=\"md\"\n    >\n      <DialogTitle>\n        Select Revisions To Compare\n      </DialogTitle>\n\n      <DialogContent sx={DIALOG_CONTENT_STYLES}>\n        <Typography\n          sx={{ gridArea: 'originalTitle' }}\n          variant=\"button\"\n        >\n          Previous\n        </Typography>\n\n        <Controller\n          name=\"originalRevision\"\n          control={control}\n          render={({ field: { value, onChange } }) => (\n            <RevisionAutocomplete\n              value={value}\n              onChange={onChange}\n              controllerName=\"originalRevision\"\n              revisions={originalRevisions}\n              isLoading={isRevisionsLoading}\n              setValue={() => setValue('originalRevision', null)}\n              dataTestId=\"PreviousRevisionAutocomplete\"\n            />\n          )}\n        />\n\n        <Box sx={{ gridArea: 'swapper', alignSelf: 'center' }}>\n          <Swapper onSwap={onSwap}/>\n        </Box>\n\n        <Typography\n          sx={{ gridArea: 'changedTitle' }}\n          variant=\"button\"\n        >\n          Current\n        </Typography>\n\n        <Controller\n          name=\"changedRevision\"\n          control={control}\n          render={({ field: { value, onChange } }) => (\n            <RevisionAutocomplete\n              value={value}\n              onChange={onChange}\n              controllerName=\"changedRevision\"\n              revisions={changedRevisions}\n              isLoading={isRevisionsLoading}\n              setValue={() => setValue('changedRevision', null)}\n              dataTestId=\"CurrentRevisionAutocomplete\"\n            />\n          )}\n        />\n\n      </DialogContent>\n      <DialogActions>\n        <LoadingButton\n          variant=\"contained\"\n          type=\"submit\"\n          loading={isApiTypeFetching}\n          data-testid=\"CompareButton\"\n        >\n          Compare\n        </LoadingButton>\n        <Button variant=\"outlined\" onClick={() => setOpen(false)} data-testid=\"CancelButton\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </DialogForm>\n  )\n})\n\ntype RevisionAutocompleteProps = {\n  value: Revision | null\n  onChange: (value: Revision | null) => void\n  controllerName: string\n  revisions: Revisions\n  isLoading: boolean | undefined\n  setValue: () => void\n  dataTestId: string\n}\n\nconst RevisionAutocomplete: FC<RevisionAutocompleteProps> = memo<RevisionAutocompleteProps>(({\n  value,\n  onChange,\n  controllerName,\n  revisions,\n  isLoading,\n  setValue,\n  dataTestId,\n}) => {\n  return (\n    <Autocomplete\n      sx={{ gridArea: controllerName }}\n      value={value ?? null}\n      loading={isLoading}\n      options={isLoading ? [] : revisions}\n      getOptionLabel={(revision) => `${REVISION_DELIMITER}${revision.revision}`}\n      isOptionEqualToValue={(option, value) => option.revision === value.revision}\n      renderOption={(props, revision) => <AutocompleteOption revision={revision} props={props}/>}\n      renderInput={(params) => <TextField {...params} required label=\"Revision\"/>}\n      onChange={(_, value) => {\n        setValue()\n        onChange(value)\n      }}\n      data-testid={dataTestId}\n    />\n  )\n})\n\ntype AutocompleteOptionProps = {\n  revision: Revision\n  props: React.HTMLAttributes<HTMLLIElement>\n}\n\nconst AutocompleteOption: FC<AutocompleteOptionProps> = memo<AutocompleteOptionProps>(({ revision, props }) => {\n\n  return (\n    <ListItem\n      {...props}\n      key={revision.revision}\n    >\n      <Box width=\"100%\" display=\"flex\" justifyContent=\"space-between\">\n        <Box display=\"flex\" gap=\"4px\" alignItems=\"center\">\n          {`${REVISION_DELIMITER}${revision.revision}`}\n          <LatestRevisionMark latest={revision.latestRevision}/>\n        </Box>\n        <CustomChip value={revision.status}/>\n      </Box>\n    </ListItem>\n  )\n})\n\nconst DIALOG_CONTENT_STYLES = {\n  display: 'grid',\n  columnGap: 1,\n  gridTemplateRows: 'repeat(2, max-content)',\n  gridTemplateColumns: '300px max-content 300px',\n  gridTemplateAreas: `\n    'originalTitle      originalTitle   changedTitle'\n    'originalRevision   swapper         changedRevision'\n  `,\n}\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Revisions } from '../../entities/revisions'\nimport { DRAFT_VERSION_STATUS, RELEASE_VERSION_STATUS } from '../../entities/version-status'\nimport { USER } from '../../entities/principals'\n\nexport const revisions: Revisions = [\n  {\n    revision: 2,\n    version: '2.6@2',\n    latestRevision: false,\n    status: RELEASE_VERSION_STATUS,\n    createdBy: {\n      type: USER,\n      id: 'user1221',\n      name: 'Name Surname',\n      email: 'name.surname@example.com',\n      avatarUrl: 'string',\n    },\n    createdAt: '2023-10-06T14:33:44.550622Z',\n    revisionLabels: [\n      'my-cloud-label',\n    ],\n    publishMeta: {\n      commitKey: 'a5d45af7',\n      repositoryUrl: 'https://git.example.com/APIHUB/apihub-registry',\n      cloudName: 'my-cloud',\n      cloudUrl: 'https://cloud.example.com',\n      namespace: 'my-cloud-release2',\n    },\n  },\n  {\n    revision: 3,\n    version: '2.6@3',\n    latestRevision: true,\n    status: DRAFT_VERSION_STATUS,\n    createdBy: {\n      type: USER,\n      id: 'user1221',\n      name: 'Name Surname',\n      email: 'name.surname@example.com',\n      avatarUrl: 'string',\n    },\n    createdAt: '2023-10-05T14:33:44.550622Z',\n    revisionLabels: [\n      'my-cloud-label',\n    ],\n    publishMeta: {\n      commitKey: 'a5d45af7',\n      repositoryUrl: 'https://git.example.com/APIHUB/apihub-registry',\n      cloudName: 'my-cloud',\n      cloudUrl: 'https://cloud.example.com',\n      namespace: 'my-cloud-namespace',\n    },\n  },\n]\n"],"names":["LatestRevisionMark","memo","latest","jsx","Typography","CompareRevisionsDialogForm","open","setOpen","setValue","control","onSubmit","onSwap","isApiTypeFetching","originalRevisions","changedRevisions","isRevisionsLoading","jsxs","DialogForm","DialogTitle","DialogContent","DIALOG_CONTENT_STYLES","Controller","value","onChange","RevisionAutocomplete","Box","Swapper","DialogActions","LoadingButton","Button","controllerName","revisions","isLoading","dataTestId","Autocomplete","revision","REVISION_DELIMITER","option","value2","props","AutocompleteOption","params","TextField","_","createElement","ListItem","CustomChip","RELEASE_VERSION_STATUS","USER","DRAFT_VERSION_STATUS"],"mappings":"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"}