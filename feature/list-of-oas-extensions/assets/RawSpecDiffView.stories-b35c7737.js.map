{"version":3,"mappings":"omDAgCA,MAAAA,EAAAC,OAAA,IAAAC,EAAA,ixCAEOC,EAAAC,EAAA,OAAiF,OAAAC,EACtF,MAAAC,EACA,KAAAC,EACA,SAAAC,EACA,YAAAC,CAEF,IACEC,EAAAC,EAAA,mBAAAD,EAAAE,EAAA,aAAAF,EAEIV,EAAC,QAAAK,EACC,MAAAC,EACA,KAAAC,EACA,SAAAC,EACA,YAAAC,CACA,IAIR,69BCbO,MAAAI,EAAAT,EAAA,OAAsE,YAAAU,EAC3E,WAAAC,EACA,KAAAR,EACA,UAAAS,EACA,YAAAP,EACA,GAAAQ,CAEF,IACEP,EAAAQ,EAAA,UAAAR,EAAAS,EAAA,6BAAAF,EAAA,qCAAAP,EAGMP,EAAC,QAAAW,EACS,MAAAC,EACD,KAAAR,EACP,SAAAa,EAAAJ,CAAA,EACkD,YAAAP,CAClD,MAKV","names":["MonacoDiffEditorElement","lazy","__vitePreload","MonacoDiffEditor","memo","before","after","type","language","selectedUri","jsx","Suspense","LoadingIndicator","RawSpecDiffView","beforeValue","afterValue","extension","sx","ModuleFetchingErrorBoundary","Box","EXTENSION_TO_TYPE_LANGUAGE_MAP"],"sources":["../../packages/shared/src/components/MonacoDiffEditor/MonacoDiffEditor.tsx","../../packages/shared/src/components/RawSpecDiffView.tsx"],"sourcesContent":["/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC } from 'react'\nimport { lazy, memo, Suspense } from 'react'\nimport type { MonacoDiffEditorElementProps } from './MonacoDiffEditorElement'\nimport type { SpecType } from '../../utils/specs'\nimport type { LanguageType } from '../../types/languages'\nimport type { SpecItemUri } from '../../utils/specifications'\nimport { LoadingIndicator } from '../LoadingIndicator'\n\nexport type MonacoDiffEditorProps = {\n  before: string\n  after: string\n  type: SpecType\n  language?: LanguageType\n  selectedUri?: SpecItemUri\n}\n\nconst MonacoDiffEditorElement: FC<MonacoDiffEditorElementProps> = lazy(() => import('./MonacoDiffEditorElement'))\n\nexport const MonacoDiffEditor: FC<MonacoDiffEditorProps> = memo<MonacoDiffEditorProps>(({\n  before,\n  after,\n  type,\n  language,\n  selectedUri,\n}) => {\n  return (\n    <Suspense fallback={<LoadingIndicator/>}>\n      <MonacoDiffEditorElement\n        before={before}\n        after={after}\n        type={type}\n        language={language}\n        selectedUri={selectedUri}\n      />\n    </Suspense>\n  )\n})\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Box } from '@mui/material'\nimport type { SxProps } from '@mui/system'\nimport type { FC } from 'react'\nimport { memo } from 'react'\nimport { EXTENSION_TO_TYPE_LANGUAGE_MAP } from '../types/languages'\nimport type { FileExtension } from '../utils/files'\nimport type { SpecType } from '../utils/specs'\nimport { ModuleFetchingErrorBoundary } from './ModuleFetchingErrorBoundary/ModuleFetchingErrorBoundary'\nimport { MonacoDiffEditor } from './MonacoDiffEditor'\n\nexport type RawDiffViewProps = {\n  beforeValue: BeforeSpecContent\n  afterValue: AfterSpecContent\n  extension: FileExtension\n  type: SpecType\n  selectedUri?: SpecItemUri\n  sx?: SxProps\n}\n\ntype BeforeSpecContent = string\ntype AfterSpecContent = string\ntype SpecItemUri = string\n\nexport const RawSpecDiffView: FC<RawDiffViewProps> = memo<RawDiffViewProps>(({\n  beforeValue,\n  afterValue,\n  type,\n  extension,\n  selectedUri,\n  sx,\n}) => {\n  return (\n    <ModuleFetchingErrorBoundary>\n      <Box height=\"100%\" minWidth={0} sx={sx} data-testid=\"RawDiffView\">\n        <MonacoDiffEditor\n          before={beforeValue}\n          after={afterValue}\n          type={type}\n          language={EXTENSION_TO_TYPE_LANGUAGE_MAP[extension]}\n          selectedUri={selectedUri}\n        />\n      </Box>\n    </ModuleFetchingErrorBoundary>\n  )\n})\n"],"file":"assets/RawSpecDiffView.stories-b35c7737.js"}