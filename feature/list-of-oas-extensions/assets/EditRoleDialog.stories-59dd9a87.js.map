{"version":3,"file":"EditRoleDialog.stories-59dd9a87.js","sources":["../../packages/shared/src/icons/CheckboxCheckedIcon.tsx","../../packages/shared/src/icons/CheckboxDisabledCheckedIcon.tsx","../../packages/shared/src/components/EditRoleDialog.tsx"],"sourcesContent":["/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC } from 'react'\nimport { memo } from 'react'\n\nexport const CheckboxCheckedIcon: FC = memo(() => {\n    return (\n      <div style={{ display: 'flex' }}>\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <rect width=\"16\" height=\"16\" rx=\"4\" fill=\"#0068FF\"/>\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M12.1757 4.76285C12.5828 5.13604 12.6104 5.76861 12.2372 6.17573L7.79324 11.0236C7.19873 11.6722 6.17628 11.6722 5.58177 11.0236L3.76285 9.03937C3.38966 8.63225 3.41716 7.99968 3.82428 7.62649C4.2314 7.2533 4.86397 7.2808 5.23716 7.68792L6.68751 9.27011L10.7629 4.82428C11.136 4.41716 11.7686 4.38966 12.1757 4.76285Z\"\n            fill=\"white\"\n          />\n        </svg>\n      </div>\n    )\n  },\n)\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC } from 'react'\nimport { memo } from 'react'\n\nexport const CheckboxDisabledCheckedIcon: FC = memo(() => {\n    return (\n      <div style={{ display: 'flex' }}>\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g opacity=\"0.5\">\n            <rect x=\"0.5\" y=\"0.5\" width=\"15\" height=\"15\" rx=\"3.5\" fill=\"#F2F3F5\"/>\n            <rect x=\"0.5\" y=\"0.5\" width=\"15\" height=\"15\" rx=\"3.5\" stroke=\"#B4BFCF\"/>\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M12.1757 4.76285C12.5828 5.13604 12.6104 5.76861 12.2372 6.17573L7.79324 11.0236C7.19873 11.6722 6.17628 11.6722 5.58177 11.0236L3.76285 9.03937C3.38966 8.63225 3.41716 7.99968 3.82428 7.62649C4.2314 7.2533 4.86397 7.2808 5.23716 7.68792L6.68751 9.27011L10.7629 4.82428C11.136 4.41716 11.7686 4.38966 12.1757 4.76285Z\"\n              fill=\"#8F9EB4\"\n            />\n          </g>\n        </svg>\n      </div>\n    )\n  },\n)\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC } from 'react'\nimport * as React from 'react'\nimport { memo, useCallback, useMemo } from 'react'\nimport {\n  Button,\n  Checkbox,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControlLabel,\n  IconButton,\n  InputLabel,\n  TextField,\n} from '@mui/material'\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined'\nimport type { PopupProps } from './PopupDelegate'\nimport { PopupDelegate } from './PopupDelegate'\nimport type { Permission } from '../types/permissions'\nimport type { ControllerRenderProps } from 'react-hook-form'\nimport { Controller, useForm } from 'react-hook-form'\nimport { DialogForm } from './DialogForm'\nimport type { Role } from '../types/roles'\nimport { CheckboxCheckedIcon } from '../icons/CheckboxCheckedIcon'\nimport { CheckboxDisabledCheckedIcon } from '../icons/CheckboxDisabledCheckedIcon'\nimport ErrorOutlinedIcon from '@mui/icons-material/ErrorOutlined'\nimport { READ_PERMISSION } from '../entities/package-permissions'\n\nexport const EditRoleDialog: FC = memo(() => {\n  return (\n    <PopupDelegate\n      type={SHOW_EDIT_ROLE_DIALOG}\n      render={props => <EditRolePopup {...props}/>}\n    />\n  )\n})\n\nexport const SHOW_EDIT_ROLE_DIALOG = 'show-edit-role-dialog'\n\nexport type ShowEditRoleDetail = {\n  permissions: ReadonlyArray<Permission>\n  role?: Role\n  onConfirm: (role: Role) => void\n  isRoleUnique?: (roleName: string) => boolean\n}\n\nexport type EditRoleForm = Readonly<{\n  role: string\n  permissions: Permission[]\n}>\n\nexport const EditRolePopup: FC<PopupProps> = memo<PopupProps>(({ open, setOpen, detail }) => {\n  const [permissions, role, onConfirm, isRoleUnique] = useMemo(() => {\n    const { permissions, role, onConfirm, isRoleUnique } = detail as ShowEditRoleDetail\n    return [permissions, role, onConfirm, isRoleUnique]\n  }, [detail])\n\n  const { handleSubmit, control, formState: { errors, isDirty } } = useForm<EditRoleForm>({\n    defaultValues: {\n      permissions: permissions.filter(({ permission }) =>\n        role?.permissions.includes(permission) || permission === READ_PERMISSION,\n      ),\n      role: role?.role,\n    },\n  })\n\n  const onConfirmCallback = useCallback((value: EditRoleForm): void => {\n    setOpen(false)\n    onConfirm({\n      key: role?.key || '',\n      role: value.role,\n      permissions: value.permissions.map((p) => p.permission),\n    })\n  }, [onConfirm, role?.key, setOpen])\n\n  const onClose = useCallback(() => {\n    setOpen(false)\n  }, [setOpen])\n\n  const renderPermissions = useCallback(({ field: { value, onChange } }: {\n    field: ControllerRenderProps<EditRoleForm, 'permissions'>\n  }) => {\n    const onToggleCheckbox = (checked: boolean, permission: Permission): void => {\n      if (checked) {\n        return onChange([...value, permission])\n      }\n      onChange(value.filter((value) => value.permission !== permission.permission))\n    }\n    return <>\n      {permissions.map(\n        (permission) => <PermissionControl\n          key={permission.permission}\n          permission={permission}\n          onToggleCheckbox={onToggleCheckbox}\n          checked={value.some((existingValue) => existingValue.permission === permission.permission)}\n        />,\n      )}\n    </>\n  }, [permissions])\n\n  const confirmButtonName = role ? 'Update' : 'Create'\n  const dialogTitle = role ? 'Edit Role' : 'Create Role'\n\n  return (\n    <DialogForm\n      open={open}\n      onClose={onClose}\n      onSubmit={handleSubmit(onConfirmCallback)}\n      width=\"440px\"\n    >\n      <DialogTitle>\n        {dialogTitle}\n        <IconButton\n          sx={{ position: 'absolute', right: 8, top: 8, color: '#626D82' }}\n          onClick={onClose}\n        >\n          <CloseOutlinedIcon fontSize=\"small\"/>\n        </IconButton>\n      </DialogTitle>\n      <DialogContent sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        width: 'auto',\n        minWidth: 'unset',\n      }}>\n        <Controller\n          name=\"role\"\n          rules={{\n            required: 'The field must be filled',\n            validate: role ? {} : {\n              alreadyExists: (role) => isRoleUnique?.(role) || 'Role already exists',\n            },\n          }}\n          control={control}\n          render={({ field }) => <TextField\n            {...field}\n            sx={{ mt: '4px', mb: '12px' }}\n            required\n            inputProps={{ required: false }} // disables \"please fill out this field\" prompt\n            value={field.value}\n            disabled={!!role}\n            label=\"Role Name\"\n            error={!!errors.role}\n            helperText={errors.role?.message}\n            InputProps={errors.role ? { endAdornment: <ErrorOutlinedIcon color=\"error\" data-testid=\"ErrorIcon\"/> } : {}}\n            data-testid=\"RoleNameTextField\"\n          />}\n        />\n        <InputLabel required sx={{ fontWeight: 500, color: '#000000' }}>Select permissions</InputLabel>\n        <Controller\n          name=\"permissions\"\n          control={control}\n          render={renderPermissions}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button\n          variant=\"contained\"\n          type=\"submit\"\n          disabled={role && !isDirty}\n          data-testid={`${confirmButtonName}Button`}\n        >\n          {confirmButtonName}\n        </Button>\n        <Button\n          variant=\"outlined\"\n          onClick={onClose}\n          data-testid=\"CancelButton\"\n        >\n          Cancel\n        </Button>\n      </DialogActions>\n    </DialogForm>\n  )\n})\n\nexport const PermissionControl: FC<{\n  permission: Permission\n  checked: boolean\n  onToggleCheckbox: (checked: boolean, permission: Permission) => void\n}> = memo(({ permission, checked, onToggleCheckbox }) => {\n  const { permission: permissionKey, name: permissionName } = permission\n  const disabled = permissionKey === READ_PERMISSION\n\n  function handleToggle(_: React.ChangeEvent<HTMLInputElement>, checked: boolean): void {\n    onToggleCheckbox(checked, permission)\n  }\n\n  return (\n    <FormControlLabel\n      key={permissionKey}\n      label={permissionName}\n      sx={{ mt: '6px' }}\n      control={\n        <Checkbox\n          value={permission}\n          disabled={disabled}\n          checked={checked}\n          onChange={handleToggle}\n          checkedIcon={disabled ? <CheckboxDisabledCheckedIcon/> : <CheckboxCheckedIcon/>}\n          data-testid={`${permission.permission}Checkbox`}\n        />\n      }\n    />\n  )\n})\n"],"names":["CheckboxCheckedIcon","memo","jsx","jsxs","CheckboxDisabledCheckedIcon","EditRoleDialog","PopupDelegate","SHOW_EDIT_ROLE_DIALOG","props","EditRolePopup","open","setOpen","detail","permissions","role","onConfirm","isRoleUnique","useMemo","permissions2","role2","onConfirm2","isRoleUnique2","handleSubmit","control","errors","isDirty","useForm","permission","READ_PERMISSION","onConfirmCallback","useCallback","value","p","onClose","renderPermissions","onChange","onToggleCheckbox","checked","value2","Fragment","PermissionControl","existingValue","confirmButtonName","dialogTitle","DialogForm","DialogTitle","IconButton","CloseOutlinedIcon","DialogContent","Controller","field","TextField","_a","ErrorOutlinedIcon","InputLabel","DialogActions","Button","permissionKey","permissionName","disabled","handleToggle","_","checked2","FormControlLabel","Checkbox"],"mappings":"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"}