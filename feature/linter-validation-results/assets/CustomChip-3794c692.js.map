{"version":3,"file":"CustomChip-3794c692.js","sources":["../../packages/shared/src/components/CustomChip.tsx"],"sourcesContent":["/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ElementType, FC, ReactNode } from 'react'\nimport React, { memo, useMemo } from 'react'\nimport Chip from '@mui/material/Chip'\nimport type { ChipProps, ChipPropsColorOverrides } from '@mui/material/Chip/Chip'\nimport type { OverridableStringUnion } from '@mui/types'\nimport { CHIP_COLOR_OVERRIDES } from '../themes/palette'\n\nexport type CustomChipProps = {\n  value: string\n  label?: ReactNode | string\n  component?: ElementType\n  isExtraSmall?: boolean\n} & ChipProps\n\nexport const CustomChip: FC<CustomChipProps> = memo<CustomChipProps>(({\n  value,\n  label,\n  component = 'div',\n  isExtraSmall = false,\n  sx,\n  ...props\n}) => {\n  const isCustomColor = useMemo(() => Object.keys(CHIP_COLOR_OVERRIDES).includes(value), [value])\n\n  //to support many usages in UI\n  const sxOverrides = useMemo(() => (isExtraSmall\n      ? {\n        ...sx,\n        ...extraSmallStyles,\n      }\n      : sx\n  ), [isExtraSmall, sx])\n\n  return (\n    <Chip\n      {...props}\n      sx={sxOverrides}\n      size=\"small\"\n      label={label ?? value}\n      component={component}\n      color={isCustomColor ? value as ChipColor : 'default'}\n    />\n  )\n})\n\ntype ChipColor = OverridableStringUnion<'default' | 'primary' | 'secondary' | 'error' | 'info' | 'success' | 'warning', ChipPropsColorOverrides>\n\nconst extraSmallStyles = {\n  height: '14px',\n  px: '4px',\n  '> span': {\n    px: '4px',\n    fontSize: '11px',\n  },\n}\n"],"names":["CustomChip","memo","value","label","component","isExtraSmall","sx","props","isCustomColor","useMemo","CHIP_COLOR_OVERRIDES","sxOverrides","extraSmallStyles","jsx","Chip"],"mappings":"uKA8BO,MAAAA,EAAAC,EAAA,KAAA,CAAA,CAA+D,MAAAC,EACpE,MAAAC,EACA,UAAAC,EAAA,MACY,aAAAC,EAAA,GACG,GAAAC,EACf,GAAAC,CAEF,IAAA,CACE,MAAAC,EAAAC,EAAAA,QAAA,IAAA,OAAA,KAAAC,CAAA,EAAA,SAAAR,CAAA,EAAA,CAAAA,CAAA,CAAA,EAGAS,EAAAF,UAAA,IAAAJ,EAAA,CACM,GAAAC,EACG,GAAAM,CACA,EAAAN,EAAA,CAAAD,EAAAC,CAAA,CAAA,EAKT,OAAAO,EACEC,EAAC,CAAA,GAAAP,EACK,GAAAI,EACA,KAAA,QACC,MAAAR,GAAAD,EACW,UAAAE,EAChB,MAAAI,EAAAN,EAAA,SAC4C,CAAA,CAGlD,CAAA,EAIAU,EAAA,CAAyB,OAAA,OACf,GAAA,MACJ,SAAA,CACM,GAAA,MACJ,SAAA,MACM,CAEd;;;;;;;;"}