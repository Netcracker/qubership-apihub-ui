{"version":3,"file":"RolesTable.stories-f878b3f9.js","sources":["../../packages/shared/src/components/RolesTable.tsx"],"sourcesContent":["/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC } from 'react'\nimport * as React from 'react'\nimport { memo, useState } from 'react'\nimport {\n  Box,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport type { Permission } from '../types/permissions'\nimport type { Role } from '../types/roles'\nimport { DoneIcon } from '../icons/DoneIcon'\nimport { MinusIcon } from '../icons/MinusIcon'\nimport { EditIcon } from '../icons/EditIcon'\nimport { DISABLED_BUTTON_COLOR, ENABLED_BUTTON_COLOR } from '../entities/operation-groups'\nimport { DeleteIcon } from '../icons/DeleteIcon'\n\nconst HOVERABLE_COLUMN_OFFSET = 2\n\nexport type RolesTableProps = {\n  permissions: ReadonlyArray<Permission>\n  roles: ReadonlyArray<Role>\n  onDelete?: (role: Role) => void\n  onEdit?: (role: Role) => void\n}\n\nexport const RolesTable: FC<RolesTableProps> = memo<RolesTableProps>(({ permissions, roles, onDelete, onEdit }) => {\n  const [colHoverNth, setColHoverNth] = useState('')\n\n  const handleColumnHover = (column: number): void => setColHoverNth(`${column + HOVERABLE_COLUMN_OFFSET}`)\n  const cancelColumnHover = (): void => setColHoverNth('')\n\n  return (\n    <TableContainer\n      sx={{\n        height: 'unset', // overrides global '100%' height to show the horizontal scroll\n        '& .sticky': {\n          position: 'sticky',\n          left: 0,\n          backgroundColor: '#FFFFFF',\n          zIndex: 3, // makes the first column background higher than checkboxes while horizontal scrolling\n        },\n      }}\n    >\n      <Table\n        sx={{\n          '& .MuiTableRow-root:hover': {\n            backgroundColor: '#FFFFFF',\n          },\n          [`th:nth-of-type(${colHoverNth}), td:nth-of-type(${colHoverNth}), tbody tr:hover`]: {\n            backgroundColor: '#F8F9FA',\n          },\n          [`td:nth-of-type(${colHoverNth}) .hoverable2`]: {\n            visibility: 'visible',\n          },\n        }}\n        onMouseOut={cancelColumnHover}\n      >\n        <TableHead>\n          <TableRow>\n            <TableCell sx={{ width: '291px', px: '12px' }} className=\"sticky\">\n              <Typography noWrap variant=\"subtitle2\" sx={{ pl: 0 }}>\n                Permission\n              </Typography>\n            </TableCell>\n            {roles.map(({ key, role }, index) => (\n              <TableCell\n                key={key}\n                sx={{ width: '121px', textAlign: 'center', position: 'relative' }}\n                onMouseOver={() => handleColumnHover(index)}\n              >\n                <Typography noWrap variant=\"subtitle2\" sx={{ pl: 0 }}>\n                  {role}\n                </Typography>\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {permissions.map(({ permission, name }) => (\n            <TableRow key={permission}>\n              <TableCell key={permission} sx={{ width: '291px', px: '12px' }} className=\"sticky\" data-testid={`Cell-${permission}`}>\n                {name}\n              </TableCell>\n              {roles.map((role, index) => {\n                const { key, permissions } = role\n                return (\n                  <TableCell\n                    onMouseOver={() => handleColumnHover(index)}\n                    key={key}\n                    sx={{ textAlign: 'center' }}\n                    data-testid={`Cell-${role.role}`}\n                  >\n                    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n                      {permissions.includes(permission)\n                        ? <DoneIcon color=\"#00BB5B\"/>\n                        : <MinusIcon color=\"#626D82\"/>\n                      }\n                    </Box>\n                  </TableCell>\n                )\n              })}\n            </TableRow>\n          ))}\n          {onEdit && onDelete && <TableRow>\n            <TableCell sx={{ width: '291px', px: '12px' }} className=\"sticky\" data-testid=\"ActionsRow\"></TableCell>\n            {roles.map((role, index) => {\n              const { key, readOnly } = role\n              return (\n                <TableCell\n                  onMouseOver={() => handleColumnHover(index)}\n                  key={key}\n                  sx={{ textAlign: 'center' }}\n                  data-testid={`Cell-${role.role}`}\n                >\n                  <Box display=\"flex\" justifyContent=\"center\" gap=\"24px\" className=\"hoverable2\" visibility=\"hidden\">\n                    <Tooltip\n                      title={`${role.role} role cannot be edited`}\n                      disableHoverListener={!readOnly}\n                      disableFocusListener={!readOnly}\n                      placement=\"right\"\n                    >\n                      <Box>\n                        <IconButton\n                          sx={{ p: 0 }}\n                          disabled={readOnly}\n                          onClick={() => onEdit(role)}\n                          data-testid=\"EditButton\"\n                        >\n                          <EditIcon color={readOnly ? DISABLED_BUTTON_COLOR : ENABLED_BUTTON_COLOR}/>\n                        </IconButton>\n                      </Box>\n                    </Tooltip>\n                    <Tooltip\n                      title={`${role.role} role cannot be deleted`}\n                      disableHoverListener={!readOnly}\n                      disableFocusListener={!readOnly}\n                      placement=\"right\"\n                    >\n                      <Box>\n                        <IconButton\n                          sx={{ p: 0 }}\n                          disabled={readOnly}\n                          onClick={() => onDelete(role)}\n                          data-testid=\"EditButton\"\n                        >\n                          <DeleteIcon color={readOnly ? DISABLED_BUTTON_COLOR : ENABLED_BUTTON_COLOR}/>\n                        </IconButton>\n                      </Box>\n                    </Tooltip>\n                  </Box>\n                </TableCell>\n              )\n            })}\n          </TableRow>}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n})\n"],"names":["HOVERABLE_COLUMN_OFFSET","RolesTable","memo","permissions","roles","onDelete","onEdit","colHoverNth","setColHoverNth","useState","handleColumnHover","column","cancelColumnHover","jsx","TableContainer","jsxs","Table","TableHead","TableRow","TableCell","Typography","key","role","index","TableBody","permission","name","permissions2","Box","DoneIcon","MinusIcon","readOnly","Tooltip","IconButton","EditIcon","DISABLED_BUTTON_COLOR","ENABLED_BUTTON_COLOR","DeleteIcon"],"mappings":"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"}