{"version":3,"file":"ChangesTooltip.stories-83f16fc6.js","sources":["../../node_modules/@netcracker/qubership-apihub-json-crawl/dist/index.es.js","../../node_modules/@netcracker/qubership-apihub-api-unifier/node_modules/fast-equals/dist/fast-equals.esm.js","../../node_modules/object-hash/dist/object_hash.js","../../node_modules/@netcracker/qubership-apihub-api-unifier/dist/index.es.js","../../node_modules/@netcracker/qubership-apihub-api-diff/node_modules/fast-equals/dist/fast-equals.esm.js","../../node_modules/@netcracker/qubership-apihub-api-diff/dist/index.es.js","../../packages/shared/src/entities/change-severities.ts","../../packages/shared/src/components/ChangesTooltip.tsx"],"sourcesContent":["const getNodeRules = (rules = {}, key, path, value) => {\n  const rulesKey = `/${key.toString()}`;\n  const globalRules = typeof rules[\"/**\"] === \"function\" ? rules[\"/**\"]({ key, path, value }) : rules[\"/**\"];\n  const localRules = typeof rules[\"/*\"] === \"function\" ? rules[\"/*\"]({ key, path, value }) : rules[\"/*\"];\n  let node = {};\n  if (rulesKey in rules) {\n    node = rules[rulesKey];\n  } else if (!globalRules && !localRules) {\n    return;\n  }\n  let matchedRules = typeof node === \"function\" ? node({ key, path, value }) : node;\n  if (localRules) {\n    matchedRules = { ...localRules, ...matchedRules ?? {} };\n  }\n  if (globalRules) {\n    return { \"/**\": rules[\"/**\"], ...globalRules, ...matchedRules ?? {} };\n  }\n  return matchedRules;\n};\nconst mergeRules = (rules) => {\n  const _rules = {};\n  const keys = rules.reduce((set, r) => {\n    Object.keys(r).forEach((key) => set.add(key));\n    return set;\n  }, /* @__PURE__ */ new Set());\n  for (const key of keys.keys()) {\n    const arr = rules.filter((v) => key in v);\n    if (arr.length === 1) {\n      _rules[key] = arr[0][key];\n      continue;\n    }\n    if (key.charAt(0) === \"/\") {\n      _rules[key] = (path, state) => {\n        const _arr = arr.map((v) => typeof v[key] === \"function\" ? v[key](path, state) : v[key]);\n        return mergeRules(_arr);\n      };\n    } else {\n      throw new Error(`Cannot merge rules. Duplicate key: ${key}. Rules should not have same Rule key`);\n    }\n  }\n  return _rules;\n};\nconst isObject = (value) => typeof value === \"object\" && value !== null;\nconst isArray = (value) => Array.isArray(value);\nconst PURE_ARRAY_KEYS = new Set(Reflect.ownKeys([]));\nconst anyArrayKeys = (ar) => Reflect.ownKeys(ar).flatMap((value) => {\n  switch (typeof value) {\n    case \"string\":\n      if (PURE_ARRAY_KEYS.has(value)) {\n        return [];\n      }\n      const tryNumber = +value;\n      return isNaN(tryNumber) ? [value] : [tryNumber];\n    case \"symbol\":\n      return [value];\n    default:\n      return [];\n  }\n});\nconst crawl = async (data, hooks, params = {}) => {\n  var _a;\n  hooks = isArray(hooks) ? hooks : [hooks];\n  const _rules = isArray(params.rules) ? mergeRules(params.rules) : params.rules;\n  const nodes = [{ data, state: params.state, path: [], keys: [], keyIndex: -1, rules: _rules }];\n  while (nodes.length > 0) {\n    const node = nodes[nodes.length - 1];\n    if (node.keyIndex >= node.keys.length) {\n      while ((_a = node.hooks) == null ? void 0 : _a.length) {\n        node.hooks.pop()();\n      }\n      nodes.pop();\n      continue;\n    }\n    const key = node.keys[node.keyIndex++];\n    const [value, path, rules] = nodes.length > 1 ? [node.data[key], [...node.path, key], getNodeRules(node.rules, key, [...node.path, key], node.data[key])] : [node.data, node.path, _rules];\n    let context = { value, path, key, state: node.state, rules };\n    const afterHooksHooks = [];\n    const exitHooks = [];\n    for (const hook of hooks) {\n      if (!hook || typeof hook !== \"function\") {\n        continue;\n      }\n      const {\n        terminate,\n        done,\n        exitHook,\n        afterHooksHook,\n        ...rest\n      } = await hook(context) ?? {};\n      if (terminate) {\n        return;\n      }\n      exitHook && exitHooks.push(exitHook);\n      afterHooksHook && afterHooksHooks.push(afterHooksHook);\n      context = { ...context, ...rest };\n      if (done) {\n        context = null;\n        break;\n      }\n    }\n    while (afterHooksHooks.length) {\n      afterHooksHooks.pop()();\n    }\n    if (context && isObject(context.value)) {\n      const keys = isArray(context.value) ? anyArrayKeys(context.value) : Reflect.ownKeys(context.value);\n      nodes.push({\n        hooks: exitHooks,\n        state: context.state,\n        data: context.value,\n        path,\n        keys,\n        keyIndex: 0,\n        rules: context.rules\n      });\n    } else {\n      while (exitHooks.length) {\n        exitHooks.pop()();\n      }\n    }\n  }\n};\nconst syncCrawl = (data, hooks, params = {}) => {\n  var _a;\n  hooks = isArray(hooks) ? hooks : [hooks];\n  const _rules = isArray(params.rules) ? mergeRules(params.rules) : params.rules;\n  const nodes = [{ data, state: params.state, path: [], keys: [], keyIndex: -1, rules: _rules }];\n  while (nodes.length > 0) {\n    const node = nodes[nodes.length - 1];\n    if (node.keyIndex >= node.keys.length) {\n      while ((_a = node.hooks) == null ? void 0 : _a.length) {\n        node.hooks.pop()();\n      }\n      nodes.pop();\n      continue;\n    }\n    const key = node.keys[node.keyIndex++];\n    const [value, path, rules] = nodes.length > 1 ? [node.data[key], [...node.path, key], getNodeRules(node.rules, key, [...node.path, key], node.data[key])] : [node.data, node.path, _rules];\n    let context = { value, path, key, state: node.state, rules };\n    const afterHooksHooks = [];\n    const exitHooks = [];\n    for (const hook of hooks) {\n      if (!hook || typeof hook !== \"function\") {\n        continue;\n      }\n      const {\n        terminate,\n        done,\n        exitHook,\n        afterHooksHook,\n        ...rest\n      } = hook(context) ?? {};\n      if (terminate) {\n        return;\n      }\n      exitHook && exitHooks.push(exitHook);\n      afterHooksHook && afterHooksHooks.push(afterHooksHook);\n      context = { ...context, ...rest };\n      if (done) {\n        context = null;\n        break;\n      }\n    }\n    while (afterHooksHooks.length) {\n      afterHooksHooks.pop()();\n    }\n    if (context && isObject(context.value)) {\n      const keys = isArray(context.value) ? anyArrayKeys(context.value) : Reflect.ownKeys(context.value);\n      nodes.push({\n        hooks: exitHooks,\n        state: context.state,\n        data: context.value,\n        path,\n        keys,\n        keyIndex: 0,\n        rules: context.rules\n      });\n    } else {\n      while (exitHooks.length) {\n        exitHooks.pop()();\n      }\n    }\n  }\n};\nconst JSON_ROOT_KEY = \"#\";\nconst createCloneHook = () => {\n  const cloneHook = ({ value, path, key, state }) => {\n    key = path.length ? key : JSON_ROOT_KEY;\n    state.node[key] = isObject(value) ? Array.isArray(value) ? [] : {} : value;\n    return { value, state: { ...state, node: state.node[key] } };\n  };\n  return cloneHook;\n};\nconst clone = async (data, hooks = [], params = {}) => {\n  hooks = Array.isArray(hooks) ? hooks : [hooks];\n  const root = {};\n  const _params = {\n    state: { ...params.state ?? {}, root, node: root },\n    ...params.rules ? { rules: params.rules } : {}\n  };\n  await crawl(data, [...hooks, createCloneHook()], _params);\n  return root[JSON_ROOT_KEY];\n};\nconst syncClone = (data, hooks = [], params = {}) => {\n  hooks = Array.isArray(hooks) ? hooks : [hooks];\n  const root = { [JSON_ROOT_KEY]: void 0 };\n  const _params = {\n    state: { ...params.state ?? {}, root, node: root },\n    ...params.rules ? { rules: params.rules } : {}\n  };\n  syncCrawl(data, [...hooks, createCloneHook()], _params);\n  return root[JSON_ROOT_KEY];\n};\nconst equal = (val1, val2) => {\n  if (val1 === val2) {\n    return true;\n  }\n  let result = true;\n  const equalHook = ({ value, key, state }) => {\n    const _value = key === void 0 ? state.value : state.value[key];\n    const _result = { state: { value: _value } };\n    if (value === _value) {\n      return _result;\n    }\n    result = false;\n    if (typeof value !== typeof _value) {\n      return { done: true };\n    }\n    if (isArray(value) && value.length !== _value.length) {\n      return { terminate: true };\n    } else if (typeof value === \"object\" && value !== null) {\n      const keys1 = Object.keys(value);\n      const keys2 = Object.keys(_value);\n      if (keys1.length !== keys2.length || !keys1.every((key2) => keys2.includes(key2))) {\n        return { terminate: true };\n      }\n    } else if (value !== _value) {\n      return { terminate: true };\n    }\n    result = true;\n    return _result;\n  };\n  syncCrawl(val1, equalHook, { state: { value: val2 } });\n  return result;\n};\nconst transform = async (data, hooks = [], params = {}) => {\n  hooks = isArray(hooks) ? hooks : [hooks];\n  const root = { \"#\": data };\n  const transformHook = async ({ value, path, key, state }) => {\n    key = path.length ? key : JSON_ROOT_KEY;\n    if (value === void 0) {\n      if (isArray(state.node) && typeof key === \"number\") {\n        state.node.splice(key, 1);\n      } else if (isObject(state.node) && key in state.node) {\n        delete state.node[key];\n      }\n    } else if (isObject(state.node)) {\n      state.node[key] = value;\n    }\n    return { value, state };\n  };\n  const _params = {\n    state: { ...params.state ?? {}, root, node: root },\n    ...params.rules ? { rules: params.rules } : {}\n  };\n  await crawl(data, [...hooks, transformHook], _params);\n  return root[JSON_ROOT_KEY];\n};\nexport {\n  JSON_ROOT_KEY,\n  anyArrayKeys,\n  clone,\n  crawl,\n  equal,\n  getNodeRules,\n  isArray,\n  isObject,\n  mergeRules,\n  syncClone,\n  syncCrawl,\n  transform\n};\n//# sourceMappingURL=index.es.js.map\n","/**\r\n * Default equality comparator pass-through, used as the standard `isEqual` creator for\r\n * use inside the built comparator.\r\n */\r\nfunction createDefaultIsNestedEqual(comparator) {\r\n    return function isEqual(a, b, _indexOrKeyA, _indexOrKeyB, _parentA, _parentB, meta) {\r\n        return comparator(a, b, meta);\r\n    };\r\n}\r\n/**\r\n * Wrap the provided `areItemsEqual` method to manage the circular cache, allowing\r\n * for circular references to be safely included in the comparison without creating\r\n * stack overflows.\r\n */\r\nfunction createIsCircular(areItemsEqual) {\r\n    return function isCircular(a, b, isEqual, cache) {\r\n        if (!a || !b || typeof a !== 'object' || typeof b !== 'object') {\r\n            return areItemsEqual(a, b, isEqual, cache);\r\n        }\r\n        var cachedA = cache.get(a);\r\n        var cachedB = cache.get(b);\r\n        if (cachedA && cachedB) {\r\n            return cachedA === b && cachedB === a;\r\n        }\r\n        cache.set(a, b);\r\n        cache.set(b, a);\r\n        var result = areItemsEqual(a, b, isEqual, cache);\r\n        cache.delete(a);\r\n        cache.delete(b);\r\n        return result;\r\n    };\r\n}\r\n/**\r\n * Targeted shallow merge of two objects.\r\n *\r\n * @NOTE\r\n * This exists as a tinier compiled version of the `__assign` helper that\r\n * `tsc` injects in case of `Object.assign` not being present.\r\n */\r\nfunction merge(a, b) {\r\n    var merged = {};\r\n    for (var key in a) {\r\n        merged[key] = a[key];\r\n    }\r\n    for (var key in b) {\r\n        merged[key] = b[key];\r\n    }\r\n    return merged;\r\n}\r\n/**\r\n * Whether the value is a plain object.\r\n *\r\n * @NOTE\r\n * This is a same-realm compariosn only.\r\n */\r\nfunction isPlainObject(value) {\r\n    return value.constructor === Object || value.constructor == null;\r\n}\r\n/**\r\n * When the value is `Promise`-like, aka \"then-able\".\r\n */\r\nfunction isPromiseLike(value) {\r\n    return typeof value.then === 'function';\r\n}\r\n/**\r\n * Whether the values passed are strictly equal or both NaN.\r\n */\r\nfunction sameValueZeroEqual(a, b) {\r\n    return a === b || (a !== a && b !== b);\r\n}\n\nvar ARGUMENTS_TAG = '[object Arguments]';\r\nvar BOOLEAN_TAG = '[object Boolean]';\r\nvar DATE_TAG = '[object Date]';\r\nvar REG_EXP_TAG = '[object RegExp]';\r\nvar MAP_TAG = '[object Map]';\r\nvar NUMBER_TAG = '[object Number]';\r\nvar OBJECT_TAG = '[object Object]';\r\nvar SET_TAG = '[object Set]';\r\nvar STRING_TAG = '[object String]';\r\nvar toString = Object.prototype.toString;\r\nfunction createComparator(_a) {\r\n    var areArraysEqual = _a.areArraysEqual, areDatesEqual = _a.areDatesEqual, areMapsEqual = _a.areMapsEqual, areObjectsEqual = _a.areObjectsEqual, areRegExpsEqual = _a.areRegExpsEqual, areSetsEqual = _a.areSetsEqual, createIsNestedEqual = _a.createIsNestedEqual;\r\n    var isEqual = createIsNestedEqual(comparator);\r\n    /**\r\n     * compare the value of the two objects and return true if they are equivalent in values\r\n     */\r\n    function comparator(a, b, meta) {\r\n        // If the items are strictly equal, no need to do a value comparison.\r\n        if (a === b) {\r\n            return true;\r\n        }\r\n        // If the items are not non-nullish objects, then the only possibility\r\n        // of them being equal but not strictly is if they are both `NaN`. Since\r\n        // `NaN` is uniquely not equal to itself, we can use self-comparison of\r\n        // both objects, which is faster than `isNaN()`.\r\n        if (!a || !b || typeof a !== 'object' || typeof b !== 'object') {\r\n            return a !== a && b !== b;\r\n        }\r\n        // Checks are listed in order of commonality of use-case:\r\n        //   1. Common complex object types (plain object, array)\r\n        //   2. Common data values (date, regexp)\r\n        //   3. Less-common complex object types (map, set)\r\n        //   4. Less-common data values (promise, primitive wrappers)\r\n        // Inherently this is both subjective and assumptive, however\r\n        // when reviewing comparable libraries in the wild this order\r\n        // appears to be generally consistent.\r\n        // `isPlainObject` only checks against the object's own realm. Cross-realm\r\n        // comparisons are rare, and will be handled in the ultimate fallback, so\r\n        // we can avoid the `toString.call()` cost unless necessary.\r\n        if (isPlainObject(a) && isPlainObject(b)) {\r\n            return areObjectsEqual(a, b, isEqual, meta);\r\n        }\r\n        // `isArray()` works on subclasses and is cross-realm, so we can again avoid\r\n        // the `toString.call()` cost unless necessary by just checking if either\r\n        // and then both are arrays.\r\n        var aArray = Array.isArray(a);\r\n        var bArray = Array.isArray(b);\r\n        if (aArray || bArray) {\r\n            return aArray === bArray && areArraysEqual(a, b, isEqual, meta);\r\n        }\r\n        // Since this is a custom object, use the classic `toString.call()` to get its\r\n        // type. This is reasonably performant in modern environments like v8 and\r\n        // SpiderMonkey, and allows for cross-realm comparison when other checks like\r\n        // `instanceof` do not.\r\n        var aTag = toString.call(a);\r\n        if (aTag !== toString.call(b)) {\r\n            return false;\r\n        }\r\n        if (aTag === DATE_TAG) {\r\n            // `getTime()` showed better results compared to alternatives like `valueOf()`\r\n            // or the unary `+` operator.\r\n            return areDatesEqual(a, b, isEqual, meta);\r\n        }\r\n        if (aTag === REG_EXP_TAG) {\r\n            return areRegExpsEqual(a, b, isEqual, meta);\r\n        }\r\n        if (aTag === MAP_TAG) {\r\n            return areMapsEqual(a, b, isEqual, meta);\r\n        }\r\n        if (aTag === SET_TAG) {\r\n            return areSetsEqual(a, b, isEqual, meta);\r\n        }\r\n        // If a simple object tag, then we can prioritize a simple object comparison because\r\n        // it is likely a custom class. If an arguments tag, it should be treated as a standard\r\n        // object.\r\n        if (aTag === OBJECT_TAG || aTag === ARGUMENTS_TAG) {\r\n            // The exception for value comparison is `Promise`-like contracts. These should be\r\n            // treated the same as standard `Promise` objects, which means strict equality.\r\n            return isPromiseLike(a) || isPromiseLike(b)\r\n                ? false\r\n                : areObjectsEqual(a, b, isEqual, meta);\r\n        }\r\n        // As the penultimate fallback, check if the values passed are primitive wrappers. This\r\n        // is very rare in modern JS, which is why it is deprioritized compared to all other object\r\n        // types.\r\n        if (aTag === BOOLEAN_TAG || aTag === NUMBER_TAG || aTag === STRING_TAG) {\r\n            return sameValueZeroEqual(a.valueOf(), b.valueOf());\r\n        }\r\n        // If not matching any tags that require a specific type of comparison, then we hard-code false because\r\n        // the only thing remaining is strict equality, which has already been compared. This is for a few reasons:\r\n        //   - Certain types that cannot be introspected (e.g., `WeakMap`). For these types, this is the only\r\n        //     comparison that can be made.\r\n        //   - For types that can be introspected, but rarely have requirements to be compared\r\n        //     (`ArrayBuffer`, `DataView`, etc.), the cost is avoided to prioritize the common\r\n        //     use-cases (may be included in a future release, if requested enough).\r\n        //   - For types that can be introspected but do not have an objective definition of what\r\n        //     equality is (`Error`, etc.), the subjective decision is to be conservative and strictly compare.\r\n        // In all cases, these decisions should be reevaluated based on changes to the language and\r\n        // common development practices.\r\n        return false;\r\n    }\r\n    return comparator;\r\n}\n\n/**\r\n * Whether the arrays are equal in value.\r\n */\r\nfunction areArraysEqual(a, b, isEqual, meta) {\r\n    var index = a.length;\r\n    if (b.length !== index) {\r\n        return false;\r\n    }\r\n    // Decrementing `while` showed faster results than either incrementing or\r\n    // decrementing `for` loop and than an incrementing `while` loop. Declarative\r\n    // methods like `some` / `every` were not used to avoid incurring the garbage\r\n    // cost of anonymous callbacks.\r\n    while (index-- > 0) {\r\n        if (!isEqual(a[index], b[index], index, index, a, b, meta)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Whether the arrays are equal in value, including circular references.\r\n */\r\nvar areArraysEqualCircular = createIsCircular(areArraysEqual);\n\n/**\r\n * Whether the dates passed are equal in value.\r\n *\r\n * @NOTE\r\n * This is a standalone function instead of done inline in the comparator\r\n * to allow for overrides.\r\n */\r\nfunction areDatesEqual(a, b) {\r\n    return sameValueZeroEqual(a.valueOf(), b.valueOf());\r\n}\n\n/**\r\n * Whether the `Map`s are equal in value.\r\n */\r\nfunction areMapsEqual(a, b, isEqual, meta) {\r\n    var isValueEqual = a.size === b.size;\r\n    if (!isValueEqual) {\r\n        return false;\r\n    }\r\n    if (!a.size) {\r\n        return true;\r\n    }\r\n    // The use of `forEach()` is to avoid the transpilation cost of `for...of` comparisons, and\r\n    // the inability to control the performance of the resulting code. It also avoids excessive\r\n    // iteration compared to doing comparisons of `keys()` and `values()`. As a result, though,\r\n    // we cannot short-circuit the iterations; bookkeeping must be done to short-circuit the\r\n    // equality checks themselves.\r\n    var matchedIndices = {};\r\n    var indexA = 0;\r\n    a.forEach(function (aValue, aKey) {\r\n        if (!isValueEqual) {\r\n            return;\r\n        }\r\n        var hasMatch = false;\r\n        var matchIndexB = 0;\r\n        b.forEach(function (bValue, bKey) {\r\n            if (!hasMatch &&\r\n                !matchedIndices[matchIndexB] &&\r\n                (hasMatch =\r\n                    isEqual(aKey, bKey, indexA, matchIndexB, a, b, meta) &&\r\n                        isEqual(aValue, bValue, aKey, bKey, a, b, meta))) {\r\n                matchedIndices[matchIndexB] = true;\r\n            }\r\n            matchIndexB++;\r\n        });\r\n        indexA++;\r\n        isValueEqual = hasMatch;\r\n    });\r\n    return isValueEqual;\r\n}\r\n/**\r\n * Whether the `Map`s are equal in value, including circular references.\r\n */\r\nvar areMapsEqualCircular = createIsCircular(areMapsEqual);\n\nvar OWNER = '_owner';\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n/**\r\n * Whether the objects are equal in value.\r\n */\r\nfunction areObjectsEqual(a, b, isEqual, meta) {\r\n    var keysA = Object.keys(a);\r\n    var index = keysA.length;\r\n    if (Object.keys(b).length !== index) {\r\n        return false;\r\n    }\r\n    var key;\r\n    // Decrementing `while` showed faster results than either incrementing or\r\n    // decrementing `for` loop and than an incrementing `while` loop. Declarative\r\n    // methods like `some` / `every` were not used to avoid incurring the garbage\r\n    // cost of anonymous callbacks.\r\n    while (index-- > 0) {\r\n        key = keysA[index];\r\n        if (key === OWNER) {\r\n            var reactElementA = !!a.$$typeof;\r\n            var reactElementB = !!b.$$typeof;\r\n            if ((reactElementA || reactElementB) && reactElementA !== reactElementB) {\r\n                return false;\r\n            }\r\n        }\r\n        if (!hasOwnProperty.call(b, key) ||\r\n            !isEqual(a[key], b[key], key, key, a, b, meta)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Whether the objects are equal in value, including circular references.\r\n */\r\nvar areObjectsEqualCircular = createIsCircular(areObjectsEqual);\n\n/**\r\n * Whether the regexps passed are equal in value.\r\n *\r\n * @NOTE\r\n * This is a standalone function instead of done inline in the comparator\r\n * to allow for overrides. An example of this would be supporting a\r\n * pre-ES2015 environment where the `flags` property is not available.\r\n */\r\nfunction areRegExpsEqual(a, b) {\r\n    return a.source === b.source && a.flags === b.flags;\r\n}\n\n/**\r\n * Whether the `Set`s are equal in value.\r\n */\r\nfunction areSetsEqual(a, b, isEqual, meta) {\r\n    var isValueEqual = a.size === b.size;\r\n    if (!isValueEqual) {\r\n        return false;\r\n    }\r\n    if (!a.size) {\r\n        return true;\r\n    }\r\n    // The use of `forEach()` is to avoid the transpilation cost of `for...of` comparisons, and\r\n    // the inability to control the performance of the resulting code. It also avoids excessive\r\n    // iteration compared to doing comparisons of `keys()` and `values()`. As a result, though,\r\n    // we cannot short-circuit the iterations; bookkeeping must be done to short-circuit the\r\n    // equality checks themselves.\r\n    var matchedIndices = {};\r\n    a.forEach(function (aValue, aKey) {\r\n        if (!isValueEqual) {\r\n            return;\r\n        }\r\n        var hasMatch = false;\r\n        var matchIndex = 0;\r\n        b.forEach(function (bValue, bKey) {\r\n            if (!hasMatch &&\r\n                !matchedIndices[matchIndex] &&\r\n                (hasMatch = isEqual(aValue, bValue, aKey, bKey, a, b, meta))) {\r\n                matchedIndices[matchIndex] = true;\r\n            }\r\n            matchIndex++;\r\n        });\r\n        isValueEqual = hasMatch;\r\n    });\r\n    return isValueEqual;\r\n}\r\n/**\r\n * Whether the `Set`s are equal in value, including circular references.\r\n */\r\nvar areSetsEqualCircular = createIsCircular(areSetsEqual);\n\nvar DEFAULT_CONFIG = Object.freeze({\r\n    areArraysEqual: areArraysEqual,\r\n    areDatesEqual: areDatesEqual,\r\n    areMapsEqual: areMapsEqual,\r\n    areObjectsEqual: areObjectsEqual,\r\n    areRegExpsEqual: areRegExpsEqual,\r\n    areSetsEqual: areSetsEqual,\r\n    createIsNestedEqual: createDefaultIsNestedEqual,\r\n});\r\nvar DEFAULT_CIRCULAR_CONFIG = Object.freeze({\r\n    areArraysEqual: areArraysEqualCircular,\r\n    areDatesEqual: areDatesEqual,\r\n    areMapsEqual: areMapsEqualCircular,\r\n    areObjectsEqual: areObjectsEqualCircular,\r\n    areRegExpsEqual: areRegExpsEqual,\r\n    areSetsEqual: areSetsEqualCircular,\r\n    createIsNestedEqual: createDefaultIsNestedEqual,\r\n});\r\nvar isDeepEqual = createComparator(DEFAULT_CONFIG);\r\n/**\r\n * Whether the items passed are deeply-equal in value.\r\n */\r\nfunction deepEqual(a, b) {\r\n    return isDeepEqual(a, b, undefined);\r\n}\r\nvar isShallowEqual = createComparator(merge(DEFAULT_CONFIG, { createIsNestedEqual: function () { return sameValueZeroEqual; } }));\r\n/**\r\n * Whether the items passed are shallowly-equal in value.\r\n */\r\nfunction shallowEqual(a, b) {\r\n    return isShallowEqual(a, b, undefined);\r\n}\r\nvar isCircularDeepEqual = createComparator(DEFAULT_CIRCULAR_CONFIG);\r\n/**\r\n * Whether the items passed are deeply-equal in value, including circular references.\r\n */\r\nfunction circularDeepEqual(a, b) {\r\n    return isCircularDeepEqual(a, b, new WeakMap());\r\n}\r\nvar isCircularShallowEqual = createComparator(merge(DEFAULT_CIRCULAR_CONFIG, {\r\n    createIsNestedEqual: function () { return sameValueZeroEqual; },\r\n}));\r\n/**\r\n * Whether the items passed are shallowly-equal in value, including circular references.\r\n */\r\nfunction circularShallowEqual(a, b) {\r\n    return isCircularShallowEqual(a, b, new WeakMap());\r\n}\r\n/**\r\n * Create a custom equality comparison method.\r\n *\r\n * This can be done to create very targeted comparisons in extreme hot-path scenarios\r\n * where the standard methods are not performant enough, but can also be used to provide\r\n * support for legacy environments that do not support expected features like\r\n * `RegExp.prototype.flags` out of the box.\r\n */\r\nfunction createCustomEqual(getComparatorOptions) {\r\n    return createComparator(merge(DEFAULT_CONFIG, getComparatorOptions(DEFAULT_CONFIG)));\r\n}\r\n/**\r\n * Create a custom equality comparison method that handles circular references. This is very\r\n * similar to `createCustomEqual`, with the only difference being that `meta` expects to be\r\n * populated with a `WeakMap`-like contract.\r\n *\r\n * This can be done to create very targeted comparisons in extreme hot-path scenarios\r\n * where the standard methods are not performant enough, but can also be used to provide\r\n * support for legacy environments that do not support expected features like\r\n * `WeakMap` out of the box.\r\n */\r\nfunction createCustomCircularEqual(getComparatorOptions) {\r\n    var comparator = createComparator(merge(DEFAULT_CIRCULAR_CONFIG, getComparatorOptions(DEFAULT_CIRCULAR_CONFIG)));\r\n    return (function (a, b, meta) {\r\n        if (meta === void 0) { meta = new WeakMap(); }\r\n        return comparator(a, b, meta);\r\n    });\r\n}\n\nexport { circularDeepEqual, circularShallowEqual, createCustomCircularEqual, createCustomEqual, deepEqual, sameValueZeroEqual, shallowEqual };\n//# sourceMappingURL=fast-equals.esm.js.map\n","!function(e){var t;\"object\"==typeof exports?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(\"undefined\"!=typeof window?t=window:\"undefined\"!=typeof global?t=global:\"undefined\"!=typeof self&&(t=self),t.objectHash=e())}(function(){return function r(o,i,u){function s(n,e){if(!i[n]){if(!o[n]){var t=\"function\"==typeof require&&require;if(!e&&t)return t(n,!0);if(a)return a(n,!0);throw new Error(\"Cannot find module '\"+n+\"'\")}e=i[n]={exports:{}};o[n][0].call(e.exports,function(e){var t=o[n][1][e];return s(t||e)},e,e.exports,r,o,i,u)}return i[n].exports}for(var a=\"function\"==typeof require&&require,e=0;e<u.length;e++)s(u[e]);return s}({1:[function(w,b,m){!function(e,n,s,c,d,h,p,g,y){\"use strict\";var r=w(\"crypto\");function t(e,t){t=u(e,t);var n;return void 0===(n=\"passthrough\"!==t.algorithm?r.createHash(t.algorithm):new l).write&&(n.write=n.update,n.end=n.update),f(t,n).dispatch(e),n.update||n.end(\"\"),n.digest?n.digest(\"buffer\"===t.encoding?void 0:t.encoding):(e=n.read(),\"buffer\"!==t.encoding?e.toString(t.encoding):e)}(m=b.exports=t).sha1=function(e){return t(e)},m.keys=function(e){return t(e,{excludeValues:!0,algorithm:\"sha1\",encoding:\"hex\"})},m.MD5=function(e){return t(e,{algorithm:\"md5\",encoding:\"hex\"})},m.keysMD5=function(e){return t(e,{algorithm:\"md5\",encoding:\"hex\",excludeValues:!0})};var o=r.getHashes?r.getHashes().slice():[\"sha1\",\"md5\"],i=(o.push(\"passthrough\"),[\"buffer\",\"hex\",\"binary\",\"base64\"]);function u(e,t){var n={};if(n.algorithm=(t=t||{}).algorithm||\"sha1\",n.encoding=t.encoding||\"hex\",n.excludeValues=!!t.excludeValues,n.algorithm=n.algorithm.toLowerCase(),n.encoding=n.encoding.toLowerCase(),n.ignoreUnknown=!0===t.ignoreUnknown,n.respectType=!1!==t.respectType,n.respectFunctionNames=!1!==t.respectFunctionNames,n.respectFunctionProperties=!1!==t.respectFunctionProperties,n.unorderedArrays=!0===t.unorderedArrays,n.unorderedSets=!1!==t.unorderedSets,n.unorderedObjects=!1!==t.unorderedObjects,n.replacer=t.replacer||void 0,n.excludeKeys=t.excludeKeys||void 0,void 0===e)throw new Error(\"Object argument required.\");for(var r=0;r<o.length;++r)o[r].toLowerCase()===n.algorithm.toLowerCase()&&(n.algorithm=o[r]);if(-1===o.indexOf(n.algorithm))throw new Error('Algorithm \"'+n.algorithm+'\"  not supported. supported values: '+o.join(\", \"));if(-1===i.indexOf(n.encoding)&&\"passthrough\"!==n.algorithm)throw new Error('Encoding \"'+n.encoding+'\"  not supported. supported values: '+i.join(\", \"));return n}function a(e){if(\"function\"==typeof e)return null!=/^function\\s+\\w*\\s*\\(\\s*\\)\\s*{\\s+\\[native code\\]\\s+}$/i.exec(Function.prototype.toString.call(e))}function f(o,t,i){i=i||[];function u(e){return t.update?t.update(e,\"utf8\"):t.write(e,\"utf8\")}return{dispatch:function(e){return this[\"_\"+(null===(e=o.replacer?o.replacer(e):e)?\"null\":typeof e)](e)},_object:function(t){var n,e=Object.prototype.toString.call(t),r=/\\[object (.*)\\]/i.exec(e);r=(r=r?r[1]:\"unknown:[\"+e+\"]\").toLowerCase();if(0<=(e=i.indexOf(t)))return this.dispatch(\"[CIRCULAR:\"+e+\"]\");if(i.push(t),void 0!==s&&s.isBuffer&&s.isBuffer(t))return u(\"buffer:\"),u(t);if(\"object\"===r||\"function\"===r||\"asyncfunction\"===r)return e=Object.keys(t),o.unorderedObjects&&(e=e.sort()),!1===o.respectType||a(t)||e.splice(0,0,\"prototype\",\"__proto__\",\"constructor\"),o.excludeKeys&&(e=e.filter(function(e){return!o.excludeKeys(e)})),u(\"object:\"+e.length+\":\"),n=this,e.forEach(function(e){n.dispatch(e),u(\":\"),o.excludeValues||n.dispatch(t[e]),u(\",\")});if(!this[\"_\"+r]){if(o.ignoreUnknown)return u(\"[\"+r+\"]\");throw new Error('Unknown object type \"'+r+'\"')}this[\"_\"+r](t)},_array:function(e,t){t=void 0!==t?t:!1!==o.unorderedArrays;var n=this;if(u(\"array:\"+e.length+\":\"),!t||e.length<=1)return e.forEach(function(e){return n.dispatch(e)});var r=[],t=e.map(function(e){var t=new l,n=i.slice();return f(o,t,n).dispatch(e),r=r.concat(n.slice(i.length)),t.read().toString()});return i=i.concat(r),t.sort(),this._array(t,!1)},_date:function(e){return u(\"date:\"+e.toJSON())},_symbol:function(e){return u(\"symbol:\"+e.toString())},_error:function(e){return u(\"error:\"+e.toString())},_boolean:function(e){return u(\"bool:\"+e.toString())},_string:function(e){u(\"string:\"+e.length+\":\"),u(e.toString())},_function:function(e){u(\"fn:\"),a(e)?this.dispatch(\"[native]\"):this.dispatch(e.toString()),!1!==o.respectFunctionNames&&this.dispatch(\"function-name:\"+String(e.name)),o.respectFunctionProperties&&this._object(e)},_number:function(e){return u(\"number:\"+e.toString())},_xml:function(e){return u(\"xml:\"+e.toString())},_null:function(){return u(\"Null\")},_undefined:function(){return u(\"Undefined\")},_regexp:function(e){return u(\"regex:\"+e.toString())},_uint8array:function(e){return u(\"uint8array:\"),this.dispatch(Array.prototype.slice.call(e))},_uint8clampedarray:function(e){return u(\"uint8clampedarray:\"),this.dispatch(Array.prototype.slice.call(e))},_int8array:function(e){return u(\"int8array:\"),this.dispatch(Array.prototype.slice.call(e))},_uint16array:function(e){return u(\"uint16array:\"),this.dispatch(Array.prototype.slice.call(e))},_int16array:function(e){return u(\"int16array:\"),this.dispatch(Array.prototype.slice.call(e))},_uint32array:function(e){return u(\"uint32array:\"),this.dispatch(Array.prototype.slice.call(e))},_int32array:function(e){return u(\"int32array:\"),this.dispatch(Array.prototype.slice.call(e))},_float32array:function(e){return u(\"float32array:\"),this.dispatch(Array.prototype.slice.call(e))},_float64array:function(e){return u(\"float64array:\"),this.dispatch(Array.prototype.slice.call(e))},_arraybuffer:function(e){return u(\"arraybuffer:\"),this.dispatch(new Uint8Array(e))},_url:function(e){return u(\"url:\"+e.toString())},_map:function(e){u(\"map:\");e=Array.from(e);return this._array(e,!1!==o.unorderedSets)},_set:function(e){u(\"set:\");e=Array.from(e);return this._array(e,!1!==o.unorderedSets)},_file:function(e){return u(\"file:\"),this.dispatch([e.name,e.size,e.type,e.lastModfied])},_blob:function(){if(o.ignoreUnknown)return u(\"[blob]\");throw Error('Hashing Blob objects is currently not supported\\n(see https://github.com/puleos/object-hash/issues/26)\\nUse \"options.replacer\" or \"options.ignoreUnknown\"\\n')},_domwindow:function(){return u(\"domwindow\")},_bigint:function(e){return u(\"bigint:\"+e.toString())},_process:function(){return u(\"process\")},_timer:function(){return u(\"timer\")},_pipe:function(){return u(\"pipe\")},_tcp:function(){return u(\"tcp\")},_udp:function(){return u(\"udp\")},_tty:function(){return u(\"tty\")},_statwatcher:function(){return u(\"statwatcher\")},_securecontext:function(){return u(\"securecontext\")},_connection:function(){return u(\"connection\")},_zlib:function(){return u(\"zlib\")},_context:function(){return u(\"context\")},_nodescript:function(){return u(\"nodescript\")},_httpparser:function(){return u(\"httpparser\")},_dataview:function(){return u(\"dataview\")},_signal:function(){return u(\"signal\")},_fsevent:function(){return u(\"fsevent\")},_tlswrap:function(){return u(\"tlswrap\")}}}function l(){return{buf:\"\",write:function(e){this.buf+=e},end:function(e){this.buf+=e},read:function(){return this.buf}}}m.writeToStream=function(e,t,n){return void 0===n&&(n=t,t={}),f(t=u(e,t),n).dispatch(e)}}.call(this,w(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},w(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/fake_9a5aa49d.js\",\"/\")},{buffer:3,crypto:5,lYpoI2:11}],2:[function(e,t,f){!function(e,t,n,r,o,i,u,s,a){!function(e){\"use strict\";var a=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,t=\"+\".charCodeAt(0),n=\"/\".charCodeAt(0),r=\"0\".charCodeAt(0),o=\"a\".charCodeAt(0),i=\"A\".charCodeAt(0),u=\"-\".charCodeAt(0),s=\"_\".charCodeAt(0);function f(e){e=e.charCodeAt(0);return e===t||e===u?62:e===n||e===s?63:e<r?-1:e<r+10?e-r+26+26:e<i+26?e-i:e<o+26?e-o+26:void 0}e.toByteArray=function(e){var t,n;if(0<e.length%4)throw new Error(\"Invalid string. Length must be a multiple of 4\");var r=e.length,r=\"=\"===e.charAt(r-2)?2:\"=\"===e.charAt(r-1)?1:0,o=new a(3*e.length/4-r),i=0<r?e.length-4:e.length,u=0;function s(e){o[u++]=e}for(t=0;t<i;t+=4,0)s((16711680&(n=f(e.charAt(t))<<18|f(e.charAt(t+1))<<12|f(e.charAt(t+2))<<6|f(e.charAt(t+3))))>>16),s((65280&n)>>8),s(255&n);return 2==r?s(255&(n=f(e.charAt(t))<<2|f(e.charAt(t+1))>>4)):1==r&&(s((n=f(e.charAt(t))<<10|f(e.charAt(t+1))<<4|f(e.charAt(t+2))>>2)>>8&255),s(255&n)),o},e.fromByteArray=function(e){var t,n,r,o,i=e.length%3,u=\"\";function s(e){return\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".charAt(e)}for(t=0,r=e.length-i;t<r;t+=3)n=(e[t]<<16)+(e[t+1]<<8)+e[t+2],u+=s((o=n)>>18&63)+s(o>>12&63)+s(o>>6&63)+s(63&o);switch(i){case 1:u=(u+=s((n=e[e.length-1])>>2))+s(n<<4&63)+\"==\";break;case 2:u=(u=(u+=s((n=(e[e.length-2]<<8)+e[e.length-1])>>10))+s(n>>4&63))+s(n<<2&63)+\"=\"}return u}}(void 0===f?this.base64js={}:f)}.call(this,e(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},e(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/base64-js/lib/b64.js\",\"/node_modules/gulp-browserify/node_modules/base64-js/lib\")},{buffer:3,lYpoI2:11}],3:[function(O,e,H){!function(e,n,f,r,h,p,g,y,w){var a=O(\"base64-js\"),i=O(\"ieee754\");function f(e,t,n){if(!(this instanceof f))return new f(e,t,n);var r,o,i,u,s=typeof e;if(\"base64\"===t&&\"string\"==s)for(e=(u=e).trim?u.trim():u.replace(/^\\s+|\\s+$/g,\"\");e.length%4!=0;)e+=\"=\";if(\"number\"==s)r=j(e);else if(\"string\"==s)r=f.byteLength(e,t);else{if(\"object\"!=s)throw new Error(\"First argument needs to be a number, array or string.\");r=j(e.length)}if(f._useTypedArrays?o=f._augment(new Uint8Array(r)):((o=this).length=r,o._isBuffer=!0),f._useTypedArrays&&\"number\"==typeof e.byteLength)o._set(e);else if(C(u=e)||f.isBuffer(u)||u&&\"object\"==typeof u&&\"number\"==typeof u.length)for(i=0;i<r;i++)f.isBuffer(e)?o[i]=e.readUInt8(i):o[i]=e[i];else if(\"string\"==s)o.write(e,0,t);else if(\"number\"==s&&!f._useTypedArrays&&!n)for(i=0;i<r;i++)o[i]=0;return o}function b(e,t,n,r){return f._charsWritten=c(function(e){for(var t=[],n=0;n<e.length;n++)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function m(e,t,n,r){return f._charsWritten=c(function(e){for(var t,n,r=[],o=0;o<e.length;o++)n=e.charCodeAt(o),t=n>>8,n=n%256,r.push(n),r.push(t);return r}(t),e,n,r)}function v(e,t,n){var r=\"\";n=Math.min(e.length,n);for(var o=t;o<n;o++)r+=String.fromCharCode(e[o]);return r}function o(e,t,n,r){r||(d(\"boolean\"==typeof n,\"missing or invalid endian\"),d(null!=t,\"missing offset\"),d(t+1<e.length,\"Trying to read beyond buffer length\"));var o,r=e.length;if(!(r<=t))return n?(o=e[t],t+1<r&&(o|=e[t+1]<<8)):(o=e[t]<<8,t+1<r&&(o|=e[t+1])),o}function u(e,t,n,r){r||(d(\"boolean\"==typeof n,\"missing or invalid endian\"),d(null!=t,\"missing offset\"),d(t+3<e.length,\"Trying to read beyond buffer length\"));var o,r=e.length;if(!(r<=t))return n?(t+2<r&&(o=e[t+2]<<16),t+1<r&&(o|=e[t+1]<<8),o|=e[t],t+3<r&&(o+=e[t+3]<<24>>>0)):(t+1<r&&(o=e[t+1]<<16),t+2<r&&(o|=e[t+2]<<8),t+3<r&&(o|=e[t+3]),o+=e[t]<<24>>>0),o}function _(e,t,n,r){if(r||(d(\"boolean\"==typeof n,\"missing or invalid endian\"),d(null!=t,\"missing offset\"),d(t+1<e.length,\"Trying to read beyond buffer length\")),!(e.length<=t))return r=o(e,t,n,!0),32768&r?-1*(65535-r+1):r}function E(e,t,n,r){if(r||(d(\"boolean\"==typeof n,\"missing or invalid endian\"),d(null!=t,\"missing offset\"),d(t+3<e.length,\"Trying to read beyond buffer length\")),!(e.length<=t))return r=u(e,t,n,!0),2147483648&r?-1*(4294967295-r+1):r}function I(e,t,n,r){return r||(d(\"boolean\"==typeof n,\"missing or invalid endian\"),d(t+3<e.length,\"Trying to read beyond buffer length\")),i.read(e,t,n,23,4)}function A(e,t,n,r){return r||(d(\"boolean\"==typeof n,\"missing or invalid endian\"),d(t+7<e.length,\"Trying to read beyond buffer length\")),i.read(e,t,n,52,8)}function s(e,t,n,r,o){o||(d(null!=t,\"missing value\"),d(\"boolean\"==typeof r,\"missing or invalid endian\"),d(null!=n,\"missing offset\"),d(n+1<e.length,\"trying to write beyond buffer length\"),Y(t,65535));o=e.length;if(!(o<=n))for(var i=0,u=Math.min(o-n,2);i<u;i++)e[n+i]=(t&255<<8*(r?i:1-i))>>>8*(r?i:1-i)}function l(e,t,n,r,o){o||(d(null!=t,\"missing value\"),d(\"boolean\"==typeof r,\"missing or invalid endian\"),d(null!=n,\"missing offset\"),d(n+3<e.length,\"trying to write beyond buffer length\"),Y(t,4294967295));o=e.length;if(!(o<=n))for(var i=0,u=Math.min(o-n,4);i<u;i++)e[n+i]=t>>>8*(r?i:3-i)&255}function B(e,t,n,r,o){o||(d(null!=t,\"missing value\"),d(\"boolean\"==typeof r,\"missing or invalid endian\"),d(null!=n,\"missing offset\"),d(n+1<e.length,\"Trying to write beyond buffer length\"),F(t,32767,-32768)),e.length<=n||s(e,0<=t?t:65535+t+1,n,r,o)}function L(e,t,n,r,o){o||(d(null!=t,\"missing value\"),d(\"boolean\"==typeof r,\"missing or invalid endian\"),d(null!=n,\"missing offset\"),d(n+3<e.length,\"Trying to write beyond buffer length\"),F(t,2147483647,-2147483648)),e.length<=n||l(e,0<=t?t:4294967295+t+1,n,r,o)}function U(e,t,n,r,o){o||(d(null!=t,\"missing value\"),d(\"boolean\"==typeof r,\"missing or invalid endian\"),d(null!=n,\"missing offset\"),d(n+3<e.length,\"Trying to write beyond buffer length\"),D(t,34028234663852886e22,-34028234663852886e22)),e.length<=n||i.write(e,t,n,r,23,4)}function x(e,t,n,r,o){o||(d(null!=t,\"missing value\"),d(\"boolean\"==typeof r,\"missing or invalid endian\"),d(null!=n,\"missing offset\"),d(n+7<e.length,\"Trying to write beyond buffer length\"),D(t,17976931348623157e292,-17976931348623157e292)),e.length<=n||i.write(e,t,n,r,52,8)}H.Buffer=f,H.SlowBuffer=f,H.INSPECT_MAX_BYTES=50,f.poolSize=8192,f._useTypedArrays=function(){try{var e=new ArrayBuffer(0),t=new Uint8Array(e);return t.foo=function(){return 42},42===t.foo()&&\"function\"==typeof t.subarray}catch(e){return!1}}(),f.isEncoding=function(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"binary\":case\"base64\":case\"raw\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},f.isBuffer=function(e){return!(null==e||!e._isBuffer)},f.byteLength=function(e,t){var n;switch(e+=\"\",t||\"utf8\"){case\"hex\":n=e.length/2;break;case\"utf8\":case\"utf-8\":n=T(e).length;break;case\"ascii\":case\"binary\":case\"raw\":n=e.length;break;case\"base64\":n=M(e).length;break;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":n=2*e.length;break;default:throw new Error(\"Unknown encoding\")}return n},f.concat=function(e,t){if(d(C(e),\"Usage: Buffer.concat(list, [totalLength])\\nlist should be an Array.\"),0===e.length)return new f(0);if(1===e.length)return e[0];if(\"number\"!=typeof t)for(o=t=0;o<e.length;o++)t+=e[o].length;for(var n=new f(t),r=0,o=0;o<e.length;o++){var i=e[o];i.copy(n,r),r+=i.length}return n},f.prototype.write=function(e,t,n,r){isFinite(t)?isFinite(n)||(r=n,n=void 0):(a=r,r=t,t=n,n=a),t=Number(t)||0;var o,i,u,s,a=this.length-t;switch((!n||a<(n=Number(n)))&&(n=a),r=String(r||\"utf8\").toLowerCase()){case\"hex\":o=function(e,t,n,r){n=Number(n)||0;var o=e.length-n;(!r||o<(r=Number(r)))&&(r=o),d((o=t.length)%2==0,\"Invalid hex string\"),o/2<r&&(r=o/2);for(var i=0;i<r;i++){var u=parseInt(t.substr(2*i,2),16);d(!isNaN(u),\"Invalid hex string\"),e[n+i]=u}return f._charsWritten=2*i,i}(this,e,t,n);break;case\"utf8\":case\"utf-8\":i=this,u=t,s=n,o=f._charsWritten=c(T(e),i,u,s);break;case\"ascii\":case\"binary\":o=b(this,e,t,n);break;case\"base64\":i=this,u=t,s=n,o=f._charsWritten=c(M(e),i,u,s);break;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":o=m(this,e,t,n);break;default:throw new Error(\"Unknown encoding\")}return o},f.prototype.toString=function(e,t,n){var r,o,i,u,s=this;if(e=String(e||\"utf8\").toLowerCase(),t=Number(t)||0,(n=void 0!==n?Number(n):s.length)===t)return\"\";switch(e){case\"hex\":r=function(e,t,n){var r=e.length;(!t||t<0)&&(t=0);(!n||n<0||r<n)&&(n=r);for(var o=\"\",i=t;i<n;i++)o+=k(e[i]);return o}(s,t,n);break;case\"utf8\":case\"utf-8\":r=function(e,t,n){var r=\"\",o=\"\";n=Math.min(e.length,n);for(var i=t;i<n;i++)e[i]<=127?(r+=N(o)+String.fromCharCode(e[i]),o=\"\"):o+=\"%\"+e[i].toString(16);return r+N(o)}(s,t,n);break;case\"ascii\":case\"binary\":r=v(s,t,n);break;case\"base64\":o=s,u=n,r=0===(i=t)&&u===o.length?a.fromByteArray(o):a.fromByteArray(o.slice(i,u));break;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":r=function(e,t,n){for(var r=e.slice(t,n),o=\"\",i=0;i<r.length;i+=2)o+=String.fromCharCode(r[i]+256*r[i+1]);return o}(s,t,n);break;default:throw new Error(\"Unknown encoding\")}return r},f.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}},f.prototype.copy=function(e,t,n,r){if(t=t||0,(r=r||0===r?r:this.length)!==(n=n||0)&&0!==e.length&&0!==this.length){d(n<=r,\"sourceEnd < sourceStart\"),d(0<=t&&t<e.length,\"targetStart out of bounds\"),d(0<=n&&n<this.length,\"sourceStart out of bounds\"),d(0<=r&&r<=this.length,\"sourceEnd out of bounds\"),r>this.length&&(r=this.length);var o=(r=e.length-t<r-n?e.length-t+n:r)-n;if(o<100||!f._useTypedArrays)for(var i=0;i<o;i++)e[i+t]=this[i+n];else e._set(this.subarray(n,n+o),t)}},f.prototype.slice=function(e,t){var n=this.length;if(e=S(e,n,0),t=S(t,n,n),f._useTypedArrays)return f._augment(this.subarray(e,t));for(var r=t-e,o=new f(r,void 0,!0),i=0;i<r;i++)o[i]=this[i+e];return o},f.prototype.get=function(e){return console.log(\".get() is deprecated. Access using array indexes instead.\"),this.readUInt8(e)},f.prototype.set=function(e,t){return console.log(\".set() is deprecated. Access using array indexes instead.\"),this.writeUInt8(e,t)},f.prototype.readUInt8=function(e,t){if(t||(d(null!=e,\"missing offset\"),d(e<this.length,\"Trying to read beyond buffer length\")),!(e>=this.length))return this[e]},f.prototype.readUInt16LE=function(e,t){return o(this,e,!0,t)},f.prototype.readUInt16BE=function(e,t){return o(this,e,!1,t)},f.prototype.readUInt32LE=function(e,t){return u(this,e,!0,t)},f.prototype.readUInt32BE=function(e,t){return u(this,e,!1,t)},f.prototype.readInt8=function(e,t){if(t||(d(null!=e,\"missing offset\"),d(e<this.length,\"Trying to read beyond buffer length\")),!(e>=this.length))return 128&this[e]?-1*(255-this[e]+1):this[e]},f.prototype.readInt16LE=function(e,t){return _(this,e,!0,t)},f.prototype.readInt16BE=function(e,t){return _(this,e,!1,t)},f.prototype.readInt32LE=function(e,t){return E(this,e,!0,t)},f.prototype.readInt32BE=function(e,t){return E(this,e,!1,t)},f.prototype.readFloatLE=function(e,t){return I(this,e,!0,t)},f.prototype.readFloatBE=function(e,t){return I(this,e,!1,t)},f.prototype.readDoubleLE=function(e,t){return A(this,e,!0,t)},f.prototype.readDoubleBE=function(e,t){return A(this,e,!1,t)},f.prototype.writeUInt8=function(e,t,n){n||(d(null!=e,\"missing value\"),d(null!=t,\"missing offset\"),d(t<this.length,\"trying to write beyond buffer length\"),Y(e,255)),t>=this.length||(this[t]=e)},f.prototype.writeUInt16LE=function(e,t,n){s(this,e,t,!0,n)},f.prototype.writeUInt16BE=function(e,t,n){s(this,e,t,!1,n)},f.prototype.writeUInt32LE=function(e,t,n){l(this,e,t,!0,n)},f.prototype.writeUInt32BE=function(e,t,n){l(this,e,t,!1,n)},f.prototype.writeInt8=function(e,t,n){n||(d(null!=e,\"missing value\"),d(null!=t,\"missing offset\"),d(t<this.length,\"Trying to write beyond buffer length\"),F(e,127,-128)),t>=this.length||(0<=e?this.writeUInt8(e,t,n):this.writeUInt8(255+e+1,t,n))},f.prototype.writeInt16LE=function(e,t,n){B(this,e,t,!0,n)},f.prototype.writeInt16BE=function(e,t,n){B(this,e,t,!1,n)},f.prototype.writeInt32LE=function(e,t,n){L(this,e,t,!0,n)},f.prototype.writeInt32BE=function(e,t,n){L(this,e,t,!1,n)},f.prototype.writeFloatLE=function(e,t,n){U(this,e,t,!0,n)},f.prototype.writeFloatBE=function(e,t,n){U(this,e,t,!1,n)},f.prototype.writeDoubleLE=function(e,t,n){x(this,e,t,!0,n)},f.prototype.writeDoubleBE=function(e,t,n){x(this,e,t,!1,n)},f.prototype.fill=function(e,t,n){if(t=t||0,n=n||this.length,d(\"number\"==typeof(e=\"string\"==typeof(e=e||0)?e.charCodeAt(0):e)&&!isNaN(e),\"value is not a number\"),d(t<=n,\"end < start\"),n!==t&&0!==this.length){d(0<=t&&t<this.length,\"start out of bounds\"),d(0<=n&&n<=this.length,\"end out of bounds\");for(var r=t;r<n;r++)this[r]=e}},f.prototype.inspect=function(){for(var e=[],t=this.length,n=0;n<t;n++)if(e[n]=k(this[n]),n===H.INSPECT_MAX_BYTES){e[n+1]=\"...\";break}return\"<Buffer \"+e.join(\" \")+\">\"},f.prototype.toArrayBuffer=function(){if(\"undefined\"==typeof Uint8Array)throw new Error(\"Buffer.toArrayBuffer not supported in this browser\");if(f._useTypedArrays)return new f(this).buffer;for(var e=new Uint8Array(this.length),t=0,n=e.length;t<n;t+=1)e[t]=this[t];return e.buffer};var t=f.prototype;function S(e,t,n){return\"number\"!=typeof e?n:t<=(e=~~e)?t:0<=e||0<=(e+=t)?e:0}function j(e){return(e=~~Math.ceil(+e))<0?0:e}function C(e){return(Array.isArray||function(e){return\"[object Array]\"===Object.prototype.toString.call(e)})(e)}function k(e){return e<16?\"0\"+e.toString(16):e.toString(16)}function T(e){for(var t=[],n=0;n<e.length;n++){var r=e.charCodeAt(n);if(r<=127)t.push(e.charCodeAt(n));else for(var o=n,i=(55296<=r&&r<=57343&&n++,encodeURIComponent(e.slice(o,n+1)).substr(1).split(\"%\")),u=0;u<i.length;u++)t.push(parseInt(i[u],16))}return t}function M(e){return a.toByteArray(e)}function c(e,t,n,r){for(var o=0;o<r&&!(o+n>=t.length||o>=e.length);o++)t[o+n]=e[o];return o}function N(e){try{return decodeURIComponent(e)}catch(e){return String.fromCharCode(65533)}}function Y(e,t){d(\"number\"==typeof e,\"cannot write a non-number as a number\"),d(0<=e,\"specified a negative value for writing an unsigned value\"),d(e<=t,\"value is larger than maximum value for type\"),d(Math.floor(e)===e,\"value has a fractional component\")}function F(e,t,n){d(\"number\"==typeof e,\"cannot write a non-number as a number\"),d(e<=t,\"value larger than maximum allowed value\"),d(n<=e,\"value smaller than minimum allowed value\"),d(Math.floor(e)===e,\"value has a fractional component\")}function D(e,t,n){d(\"number\"==typeof e,\"cannot write a non-number as a number\"),d(e<=t,\"value larger than maximum allowed value\"),d(n<=e,\"value smaller than minimum allowed value\")}function d(e,t){if(!e)throw new Error(t||\"Failed assertion\")}f._augment=function(e){return e._isBuffer=!0,e._get=e.get,e._set=e.set,e.get=t.get,e.set=t.set,e.write=t.write,e.toString=t.toString,e.toLocaleString=t.toString,e.toJSON=t.toJSON,e.copy=t.copy,e.slice=t.slice,e.readUInt8=t.readUInt8,e.readUInt16LE=t.readUInt16LE,e.readUInt16BE=t.readUInt16BE,e.readUInt32LE=t.readUInt32LE,e.readUInt32BE=t.readUInt32BE,e.readInt8=t.readInt8,e.readInt16LE=t.readInt16LE,e.readInt16BE=t.readInt16BE,e.readInt32LE=t.readInt32LE,e.readInt32BE=t.readInt32BE,e.readFloatLE=t.readFloatLE,e.readFloatBE=t.readFloatBE,e.readDoubleLE=t.readDoubleLE,e.readDoubleBE=t.readDoubleBE,e.writeUInt8=t.writeUInt8,e.writeUInt16LE=t.writeUInt16LE,e.writeUInt16BE=t.writeUInt16BE,e.writeUInt32LE=t.writeUInt32LE,e.writeUInt32BE=t.writeUInt32BE,e.writeInt8=t.writeInt8,e.writeInt16LE=t.writeInt16LE,e.writeInt16BE=t.writeInt16BE,e.writeInt32LE=t.writeInt32LE,e.writeInt32BE=t.writeInt32BE,e.writeFloatLE=t.writeFloatLE,e.writeFloatBE=t.writeFloatBE,e.writeDoubleLE=t.writeDoubleLE,e.writeDoubleBE=t.writeDoubleBE,e.fill=t.fill,e.inspect=t.inspect,e.toArrayBuffer=t.toArrayBuffer,e}}.call(this,O(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},O(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/buffer/index.js\",\"/node_modules/gulp-browserify/node_modules/buffer\")},{\"base64-js\":2,buffer:3,ieee754:10,lYpoI2:11}],4:[function(c,d,e){!function(e,t,a,n,r,o,i,u,s){var a=c(\"buffer\").Buffer,f=4,l=new a(f);l.fill(0);d.exports={hash:function(e,t,n,r){for(var o=t(function(e,t){e.length%f!=0&&(n=e.length+(f-e.length%f),e=a.concat([e,l],n));for(var n,r=[],o=t?e.readInt32BE:e.readInt32LE,i=0;i<e.length;i+=f)r.push(o.call(e,i));return r}(e=a.isBuffer(e)?e:new a(e),r),8*e.length),t=r,i=new a(n),u=t?i.writeInt32BE:i.writeInt32LE,s=0;s<o.length;s++)u.call(i,o[s],4*s,!0);return i}}}.call(this,c(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},c(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/helpers.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{buffer:3,lYpoI2:11}],5:[function(v,e,_){!function(l,c,u,d,h,p,g,y,w){var u=v(\"buffer\").Buffer,e=v(\"./sha\"),t=v(\"./sha256\"),n=v(\"./rng\"),b={sha1:e,sha256:t,md5:v(\"./md5\")},s=64,a=new u(s);function r(e,n){var r=b[e=e||\"sha1\"],o=[];return r||i(\"algorithm:\",e,\"is not yet supported\"),{update:function(e){return u.isBuffer(e)||(e=new u(e)),o.push(e),e.length,this},digest:function(e){var t=u.concat(o),t=n?function(e,t,n){u.isBuffer(t)||(t=new u(t)),u.isBuffer(n)||(n=new u(n)),t.length>s?t=e(t):t.length<s&&(t=u.concat([t,a],s));for(var r=new u(s),o=new u(s),i=0;i<s;i++)r[i]=54^t[i],o[i]=92^t[i];return n=e(u.concat([r,n])),e(u.concat([o,n]))}(r,n,t):r(t);return o=null,e?t.toString(e):t}}}function i(){var e=[].slice.call(arguments).join(\" \");throw new Error([e,\"we accept pull requests\",\"http://github.com/dominictarr/crypto-browserify\"].join(\"\\n\"))}a.fill(0),_.createHash=function(e){return r(e)},_.createHmac=r,_.randomBytes=function(e,t){if(!t||!t.call)return new u(n(e));try{t.call(this,void 0,new u(n(e)))}catch(e){t(e)}};var o,f=[\"createCredentials\",\"createCipher\",\"createCipheriv\",\"createDecipher\",\"createDecipheriv\",\"createSign\",\"createVerify\",\"createDiffieHellman\",\"pbkdf2\"],m=function(e){_[e]=function(){i(\"sorry,\",e,\"is not implemented yet\")}};for(o in f)m(f[o],o)}.call(this,v(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},v(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/index.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./md5\":6,\"./rng\":7,\"./sha\":8,\"./sha256\":9,buffer:3,lYpoI2:11}],6:[function(w,b,e){!function(e,r,o,i,u,a,f,l,y){var t=w(\"./helpers\");function n(e,t){e[t>>5]|=128<<t%32,e[14+(t+64>>>9<<4)]=t;for(var n=1732584193,r=-271733879,o=-1732584194,i=271733878,u=0;u<e.length;u+=16){var s=n,a=r,f=o,l=i,n=c(n,r,o,i,e[u+0],7,-680876936),i=c(i,n,r,o,e[u+1],12,-389564586),o=c(o,i,n,r,e[u+2],17,606105819),r=c(r,o,i,n,e[u+3],22,-1044525330);n=c(n,r,o,i,e[u+4],7,-176418897),i=c(i,n,r,o,e[u+5],12,1200080426),o=c(o,i,n,r,e[u+6],17,-1473231341),r=c(r,o,i,n,e[u+7],22,-45705983),n=c(n,r,o,i,e[u+8],7,1770035416),i=c(i,n,r,o,e[u+9],12,-1958414417),o=c(o,i,n,r,e[u+10],17,-42063),r=c(r,o,i,n,e[u+11],22,-1990404162),n=c(n,r,o,i,e[u+12],7,1804603682),i=c(i,n,r,o,e[u+13],12,-40341101),o=c(o,i,n,r,e[u+14],17,-1502002290),n=d(n,r=c(r,o,i,n,e[u+15],22,1236535329),o,i,e[u+1],5,-165796510),i=d(i,n,r,o,e[u+6],9,-1069501632),o=d(o,i,n,r,e[u+11],14,643717713),r=d(r,o,i,n,e[u+0],20,-373897302),n=d(n,r,o,i,e[u+5],5,-701558691),i=d(i,n,r,o,e[u+10],9,38016083),o=d(o,i,n,r,e[u+15],14,-660478335),r=d(r,o,i,n,e[u+4],20,-405537848),n=d(n,r,o,i,e[u+9],5,568446438),i=d(i,n,r,o,e[u+14],9,-1019803690),o=d(o,i,n,r,e[u+3],14,-187363961),r=d(r,o,i,n,e[u+8],20,1163531501),n=d(n,r,o,i,e[u+13],5,-1444681467),i=d(i,n,r,o,e[u+2],9,-51403784),o=d(o,i,n,r,e[u+7],14,1735328473),n=h(n,r=d(r,o,i,n,e[u+12],20,-1926607734),o,i,e[u+5],4,-378558),i=h(i,n,r,o,e[u+8],11,-2022574463),o=h(o,i,n,r,e[u+11],16,1839030562),r=h(r,o,i,n,e[u+14],23,-35309556),n=h(n,r,o,i,e[u+1],4,-1530992060),i=h(i,n,r,o,e[u+4],11,1272893353),o=h(o,i,n,r,e[u+7],16,-155497632),r=h(r,o,i,n,e[u+10],23,-1094730640),n=h(n,r,o,i,e[u+13],4,681279174),i=h(i,n,r,o,e[u+0],11,-358537222),o=h(o,i,n,r,e[u+3],16,-722521979),r=h(r,o,i,n,e[u+6],23,76029189),n=h(n,r,o,i,e[u+9],4,-640364487),i=h(i,n,r,o,e[u+12],11,-421815835),o=h(o,i,n,r,e[u+15],16,530742520),n=p(n,r=h(r,o,i,n,e[u+2],23,-995338651),o,i,e[u+0],6,-198630844),i=p(i,n,r,o,e[u+7],10,1126891415),o=p(o,i,n,r,e[u+14],15,-1416354905),r=p(r,o,i,n,e[u+5],21,-57434055),n=p(n,r,o,i,e[u+12],6,1700485571),i=p(i,n,r,o,e[u+3],10,-1894986606),o=p(o,i,n,r,e[u+10],15,-1051523),r=p(r,o,i,n,e[u+1],21,-2054922799),n=p(n,r,o,i,e[u+8],6,1873313359),i=p(i,n,r,o,e[u+15],10,-30611744),o=p(o,i,n,r,e[u+6],15,-1560198380),r=p(r,o,i,n,e[u+13],21,1309151649),n=p(n,r,o,i,e[u+4],6,-145523070),i=p(i,n,r,o,e[u+11],10,-1120210379),o=p(o,i,n,r,e[u+2],15,718787259),r=p(r,o,i,n,e[u+9],21,-343485551),n=g(n,s),r=g(r,a),o=g(o,f),i=g(i,l)}return Array(n,r,o,i)}function s(e,t,n,r,o,i){return g((t=g(g(t,e),g(r,i)))<<o|t>>>32-o,n)}function c(e,t,n,r,o,i,u){return s(t&n|~t&r,e,t,o,i,u)}function d(e,t,n,r,o,i,u){return s(t&r|n&~r,e,t,o,i,u)}function h(e,t,n,r,o,i,u){return s(t^n^r,e,t,o,i,u)}function p(e,t,n,r,o,i,u){return s(n^(t|~r),e,t,o,i,u)}function g(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}b.exports=function(e){return t.hash(e,n,16)}}.call(this,w(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},w(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/md5.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./helpers\":4,buffer:3,lYpoI2:11}],7:[function(e,l,t){!function(e,t,n,r,o,i,u,s,f){var a;l.exports=a||function(e){for(var t,n=new Array(e),r=0;r<e;r++)0==(3&r)&&(t=4294967296*Math.random()),n[r]=t>>>((3&r)<<3)&255;return n}}.call(this,e(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},e(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/rng.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{buffer:3,lYpoI2:11}],8:[function(c,d,e){!function(e,t,n,r,o,s,a,f,l){var i=c(\"./helpers\");function u(l,c){l[c>>5]|=128<<24-c%32,l[15+(c+64>>9<<4)]=c;for(var e,t,n,r=Array(80),o=1732584193,i=-271733879,u=-1732584194,s=271733878,d=-1009589776,h=0;h<l.length;h+=16){for(var p=o,g=i,y=u,w=s,b=d,a=0;a<80;a++){r[a]=a<16?l[h+a]:v(r[a-3]^r[a-8]^r[a-14]^r[a-16],1);var f=m(m(v(o,5),(f=i,t=u,n=s,(e=a)<20?f&t|~f&n:!(e<40)&&e<60?f&t|f&n|t&n:f^t^n)),m(m(d,r[a]),(e=a)<20?1518500249:e<40?1859775393:e<60?-1894007588:-899497514)),d=s,s=u,u=v(i,30),i=o,o=f}o=m(o,p),i=m(i,g),u=m(u,y),s=m(s,w),d=m(d,b)}return Array(o,i,u,s,d)}function m(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}function v(e,t){return e<<t|e>>>32-t}d.exports=function(e){return i.hash(e,u,20,!0)}}.call(this,c(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},c(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./helpers\":4,buffer:3,lYpoI2:11}],9:[function(c,d,e){!function(e,t,n,r,u,s,a,f,l){function b(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}function o(e,l){var c,d=new Array(1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298),t=new Array(1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225),n=new Array(64);e[l>>5]|=128<<24-l%32,e[15+(l+64>>9<<4)]=l;for(var r,o,h=0;h<e.length;h+=16){for(var i=t[0],u=t[1],s=t[2],p=t[3],a=t[4],g=t[5],y=t[6],w=t[7],f=0;f<64;f++)n[f]=f<16?e[f+h]:b(b(b((o=n[f-2],m(o,17)^m(o,19)^v(o,10)),n[f-7]),(o=n[f-15],m(o,7)^m(o,18)^v(o,3))),n[f-16]),c=b(b(b(b(w,m(o=a,6)^m(o,11)^m(o,25)),a&g^~a&y),d[f]),n[f]),r=b(m(r=i,2)^m(r,13)^m(r,22),i&u^i&s^u&s),w=y,y=g,g=a,a=b(p,c),p=s,s=u,u=i,i=b(c,r);t[0]=b(i,t[0]),t[1]=b(u,t[1]),t[2]=b(s,t[2]),t[3]=b(p,t[3]),t[4]=b(a,t[4]),t[5]=b(g,t[5]),t[6]=b(y,t[6]),t[7]=b(w,t[7])}return t}var i=c(\"./helpers\"),m=function(e,t){return e>>>t|e<<32-t},v=function(e,t){return e>>>t};d.exports=function(e){return i.hash(e,o,32,!0)}}.call(this,c(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},c(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha256.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./helpers\":4,buffer:3,lYpoI2:11}],10:[function(e,t,f){!function(e,t,n,r,o,i,u,s,a){f.read=function(e,t,n,r,o){var i,u,l=8*o-r-1,c=(1<<l)-1,d=c>>1,s=-7,a=n?o-1:0,f=n?-1:1,o=e[t+a];for(a+=f,i=o&(1<<-s)-1,o>>=-s,s+=l;0<s;i=256*i+e[t+a],a+=f,s-=8);for(u=i&(1<<-s)-1,i>>=-s,s+=r;0<s;u=256*u+e[t+a],a+=f,s-=8);if(0===i)i=1-d;else{if(i===c)return u?NaN:1/0*(o?-1:1);u+=Math.pow(2,r),i-=d}return(o?-1:1)*u*Math.pow(2,i-r)},f.write=function(e,t,l,n,r,c){var o,i,u=8*c-r-1,s=(1<<u)-1,a=s>>1,d=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,f=n?0:c-1,h=n?1:-1,c=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(i=isNaN(t)?1:0,o=s):(o=Math.floor(Math.log(t)/Math.LN2),t*(n=Math.pow(2,-o))<1&&(o--,n*=2),2<=(t+=1<=o+a?d/n:d*Math.pow(2,1-a))*n&&(o++,n/=2),s<=o+a?(i=0,o=s):1<=o+a?(i=(t*n-1)*Math.pow(2,r),o+=a):(i=t*Math.pow(2,a-1)*Math.pow(2,r),o=0));8<=r;e[l+f]=255&i,f+=h,i/=256,r-=8);for(o=o<<r|i,u+=r;0<u;e[l+f]=255&o,f+=h,o/=256,u-=8);e[l+f-h]|=128*c}}.call(this,e(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},e(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/ieee754/index.js\",\"/node_modules/gulp-browserify/node_modules/ieee754\")},{buffer:3,lYpoI2:11}],11:[function(e,h,t){!function(e,t,n,r,o,f,l,c,d){var i,u,s;function a(){}(e=h.exports={}).nextTick=(u=\"undefined\"!=typeof window&&window.setImmediate,s=\"undefined\"!=typeof window&&window.postMessage&&window.addEventListener,u?function(e){return window.setImmediate(e)}:s?(i=[],window.addEventListener(\"message\",function(e){var t=e.source;t!==window&&null!==t||\"process-tick\"!==e.data||(e.stopPropagation(),0<i.length&&i.shift()())},!0),function(e){i.push(e),window.postMessage(\"process-tick\",\"*\")}):function(e){setTimeout(e,0)}),e.title=\"browser\",e.browser=!0,e.env={},e.argv=[],e.on=a,e.addListener=a,e.once=a,e.off=a,e.removeListener=a,e.removeAllListeners=a,e.emit=a,e.binding=function(e){throw new Error(\"process.binding is not supported\")},e.cwd=function(){return\"/\"},e.chdir=function(e){throw new Error(\"process.chdir is not supported\")}}.call(this,e(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},e(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/process/browser.js\",\"/node_modules/gulp-browserify/node_modules/process\")},{buffer:3,lYpoI2:11}]},{},[1])(1)});","import { syncCrawl, isObject as isObject$1, isArray, anyArrayKeys, JSON_ROOT_KEY, getNodeRules, syncClone } from \"@netcracker/qubership-apihub-json-crawl\";\nimport { deepEqual, createCustomEqual } from \"fast-equals\";\nimport objectHash from \"object-hash\";\nconst RefErrorTypes = {\n  RICH_REF_NOT_ALLOWED: \"richRefObjectNotAllowed\",\n  REF_NOT_FOUND: \"refNotFound\",\n  REF_NOT_VALID_FORMAT: \"refNotValidFormat\",\n  REF_NOT_ALLOWED: \"refNotAllowed\"\n};\nconst CURRENT_DATA_LEVEL = \"current-data-level\";\nconst BEFORE_SECOND_DATA_LEVEL = \"second-data-levels\";\nconst DEFAULT_TYPE_FLAG_PURE = \"pure\";\nconst DEFAULT_TYPE_FLAG_SYNTHETIC = \"synthetic\";\nconst DEFAULT_OPTION_ALLOW_NOT_VALID_SYNTHETIC_CHANGES = false;\nconst DEFAULT_OPTION_ORIGINS_ALREADY_DEFINED = false;\nconst DEFAULT_OPTION_LIFT_COMBINERS = false;\nconst DEFAULT_OPTION_RESOLVE_REF = true;\nconst DEFAULT_OPTION_MERGE_ALL_OF = true;\nconst DEFAULT_OPTION_UNIFY = false;\nconst DEFAULT_OPTION_VALIDATE = false;\nconst DEFAULT_OPTION_ORIGINS_FOR_DEFAULTS = [{ parent: void 0, value: \"#defaults\" }];\nconst JSON_SCHEMA_NODE_TYPE_BOOLEAN = \"boolean\";\nconst JSON_SCHEMA_NODE_TYPE_OBJECT = \"object\";\nconst JSON_SCHEMA_NODE_TYPE_ARRAY = \"array\";\nconst JSON_SCHEMA_NODE_TYPE_NUMBER = \"number\";\nconst JSON_SCHEMA_NODE_TYPE_STRING = \"string\";\nconst JSON_SCHEMA_NODE_TYPE_INTEGER = \"integer\";\nconst JSON_SCHEMA_NODE_TYPE_NULL = \"null\";\nconst JSON_SCHEMA_NODE_SYNTHETIC_TYPE_NOTHING = \"nothing\";\nconst JSON_SCHEMA_NODE_SYNTHETIC_TYPE_ANY = \"any\";\nconst JSON_SCHEMA_NODE_TYPES = [\n  JSON_SCHEMA_NODE_TYPE_BOOLEAN,\n  JSON_SCHEMA_NODE_TYPE_STRING,\n  JSON_SCHEMA_NODE_TYPE_NUMBER,\n  JSON_SCHEMA_NODE_TYPE_INTEGER,\n  JSON_SCHEMA_NODE_TYPE_OBJECT,\n  JSON_SCHEMA_NODE_TYPE_ARRAY,\n  JSON_SCHEMA_NODE_TYPE_NULL\n];\nconst JSON_SCHEMA_NODE_SYNTHETIC_TYPES = [\n  JSON_SCHEMA_NODE_SYNTHETIC_TYPE_NOTHING,\n  JSON_SCHEMA_NODE_SYNTHETIC_TYPE_ANY\n];\nconst JSON_SCHEMA_NODE_NORMALIZED_TYPES = [\n  ...JSON_SCHEMA_NODE_TYPES,\n  ...JSON_SCHEMA_NODE_SYNTHETIC_TYPES\n];\nconst JSON_SCHEMA_PROPERTY_TITLE = \"title\";\nconst JSON_SCHEMA_PROPERTY_CONTENT_MEDIA_TYPE = \"contentMediaType\";\nconst JSON_SCHEMA_PROPERTY_CONST = \"const\";\nconst JSON_SCHEMA_PROPERTY_PROPERTY_NAMES = \"propertyNames\";\nconst JSON_SCHEMA_PROPERTY_CONTAINS = \"contains\";\nconst JSON_SCHEMA_PROPERTY_DEPENDENCIES = \"dependencies\";\nconst JSON_SCHEMA_PROPERTY_DEFS = \"defs\";\nconst JSON_SCHEMA_PROPERTY_TYPE = \"type\";\nconst JSON_SCHEMA_PROPERTY_DESCRIPTION = \"description\";\nconst JSON_SCHEMA_PROPERTY_FORMAT = \"format\";\nconst JSON_SCHEMA_PROPERTY_DEFAULT = \"default\";\nconst JSON_SCHEMA_PROPERTY_MULTIPLE_OF = \"multipleOf\";\nconst JSON_SCHEMA_PROPERTY_MAXIMUM = \"maximum\";\nconst JSON_SCHEMA_PROPERTY_EXCLUSIVE_MAXIMUM = \"exclusiveMaximum\";\nconst JSON_SCHEMA_PROPERTY_MINIMUM = \"minimum\";\nconst JSON_SCHEMA_PROPERTY_EXCLUSIVE_MINIMUM = \"exclusiveMinimum\";\nconst JSON_SCHEMA_PROPERTY_MAX_LENGTH = \"maxLength\";\nconst JSON_SCHEMA_PROPERTY_MIN_LENGTH = \"minLength\";\nconst JSON_SCHEMA_PROPERTY_PATTERN = \"pattern\";\nconst JSON_SCHEMA_PROPERTY_MAX_ITEMS = \"maxItems\";\nconst JSON_SCHEMA_PROPERTY_MIN_ITEMS = \"minItems\";\nconst JSON_SCHEMA_PROPERTY_UNIQUE_ITEMS = \"uniqueItems\";\nconst JSON_SCHEMA_PROPERTY_MAX_PROPERTIES = \"maxProperties\";\nconst JSON_SCHEMA_PROPERTY_MIN_PROPERTIES = \"minProperties\";\nconst JSON_SCHEMA_PROPERTY_ITEMS = \"items\";\nconst JSON_SCHEMA_PROPERTY_ADDITIONAL_ITEMS = \"additionalItems\";\nconst JSON_SCHEMA_PROPERTY_REQUIRED = \"required\";\nconst JSON_SCHEMA_PROPERTY_ENUM = \"enum\";\nconst JSON_SCHEMA_PROPERTY_PROPERTIES = \"properties\";\nconst JSON_SCHEMA_PROPERTY_ADDITIONAL_PROPERTIES = \"additionalProperties\";\nconst JSON_SCHEMA_PROPERTY_PATTERN_PROPERTIES = \"patternProperties\";\nconst JSON_SCHEMA_PROPERTY_ALL_OF = \"allOf\";\nconst JSON_SCHEMA_PROPERTY_ONE_OF = \"oneOf\";\nconst JSON_SCHEMA_PROPERTY_ANY_OF = \"anyOf\";\nconst JSON_SCHEMA_PROPERTY_NOT = \"not\";\nconst JSON_SCHEMA_PROPERTY_NULLABLE = \"nullable\";\nconst JSON_SCHEMA_PROPERTY_READ_ONLY = \"readOnly\";\nconst JSON_SCHEMA_PROPERTY_WRITE_ONLY = \"writeOnly\";\nconst JSON_SCHEMA_PROPERTY_EXAMPLES = \"examples\";\nconst JSON_SCHEMA_PROPERTY_DEPRECATED = \"deprecated\";\nconst JSON_SCHEMA_PROPERTY_DEFINITIONS = \"definitions\";\nconst JSON_SCHEMA_PROPERTY_REF = \"$ref\";\nfunction stringifyOrigins(origins, instanceMap, addInstances) {\n  return origins.map((origin) => {\n    const path = [];\n    let currentOrigin = origin;\n    while (currentOrigin) {\n      let instanceNumber = instanceMap.get(currentOrigin);\n      if (instanceNumber === void 0) {\n        instanceMap.set(currentOrigin, instanceNumber = instanceMap.size);\n      }\n      const inst = addInstances ? `[${instanceNumber}]` : \"\";\n      path.push(`${currentOrigin.value.toString()}${inst}`);\n      currentOrigin = currentOrigin.parent;\n    }\n    return path.reverse().join(\"/\");\n  });\n}\nfunction convertOriginToHumanReadable(t, originsFlag, addInstances = false) {\n  const instanceMap = /* @__PURE__ */ new Map();\n  const cycleGuard = /* @__PURE__ */ new Set();\n  syncCrawl(t, ({ value }) => {\n    if (cycleGuard.has(value)) {\n      return { done: true };\n    }\n    cycleGuard.add(value);\n    if (!isObject$1(value)) {\n      return { value };\n    }\n    if (originsFlag in value) {\n      const metaRecord = value[originsFlag];\n      Object.entries(metaRecord).forEach(([propertyKey, origins]) => {\n        if (typeof origins === \"string\") {\n          return;\n        }\n        metaRecord[propertyKey] = stringifyOrigins(origins, instanceMap, addInstances);\n      });\n    }\n  });\n  return t;\n}\nfunction stringifyCyclicJsoWithOrigins(jso, originsFlag, addInstances = false) {\n  const instanceMap = /* @__PURE__ */ new Map();\n  return stringifyCyclicJso(jso, {\n    filter: (_, key) => typeof key !== \"symbol\",\n    pairExtraInfo: (jso2, key) => {\n      const record = getJsoProperty(jso2, originsFlag);\n      if (!record) {\n        return \"missing origins record\";\n      }\n      const origins = record[key];\n      if (!origins) {\n        return `missing origins for property '${key.toString()}'`;\n      }\n      return origins.length !== 0 ? stringifyOrigins(origins, instanceMap, addInstances).join(\", \") : \"<empty>\";\n    },\n    jsoExtraInfo: (jso2) => {\n      const record = getJsoProperty(jso2, originsFlag);\n      const keys = new Set(Object.keys(jso2));\n      if (!record && keys.size > 0) {\n        return \"missing origins record\";\n      }\n      const extraKeys = Object.keys(record ?? {}).filter((key) => !keys.has(key));\n      return extraKeys.length === 0 ? \"\" : `found extra origins: ${extraKeys.map((key) => `[${key}]=${stringifyOrigins(record[key], instanceMap, addInstances)}`).join(\"; \")}`;\n    }\n  });\n}\nfunction concatenateArraysInProperty(source, target, propertyKey, originsFlag) {\n  const sourceArray = getJsoProperty(source, propertyKey);\n  if (!isArray(sourceArray)) {\n    return;\n  }\n  let targetArray = getJsoProperty(target, propertyKey);\n  if (targetArray === void 0) {\n    targetArray = [];\n    copyOrigins(source, target, propertyKey, propertyKey, originsFlag);\n  }\n  if (!isArray(targetArray)) {\n    return;\n  }\n  setJsoProperty(target, propertyKey, targetArray);\n  const sourceNumberKeys = anyArrayKeys(sourceArray).flatMap((key) => typeof key === \"number\" ? [key] : []);\n  sourceNumberKeys.forEach((sourceKey) => {\n    const targetIndex = targetArray.length;\n    targetArray[targetIndex] = sourceArray[sourceKey];\n    copyOrigins(sourceArray, targetArray, sourceKey, targetIndex, originsFlag);\n  });\n}\nfunction resolveOriginsMetaRecord(source, originsFlag) {\n  if (!originsFlag) {\n    return void 0;\n  }\n  return getJsoProperty(source, originsFlag);\n}\nfunction resolveOrigins(source, propertyKey, originsFlag) {\n  const originsRecord = resolveOriginsMetaRecord(source, originsFlag);\n  if (!originsRecord) {\n    return void 0;\n  }\n  return originsRecord[propertyKey];\n}\nfunction copyProperty(source, target, propertyKey, originsFlag) {\n  setJsoProperty(target, propertyKey, getJsoProperty(source, propertyKey));\n  copyOrigins(source, target, propertyKey, propertyKey, originsFlag);\n}\nfunction copyOrigins(source, target, sourcePropertyKey, targetPropertyKey, originsFlag) {\n  if (!originsFlag) {\n    return;\n  }\n  const sourceOriginsRecord = resolveOriginsMetaRecord(source, originsFlag);\n  if (!sourceOriginsRecord) {\n    return;\n  }\n  setOrigins(target, targetPropertyKey, originsFlag, sourceOriginsRecord[sourcePropertyKey]);\n}\nfunction mergeOrigins(target, sources, originsFlag) {\n  if (!originsFlag) {\n    return;\n  }\n  const newRecords = [target, ...sources].reduce((aggregator, jso) => {\n    const jsoOrigins = resolveOriginsMetaRecord(jso, originsFlag) ?? {};\n    Object.keys(jsoOrigins).forEach((propertyKey) => {\n      let existingLeafs = aggregator[propertyKey];\n      if (!existingLeafs) {\n        existingLeafs = [];\n        aggregator[propertyKey] = existingLeafs;\n      }\n      (jsoOrigins[propertyKey] ?? []).filter((origin) => !existingLeafs.includes(origin)).forEach((origin) => existingLeafs.push(origin));\n    });\n    return aggregator;\n  }, {});\n  setJsoProperty(target, originsFlag, newRecords);\n}\nfunction setOrigins(jso, propertyKey, originsFlag, origins) {\n  if (!originsFlag) {\n    return;\n  }\n  if (!origins) {\n    return;\n  }\n  const newOriginsRecord = { ...resolveOriginsMetaRecord(jso, originsFlag) ?? {} };\n  newOriginsRecord[propertyKey] = origins;\n  setJsoProperty(jso, originsFlag, newOriginsRecord);\n}\nfunction cleanSeveralOrigins(jso, propertyKeys, originsFlag) {\n  if (!originsFlag) {\n    return;\n  }\n  const originsRecord = resolveOriginsMetaRecord(jso, originsFlag);\n  if (!originsRecord) {\n    return;\n  }\n  if (!propertyKeys.some((key) => key in originsRecord)) {\n    return;\n  }\n  const newOriginsRecord = { ...originsRecord };\n  propertyKeys.forEach((key) => delete newOriginsRecord[key]);\n  setJsoProperty(jso, originsFlag, newOriginsRecord);\n}\nfunction cleanOrigins(jso, propertyKey, originsFlag) {\n  cleanSeveralOrigins(jso, [propertyKey], originsFlag);\n}\nfunction cleanAllOrigins(jso, originsFlag) {\n  if (!originsFlag) {\n    return;\n  }\n  setJsoProperty(jso, originsFlag, {});\n}\nfunction setOriginsForArray(array, originsFlag, originsArray) {\n  if (!originsFlag) {\n    return;\n  }\n  const newOriginsRecord = { ...resolveOriginsMetaRecord(array, originsFlag) ?? {} };\n  originsArray.forEach((item, index) => {\n    if (item) {\n      newOriginsRecord[index] = item;\n    }\n  });\n  setJsoProperty(array, originsFlag, newOriginsRecord);\n}\nfunction copyOriginsForArray(sourceArray, targetArray, originsFlag) {\n  if (!originsFlag) {\n    return;\n  }\n  const sourceOriginsRecord = resolveOriginsMetaRecord(sourceArray, originsFlag);\n  if (!sourceOriginsRecord) {\n    return;\n  }\n  const newOriginsRecord = { ...resolveOriginsMetaRecord(targetArray, originsFlag) ?? {} };\n  targetArray.forEach((_, index) => {\n    newOriginsRecord[index] = sourceOriginsRecord[index];\n  });\n  setJsoProperty(targetArray, originsFlag, newOriginsRecord);\n}\nconst createSelfOriginsCloneHook = (originsFlag) => {\n  return createSelfMetaCloneHook(\"selfOriginResolver\", originsFlag, []);\n};\nclass MapArray extends Map {\n  add(key, value) {\n    const arr = this.get(key);\n    if (arr) {\n      arr.push(value);\n    } else {\n      this.set(key, [value]);\n    }\n    return this;\n  }\n}\nfunction isPossibleRawJsonSchema(value) {\n  const type = typeof value;\n  return type === \"boolean\" || type === \"object\";\n}\nfunction isRefNode(value) {\n  return value && typeof value === \"object\" && JSON_SCHEMA_PROPERTY_REF in value && value.$ref && typeof value.$ref === \"string\";\n}\nfunction isPureRefNode(value) {\n  return isRefNode(value) && Object.keys(value).length === 1;\n}\nfunction parseRef($ref, basePath = \"\") {\n  const [filePath = basePath, ref] = $ref.split(\"#\");\n  const pointer = !ref || ref === \"/\" ? \"\" : ref;\n  const normalized = createRef(filePath, pointer);\n  const jsonPath = parsePointer(pointer);\n  return { filePath, pointer, normalized, jsonPath };\n}\nfunction createRef(basePath, pointer) {\n  if (!basePath) {\n    return !pointer ? \"#\" : `#${pointer}`;\n  } else {\n    return `${basePath}${!pointer ? \"\" : \"#\" + pointer}`;\n  }\n}\nconst resolveValueByPath = (obj, path) => {\n  let value = obj;\n  for (const key of path) {\n    if (isObject$1(value) && key in value) {\n      value = value[key];\n    } else {\n      return;\n    }\n    if (value === void 0) {\n      return;\n    }\n  }\n  return value;\n};\nconst pathMask = {\n  slash: /\\//g,\n  tilde: /~/g,\n  escapedSlash: /~1/g,\n  escapedTilde: /~0/g\n};\nfunction parsePointer(pointer) {\n  return pointer.split(\"/\").map((i) => decodeURIComponent(i.replace(pathMask.escapedSlash, \"/\").replace(pathMask.escapedTilde, \"~\"))).slice(1);\n}\nconst buildPointer = (path) => {\n  if (!path.length) {\n    return \"\";\n  }\n  return \"/\" + path.map((i) => encodeURIComponent(String(i).replace(pathMask.tilde, \"~0\").replace(pathMask.slash, \"~1\"))).join(\"/\");\n};\nconst findMultiplierForInteger = (number) => {\n  let multiplier = 1;\n  while (number * multiplier % 1 !== 0) {\n    multiplier *= 10;\n  }\n  return multiplier;\n};\nfunction calculateLCM(args) {\n  const x = args.reduce((r, v) => Math.max(r, findMultiplierForInteger(v)), 0);\n  return args.reduce((a, b) => Math.round(a * x * b * x / calculateGCD(a * x, b * x)) / x);\n}\nfunction calculateGCD(a, b) {\n  return b === 0 ? a : calculateGCD(b, a % b);\n}\nfunction uniqueItems(arr) {\n  const added = /* @__PURE__ */ new Set();\n  return arr.filter((value) => !added.has(value) && added.add(value));\n}\nfunction stringifyCyclicJso(jso, options = {}) {\n  const instances = /* @__PURE__ */ new Map();\n  return stringifyKeyValuePair(\"\", jso, instances, options);\n}\nfunction stringifyKeyValuePair(valuePrefix, value, instances, options) {\n  var _a, _b;\n  if (value === null) {\n    return `${valuePrefix.toString()}null`;\n  }\n  const valueType = typeof value;\n  switch (valueType) {\n    case \"string\":\n      return `${valuePrefix.toString()}'${value}'`;\n    case \"symbol\":\n    case \"boolean\":\n    case \"number\":\n    case \"bigint\": {\n      return `${valuePrefix.toString()}${value}`;\n    }\n    case \"undefined\": {\n      return `${valuePrefix.toString()}undefined`;\n    }\n    default: {\n      let ref = instances.get(value);\n      if (ref === void 0) {\n        ref = instances.size;\n        instances.set(value, ref);\n      } else {\n        return `${valuePrefix.toString()}/*#${ref}*/`;\n      }\n      if (valueType === \"function\") {\n        return `${valuePrefix.toString()}/*${ref}*/ function()`;\n      }\n      const indent2 = valuePrefix.length - valuePrefix.trimStart().length;\n      const tab = \" \";\n      const stringIndent = tab.repeat(indent2);\n      if (isArray(value)) {\n        const valueAsObject = value;\n        const extraInfo = (_a = options.jsoExtraInfo) == null ? void 0 : _a.call(options, valueAsObject);\n        const arrayExtraInfo = extraInfo ? `  //${extraInfo}` : \"\";\n        const ownKeys = Reflect.ownKeys(valueAsObject).filter((k) => k !== \"length\");\n        const ending = ownKeys.length === 0 ? `]${arrayExtraInfo}` : `\n${stringIndent}]`;\n        const strValue = ownKeys.filter((propertyKey) => !options.filter || options.filter(valueAsObject, propertyKey)).reduce((result, propertyKey) => {\n          var _a2;\n          const propertyValue = valueAsObject[propertyKey];\n          const pairInfo = ((_a2 = options.pairExtraInfo) == null ? void 0 : _a2.call(options, valueAsObject, propertyKey)) ?? \"\";\n          return result + \"\\n\" + stringifyKeyValuePair(/\\d+/.test(propertyKey.toString()) ? `${stringIndent}${tab}` : `${stringIndent}${tab}/*${propertyKey.toString()}: */ `, propertyValue, instances, options) + \",  //\" + pairInfo;\n        }, `[` + (ownKeys.length !== 0 ? arrayExtraInfo : \"\")) + ending;\n        return `${valuePrefix.toString()}/*${ref}*/ ${strValue}`;\n      } else {\n        const valueAsObject = value;\n        const extraInfo = (_b = options.jsoExtraInfo) == null ? void 0 : _b.call(options, valueAsObject);\n        const objectExtraInfo = extraInfo ? `  //${extraInfo}` : \"\";\n        const ownKeys = Reflect.ownKeys(valueAsObject);\n        const ending = ownKeys.length === 0 ? `}${objectExtraInfo}` : `\n${stringIndent}}`;\n        const strValue = ownKeys.filter((propertyKey) => !options.filter || options.filter(valueAsObject, propertyKey)).reduce((result, propertyKey) => {\n          var _a2;\n          const propertyValue = valueAsObject[propertyKey];\n          const pairInfo = ((_a2 = options.pairExtraInfo) == null ? void 0 : _a2.call(options, valueAsObject, propertyKey)) ?? \"\";\n          return result + \"\\n\" + stringifyKeyValuePair(`${stringIndent}${tab}${propertyKey.toString()}: `, propertyValue, instances, options) + \",  //\" + pairInfo;\n        }, `{` + (ownKeys.length !== 0 ? objectExtraInfo : \"\")) + ending;\n        return `${valuePrefix.toString()}/*${ref}*/ ${strValue}`;\n      }\n    }\n  }\n}\nfunction copyDescriptors(target, ...sources) {\n  sources.forEach((source) => {\n    const descriptors = Object.keys(source).reduce((descriptors2, key) => {\n      const descriptor = Object.getOwnPropertyDescriptor(source, key);\n      if (descriptor == null ? void 0 : descriptor.enumerable) {\n        descriptors2[key] = descriptor;\n      }\n      return descriptors2;\n    }, {});\n    Object.getOwnPropertySymbols(source).forEach((sym) => {\n      const descriptor = Object.getOwnPropertyDescriptor(source, sym);\n      if (descriptor == null ? void 0 : descriptor.enumerable) {\n        descriptors[sym] = descriptor;\n      }\n    });\n    Object.defineProperties(target, descriptors);\n  });\n  return target;\n}\nfunction concatArrays$1(...args) {\n  return args.flatMap((value) => {\n    if (value === void 0) {\n      return [];\n    }\n    if (isArray(value)) {\n      return value;\n    } else {\n      return [value];\n    }\n  });\n}\nconst INSTRUCTION_AFTER = \"after\";\nconst INSTRUCTION_BEFORE = \"before\";\nconst INSTRUCTION_REPLACE = \"replace\";\nfunction beforeValue(reference, value) {\n  return { type: INSTRUCTION_BEFORE, reference, value };\n}\nfunction afterValue(reference, value) {\n  return { type: INSTRUCTION_AFTER, reference, value };\n}\nfunction replaceValue(reference, value) {\n  return { type: INSTRUCTION_REPLACE, reference, value };\n}\nfunction insertIntoArrayByInstruction(arr, ...instructions) {\n  return instructions.reduce(\n    (items, instruction) => items.flatMap((item) => {\n      if (instruction.reference === item) {\n        switch (instruction.type) {\n          case INSTRUCTION_AFTER:\n            return [item, instruction.value];\n          case INSTRUCTION_BEFORE:\n            return [instruction.value, item];\n          case INSTRUCTION_REPLACE:\n            return [instruction.value];\n        }\n      } else {\n        return [item];\n      }\n    }),\n    arr\n  );\n}\nfunction singleOrArrayToArray(t) {\n  return isArray(t) ? t : [t];\n}\nfunction arrayToSingleOrArray(ts) {\n  return ts.length === 1 ? ts[0] : ts;\n}\nfunction pathItemToFullPath(item) {\n  const path = [];\n  let v = item;\n  while (v) {\n    path.push(v.value);\n    v = v.parent;\n  }\n  const reverse = path.reverse();\n  if (reverse.length && reverse[0] === JSON_ROOT_KEY) {\n    reverse.shift();\n  }\n  return reverse;\n}\nfunction getJsoProperty(ar, key) {\n  return ar[key];\n}\nfunction setJsoProperty(ar, key, value) {\n  ar[key] = value;\n}\nfunction isDefaultValue(jso, key, defaultFlag) {\n  if (!defaultFlag) {\n    return false;\n  }\n  const defaults = getJsoProperty(jso, defaultFlag);\n  const defaultType = defaults == null ? void 0 : defaults[key];\n  if (!defaultType) {\n    return false;\n  }\n  return defaultType === DEFAULT_TYPE_FLAG_PURE || defaultType === DEFAULT_TYPE_FLAG_SYNTHETIC;\n}\nconst typeOf = (value) => {\n  if (Array.isArray(value)) {\n    return \"array\";\n  }\n  return value === null ? \"null\" : typeof value;\n};\nfunction selfMetaResolverFactory(metaFlag, defaultMeta = void 0) {\n  return metaFlag ? (parent) => {\n    if (!isObject$1(parent)) {\n      return () => defaultMeta;\n    }\n    let origins;\n    return (key) => {\n      if (!origins) {\n        origins = parent[metaFlag] ?? {};\n      }\n      return origins == null ? void 0 : origins[key];\n    };\n  } : () => () => defaultMeta;\n}\nfunction createSelfMetaCloneHook(stateProperty, metaFlag, defaultMeta = void 0) {\n  const factory = selfMetaResolverFactory(metaFlag, defaultMeta);\n  const selfOriginsHook = ({ value, state }) => {\n    if (!isObject$1(value)) {\n      return { value };\n    }\n    return { value, state: { ...state, [stateProperty]: factory(value) } };\n  };\n  return selfOriginsHook;\n}\nfunction createSelfMetaCrawlHook(stateProperty, metaFlag, defaultMeta = void 0) {\n  return createSelfMetaCloneHook(stateProperty, metaFlag, defaultMeta);\n}\nconst removeDuplicatesWithMergeOrigins = (array, originFlag, equals) => {\n  const findItemWithOrigins = (map, item) => {\n    if (map.get(item)) {\n      return [item, map.get(item)];\n    }\n    return Array.from(map.entries()).find(([otherItem]) => equals(item, otherItem));\n  };\n  const itemOriginsMap = /* @__PURE__ */ new Map();\n  const uniqueItems2 = array.filter((item, index) => {\n    const origins = resolveOrigins(array, index, originFlag) ?? [];\n    const existedItemWithOrigins = findItemWithOrigins(itemOriginsMap, item);\n    if (existedItemWithOrigins) {\n      const [existedItem, existedOrigins] = existedItemWithOrigins;\n      itemOriginsMap.set(existedItem, [...existedOrigins, ...origins]);\n      return false;\n    }\n    return itemOriginsMap.set(item, origins);\n  });\n  const itemOrigins = uniqueItems2.map((item) => itemOriginsMap.get(item));\n  setOriginsForArray(uniqueItems2, originFlag, itemOrigins);\n  return uniqueItems2;\n};\nconst SPEC_TYPE_JSON_SCHEMA_04 = \"json-schema-04\";\nconst SPEC_TYPE_JSON_SCHEMA_06 = \"json-schema-06\";\nconst SPEC_TYPE_JSON_SCHEMA_07 = \"json-schema-07\";\nconst SPEC_TYPE_OPEN_API_30 = \"openapi-3.0\";\nconst SPEC_TYPE_OPEN_API_31 = \"openapi-3.1\";\nconst SPEC_TYPE_ASYNCAPI_2 = \"asyncapi-2\";\nconst SPEC_TYPE_GRAPH_API = \"graphapi\";\nfunction resolveSpec(data) {\n  if (!isObject$1(data)) {\n    throw new Error(\"Spec must be an object\");\n  }\n  if (isOpenApi(data)) {\n    if (data.openapi.startsWith(\"3.1\")) {\n      return { type: SPEC_TYPE_OPEN_API_31, version: data.openapi };\n    }\n    if (data.openapi.startsWith(\"3.0\")) {\n      return { type: SPEC_TYPE_OPEN_API_30, version: data.openapi };\n    }\n    throw new Error(`OpenApi version ${data.openapi} is not supported.`);\n  }\n  if (isAsyncApi(data)) {\n    if (data.asyncapi.startsWith(\"2.\")) {\n      return { type: SPEC_TYPE_ASYNCAPI_2, version: data.asyncapi };\n    }\n    throw new Error(`AsyncApi version ${data.asyncapi} is not supported.`);\n  }\n  if (isGraphApi(data)) {\n    return { type: SPEC_TYPE_GRAPH_API, version: data.graphapi };\n  }\n  return {\n    type: SPEC_TYPE_JSON_SCHEMA_07,\n    version: \"not-defined\"\n  };\n}\nfunction isOpenApi(data) {\n  return isObject$1(data) && \"openapi\" in data && typeof data.openapi === \"string\" && data.openapi.length > 0;\n}\nfunction isAsyncApi(data) {\n  return isObject$1(data) && \"asyncapi\" in data && typeof data.asyncapi === \"string\" && data.asyncapi.length > 0;\n}\nfunction isGraphApi(data) {\n  return isObject$1(data) && \"graphapi\" in data && typeof data.graphapi === \"string\" && data.graphapi.length > 0;\n}\nconst ErrorMessage = {\n  mergeError: () => \"Could not merge values, they are probably incompatible\",\n  mergeWithBrokenRef: () => \"Could not merge values with unresolved ref\",\n  ruleNotFound: (key) => `Merge rule not found for key: ${key}`,\n  richRefObjectNotAllowed: (ref) => `${JSON_SCHEMA_PROPERTY_REF} can't have siblings in this specification version: ${ref}`,\n  referenceNotAllowed: (ref) => `${JSON_SCHEMA_PROPERTY_REF} not allowed here: ${ref}`,\n  refNotFound: (ref) => `${JSON_SCHEMA_PROPERTY_REF} can't be resolved: ${ref}`,\n  refNotValidFormat: (ref) => `${JSON_SCHEMA_PROPERTY_REF} can't be parsed: ${ref}`\n};\nconst COPY_STATE_COMPLETED = \"completed\";\nconst COPY_STATE_PARTIALLY_COMPLETED = \"in-progress\";\nconst COPY_STATE_NOT_YET_COPIED = \"not-yet-copied\";\nconst createCycledJsoHandlerHook = () => {\n  const jsoCopyStates = /* @__PURE__ */ new Map();\n  const cycleJsoHandlerHook = ({ key, value, state }) => {\n    if (!isObject$1(value)) {\n      return { value };\n    }\n    const safeKey = key ?? JSON_ROOT_KEY;\n    let jsoState = jsoCopyStates.get(value);\n    if (!jsoState) {\n      jsoState = {\n        type: COPY_STATE_NOT_YET_COPIED,\n        lazyAppliers: []\n      };\n      jsoCopyStates.set(value, jsoState);\n    }\n    const node = state.node;\n    switch (jsoState.type) {\n      case COPY_STATE_COMPLETED: {\n        node[safeKey] = jsoState.jsoInResult;\n        return {\n          done: true,\n          value: node[safeKey]\n          /*no need in done case but need for process understand*/\n        };\n      }\n      case COPY_STATE_PARTIALLY_COMPLETED: {\n        node[safeKey] = jsoState.partialJsoInResult;\n        return {\n          done: true,\n          value: jsoState.partialJsoInResult\n          /*whole values will be available only after COPY_STATE_NOT_YET_COPIED.exitHook,\n          but instance for copy already created but not filled. You can use as a reference but not as value!!!!*/\n        };\n      }\n      case COPY_STATE_NOT_YET_COPIED: {\n        const lazyAppliers = jsoState.lazyAppliers;\n        return {\n          value,\n          exitHook: () => {\n            const valueAfterAllHooks = node[safeKey];\n            const newState = { type: COPY_STATE_COMPLETED, jsoInResult: valueAfterAllHooks };\n            jsoCopyStates.set(value, newState);\n            jsoCopyStates.set(valueAfterAllHooks, newState);\n          },\n          afterHooksHook: () => {\n            const valueAfterAllHooks = node[safeKey];\n            while (lazyAppliers.length) {\n              lazyAppliers.pop()(valueAfterAllHooks);\n            }\n            const newState = {\n              type: COPY_STATE_PARTIALLY_COMPLETED,\n              partialJsoInResult: valueAfterAllHooks\n            };\n            jsoCopyStates.set(value, newState);\n            jsoCopyStates.set(valueAfterAllHooks, newState);\n          }\n        };\n      }\n    }\n  };\n  return cycleJsoHandlerHook;\n};\nconst sameValueOrigins = (result, array) => uniqueItems(array.reduce((r, v) => {\n  if (v.value === result) {\n    r.push(...v.origins);\n  }\n  return r;\n}, []));\nconst allOrigins = (array) => uniqueItems(array.reduce((r, v) => {\n  r.push(...v.origins);\n  return r;\n}, []));\nconst mergeResultWithSameValueOrigins = (array, f) => {\n  const result = f(array.map((value) => value.value));\n  return result !== void 0 ? { value: result, origins: sameValueOrigins(result, array) } : void 0;\n};\nconst mergeResultWithAllOrigins = (array, f) => {\n  const result = f(array.map((value) => value.value));\n  return result !== void 0 ? { value: result, origins: allOrigins(array) } : void 0;\n};\nconst last = (args) => args[args.length - 1];\nconst and = (args) => mergeResultWithSameValueOrigins(args, (args2) => args2.reduce((r, v) => r && v, true));\nconst or = (args) => mergeResultWithSameValueOrigins(args, (args2) => args2.reduce((r, v) => r || v, false));\nconst minValue = (args) => mergeResultWithSameValueOrigins(args, (args2) => Math.min(...args2));\nconst maxValue = (args) => mergeResultWithSameValueOrigins(args, (args2) => Math.max(...args2));\nconst mergePattern = (args) => mergeResultWithAllOrigins(args, (args2) => args2.reduce((r, v) => `${r}(?=${v})`, \"\"));\nconst equal = (args) => mergeResultWithAllOrigins(args, ([one, ...others]) => others.find((v) => !deepEqual(v, one)) ? void 0 : one);\nconst mergeObjects = (args) => mergeResultWithAllOrigins(args, ([one, ...others]) => others.reduce((r, v) => mergeValues(r, v), isArray(one) ? [...one] : { ...one }));\nconst mergeCombination = (args, ctx) => {\n  const result = findCombinations(args.map((value) => value.value), ctx.options.originsFlag).map((v) => {\n    const allOf = { [JSON_SCHEMA_PROPERTY_ALL_OF]: v };\n    const origins = uniqueItems([...Object.values(resolveOriginsMetaRecord(v, ctx.options.originsFlag) ?? {})].flatMap((value) => value));\n    setOrigins(allOf, JSON_SCHEMA_PROPERTY_ALL_OF, ctx.options.originsFlag, origins);\n    return { allOf, origins };\n  });\n  setOriginsForArray(result, ctx.options.originsFlag, result.map((value) => value.origins));\n  const allOfs = result.map((value) => value.allOf);\n  copyOriginsForArray(result, allOfs, ctx.options.originsFlag);\n  return { value: allOfs, origins: allOrigins(args) };\n};\nconst mergeNot = (args, ctx) => {\n  const result = { [JSON_SCHEMA_PROPERTY_ANY_OF]: args.map((valueWithOrigins) => valueWithOrigins.value) };\n  setOriginsForArray(result[JSON_SCHEMA_PROPERTY_ANY_OF], ctx.options.originsFlag, args.map((valueWithOrigins) => valueWithOrigins.origins));\n  setOrigins(result, JSON_SCHEMA_PROPERTY_ANY_OF, ctx.options.originsFlag, allOrigins(args));\n  return { value: result, origins: allOrigins(args) };\n};\nconst mergeMultipleOf = (args) => mergeResultWithAllOrigins(args, (args2) => calculateLCM(args2));\nconst concatString = (args) => mergeResultWithAllOrigins(args, (args2) => args2.join(\"; \"));\nconst concatArrays = (args) => mergeResultWithAllOrigins(args, (args2) => args2.reduce((r, v) => [...r, ...v], []));\nconst mergeEnum = (args, ctx) => {\n  const result = intersectArrays(args, ctx, deepEqual);\n  if (!result.value.length) {\n    ctx.mergeError(args, \"there are no common values in enum\");\n  }\n  return result;\n};\nconst mergeTypes = (args, ctx) => {\n  const rawArrayTypes = args.map((type) => {\n    if (Array.isArray(type.value)) {\n      return type;\n    }\n    const syntheticArray = [type.value];\n    setOriginsForArray(syntheticArray, ctx.options.originsFlag, [type.origins]);\n    return {\n      value: syntheticArray,\n      origins: type.origins\n    };\n  });\n  const nothingTypes = rawArrayTypes.filter((typesWithOrigins) => {\n    return typesWithOrigins.value.length === 0 || typesWithOrigins.value.includes(JSON_SCHEMA_NODE_SYNTHETIC_TYPE_NOTHING);\n  });\n  if (nothingTypes.length) {\n    return {\n      value: JSON_SCHEMA_NODE_SYNTHETIC_TYPE_NOTHING,\n      origins: allOrigins(nothingTypes)\n    };\n  }\n  const allTypes = new Set(rawArrayTypes.flatMap((types) => types.value));\n  if (allTypes.size === 1) {\n    return { value: [...allTypes][0], origins: allOrigins(rawArrayTypes) };\n  }\n  const arrayTypes = rawArrayTypes.map((typesWithOrigins) => {\n    const { items: types, itemsOrigins } = typesWithOrigins.value.map((type, index) => {\n      return type === JSON_SCHEMA_NODE_SYNTHETIC_TYPE_ANY ? {\n        items: JSON_SCHEMA_NODE_TYPES,\n        itemsOrigins: Array(JSON_SCHEMA_NODE_TYPES.length).fill(resolveOrigins(typesWithOrigins.value, index, ctx.options.originsFlag))\n      } : { items: [type], itemsOrigins: [resolveOrigins(typesWithOrigins.value, index, ctx.options.originsFlag)] };\n    }).reduce((result, other) => ({\n      items: [...result.items, ...other.items],\n      itemsOrigins: [...result.itemsOrigins, ...other.itemsOrigins]\n    }));\n    setOriginsForArray(types, ctx.options.originsFlag, itemsOrigins);\n    return { value: types, origins: typesWithOrigins.origins };\n  });\n  const mergedTypes = intersectArrays(arrayTypes, ctx, (a, b) => a === b);\n  if (mergedTypes.value.length === 0) {\n    return { value: JSON_SCHEMA_NODE_SYNTHETIC_TYPE_NOTHING, origins: mergedTypes.origins };\n  }\n  if (mergedTypes.value.length === 1) {\n    return { value: mergedTypes.value[0], origins: resolveOrigins(mergedTypes.value, 0, ctx.options.originsFlag) };\n  }\n  return mergedTypes;\n};\nconst findCombinations = (vectors, originsFlag) => {\n  if (vectors.length === 0) {\n    return [[]];\n  }\n  const firstItems = vectors[0];\n  const remainingVectors = vectors.slice(1);\n  const combinationVectors = findCombinations(remainingVectors, originsFlag);\n  const result = [];\n  const firstItemsOriginsRecord = resolveOriginsMetaRecord(firstItems, originsFlag) ?? {};\n  for (let firstItemsIndex = 0; firstItemsIndex < firstItems.length; firstItemsIndex++) {\n    const firstItem = firstItems[firstItemsIndex];\n    const firstItemOrigins = firstItemsOriginsRecord[firstItemsIndex] ?? {};\n    for (const combinationItems of combinationVectors) {\n      const items = [firstItem, ...combinationItems];\n      setOriginsForArray(items, originsFlag, [firstItemOrigins, ...combinationItems.map((_, index) => resolveOrigins(combinationItems, index, originsFlag))]);\n      result.push(items);\n    }\n  }\n  return result;\n};\nconst mergeValues = (value, patch) => {\n  if (Array.isArray(value) && Array.isArray(patch)) {\n    return [...value, ...patch];\n  } else if (isObject$1(value) && isObject$1(patch)) {\n    const result = { ...value };\n    for (const key of Object.keys(patch)) {\n      result[key] = mergeValues(result[key], patch[key]);\n    }\n    return result;\n  } else {\n    return patch;\n  }\n};\nconst mergeStringSets = (args, ctx) => {\n  const itemOriginsMap = /* @__PURE__ */ new Map();\n  const arrayOrigins = [];\n  for (const array of args) {\n    array.value.forEach((str, index) => {\n      const stringOrigins = resolveOriginsOrNothing(array.value, index, ctx);\n      itemOriginsMap.set(str, [...itemOriginsMap.get(str) ?? [], ...stringOrigins]);\n    });\n    arrayOrigins.push(...array.origins);\n  }\n  const items = Array.from(itemOriginsMap.keys());\n  setOriginsForArray(items, ctx.options.originsFlag, Array.from(itemOriginsMap.values()));\n  return { value: items, origins: arrayOrigins };\n};\nconst intersectArrays = (args, ctx, equals) => {\n  const findItemWithOrigins = (map, item) => {\n    if (map.get(item)) {\n      return [item, map.get(item)];\n    }\n    return Array.from(map.entries()).find(([otherItem]) => equals(item, otherItem));\n  };\n  const [one, ...others] = args;\n  return others.reduce((result, nextArray) => {\n    const itemOriginsMap = /* @__PURE__ */ new Map();\n    result.value.forEach((item, index) => {\n      const origins = resolveOriginsOrNothing(result.value, index, ctx);\n      const currentItemWithOrigins = findItemWithOrigins(itemOriginsMap, item);\n      if (currentItemWithOrigins) {\n        const [currentItem, currentOrigins] = currentItemWithOrigins;\n        itemOriginsMap.set(currentItem, [...currentOrigins ?? [], ...origins]);\n      } else {\n        const sameItemIndex = nextArray.value.findIndex((otherItem) => equals(item, otherItem));\n        const foundItemOrigins = sameItemIndex >= 0 ? resolveOriginsOrNothing(nextArray.value, sameItemIndex, ctx) : void 0;\n        if (foundItemOrigins) {\n          itemOriginsMap.set(item, [...origins, ...foundItemOrigins]);\n        }\n      }\n    });\n    const filteredItems = Array.from(itemOriginsMap.keys());\n    const itemOrigins = filteredItems.map((item) => itemOriginsMap.get(item));\n    setOriginsForArray(filteredItems, ctx.options.originsFlag, itemOrigins);\n    return {\n      value: filteredItems,\n      origins: [...result.origins, ...nextArray.origins]\n    };\n  }, one);\n};\nconst resolveOriginsOrNothing = (array, index, ctx) => ctx.options.originsFlag ? resolveOrigins(array, index, ctx.options.originsFlag) : [];\nconst prepareTitleForMerge = (itemWithOrigins, syntheticPropertyKey, options) => {\n  const richTitles = [];\n  for (const schemaWithOrigins of itemWithOrigins) {\n    const schema = schemaWithOrigins.value;\n    if (!(JSON_SCHEMA_PROPERTY_TITLE in schema)) {\n      continue;\n    }\n    if (typeof schema[JSON_SCHEMA_PROPERTY_TITLE] !== \"string\") {\n      continue;\n    }\n    richTitles.push({\n      value: {\n        title: schema[JSON_SCHEMA_PROPERTY_TITLE],\n        synthetic: syntheticPropertyKey in schema && !!schema[syntheticPropertyKey]\n      },\n      origins: resolveOrigins(schema, JSON_SCHEMA_PROPERTY_TITLE, options.originsFlag) ?? []\n    });\n  }\n  return richTitles;\n};\nconst groupValuesByProperty = (records, options) => {\n  const result = {};\n  for (const schemaWithOrigins of records) {\n    const schema = schemaWithOrigins.value;\n    if (!isObject$1(schema)) {\n      continue;\n    }\n    for (const key of Reflect.ownKeys(schema).filter((key2) => key2 !== options.originsFlag)) {\n      const itemWithOrigins = { value: schema[key], origins: resolveOrigins(schema, key, options.originsFlag) ?? [] };\n      if (isArray(result[key])) {\n        result[key].push(itemWithOrigins);\n      } else {\n        result[key] = [itemWithOrigins];\n      }\n    }\n  }\n  return result;\n};\nconst dependenciesMergeResolver = (args, ctx) => {\n  var _a;\n  const result = {};\n  const props = groupValuesByProperty(args, ctx.options);\n  for (const [prop, itemsWithOrigins] of Object.entries(props)) {\n    const items = itemsWithOrigins.map((itemWithOrigin) => itemWithOrigin.value);\n    const required = items.reduce((r, v) => r && Array.isArray(v), true);\n    if (required) {\n      result[prop] = (_a = mergeStringSets(itemsWithOrigins, ctx)) == null ? void 0 : _a.value;\n    } else {\n      const _items = items.map((v) => Array.isArray(v) ? { required: v } : v);\n      result[prop] = _items.length > 1 ? { [JSON_SCHEMA_PROPERTY_ALL_OF]: _items } : _items[0];\n    }\n  }\n  return { value: result, origins: [] };\n};\nconst jsonSchemaMergeResolver = (args, ctx) => {\n  const result = {};\n  const groupedValues = groupValuesByProperty(args, ctx.options);\n  if (JSON_SCHEMA_PROPERTY_PROPERTIES in groupedValues) {\n    groupedValues.properties = preparePropertiesForMerge(args, ctx);\n  }\n  if (JSON_SCHEMA_PROPERTY_PATTERN_PROPERTIES in groupedValues) {\n    groupedValues.patternProperties = preparePatternPropertiesForMerge(args, ctx);\n  }\n  if (JSON_SCHEMA_PROPERTY_TITLE in groupedValues && ctx.options.syntheticTitleFlag) {\n    groupedValues.title = prepareTitleForMerge(args, ctx.options.syntheticTitleFlag, ctx.options);\n    delete groupedValues[ctx.options.syntheticTitleFlag];\n  }\n  for (const [key, valuesWithOrigins] of Object.entries(groupedValues)) {\n    if (!valuesWithOrigins.length) {\n      continue;\n    }\n    const rules = ctx.mergeRules;\n    const rule = getNodeRules(\n      rules,\n      key,\n      [],\n      void 0\n      /*nevermind*/\n    );\n    const mergeFunc = rule == null ? void 0 : rule.merge;\n    if (valuesWithOrigins.length === 1) {\n      const valueWithOrigins = valuesWithOrigins[0];\n      result[key] = valueWithOrigins.value;\n      setOrigins(result, key, ctx.options.originsFlag, valueWithOrigins.origins);\n    } else {\n      if (!mergeFunc) {\n        throw new Error(ErrorMessage.ruleNotFound(key));\n      }\n      const merged = mergeFunc(valuesWithOrigins, { ...ctx, allMergeItemsWithOrigins: args });\n      if (merged === void 0) {\n        ctx.mergeError(valuesWithOrigins, \"undefined after merge\");\n      } else {\n        result[key] = merged.value;\n        setOrigins(result, key, ctx.options.originsFlag, merged.origins);\n      }\n    }\n  }\n  if (JSON_SCHEMA_PROPERTY_TITLE in result && ctx.options.syntheticTitleFlag) {\n    const rich = result.title;\n    result.title = rich.title;\n    if (rich.synthetic) {\n      result[ctx.options.syntheticTitleFlag] = true;\n    }\n  }\n  if (ctx.options.inlineRefsFlag && ctx.options.inlineRefsFlag in groupedValues) {\n    const refs = groupedValues[ctx.options.inlineRefsFlag];\n    const uniqueRefs = refs.flatMap((m) => m.value).reduce((r, i) => {\n      if (!r.includes(i)) {\n        r.push(i);\n      }\n      return r;\n    }, []);\n    result[ctx.options.inlineRefsFlag] = uniqueRefs;\n  }\n  const origins = ctx.options.originsFlag ? allOrigins(args) : [];\n  return Object.keys(result).length ? { value: result, origins } : void 0;\n};\nconst unifyBooleanSchemas = (items, options) => {\n  return items.flatMap((valueWithOrigins) => {\n    const { value: objectOrBoolean } = valueWithOrigins;\n    if (typeof objectOrBoolean === \"boolean\") {\n      return [{\n        value: objectOrBoolean ? options.syntheticMetaDefinitions.emptyJsonSchema(valueWithOrigins.origins) : options.syntheticMetaDefinitions.invertedEmptyJsonSchema(valueWithOrigins.origins) ?? [],\n        origins: valueWithOrigins.origins\n      }];\n    } else if (isObject$1(objectOrBoolean)) {\n      return [valueWithOrigins];\n    } else {\n      return [];\n    }\n  });\n};\nconst flattenAllOfItems = (items, options, expandedAllOf = /* @__PURE__ */ new Set()) => {\n  const result = [];\n  for (const valueWithOrigins of items) {\n    const value = valueWithOrigins.value;\n    if (!isObject$1(value)) {\n      result.push(valueWithOrigins);\n      continue;\n    }\n    if (!value.allOf || !Array.isArray(value.allOf)) {\n      if (!isArray(value)) {\n        result.push(valueWithOrigins);\n      }\n    } else {\n      const [allOf, sibling] = options.spreadAllOfCache.spreadOrReuse(value);\n      let safeAllOf = allOf;\n      if (expandedAllOf.has(allOf)) {\n        safeAllOf = [];\n      } else {\n        expandedAllOf.add(allOf);\n      }\n      const safeAllOfWithOrigins = safeAllOf.map((subItem, index) => ({\n        value: subItem,\n        origins: resolveOrigins(safeAllOf, index, options.originsFlag) ?? []\n      }));\n      const allOfItems = isSiblingKeysAreImportant(sibling, options) ? [\n        ...safeAllOfWithOrigins,\n        {\n          value: sibling,\n          origins: valueWithOrigins.origins\n        }\n      ] : safeAllOfWithOrigins;\n      result.push(...flattenAllOfItems(allOfItems, options, expandedAllOf));\n    }\n  }\n  return result;\n};\nconst isSiblingKeysAreImportant = (sibling, options) => {\n  return Reflect.ownKeys(sibling).some((key) => typeof key !== \"symbol\" || key === options.inlineRefsFlag);\n};\nconst preparePropertiesForMerge = (itemWithOrigins, ctx) => {\n  var _a;\n  const properties = [];\n  for (const thisItemWithOrigins of itemWithOrigins) {\n    const thisItem = thisItemWithOrigins.value;\n    if (!(JSON_SCHEMA_PROPERTY_PROPERTIES in thisItem)) {\n      continue;\n    }\n    const schemaProperties = thisItem.properties;\n    if (!isObject$1(schemaProperties)) {\n      (_a = ctx.mergeError) == null ? void 0 : _a.call(ctx, itemWithOrigins, \"properties should be an object\");\n      continue;\n    }\n    const ownProperties = new Set(Object.keys(schemaProperties));\n    const additionalPropertiesPerProperty = new MapArray();\n    const patterPropertyPerProperty = new MapArray();\n    for (const prop of ownProperties.values()) {\n      for (const anotherItemWithContext of itemWithOrigins) {\n        const anotherItem = anotherItemWithContext.value;\n        if (anotherItem == thisItem || isObject$1(anotherItem.properties) && prop in anotherItem.properties) {\n          continue;\n        }\n        if (JSON_SCHEMA_PROPERTY_PATTERN_PROPERTIES in anotherItem && isObject$1(anotherItem.patternProperties)) {\n          let anyMath = false;\n          for (const pattern of Object.keys(anotherItem.patternProperties)) {\n            const patternSchema = anotherItem.patternProperties[pattern];\n            if (new RegExp(pattern).test(prop) && isPossibleRawJsonSchema(patternSchema)) {\n              patterPropertyPerProperty.add(prop, {\n                value: patternSchema,\n                origins: resolveOrigins(anotherItem.patternProperties, pattern, ctx.options.originsFlag) ?? []\n              });\n              anyMath = true;\n            }\n          }\n          if (!anyMath) {\n            patterPropertyPerProperty.add(prop, {\n              value: false,\n              origins: resolveOrigins(anotherItem, JSON_SCHEMA_PROPERTY_PATTERN_PROPERTIES, ctx.options.originsFlag) ?? []\n            });\n          } else {\n            continue;\n          }\n        }\n        if (JSON_SCHEMA_PROPERTY_ADDITIONAL_PROPERTIES in anotherItem && isPossibleRawJsonSchema(anotherItem.additionalProperties)) {\n          additionalPropertiesPerProperty.add(prop, {\n            value: anotherItem.additionalProperties,\n            origins: resolveOrigins(anotherItem, JSON_SCHEMA_PROPERTY_ADDITIONAL_PROPERTIES, ctx.options.originsFlag) ?? []\n          });\n        }\n      }\n    }\n    if (!ownProperties.size) {\n      continue;\n    }\n    const props = {};\n    for (const prop of ownProperties.values()) {\n      const schemaProperty = schemaProperties[prop];\n      const additionalPropertiesWithOrigins = additionalPropertiesPerProperty.get(prop) ?? [];\n      const patternPropertiesWithOrigins = patterPropertyPerProperty.get(prop) ?? [];\n      const propOrigins = resolveOrigins(schemaProperties, prop, ctx.options.originsFlag);\n      const overallConstraints = [...additionalPropertiesWithOrigins, ...patternPropertiesWithOrigins];\n      if (overallConstraints.length !== 0) {\n        const allOf = { [JSON_SCHEMA_PROPERTY_ALL_OF]: [schemaProperty, ...overallConstraints.map((valueWithOrigin) => valueWithOrigin.value)] };\n        const allOfOrigins = allOrigins([{\n          value: schemaProperty,\n          origins: propOrigins ?? []\n        }, ...overallConstraints]);\n        setOrigins(allOf, JSON_SCHEMA_PROPERTY_ALL_OF, ctx.options.originsFlag, allOfOrigins);\n        setOriginsForArray(allOf[JSON_SCHEMA_PROPERTY_ALL_OF], ctx.options.originsFlag, [propOrigins, ...overallConstraints.map((valueWithOrigin) => valueWithOrigin.origins)]);\n        props[prop] = allOf;\n      } else {\n        props[prop] = schemaProperty;\n        copyOrigins(schemaProperties, props, prop, prop, ctx.options.originsFlag);\n      }\n      setOrigins(props, prop, ctx.options.originsFlag, propOrigins);\n    }\n    properties.push({\n      value: props,\n      origins: resolveOrigins(thisItem, JSON_SCHEMA_PROPERTY_PROPERTIES, ctx.options.originsFlag) ?? []\n    });\n  }\n  return properties;\n};\nconst preparePatternPropertiesForMerge = (itemWithOrigins, ctx) => {\n  const patternProperties = [];\n  for (const thisItemWithOrigins of itemWithOrigins) {\n    const thisItem = thisItemWithOrigins.value;\n    if (!(JSON_SCHEMA_PROPERTY_PATTERN_PROPERTIES in thisItem)) {\n      continue;\n    }\n    const thisPatterProperties = thisItem[JSON_SCHEMA_PROPERTY_PATTERN_PROPERTIES];\n    if (!isObject$1(thisPatterProperties)) {\n      continue;\n    }\n    const props = {};\n    for (const pattern of Object.keys(thisPatterProperties)) {\n      props[pattern] = thisPatterProperties[pattern];\n      copyOrigins(thisPatterProperties, props, pattern, pattern, ctx.options.originsFlag);\n    }\n    patternProperties.push({\n      value: props,\n      origins: resolveOrigins(thisItem, JSON_SCHEMA_PROPERTY_PATTERN_PROPERTIES, ctx.options.originsFlag) ?? []\n    });\n  }\n  return patternProperties;\n};\nconst propertiesMergeResolver = (args, ctx) => {\n  const result = {};\n  const props = groupValuesByProperty(args, ctx.options);\n  for (const [prop, itemsWithOrigins] of Object.entries(props)) {\n    if (itemsWithOrigins.length > 1) {\n      const obj = { [JSON_SCHEMA_PROPERTY_ALL_OF]: itemsWithOrigins.map((item) => item.value) };\n      const propOrigins = allOrigins(itemsWithOrigins);\n      setOrigins(result, prop, ctx.options.originsFlag, propOrigins);\n      setOrigins(obj, JSON_SCHEMA_PROPERTY_ALL_OF, ctx.options.originsFlag, propOrigins);\n      setOriginsForArray(obj[JSON_SCHEMA_PROPERTY_ALL_OF], ctx.options.originsFlag, itemsWithOrigins.map((item) => item.origins));\n      result[prop] = obj;\n    } else {\n      const singleton = itemsWithOrigins[0];\n      result[prop] = singleton.value;\n      setOrigins(result, prop, ctx.options.originsFlag, singleton.origins);\n    }\n  }\n  return { value: result, origins: allOrigins(args) };\n};\nconst additionalPropertiesMergeResolver = (args, ctx) => {\n  if (args.every((valueWithOrigins) => typeof valueWithOrigins.value === \"boolean\")) {\n    return and(args);\n  }\n  return jsonSchemaMergeResolver(unifyBooleanSchemas(args, ctx.options), ctx);\n};\nconst itemsMergeResolver = (args, ctx) => {\n  const haveArrayItems = args.some((v) => Array.isArray(v.value));\n  if (!haveArrayItems) {\n    return jsonSchemaMergeResolver(unifyBooleanSchemas(args, ctx.options), ctx);\n  }\n  const mergeItems = [];\n  let itemsLimit = Infinity;\n  let maxItemsLength = 0;\n  const additionalItemsSchema = new MapArray();\n  for (const objWithOrigins of ctx.allMergeItemsWithOrigins) {\n    const obj = objWithOrigins.value;\n    if (JSON_SCHEMA_PROPERTY_ADDITIONAL_ITEMS in obj && obj.additionalItems && JSON_SCHEMA_PROPERTY_ITEMS in obj && Array.isArray(obj.items)) {\n      additionalItemsSchema.add(obj.items.length, obj.additionalItems);\n    }\n    if (!(JSON_SCHEMA_PROPERTY_ITEMS in obj)) {\n      continue;\n    }\n    mergeItems.push(obj.items);\n    if (Array.isArray(obj.items)) {\n      maxItemsLength = Math.max(maxItemsLength, obj.items.length);\n      if (JSON_SCHEMA_PROPERTY_ADDITIONAL_ITEMS in obj && obj.additionalItems === false) {\n        itemsLimit = Math.min(itemsLimit, obj.items.length);\n      }\n    }\n  }\n  const len = Math.min(maxItemsLength, itemsLimit);\n  const items = [...Array(len)].map(() => ({ [JSON_SCHEMA_PROPERTY_ALL_OF]: [] }));\n  for (const item of mergeItems) {\n    if (!Array.isArray(item)) {\n      items.forEach(({ allOf }) => allOf.push(item));\n      continue;\n    }\n    for (let j = 0; j < len; j++) {\n      const allOf = [];\n      for (let k = 0; k <= j; k++) {\n        additionalItemsSchema.has(k) && allOf.push(...additionalItemsSchema.get(k));\n      }\n      if (j < item.length) {\n        items[j].allOf.push(allOf.length ? { ...item[j], allOf } : item[j]);\n      } else {\n        items[j].allOf.push(allOf.length ? { allOf } : true);\n      }\n    }\n  }\n  return { value: items, origins: [] };\n};\nconst additionalItemsMergeResolver = (_, ctx) => {\n  let additionalItems = [];\n  const itemsSchema = [];\n  for (const objWithOrigins of ctx.allMergeItemsWithOrigins) {\n    const obj = objWithOrigins.value;\n    if (JSON_SCHEMA_PROPERTY_ITEMS in obj && !isArray(obj.items) && isPossibleRawJsonSchema(obj.items)) {\n      itemsSchema.push({ value: obj.items, origins: [] });\n    }\n    if (!(JSON_SCHEMA_PROPERTY_ADDITIONAL_ITEMS in obj) || !(JSON_SCHEMA_PROPERTY_ITEMS in obj) || !Array.isArray(obj.items) || !isPossibleRawJsonSchema(obj.additionalItems)) {\n      continue;\n    }\n    additionalItems.push({ value: obj.additionalItems, origins: [] });\n  }\n  if (itemsSchema.length) {\n    additionalItems = additionalItems.map((itemWithContext) => ({\n      value: {\n        [JSON_SCHEMA_PROPERTY_ALL_OF]: [itemWithContext.value, ...itemsSchema.map((valueWithContext) => valueWithContext.value)]\n      },\n      origins: []\n    }));\n  }\n  if (additionalItems.every((valueWithOrigins) => typeof valueWithOrigins.value === \"boolean\")) {\n    return and(additionalItems);\n  }\n  return jsonSchemaMergeResolver(unifyBooleanSchemas(additionalItems, ctx.options), ctx);\n};\nconst COMBINER_KEYS = [JSON_SCHEMA_PROPERTY_ONE_OF, JSON_SCHEMA_PROPERTY_ANY_OF];\nconst createLiftCombinersHook = (options) => {\n  const liftHook = ({ key, value, rules, state }) => {\n    if (state.ignoreTreeUnderSymbols) {\n      return { value };\n    }\n    const safeKey = key ?? JSON_ROOT_KEY;\n    if (typeof safeKey === \"symbol\" && options.ignoreSymbols.has(safeKey)) {\n      return {\n        value,\n        state: { ...state, ignoreTreeUnderSymbols: true }\n      };\n    }\n    if (!(rules == null ? void 0 : rules.canLiftCombiners)) {\n      return { value };\n    }\n    if (!isObject$1(value)) {\n      return { value };\n    }\n    const lifted = liftCombiners(value, state.selfOriginResolver(key), options);\n    return { value: lifted };\n  };\n  return liftHook;\n};\nfunction liftCombiners(value, valueOrigins, options) {\n  const ignoredKeys = /* @__PURE__ */ new Set();\n  (options == null ? void 0 : options.inlineRefsFlag) && ignoredKeys.add(options.inlineRefsFlag);\n  const { evaluationCacheService: cacheService } = options;\n  const allValueKeys = Reflect.ownKeys(value).filter((key) => !ignoredKeys.has(key)).filter((key) => key !== options.originsFlag);\n  const foundCombinerKeys = findCombinerKeys(allValueKeys);\n  const isEmptySibling = !hasSiblingKeys(allValueKeys);\n  if (!(foundCombinerKeys.length > 1 || !isEmptySibling && foundCombinerKeys.length > 0)) {\n    return value;\n  }\n  const [firstCombinerKey, secondCombinerKey] = foundCombinerKeys;\n  const [firstCombiner, secondCombiner] = [value[firstCombinerKey], value[secondCombinerKey]];\n  const firstCombinerItems = Array.isArray(firstCombiner) ? firstCombiner : [];\n  const secondCombinerItems = Array.isArray(secondCombiner) ? secondCombiner : [];\n  return cacheService.cacheEvaluationResultByFootprint(\n    [...allValueKeys, ...firstCombinerItems, \"|\", ...secondCombinerItems],\n    () => {\n      const newValue = { ...value };\n      const copiedFirstCombinerItems = [...firstCombinerItems];\n      const firstCombinerItemsOriginsRecord = resolveOriginsMetaRecord(firstCombinerItems, options.originsFlag) ?? {};\n      if (copiedFirstCombinerItems.length === 0) {\n        return newValue;\n      }\n      const sibling = { ...newValue };\n      delete sibling[firstCombinerKey];\n      cleanOrigins(sibling, firstCombinerKey, options.originsFlag);\n      for (const ignoredKey of ignoredKeys) {\n        delete sibling[ignoredKey];\n        cleanOrigins(sibling, ignoredKey, options.originsFlag);\n      }\n      for (const key of allValueKeys) {\n        delete newValue[key];\n        cleanOrigins(newValue, key, options.originsFlag);\n      }\n      if (!isEmptySibling) {\n        firstCombinerItems.splice(0, firstCombinerItems.length);\n        cleanAllOrigins(firstCombinerItems, options.originsFlag);\n        for (let i = 0; i < copiedFirstCombinerItems.length; i++) {\n          const firstCombinerItem = copiedFirstCombinerItems[i];\n          const item = { [JSON_SCHEMA_PROPERTY_ALL_OF]: [sibling, firstCombinerItem] };\n          const firstCombinerItemsOrigins = firstCombinerItemsOriginsRecord[i] ?? [];\n          const combinationOrigins = uniqueItems([...valueOrigins ?? [], ...firstCombinerItemsOrigins]);\n          setOrigins(item, JSON_SCHEMA_PROPERTY_ALL_OF, options.originsFlag, combinationOrigins);\n          setOrigins(item[JSON_SCHEMA_PROPERTY_ALL_OF], 0, options.originsFlag, valueOrigins);\n          setOrigins(item[JSON_SCHEMA_PROPERTY_ALL_OF], 1, options.originsFlag, firstCombinerItemsOrigins);\n          setOrigins(firstCombinerItems, firstCombinerItems.length, options.originsFlag, combinationOrigins);\n          firstCombinerItems.push(item);\n        }\n      }\n      if (secondCombinerItems.length === 0) {\n        newValue[firstCombinerKey] = firstCombinerItems;\n        copyOrigins(value, newValue, firstCombinerKey, firstCombinerKey, options.originsFlag);\n        return newValue;\n      }\n      const copiedSecondCombinerItems = [...secondCombinerItems];\n      const secondCombinerItemsOriginsRecord = resolveOriginsMetaRecord(secondCombinerItems, options.originsFlag) ?? {};\n      secondCombinerItems.splice(0, secondCombinerItems.length);\n      cleanAllOrigins(secondCombinerItems, options.originsFlag);\n      for (let secondCombinerIndex = 0; secondCombinerIndex < copiedSecondCombinerItems.length; secondCombinerIndex++) {\n        const secondCombinerItem = copiedSecondCombinerItems[secondCombinerIndex];\n        const secondCombinerItemOrigins = secondCombinerItemsOriginsRecord[secondCombinerIndex] ?? [];\n        const mergedFirstAndSecondCombinerItems = [];\n        for (let firstCombinerIndex = 0; firstCombinerIndex < firstCombinerItems.length; firstCombinerIndex++) {\n          const firstCombinerItem = firstCombinerItems[firstCombinerIndex];\n          const firstCombinerItemsOrigins = firstCombinerItemsOriginsRecord[firstCombinerIndex] ?? [];\n          const item = { [JSON_SCHEMA_PROPERTY_ALL_OF]: [firstCombinerItem, secondCombinerItem] };\n          const combinationOrigins = uniqueItems([...firstCombinerItemsOrigins, ...secondCombinerItemOrigins]);\n          setOrigins(item, JSON_SCHEMA_PROPERTY_ALL_OF, options.originsFlag, combinationOrigins);\n          setOrigins(item[JSON_SCHEMA_PROPERTY_ALL_OF], 0, options.originsFlag, firstCombinerItemsOrigins);\n          setOrigins(item[JSON_SCHEMA_PROPERTY_ALL_OF], 1, options.originsFlag, secondCombinerItemOrigins);\n          setOrigins(mergedFirstAndSecondCombinerItems, mergedFirstAndSecondCombinerItems.length, options.originsFlag, combinationOrigins);\n          mergedFirstAndSecondCombinerItems.push(item);\n        }\n        const newSecondCombinerItem = {\n          [firstCombinerKey]: mergedFirstAndSecondCombinerItems\n        };\n        copyOrigins(value, newSecondCombinerItem, firstCombinerKey, firstCombinerKey, options.originsFlag);\n        setOrigins(secondCombinerItems, secondCombinerItems.length, options.originsFlag, secondCombinerItemOrigins);\n        secondCombinerItems.push(newSecondCombinerItem);\n      }\n      newValue[secondCombinerKey] = secondCombinerItems;\n      copyOrigins(value, newValue, secondCombinerKey, secondCombinerKey, options.originsFlag);\n      delete sibling[secondCombinerKey];\n      cleanOrigins(sibling, secondCombinerKey, options.originsFlag);\n      return newValue;\n    }\n  );\n}\nfunction mergeProhibitLiftCombiners(jso, options) {\n  if (!options.liftCombiners) {\n    return jso;\n  }\n  const ignoredKeys = /* @__PURE__ */ new Set();\n  (options == null ? void 0 : options.inlineRefsFlag) && (options == null ? void 0 : options.inlineRefsFlag) in jso && ignoredKeys.add(options.inlineRefsFlag);\n  const ownKeys = Reflect.ownKeys(jso);\n  const foundCombinerKeys = findCombinerKeys(ownKeys);\n  const [combiner] = foundCombinerKeys;\n  if (!combiner) {\n    return jso;\n  }\n  const arrayCombiner = jso[combiner];\n  if (!isArray(arrayCombiner)) {\n    return jso;\n  }\n  const propertiesToMove = ownKeys.filter((key) => key !== combiner && !ignoredKeys.has(key));\n  if (propertiesToMove.length === 0) {\n    return jso;\n  }\n  const toTopLevel = [...ignoredKeys].reduce((collector, propertyKey) => {\n    collector[propertyKey] = jso[propertyKey];\n    copyOrigins(jso, collector, propertyKey, propertyKey, options.originsFlag);\n    return collector;\n  }, {});\n  const toNestedLevel = [...ignoredKeys, combiner].reduce((collector, propertyKey) => {\n    delete collector[propertyKey];\n    cleanOrigins(collector, propertyKey, options.originsFlag);\n    return collector;\n  }, { ...jso });\n  const result = {\n    ...toTopLevel,\n    [combiner]: arrayCombiner.map((combinerItem) => {\n      if (hasCommonProperties(combinerItem, toTopLevel)) {\n        throw new Error(\"Merge common properties should never happened on last phase\");\n      }\n      mergeOrigins(toNestedLevel, [combinerItem], options.originsFlag);\n      const allForMerge = { ...combinerItem, ...toNestedLevel };\n      return mergeProhibitLiftCombiners(allForMerge, options);\n    })\n  };\n  copyOrigins(jso, result, combiner, combiner, options.originsFlag);\n  setOriginsForArray(result[combiner], options.originsFlag, arrayCombiner.map((_, index) => resolveOrigins(arrayCombiner, index, options.originsFlag)));\n  return result;\n}\nfunction hasCommonProperties(one, another) {\n  const oneKeys = new Set(Reflect.ownKeys(one));\n  const anotherKeys = Reflect.ownKeys(another);\n  return anotherKeys.some((key) => oneKeys.has(key));\n}\nfunction isCombinerKey(key) {\n  return COMBINER_KEYS.includes(key);\n}\nfunction isSiblingKey(key) {\n  return !isCombinerKey(key);\n}\nfunction hasSiblingKeys(keys) {\n  return keys.some(isSiblingKey);\n}\nfunction findCombinerKeys(keys) {\n  return keys.filter(isCombinerKey);\n}\nconst extractEmptyJsonSchema = (jsoOrBoolean, { origins, options }) => {\n  if (typeof jsoOrBoolean === \"boolean\") {\n    return jsoOrBoolean ? options.syntheticMetaDefinitions.emptyJsonSchema(origins) : options.syntheticMetaDefinitions.invertedEmptyJsonSchema(origins);\n  }\n  if (isObject$1(jsoOrBoolean) && !isArray(jsoOrBoolean) && Object.keys(jsoOrBoolean).length === 0) {\n    return combineJsonSchemaWithMetaJso(jsoOrBoolean, options.syntheticMetaDefinitions.emptyJsonSchema(options.createOriginsForDefaults(origins)), options);\n  }\n  return jsoOrBoolean;\n};\nconst combineJsonSchemaWithMetaJso = (jsonSchema, metaJsonSchema, opt) => {\n  if (Reflect.ownKeys(jsonSchema).length === 0) {\n    return metaJsonSchema;\n  }\n  const mergedSchema = {\n    ...jsonSchema,\n    ...metaJsonSchema\n  };\n  mergeOrigins(mergedSchema, [jsonSchema, metaJsonSchema], opt.originsFlag);\n  return mergeProhibitLiftCombiners(mergedSchema, opt);\n};\nconst JSON_SCHEMA_TYPE_TO_DISCRIMINATOR_PROPS = {\n  [JSON_SCHEMA_NODE_TYPE_BOOLEAN]: [],\n  [JSON_SCHEMA_NODE_TYPE_STRING]: [JSON_SCHEMA_PROPERTY_FORMAT, JSON_SCHEMA_PROPERTY_MIN_LENGTH, JSON_SCHEMA_PROPERTY_MAX_LENGTH, JSON_SCHEMA_PROPERTY_PATTERN],\n  [JSON_SCHEMA_NODE_TYPE_NUMBER]: [JSON_SCHEMA_PROPERTY_FORMAT, JSON_SCHEMA_PROPERTY_MULTIPLE_OF, JSON_SCHEMA_PROPERTY_MINIMUM, JSON_SCHEMA_PROPERTY_EXCLUSIVE_MINIMUM, JSON_SCHEMA_PROPERTY_MAXIMUM, JSON_SCHEMA_PROPERTY_EXCLUSIVE_MAXIMUM],\n  [JSON_SCHEMA_NODE_TYPE_INTEGER]: [JSON_SCHEMA_PROPERTY_FORMAT, JSON_SCHEMA_PROPERTY_MULTIPLE_OF, JSON_SCHEMA_PROPERTY_MINIMUM, JSON_SCHEMA_PROPERTY_EXCLUSIVE_MINIMUM, JSON_SCHEMA_PROPERTY_MAXIMUM, JSON_SCHEMA_PROPERTY_EXCLUSIVE_MAXIMUM],\n  [JSON_SCHEMA_NODE_TYPE_OBJECT]: [JSON_SCHEMA_PROPERTY_REQUIRED, JSON_SCHEMA_PROPERTY_MIN_PROPERTIES, JSON_SCHEMA_PROPERTY_MAX_PROPERTIES, JSON_SCHEMA_PROPERTY_PROPERTY_NAMES, JSON_SCHEMA_PROPERTY_PROPERTIES, JSON_SCHEMA_PROPERTY_PATTERN_PROPERTIES, JSON_SCHEMA_PROPERTY_ADDITIONAL_PROPERTIES],\n  [JSON_SCHEMA_NODE_TYPE_ARRAY]: [JSON_SCHEMA_PROPERTY_CONTAINS, JSON_SCHEMA_PROPERTY_MIN_ITEMS, JSON_SCHEMA_PROPERTY_MAX_ITEMS, JSON_SCHEMA_PROPERTY_UNIQUE_ITEMS, JSON_SCHEMA_PROPERTY_ITEMS, JSON_SCHEMA_PROPERTY_ADDITIONAL_ITEMS],\n  [JSON_SCHEMA_NODE_TYPE_NULL]: []\n};\nconst JSON_SCHEMA_TYPE_TO_RESTRICTED_PROPS = Object.fromEntries(\n  [\n    ...Object.entries(JSON_SCHEMA_TYPE_TO_DISCRIMINATOR_PROPS).map(\n      ([type, properties]) => {\n        const allProperties = Object.keys(JSON_SCHEMA_TYPE_TO_DISCRIMINATOR_PROPS).filter((key) => key !== type).flatMap((key) => JSON_SCHEMA_TYPE_TO_DISCRIMINATOR_PROPS[key]).reduce((acc, prop) => acc.add(prop), /* @__PURE__ */ new Set());\n        properties.forEach((prop) => allProperties.delete(prop));\n        return [type, allProperties];\n      }\n    ),\n    [JSON_SCHEMA_NODE_SYNTHETIC_TYPE_ANY, /* @__PURE__ */ new Set()],\n    [JSON_SCHEMA_NODE_SYNTHETIC_TYPE_NOTHING, /* @__PURE__ */ new Set([\n      // JSON_SCHEMA_PROPERTY_TITLE, cause it usefully when resolve this type by ref\n      JSON_SCHEMA_PROPERTY_CONTENT_MEDIA_TYPE,\n      JSON_SCHEMA_PROPERTY_CONST,\n      JSON_SCHEMA_PROPERTY_PROPERTY_NAMES,\n      JSON_SCHEMA_PROPERTY_CONTAINS,\n      JSON_SCHEMA_PROPERTY_DEPENDENCIES,\n      JSON_SCHEMA_PROPERTY_DEFS,\n      JSON_SCHEMA_PROPERTY_DESCRIPTION,\n      JSON_SCHEMA_PROPERTY_FORMAT,\n      JSON_SCHEMA_PROPERTY_DEFAULT,\n      JSON_SCHEMA_PROPERTY_MULTIPLE_OF,\n      JSON_SCHEMA_PROPERTY_MAXIMUM,\n      JSON_SCHEMA_PROPERTY_EXCLUSIVE_MAXIMUM,\n      JSON_SCHEMA_PROPERTY_MINIMUM,\n      JSON_SCHEMA_PROPERTY_EXCLUSIVE_MINIMUM,\n      JSON_SCHEMA_PROPERTY_MAX_LENGTH,\n      JSON_SCHEMA_PROPERTY_MIN_LENGTH,\n      JSON_SCHEMA_PROPERTY_PATTERN,\n      JSON_SCHEMA_PROPERTY_MAX_ITEMS,\n      JSON_SCHEMA_PROPERTY_MIN_ITEMS,\n      JSON_SCHEMA_PROPERTY_UNIQUE_ITEMS,\n      JSON_SCHEMA_PROPERTY_MAX_PROPERTIES,\n      JSON_SCHEMA_PROPERTY_MIN_PROPERTIES,\n      JSON_SCHEMA_PROPERTY_ITEMS,\n      JSON_SCHEMA_PROPERTY_ADDITIONAL_ITEMS,\n      JSON_SCHEMA_PROPERTY_REQUIRED,\n      JSON_SCHEMA_PROPERTY_ENUM,\n      JSON_SCHEMA_PROPERTY_PROPERTIES,\n      JSON_SCHEMA_PROPERTY_ADDITIONAL_PROPERTIES,\n      JSON_SCHEMA_PROPERTY_PATTERN_PROPERTIES,\n      JSON_SCHEMA_PROPERTY_ALL_OF,\n      JSON_SCHEMA_PROPERTY_ONE_OF,\n      JSON_SCHEMA_PROPERTY_ANY_OF,\n      JSON_SCHEMA_PROPERTY_NOT,\n      JSON_SCHEMA_PROPERTY_NULLABLE,\n      JSON_SCHEMA_PROPERTY_READ_ONLY,\n      JSON_SCHEMA_PROPERTY_WRITE_ONLY,\n      JSON_SCHEMA_PROPERTY_EXAMPLES,\n      JSON_SCHEMA_PROPERTY_DEPRECATED,\n      JSON_SCHEMA_PROPERTY_DEFINITIONS,\n      JSON_SCHEMA_PROPERTY_REF\n    ])]\n  ]\n);\nfunction inferTypes(jso, allowedTypes, options) {\n  return allowedTypes.reduce((acc, type) => {\n    const properties = JSON_SCHEMA_TYPE_TO_DISCRIMINATOR_PROPS[type];\n    properties.filter((property) => property in jso).reduce((acc2, property) => {\n      let origins = acc2[type];\n      if (!origins) {\n        origins = [];\n        acc2[type] = origins;\n      }\n      origins.push(...(resolveOrigins(jso, property, options.originsFlag) ?? []).filter((value) => !origins.includes(value)));\n      return acc2;\n    }, acc);\n    return acc;\n  }, {});\n}\nconst isPureCombiner = (jso) => {\n  const propertyKeys = Object.keys(jso);\n  return propertyKeys.length === 1 && (JSON_SCHEMA_PROPERTY_ANY_OF === propertyKeys[0] || JSON_SCHEMA_PROPERTY_ONE_OF === propertyKeys[0] || JSON_SCHEMA_PROPERTY_NOT === propertyKeys[0]);\n};\nconst isBroken = (jso) => {\n  return JSON_SCHEMA_PROPERTY_ALL_OF in jso || JSON_SCHEMA_PROPERTY_REF in jso;\n};\nfunction isReadyToTypeInfer(jso) {\n  if (!isObject$1(jso) || isArray(jso)) {\n    return false;\n  }\n  if (isPureCombiner(jso)) {\n    return false;\n  }\n  return !isBroken(jso);\n}\nconst excludeNotAllowedTypes = (allowedTypes) => (jso, {\n  origins,\n  options\n}) => {\n  if (!isReadyToTypeInfer(jso)) {\n    return jso;\n  }\n  if (JSON_SCHEMA_PROPERTY_TYPE in jso) {\n    const allowedTypesSet = new Set(allowedTypes);\n    const existingAndAllowedTypes = singleOrArrayToArray(jso[JSON_SCHEMA_PROPERTY_TYPE]).filter((value) => allowedTypesSet.has(value));\n    if (existingAndAllowedTypes.length === 0) {\n      return combineJsonSchemaWithMetaJso(jso, options.syntheticMetaDefinitions.invertedEmptyJsonSchema(origins), options);\n    }\n    return {\n      ...jso,\n      [JSON_SCHEMA_PROPERTY_TYPE]: existingAndAllowedTypes\n    };\n  }\n  return {\n    ...jso,\n    [JSON_SCHEMA_PROPERTY_TYPE]: allowedTypes\n  };\n};\nconst jsonSchemaTypeInferWithRestriction = (allowedTypes) => ({\n  forward: (jso, { origins, options }) => {\n    if (!isReadyToTypeInfer(jso)) {\n      return jso;\n    }\n    if (JSON_SCHEMA_PROPERTY_TYPE in jso) {\n      return jso;\n    }\n    const typesToOrigins = inferTypes(jso, allowedTypes, options);\n    const types = Object.keys(typesToOrigins);\n    if (types.length === 0) {\n      return combineJsonSchemaWithMetaJso(jso, options.syntheticMetaDefinitions.emptyJsonSchema(options.createOriginsForDefaults(origins)), options);\n    }\n    const overallOrigins = uniqueItems(Object.values(typesToOrigins).flatMap((value) => value));\n    const result = {\n      ...jso,\n      [JSON_SCHEMA_PROPERTY_TYPE]: types\n    };\n    setOrigins(result, JSON_SCHEMA_PROPERTY_TYPE, options.originsFlag, overallOrigins);\n    setOriginsForArray(result[JSON_SCHEMA_PROPERTY_TYPE], options.originsFlag, types.map((type) => typesToOrigins[type]));\n    return result;\n  },\n  backward: (jso, { path, options }) => {\n    if (!isObject$1(jso) || isArray(jso)) {\n      return;\n    }\n    if (options.allowNotValidSyntheticChanges) {\n      return;\n    }\n    if (options.syntheticMetaDefinitions.omitIfAssignableToEmptyJsonSchema(jso, options.skip ? (v, p) => options.skip(v, [...path, ...p]) : void 0)) {\n      return;\n    }\n    if (options.syntheticMetaDefinitions.omitIfAssignableToInvertedEmptyJsonSchema(jso, options.skip ? (v, p) => options.skip(v, [...path, ...p]) : void 0)) {\n      Object.assign(jso, { [JSON_SCHEMA_PROPERTY_TYPE]: void 0 });\n      return;\n    }\n  }\n});\nconst jsonSchemaTypeInfer = jsonSchemaTypeInferWithRestriction(JSON_SCHEMA_NODE_TYPES);\nconst splitJsonSchemaTypeArray = (jso, { origins, options }) => {\n  if (!isObject$1(jso) || isArray(jso)) {\n    return jso;\n  }\n  if (!(JSON_SCHEMA_PROPERTY_TYPE in jso)) {\n    return jso;\n  }\n  const types = jso[JSON_SCHEMA_PROPERTY_TYPE];\n  if (!isArray(types)) {\n    return jso;\n  }\n  if (types.length === 0) {\n    return combineJsonSchemaWithMetaJso(jso, options.syntheticMetaDefinitions.invertedEmptyJsonSchema(origins), options);\n  }\n  const originsFlag = options.originsFlag;\n  const uniqueTypes = removeDuplicatesWithMergeOrigins(types, originsFlag, deepEqual);\n  if (uniqueTypes.length === 1) {\n    const result2 = {\n      ...jso,\n      [JSON_SCHEMA_PROPERTY_TYPE]: uniqueTypes[0]\n    };\n    setOrigins(result2, JSON_SCHEMA_PROPERTY_TYPE, originsFlag, resolveOrigins(uniqueTypes, 0, originsFlag));\n    return result2;\n  }\n  const typesOrigins = resolveOriginsMetaRecord(uniqueTypes, originsFlag) ?? {};\n  const { type, ...result } = jso;\n  result[JSON_SCHEMA_PROPERTY_ANY_OF] = uniqueTypes.map((type2, index) => {\n    const schemaType = { [JSON_SCHEMA_PROPERTY_TYPE]: type2 };\n    copyOrigins(uniqueTypes, schemaType, index, JSON_SCHEMA_PROPERTY_TYPE, originsFlag);\n    return schemaType;\n  });\n  copyOrigins(result, result, JSON_SCHEMA_PROPERTY_TYPE, JSON_SCHEMA_PROPERTY_ANY_OF, originsFlag);\n  setOriginsForArray(result[JSON_SCHEMA_PROPERTY_ANY_OF], originsFlag, uniqueTypes.map((_, index) => typesOrigins[index]));\n  cleanOrigins(result, JSON_SCHEMA_PROPERTY_TYPE, originsFlag);\n  return mergeProhibitLiftCombiners(result, options);\n};\nconst cleanJsonSchemaTypeSpecificProperties = (jso, { options }) => {\n  if (!isObject$1(jso) || isArray(jso)) {\n    return jso;\n  }\n  if (!(JSON_SCHEMA_PROPERTY_TYPE in jso)) {\n    return jso;\n  }\n  const types = jso[JSON_SCHEMA_PROPERTY_TYPE];\n  if (isArray(types)) {\n    return jso;\n  }\n  const notAllowedProperties = JSON_SCHEMA_TYPE_TO_RESTRICTED_PROPS[types];\n  const toCleanupProperties = Object.keys(jso).filter((key) => notAllowedProperties.has(key));\n  if (toCleanupProperties.length === 0) {\n    return jso;\n  }\n  const shallowCopy = { ...jso };\n  const defaultMetaCopy = { ...(options.defaultsFlag ? jso[options.defaultsFlag] : {}) ?? {} };\n  const originsMetaCopy = { ...resolveOriginsMetaRecord(shallowCopy, options.originsFlag) ?? {} };\n  toCleanupProperties.forEach((key) => {\n    delete shallowCopy[key];\n    delete defaultMetaCopy[key];\n    delete originsMetaCopy[key];\n  });\n  if (options.defaultsFlag) {\n    if (Object.keys(defaultMetaCopy).length === 0) {\n      delete shallowCopy[options.defaultsFlag];\n    } else {\n      shallowCopy[options.defaultsFlag] = defaultMetaCopy;\n    }\n  }\n  if (options.originsFlag) {\n    if (Object.keys(originsMetaCopy).length === 0) {\n      delete shallowCopy[options.originsFlag];\n    } else {\n      shallowCopy[options.originsFlag] = originsMetaCopy;\n    }\n  }\n  return shallowCopy;\n};\nconst TYPE_UNDEFINED = \"undefined\";\nconst TYPE_OBJECT = \"object\";\nconst TYPE_ARRAY = \"array\";\nconst TYPE_BOOLEAN = \"boolean\";\nconst TYPE_NUMBER = \"number\";\nconst TYPE_STRING = \"string\";\nfunction checkType(...expectedTypes) {\n  const f = (value) => {\n    let actualType = typeof value;\n    if (actualType === \"object\") {\n      if (value === null) {\n        actualType = TYPE_UNDEFINED;\n      }\n      if (Array.isArray(value)) {\n        actualType = TYPE_ARRAY;\n      }\n    }\n    return expectedTypes.some((type) => actualType === type);\n  };\n  Object.defineProperty(f, \"name\", { value: `checkType: ${expectedTypes.join()}`, writable: false });\n  return f;\n}\nfunction checkContains(...allowedValues) {\n  const f = (value) => {\n    return allowedValues.some((allowed) => allowed === value);\n  };\n  Object.defineProperty(f, \"name\", { value: `checkContains: ${allowedValues.join()}`, writable: false });\n  return f;\n}\nconst TYPE_JSON_ANY = [TYPE_OBJECT, TYPE_ARRAY, TYPE_BOOLEAN, TYPE_NUMBER, TYPE_STRING];\nconst unifyJsonSchemaRequired = (jso, ctx) => {\n  if (!isObject$1(jso) || isArray(jso)) {\n    return jso;\n  }\n  if (isPureCombiner(jso)) {\n    return jso;\n  }\n  if (isBroken(jso)) {\n    return jso;\n  }\n  if (!(JSON_SCHEMA_PROPERTY_PROPERTIES in jso) || !(JSON_SCHEMA_PROPERTY_REQUIRED in jso)) {\n    return jso;\n  }\n  const required = jso[JSON_SCHEMA_PROPERTY_REQUIRED];\n  const existing = new Set(Object.keys(jso[JSON_SCHEMA_PROPERTY_PROPERTIES]));\n  const itemOriginsMap = /* @__PURE__ */ new Map();\n  const newRequired = required.reduce((aggr, current, currentIndex) => {\n    if (!existing.has(current)) {\n      return aggr;\n    }\n    const currentOrigins = resolveOrigins(required, currentIndex, ctx.options.originsFlag) ?? [];\n    const previousOrigins = itemOriginsMap.get(current);\n    if (!previousOrigins) {\n      aggr.push(current);\n    }\n    itemOriginsMap.set(current, [...previousOrigins ?? [], ...currentOrigins]);\n    return aggr;\n  }, []);\n  setOriginsForArray(newRequired, ctx.options.originsFlag, newRequired.map((item) => itemOriginsMap.get(item)));\n  return required.length === newRequired.length ? jso : { ...jso, [JSON_SCHEMA_PROPERTY_REQUIRED]: newRequired };\n};\nconst unifyJsonSchemaEnums = (jso, ctx) => {\n  if (!isArray(jso)) {\n    return jso;\n  }\n  return removeDuplicatesWithMergeOrigins(jso, ctx.options.originsFlag, deepEqual);\n};\nconst cleanUpSyntheticJsonSchemaTypes = {\n  forward: (value, { options }) => {\n    if (options.allowNotValidSyntheticChanges) {\n      return value;\n    }\n    if (!isObject$1(value)) {\n      return value;\n    }\n    const jsoCandidate = { ...value };\n    const empty = options.syntheticMetaDefinitions.omitIfAssignableToEmptyJsonSchema(jsoCandidate);\n    if (empty) {\n      return combineJsonSchemaWithMetaJso(jsoCandidate, options.nativeMetaDefinitions.emptyJsonSchema(empty), options);\n    }\n    const invertedEmpty = options.syntheticMetaDefinitions.omitIfAssignableToInvertedEmptyJsonSchema(jsoCandidate);\n    if (invertedEmpty) {\n      return combineJsonSchemaWithMetaJso(jsoCandidate, options.nativeMetaDefinitions.invertedEmptyJsonSchema(invertedEmpty), options);\n    }\n    return value;\n  },\n  backward: (value, { path, options }) => {\n    if (!isObject$1(value)) {\n      return;\n    }\n    if (options.allowNotValidSyntheticChanges) {\n      return;\n    }\n    const empty = options.nativeMetaDefinitions.omitIfAssignableToEmptyJsonSchema(value, options.skip ? (v, p) => options.skip(v, [...path, ...p]) : void 0);\n    if (empty) {\n      const emptySchema = options.syntheticMetaDefinitions.emptyJsonSchema(empty);\n      mergeOrigins(value, [emptySchema], options.originsFlag);\n      const originsMetaRecord = resolveOriginsMetaRecord(value, options.originsFlag);\n      Object.assign(value, emptySchema);\n      if (options.originsFlag) {\n        setJsoProperty(value, options.originsFlag, originsMetaRecord);\n      }\n      return;\n    }\n    const invertedEmpty = options.nativeMetaDefinitions.omitIfAssignableToInvertedEmptyJsonSchema(value, options.skip ? (v, p) => options.skip(v, [...path, ...p]) : void 0);\n    if (invertedEmpty) {\n      const invertedEmptyJsonSchema = options.syntheticMetaDefinitions.invertedEmptyJsonSchema(invertedEmpty);\n      mergeOrigins(value, [invertedEmptyJsonSchema], options.originsFlag);\n      const originsMetaRecord = resolveOriginsMetaRecord(value, options.originsFlag);\n      Object.assign(value, invertedEmptyJsonSchema);\n      if (options.originsFlag) {\n        setJsoProperty(value, options.originsFlag, originsMetaRecord);\n      }\n    }\n  }\n};\nconst forwardOnlyCleanUpSyntheticJsonSchemaTypes = (value, { options }) => {\n  if (options.allowNotValidSyntheticChanges) {\n    return value;\n  }\n  if (!isObject$1(value)) {\n    return value;\n  }\n  const jsoCandidate = { ...value };\n  const empty = options.syntheticMetaDefinitions.omitIfAssignableToEmptyJsonSchema(jsoCandidate);\n  if (empty) {\n    return jsoCandidate;\n  }\n  const invertedEmpty = options.syntheticMetaDefinitions.omitIfAssignableToInvertedEmptyJsonSchema(jsoCandidate);\n  if (invertedEmpty) {\n    return combineJsonSchemaWithMetaJso(jsoCandidate, options.nativeMetaDefinitions.invertedEmptyJsonSchema(invertedEmpty), options);\n  }\n  return value;\n};\nconst PLACE_HOLDER_JSO$1 = {};\nconst resolveDefaultValue = (defaultValueOrFunction, jso, ctx) => {\n  return typeof defaultValueOrFunction === \"function\" ? defaultValueOrFunction(jso, ctx) : defaultValueOrFunction;\n};\nconst valueDefaults = (map) => {\n  return {\n    forward: (jso, ctx) => {\n      const { options, origins } = ctx;\n      if (!isObject$1(jso) || isArray(jso)) {\n        return jso;\n      }\n      if (isPureCombiner(jso)) {\n        return jso;\n      }\n      if (isBroken(jso)) {\n        return jso;\n      }\n      let shallowJso = PLACE_HOLDER_JSO$1;\n      const defaultsMeta = { ...options.defaultsFlag ? jso[options.defaultsFlag] ?? {} : {} };\n      const overrideDefaultsKeys = new Set(Object.keys(defaultsMeta));\n      let hasDefaults = false;\n      const originsForDefaults = options.originsFlag ? options.createOriginsForDefaults(origins) : void 0;\n      Object.entries(map).forEach(([propertyKey, defaultValueOrFunction]) => {\n        const defaultValue = resolveDefaultValue(defaultValueOrFunction, jso, ctx);\n        if (defaultValue === void 0) {\n          return;\n        }\n        if (!(propertyKey in jso)) {\n          if (shallowJso === PLACE_HOLDER_JSO$1) {\n            shallowJso = { ...jso };\n          }\n          shallowJso[propertyKey] = defaultValue;\n          defaultsMeta[propertyKey] = DEFAULT_TYPE_FLAG_SYNTHETIC;\n          hasDefaults = true;\n        } else {\n          if (jso[propertyKey] === defaultValue) {\n            defaultsMeta[propertyKey] = overrideDefaultsKeys.has(propertyKey) ? defaultsMeta[propertyKey] : DEFAULT_TYPE_FLAG_PURE;\n            hasDefaults = true;\n          }\n        }\n      });\n      if (shallowJso === PLACE_HOLDER_JSO$1) {\n        if (hasDefaults && options.defaultsFlag) {\n          return {\n            ...jso,\n            [options.defaultsFlag]: defaultsMeta\n          };\n        } else {\n          return jso;\n        }\n      }\n      if (options.defaultsFlag) {\n        shallowJso[options.defaultsFlag] = defaultsMeta;\n      }\n      if (options.originsFlag) {\n        const defaults = Object.entries(defaultsMeta).filter(([key, value]) => value === DEFAULT_TYPE_FLAG_SYNTHETIC).map(([key]) => key);\n        if (defaults.length > 0 && originsForDefaults) {\n          const newOrigins = defaults.reduce((collector, key) => {\n            collector[key] = originsForDefaults;\n            return collector;\n          }, { ...resolveOriginsMetaRecord(shallowJso, options.originsFlag) ?? {} });\n          setJsoProperty(shallowJso, options.originsFlag, newOrigins);\n        }\n      }\n      return shallowJso;\n    },\n    backward: (jso, ctx) => {\n      const { path, options } = ctx;\n      if (!isObject$1(jso) || isArray(jso)) {\n        return;\n      }\n      if (isBroken(jso)) {\n        return;\n      }\n      if (options.defaultsFlag) {\n        delete jso[options.defaultsFlag];\n      }\n      const candidates = Object.entries(map).flatMap(([key, defaultValueOrFunction]) => {\n        if (!(key in jso)) {\n          return [];\n        }\n        const defaultValue = resolveDefaultValue(defaultValueOrFunction, jso, ctx);\n        if (defaultValue === void 0) {\n          return [];\n        }\n        return [{ value: jso[key], key, defaultValue }];\n      }).filter(({ defaultValue, value }) => defaultValue === value).filter(({ key, value }) => !options.skip || !options.skip(value, [...path, key]));\n      candidates.reverse().forEach(({ key: propertyKey }) => {\n        delete jso[propertyKey];\n      });\n      cleanSeveralOrigins(jso, candidates.map((value) => value.key), options.originsFlag);\n    }\n  };\n};\nconst PLACE_HOLDER_JSO = {};\nconst deepEqualsMatcher = (one) => (another) => {\n  return deepEqual(one, another);\n};\nconst valueReplaces = (map) => {\n  return {\n    forward: (jso, { options }) => {\n      if (!isObject$1(jso) || isArray(jso)) {\n        return jso;\n      }\n      if (isPureCombiner(jso)) {\n        return jso;\n      }\n      if (isBroken(jso)) {\n        return jso;\n      }\n      let shallowJso = PLACE_HOLDER_JSO;\n      Object.entries(map).forEach(([propertyKey, f]) => {\n        var _a;\n        if (propertyKey in jso) {\n          const value = jso[propertyKey];\n          const replace = (_a = f.mapping) == null ? void 0 : _a.get(value);\n          if (replace) {\n            if (shallowJso === PLACE_HOLDER_JSO) {\n              shallowJso = { ...jso };\n            }\n            shallowJso[propertyKey] = replace.value(resolveOrigins(shallowJso, propertyKey, options.originsFlag), options);\n          }\n        }\n      });\n      if (shallowJso === PLACE_HOLDER_JSO) {\n        return jso;\n      }\n      return shallowJso;\n    },\n    backward: (jso, { path, options }) => {\n      if (!isObject$1(jso) || isArray(jso)) {\n        return;\n      }\n      if (isBroken(jso)) {\n        return;\n      }\n      const candidates = Object.entries(map).flatMap(([key, f]) => key in jso ? [{ value: jso[key], key, f }] : []).filter(({ key, value }) => !options.skip || !options.skip(value, [...path, key]));\n      const ignorePropertyKeys = new Set(Object.keys(map));\n      options.ignoreSymbols.forEach((s) => ignorePropertyKeys.add(s));\n      candidates.reverse().forEach(({ key: propertyKey, value, f }) => {\n        const mapping = f.mapping ?? /* @__PURE__ */ new Map();\n        [...mapping.entries()].some(([replaceMappingValue, possibleValue]) => {\n          if (possibleValue.reverseMatcher(value, ignorePropertyKeys, options)) {\n            jso[propertyKey] = replaceMappingValue;\n            return true;\n          }\n          return false;\n        });\n      });\n    }\n  };\n};\nconst ANY_VALUE = Symbol(\"any-value\");\nconst deepCircularEqualsWithPropertyFilter = createCustomEqual((defaultOptions) => ({\n  ...defaultOptions,\n  areObjectsEqual: (a, b, isEqual, meta) => {\n    const result = meta.cache.cacheEvaluationResultByFootprint(\n      [a, b],\n      ([aJso, bJso]) => {\n        const propertyFilter = (jso) => (key) => {\n          const ignoreProperty = meta.ignoreProperties[key];\n          if (!ignoreProperty) {\n            return true;\n          }\n          if (ignoreProperty === ANY_VALUE) {\n            return false;\n          }\n          const originalValue = jso[key];\n          return !isEqual(originalValue, ignoreProperty, key, key, jso, void 0, meta);\n        };\n        const keysA = Reflect.ownKeys(aJso).filter(propertyFilter(aJso));\n        const keysB = Reflect.ownKeys(bJso).filter(propertyFilter(bJso));\n        if (keysB.length !== keysA.length) {\n          return { value: false };\n        }\n        let aKeyIndex = keysA.length;\n        while (aKeyIndex-- > 0) {\n          const key = keysA[aKeyIndex];\n          if (!(key in bJso) || !isEqual(aJso[key], bJso[key], key, key, aJso, bJso, meta)) {\n            return { value: false };\n          }\n        }\n        return { value: true };\n      },\n      { value: void 0 },\n      (result2, guard) => {\n        guard.value = result2.value;\n        return guard;\n      }\n    );\n    return result.value ?? true;\n  },\n  //for speared array support\n  areArraysEqual: (a, b, isEqual, meta) => {\n    const result = meta.cache.cacheEvaluationResultByFootprint(\n      [a, b],\n      ([aJso, bJso]) => {\n        const propertyFilter = (key) => {\n          const ignoreProperty = meta.ignoreProperties[key];\n          if (!ignoreProperty) {\n            return true;\n          }\n          return ignoreProperty !== ANY_VALUE;\n        };\n        const keysA = anyArrayKeys(aJso).filter(propertyFilter);\n        const keysB = anyArrayKeys(bJso).filter(propertyFilter);\n        if (keysB.length !== keysA.length) {\n          return { value: false };\n        }\n        let aKeyIndex = keysA.length;\n        while (aKeyIndex-- > 0) {\n          const key = keysA[aKeyIndex];\n          if (!(key in bJso) || !isEqual(aJso[key], bJso[key], key, key, aJso, bJso, meta)) {\n            return { value: false };\n          }\n        }\n        return { value: true };\n      },\n      { value: void 0 },\n      (result2, guard) => {\n        guard.value = result2.value;\n        return guard;\n      }\n    );\n    return result.value ?? true;\n  },\n  areMapsEqual: () => {\n    throw \"Not supported\";\n  }\n}));\nconst createEvaluationCacheService = () => {\n  const instanceMap = /* @__PURE__ */ new Map();\n  const cache = /* @__PURE__ */ new Map();\n  const instanceToFootprint = (jso) => {\n    const instanceId = instanceMap.get(jso);\n    if (instanceId !== void 0) {\n      return instanceId;\n    }\n    const id = (instanceMap.size + 1).toString();\n    instanceMap.set(jso, id);\n    return id;\n  };\n  const uniqueInstancesFootprint = (jso) => {\n    const rawItems = isArray(jso) ? jso.map((instanceMap2) => instanceToFootprint(instanceMap2)) : [instanceToFootprint(jso)];\n    const usedItems = new Set(rawItems);\n    return rawItems.reduceRight((collector, currentValue) => {\n      if (usedItems.has(currentValue)) {\n        collector.push(currentValue);\n        usedItems.delete(currentValue);\n      }\n      return collector;\n    }, []).join();\n  };\n  function cacheEvaluationResultByFootprint(jso, evaluate, cyclicGuardResult, mergeResultWithGuard) {\n    const footprint = uniqueInstancesFootprint(jso);\n    let instance = cache.get(footprint);\n    if (instance === void 0) {\n      cache.set(footprint, cyclicGuardResult);\n      instance = evaluate(jso);\n      if (cyclicGuardResult !== void 0 && mergeResultWithGuard !== void 0) {\n        instance = mergeResultWithGuard(instance, cyclicGuardResult);\n      }\n      cache.set(footprint, instance);\n    }\n    return instance;\n  }\n  return {\n    cacheEvaluationResultByFootprint\n  };\n};\nfunction createPropertySpreadWithCacheService(propertyKey) {\n  const cache = /* @__PURE__ */ new Map();\n  function spreadOrReuse(jso) {\n    const result = cache.get(jso);\n    if (result) {\n      return result;\n    }\n    const jsoCopy = { ...jso };\n    const firstArg = jso[propertyKey];\n    if (firstArg === void 0) {\n      return [void 0, jso];\n    }\n    delete jsoCopy[propertyKey];\n    const spread = [firstArg, jsoCopy];\n    cache.set(jso, spread);\n    return spread;\n  }\n  return {\n    spreadOrReuse\n  };\n}\nconst PREDICATE_ANY_VALUE = Symbol(\"?\");\nconst PREDICATE_UNCLOSED_END = Symbol(\"**\");\nconst grepValue = (name) => {\n  return { name };\n};\nfunction matchPath(path, predicates) {\n  const predicateMap = new Map(predicates.map((value, index) => [index, value]));\n  const state = path.reduce((state2, pathItem, currentIndex) => {\n    state2.predicateMap.forEach((predicate, key, map) => {\n      if (predicate.length === 0) {\n        currentIndex === path.length ? map.set(key, predicate) : map.delete(key);\n      }\n      const predicateCopy = [...predicate];\n      const currentItemPredicate = predicateCopy.shift();\n      if (isObject$1(currentItemPredicate)) {\n        const name = currentItemPredicate.name;\n        state2.result[name] = pathItem;\n        map.set(key, predicateCopy);\n      } else {\n        switch (currentItemPredicate) {\n          case PREDICATE_ANY_VALUE: {\n            return map.set(key, predicateCopy);\n          }\n          case PREDICATE_UNCLOSED_END: {\n            return map.set(key, [PREDICATE_UNCLOSED_END, ...predicateCopy]);\n          }\n          default: {\n            if (pathItem === currentItemPredicate) {\n              map.set(key, predicateCopy);\n            } else {\n              map.delete(key);\n            }\n          }\n        }\n      }\n    });\n    return { ...state2, predicateMap };\n  }, { result: {}, predicateMap });\n  if (state.predicateMap.size === 0) {\n    return void 0;\n  }\n  return {\n    path,\n    predicate: predicates[state.predicateMap.keys().next().value],\n    grepValues: state.result\n  };\n}\nconst matchPaths = (paths, predicates) => {\n  return paths.reduce((matchResult, path) => {\n    if (matchResult) {\n      return matchResult;\n    }\n    return matchPath(path, predicates);\n  }, void 0);\n};\nconst calculateMatchingDepth = ({ predicate }) => {\n  let gap = 1;\n  if (predicate[predicate.length - 1] === PREDICATE_UNCLOSED_END) {\n    gap += 1;\n  }\n  return predicate.length - gap;\n};\nconst OPEN_API_HTTP_METHOD_GET = \"get\";\nconst OPEN_API_HTTP_METHOD_POST = \"post\";\nconst OPEN_API_HTTP_METHOD_PUT = \"put\";\nconst OPEN_API_HTTP_METHOD_DELETE = \"delete\";\nconst OPEN_API_HTTP_METHOD_PATCH = \"patch\";\nconst OPEN_API_HTTP_METHOD_OPTIONS = \"options\";\nconst OPEN_API_HTTP_METHOD_HEAD = \"head\";\nconst OPEN_API_HTTP_METHOD_TRACE = \"trace\";\nconst OPEN_API_HTTP_METHODS = [\n  OPEN_API_HTTP_METHOD_GET,\n  OPEN_API_HTTP_METHOD_POST,\n  OPEN_API_HTTP_METHOD_PUT,\n  OPEN_API_HTTP_METHOD_DELETE,\n  OPEN_API_HTTP_METHOD_PATCH,\n  OPEN_API_HTTP_METHOD_OPTIONS,\n  OPEN_API_HTTP_METHOD_HEAD,\n  OPEN_API_HTTP_METHOD_TRACE\n];\nconst OPEN_API_PROPERTY_PARAMETERS = \"parameters\";\nconst OPEN_API_PROPERTY_TAGS = \"tags\";\nconst OPEN_API_PROPERTY_DEPRECATED = \"deprecated\";\nconst OPEN_API_PROPERTY_REQUIRED = \"required\";\nconst OPEN_API_PROPERTY_ALLOW_EMPTY_VALUE = \"allowEmptyValue\";\nconst OPEN_API_PROPERTY_ALLOW_RESERVED = \"allowReserved\";\nconst OPEN_API_PROPERTY_HEADERS = \"headers\";\nconst OPEN_API_PROPERTY_EXAMPLES = \"examples\";\nconst OPEN_API_PROPERTY_EXAMPLE = \"example\";\nconst OPEN_API_PROPERTY_VALUE = \"value\";\nconst OPEN_API_PROPERTY_COMPONENTS = \"components\";\nconst OPEN_API_PROPERTY_PATHS = \"paths\";\nconst OPEN_API_PROPERTY_RESPONSES = \"responses\";\nconst OPEN_API_PROPERTY_REQUEST_BODIES = \"requestBodies\";\nconst OPEN_API_PROPERTY_REQUEST_BODY = \"requestBody\";\nconst OPEN_API_PROPERTY_SCHEMAS = \"schemas\";\nconst OPEN_API_PROPERTY_SCHEMA = \"schema\";\nconst OPEN_API_PROPERTY_LINKS = \"links\";\nconst OPEN_API_PROPERTY_SECURITY_SCHEMAS = \"securitySchemes\";\nconst OPEN_API_PROPERTY_DESCRIPTION = \"description\";\nconst OPEN_API_PROPERTY_SUMMARY = \"summary\";\nconst OPEN_API_PROPERTY_CONTENT = \"content\";\nconst OPEN_API_PROPERTY_ENCODING = \"encoding\";\nconst OPEN_API_PROPERTY_STYLE = \"style\";\nconst OPEN_API_JSON_SCHEMA_PROPERTY_XML = \"xml\";\nconst OPEN_API_JSON_SCHEMA_PROPERTY_WRAPPED = \"wrapped\";\nconst OPEN_API_JSON_SCHEMA_PROPERTY_ATTRIBUTE = \"attribute\";\nconst startFromOpenApiComponents = (jsonPath) => {\n  return jsonPath.length > 0 && jsonPath[0] === OPEN_API_PROPERTY_COMPONENTS;\n};\nconst startFromOpenApiComponentsHeaders = (jsonPaths) => {\n  return !!openApiComponentsHeadersMatchResult(jsonPaths);\n};\nconst startFromOpenApiPaths = (jsonPath) => {\n  return !!matchPaths(jsonPath, [[OPEN_API_PROPERTY_PATHS, PREDICATE_UNCLOSED_END]]);\n};\nconst startFromOpenApiComponentsResponses = (jsonPaths) => {\n  return !!openApiComponentsResponsesMatchResult(jsonPaths);\n};\nconst openApiComponentsMatchResult = (jsonPaths) => {\n  return matchPaths(jsonPaths, [[OPEN_API_PROPERTY_COMPONENTS, PREDICATE_UNCLOSED_END]]);\n};\nconst openApiComponentsResponsesMatchResult = (jsonPaths) => {\n  return matchPaths(jsonPaths, [[OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_RESPONSES, PREDICATE_UNCLOSED_END]]);\n};\nconst openApiComponentsHeadersMatchResult = (jsonPaths) => {\n  return matchPaths(jsonPaths, [[OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_HEADERS, PREDICATE_UNCLOSED_END]]);\n};\nconst calculateHeaderName = (paths, key) => {\n  var _a;\n  if (startFromOpenApiComponentsHeaders(paths)) {\n    return `'${declarationPathsToRefName((_a = openApiComponentsHeadersMatchResult(paths)) == null ? void 0 : _a.path)}'`;\n  }\n  if (paths.some(startFromOpenApiComponents)) {\n    return \"\";\n  }\n  return `'${key.toString()}'`;\n};\nconst calculateHeaderPlace = (paths, suffix) => {\n  var _a;\n  if (startFromOpenApiPaths(paths)) {\n    return `${suffix}`;\n  }\n  if (startFromOpenApiComponentsResponses(paths)) {\n    return `in '${declarationPathsToRefName((_a = openApiComponentsResponsesMatchResult(paths)) == null ? void 0 : _a.path)}'`;\n  }\n  return \"\";\n};\nfunction calculateParameterName(ctx) {\n  var _a;\n  if (ctx.paths.every(startFromOpenApiComponents)) {\n    return `'${declarationPathsToRefName((_a = openApiComponentsMatchResult(ctx.paths)) == null ? void 0 : _a.path)}'`;\n  }\n  return `'${ctx.source.name}'`;\n}\nconst calculateSchemaName = (ctx) => {\n  var _a;\n  if (ctx.paths.some(startFromOpenApiComponents)) {\n    return `in '${declarationPathsToRefName((_a = openApiComponentsMatchResult(ctx.paths)) == null ? void 0 : _a.path)}'`;\n  }\n  return `${ctx.suffix}`;\n};\nfunction declarationPathsToRefName(path = []) {\n  const filteredPath = path.filter((item) => item !== \"deprecated\");\n  return filteredPath.join(\".\");\n}\nfunction nonEmptyString(str) {\n  return (str == null ? void 0 : str.length) ? ` ${str}` : \"\";\n}\nconst OPEN_API_DEPRECATION_META_KEY = \"x-deprecated-meta\";\nconst OPEN_API_DEPRECATION_WITHOUT_REASON = \"\";\nconst OPEN_API_DEPRECATION_RESOLVER = (value) => {\n  if (!getJsoProperty(value, OPEN_API_PROPERTY_DEPRECATED)) {\n    return void 0;\n  } else if (OPEN_API_DEPRECATION_META_KEY in value && typeof value[OPEN_API_DEPRECATION_META_KEY] === \"string\") {\n    return value[OPEN_API_DEPRECATION_META_KEY];\n  } else {\n    return OPEN_API_DEPRECATION_WITHOUT_REASON;\n  }\n};\nconst JSON_SCHEMA_DEPRECATION_RESOLVER = OPEN_API_DEPRECATION_RESOLVER;\nfunction notAllowedReferenceHandler({\n  options,\n  state,\n  safeKey,\n  ref,\n  path,\n  value\n}) {\n  var _a;\n  (_a = options.onRefResolveError) == null ? void 0 : _a.call(options, ErrorMessage.referenceNotAllowed(ref), path, ref, RefErrorTypes.REF_NOT_ALLOWED);\n  state.node[safeKey] = value;\n  return { done: true };\n}\nfunction referenceObjectResolver(overrides) {\n  return ({ resolveDefaultReference }) => {\n    const overrideFieldsWithSiblings = ({\n      options,\n      state,\n      resolvedRef,\n      originForObj,\n      sibling\n    }) => {\n      const { refValue, origin } = resolvedRef;\n      const referenceValue = refValue;\n      options.originsFlag && getOrReuseOrigin(referenceValue, originForObj, state.originCache);\n      const childrenOrigins = {};\n      if (!(overrides == null ? void 0 : overrides.length) || !isObject$1(sibling) || Reflect.ownKeys(sibling).length === 0) {\n        return { refValue: referenceValue, origin, childrenOrigins };\n      }\n      const referenceValueWithSibling = { ...referenceValue };\n      overrides.forEach((safeKey) => {\n        if (safeKey in sibling) {\n          referenceValueWithSibling[safeKey] = sibling[safeKey];\n          childrenOrigins[safeKey] = [{\n            parent: originForObj,\n            value: safeKey\n          }];\n        }\n      });\n      options.originsFlag && getOrReuseOrigin(sibling, originForObj, state.originCache);\n      return { refValue: referenceValueWithSibling, origin, childrenOrigins };\n    };\n    return resolveDefaultReference(overrideFieldsWithSiblings);\n  };\n}\nfunction jsonSchemaReferenceResolver({ richRefAllowed }) {\n  return ({ resolveDefaultReference, ref, path }) => {\n    const wrapRefWithAllOfIfNeed = ({\n      options,\n      state,\n      resolvedRef,\n      originForObj,\n      sibling,\n      rules,\n      syntheticTitleCache,\n      reference\n    }) => {\n      var _a;\n      const { refValue, origin } = resolvedRef;\n      if (!richRefAllowed && Reflect.ownKeys(sibling).length !== 0) {\n        (_a = options.onRefResolveError) == null ? void 0 : _a.call(options, ErrorMessage.richRefObjectNotAllowed(ref), path, ref, RefErrorTypes.RICH_REF_NOT_ALLOWED);\n        sibling = {};\n      }\n      const referenceValue = refValue;\n      const wrap2 = { [JSON_SCHEMA_PROPERTY_ALL_OF]: [] };\n      options.originsFlag && getOrReuseOrigin(wrap2, originForObj, state.originCache);\n      options.originsFlag && getOrReuseOrigin(wrap2[JSON_SCHEMA_PROPERTY_ALL_OF], originForObj, state.originCache);\n      options.syntheticAllOfFlag && setJsoProperty(wrap2, options.syntheticAllOfFlag, true);\n      let titleIndex = -1;\n      let refIndex = 0;\n      let siblingIndex = -1;\n      if (options.syntheticTitleFlag && (rules == null ? void 0 : rules.resolvedReferenceNamePropertyKey)) {\n        let syntheticTitle = syntheticTitleCache == null ? void 0 : syntheticTitleCache.get(reference.normalized);\n        if (syntheticTitle === void 0) {\n          syntheticTitle = evaluateSyntheticTitle(reference.jsonPath, options.syntheticTitleFlag, rules.resolvedReferenceNamePropertyKey);\n          syntheticTitleCache.set(reference.normalized, syntheticTitle);\n          state.lazySourceOriginCollector.set(syntheticTitle, { [rules.resolvedReferenceNamePropertyKey]: origin ? [origin] : [] });\n        }\n        wrap2.allOf.push(syntheticTitle);\n        titleIndex = 0;\n        refIndex++;\n      }\n      wrap2.allOf.push(referenceValue);\n      options.originsFlag && getOrReuseOrigin(referenceValue, originForObj, state.originCache);\n      if (Reflect.ownKeys(sibling).length) {\n        wrap2.allOf.push(sibling);\n        siblingIndex = refIndex + 1;\n        options.originsFlag && getOrReuseOrigin(sibling, originForObj, state.originCache);\n      }\n      return wrap2.allOf.length === 1 ? { refValue: referenceValue, origin, childrenOrigins: {} } : { refValue: wrap2, titleIndex, refIndex, siblingIndex, origin };\n    };\n    return resolveDefaultReference(wrapRefWithAllOfIfNeed);\n  };\n}\nconst EMPTY_MARKER$2 = Symbol(\"empty-items\");\nconst JSON_SCHEMA_DEFAULTS_COMMON = {\n  [JSON_SCHEMA_PROPERTY_ADDITIONAL_PROPERTIES]: true,\n  [JSON_SCHEMA_PROPERTY_MIN_LENGTH]: 0,\n  [JSON_SCHEMA_PROPERTY_MIN_PROPERTIES]: 0,\n  [JSON_SCHEMA_PROPERTY_MIN_ITEMS]: 0,\n  [JSON_SCHEMA_PROPERTY_UNIQUE_ITEMS]: false,\n  [JSON_SCHEMA_PROPERTY_REQUIRED]: EMPTY_MARKER$2,\n  [JSON_SCHEMA_PROPERTY_PROPERTIES]: EMPTY_MARKER$2,\n  [JSON_SCHEMA_PROPERTY_PATTERN_PROPERTIES]: EMPTY_MARKER$2\n};\nconst JSON_SCHEMA_DEFAULTS = {\n  [SPEC_TYPE_JSON_SCHEMA_04]: {\n    ...JSON_SCHEMA_DEFAULTS_COMMON,\n    //not extends to next version\n    [JSON_SCHEMA_PROPERTY_EXCLUSIVE_MINIMUM]: false,\n    [JSON_SCHEMA_PROPERTY_EXCLUSIVE_MAXIMUM]: false\n  },\n  [SPEC_TYPE_JSON_SCHEMA_06]: {\n    ...JSON_SCHEMA_DEFAULTS_COMMON\n  },\n  [SPEC_TYPE_JSON_SCHEMA_07]: {\n    ...JSON_SCHEMA_DEFAULTS_COMMON,\n    [JSON_SCHEMA_PROPERTY_READ_ONLY]: false,\n    [JSON_SCHEMA_PROPERTY_WRITE_ONLY]: false,\n    [JSON_SCHEMA_PROPERTY_DEPRECATED]: false\n  }\n};\nconst JSON_SCHEMA_DEFAULTS_UNIFY_FUNCTION = {\n  [SPEC_TYPE_JSON_SCHEMA_04]: valueDefaults(JSON_SCHEMA_DEFAULTS[SPEC_TYPE_JSON_SCHEMA_04]),\n  [SPEC_TYPE_JSON_SCHEMA_06]: valueDefaults(JSON_SCHEMA_DEFAULTS[SPEC_TYPE_JSON_SCHEMA_06]),\n  [SPEC_TYPE_JSON_SCHEMA_07]: valueDefaults(JSON_SCHEMA_DEFAULTS[SPEC_TYPE_JSON_SCHEMA_07])\n};\nconst IGNORED_IN_FUTURE_ORIGINS = [];\nconst deepEqualsWithEmptySchema = (value, extraIgnoreProperties, opts) => {\n  const syntheticAny = { ...opts.syntheticMetaDefinitions.emptyJsonSchema(IGNORED_IN_FUTURE_ORIGINS) };\n  const nativeAny = { ...opts.nativeMetaDefinitions.emptyJsonSchema(IGNORED_IN_FUTURE_ORIGINS) };\n  extraIgnoreProperties.forEach((key) => {\n    delete syntheticAny[key];\n    delete nativeAny[key];\n  });\n  const compareConfig = {\n    cache: createEvaluationCacheService(),\n    ignoreProperties: {\n      ...syntheticAny,\n      ...nativeAny,\n      ...[...extraIgnoreProperties].reduce((collector, prop) => {\n        collector[prop] = ANY_VALUE;\n        return collector;\n      }, {})\n    }\n  };\n  return deepCircularEqualsWithPropertyFilter(value, {}, compareConfig);\n};\nconst deepEqualsWithInvertedEmptySchema = (value, extraIgnoreProperties, opts) => {\n  const compareConfig = {\n    cache: createEvaluationCacheService(),\n    ignoreProperties: {\n      ...opts.syntheticMetaDefinitions.invertedEmptyJsonSchema(IGNORED_IN_FUTURE_ORIGINS),\n      ...opts.nativeMetaDefinitions.invertedEmptyJsonSchema(IGNORED_IN_FUTURE_ORIGINS),\n      ...{ [JSON_SCHEMA_PROPERTY_NOT]: {} },\n      // abuse. Find better solution please\n      ...[...extraIgnoreProperties].reduce((collector, prop) => {\n        collector[prop] = ANY_VALUE;\n        return collector;\n      }, {})\n    }\n  };\n  return deepCircularEqualsWithPropertyFilter(value, {}, compareConfig);\n};\nconst JSON_SCHEMA_REPLACES_COMMON = {\n  [JSON_SCHEMA_PROPERTY_REQUIRED]: {\n    mapping: /* @__PURE__ */ new Map([[EMPTY_MARKER$2, {\n      value: () => [],\n      reverseMatcher: deepEqualsMatcher([])\n    }]])\n  },\n  [JSON_SCHEMA_PROPERTY_PROPERTIES]: {\n    mapping: /* @__PURE__ */ new Map([[EMPTY_MARKER$2, {\n      value: () => ({}),\n      reverseMatcher: deepEqualsMatcher({})\n    }]])\n  },\n  [JSON_SCHEMA_PROPERTY_PATTERN_PROPERTIES]: {\n    mapping: /* @__PURE__ */ new Map([[EMPTY_MARKER$2, {\n      value: () => ({}),\n      reverseMatcher: deepEqualsMatcher({})\n    }]])\n  },\n  [JSON_SCHEMA_PROPERTY_ADDITIONAL_PROPERTIES]: {\n    mapping: /* @__PURE__ */ new Map([\n      [true, {\n        value: (origins, opts) => opts.syntheticMetaDefinitions.emptyJsonSchema(origins),\n        reverseMatcher: deepEqualsWithEmptySchema\n      }],\n      [false, {\n        value: (origins, opts) => opts.syntheticMetaDefinitions.invertedEmptyJsonSchema(origins),\n        reverseMatcher: deepEqualsWithInvertedEmptySchema\n      }]\n    ])\n  }\n};\nconst JSON_SCHEMA_REPLACES = {\n  [SPEC_TYPE_JSON_SCHEMA_04]: {\n    ...JSON_SCHEMA_REPLACES_COMMON\n  },\n  [SPEC_TYPE_JSON_SCHEMA_06]: {\n    ...JSON_SCHEMA_REPLACES_COMMON\n  },\n  [SPEC_TYPE_JSON_SCHEMA_07]: {\n    ...JSON_SCHEMA_REPLACES_COMMON\n  }\n};\nconst JSON_SCHEMA_REPLACES_UNIFY_FUNCTION = {\n  [SPEC_TYPE_JSON_SCHEMA_04]: valueReplaces(JSON_SCHEMA_REPLACES[SPEC_TYPE_JSON_SCHEMA_04]),\n  [SPEC_TYPE_JSON_SCHEMA_06]: valueReplaces(JSON_SCHEMA_REPLACES[SPEC_TYPE_JSON_SCHEMA_06]),\n  [SPEC_TYPE_JSON_SCHEMA_07]: valueReplaces(JSON_SCHEMA_REPLACES[SPEC_TYPE_JSON_SCHEMA_07])\n};\nconst referenceResolverRuleFunction = (version) => {\n  switch (version) {\n    case SPEC_TYPE_JSON_SCHEMA_07:\n      return jsonSchemaReferenceResolver({ richRefAllowed: true });\n    default:\n      return jsonSchemaReferenceResolver({ richRefAllowed: false });\n  }\n};\nconst versionSpecific = {\n  [SPEC_TYPE_JSON_SCHEMA_04]: () => ({}),\n  [SPEC_TYPE_JSON_SCHEMA_06]: (self) => ({\n    // [`/${JSON_SCHEMA_PROPERTY_CONTENT_MEDIA_TYPE}`]:{}, loose type matching :(\n    \"/contentMediaType\": {\n      validate: checkType(TYPE_STRING),\n      merge: last,\n      hashStrategy: CURRENT_DATA_LEVEL\n    },\n    \"/const\": {\n      validate: checkType(...TYPE_JSON_ANY),\n      merge: equal,\n      \"/**\": { validate: checkType(...TYPE_JSON_ANY) },\n      hashStrategy: CURRENT_DATA_LEVEL\n    },\n    \"/propertyNames\": () => {\n      const common = self();\n      return {\n        ...common,\n        //maybe better to remove propertyNames at all?\n        unify: insertIntoArrayByInstruction(concatArrays$1(common.unify), replaceValue(jsonSchemaTypeInfer, excludeNotAllowedTypes([JSON_SCHEMA_NODE_TYPE_STRING]))),\n        hashStrategy: CURRENT_DATA_LEVEL\n      };\n    },\n    \"/contains\": self,\n    \"/dependencies\": {\n      \"/*\": ({ value }) => Array.isArray(value) ? {\n        validate: checkType(TYPE_ARRAY),\n        \"/*\": {\n          validate: checkType(TYPE_STRING)\n        }\n      } : self(),\n      validate: checkType(TYPE_OBJECT),\n      merge: dependenciesMergeResolver,\n      hashStrategy: CURRENT_DATA_LEVEL\n    },\n    \"/defs\": {\n      \"/*\": self,\n      validate: checkType(TYPE_OBJECT),\n      merge: mergeObjects,\n      hashStrategy: CURRENT_DATA_LEVEL\n    },\n    \"/additionalProperties\": () => ({\n      ...self(),\n      merge: additionalPropertiesMergeResolver,\n      hashStrategy: BEFORE_SECOND_DATA_LEVEL,\n      newDataLayer: true\n    }),\n    \"/additionalItems\": () => ({\n      ...self(),\n      merge: additionalItemsMergeResolver,\n      hashStrategy: CURRENT_DATA_LEVEL,\n      newDataLayer: true\n    }),\n    \"/exclusiveMaximum\": {\n      validate: checkType(TYPE_NUMBER),\n      merge: minValue,\n      //todo how it works for allOf\n      hashStrategy: CURRENT_DATA_LEVEL\n    },\n    \"/exclusiveMinimum\": {\n      validate: checkType(TYPE_NUMBER),\n      merge: maxValue,\n      //todo how it works for allOf\n      hashStrategy: CURRENT_DATA_LEVEL\n    },\n    validate: checkType(TYPE_OBJECT, TYPE_BOOLEAN)\n  }),\n  [SPEC_TYPE_JSON_SCHEMA_07]: (self) => ({\n    ...versionSpecific[SPEC_TYPE_JSON_SCHEMA_06](self),\n    \"/readOnly\": {\n      validate: checkType(TYPE_BOOLEAN),\n      merge: or,\n      hashStrategy: CURRENT_DATA_LEVEL\n    },\n    \"/writeOnly\": {\n      validate: checkType(TYPE_BOOLEAN),\n      merge: or,\n      hashStrategy: CURRENT_DATA_LEVEL\n    },\n    \"/deprecated\": {\n      merge: or,\n      validate: checkType(TYPE_BOOLEAN),\n      hashStrategy: CURRENT_DATA_LEVEL\n    }\n  })\n};\nconst jsonSchemaRules = (version, self = () => jsonSchemaRules(version)) => ({\n  \"/type\": ({ value }) => ({\n    ...typeof value === \"string\" ? { validate: [checkContains(...JSON_SCHEMA_NODE_TYPES)] } : {\n      validate: checkType(TYPE_ARRAY),\n      \"/*\": { validate: [checkType(TYPE_STRING), checkContains(...JSON_SCHEMA_NODE_TYPES)] }\n    },\n    merge: mergeTypes,\n    hashStrategy: BEFORE_SECOND_DATA_LEVEL\n  }),\n  \"/title\": {\n    validate: checkType(TYPE_STRING),\n    merge: last\n  },\n  \"/description\": {\n    validate: checkType(TYPE_STRING),\n    merge: last\n  },\n  \"/format\": {\n    validate: checkType(TYPE_STRING),\n    merge: last,\n    hashStrategy: CURRENT_DATA_LEVEL\n  },\n  \"/default\": {\n    validate: checkType(...TYPE_JSON_ANY),\n    merge: last,\n    \"/**\": { validate: checkType(...TYPE_JSON_ANY) },\n    hashStrategy: CURRENT_DATA_LEVEL\n  },\n  \"/multipleOf\": {\n    validate: checkType(TYPE_NUMBER),\n    merge: mergeMultipleOf,\n    hashStrategy: CURRENT_DATA_LEVEL\n  },\n  \"/maximum\": {\n    validate: checkType(TYPE_NUMBER),\n    merge: minValue,\n    hashStrategy: CURRENT_DATA_LEVEL\n  },\n  \"/exclusiveMaximum\": {\n    validate: checkType(TYPE_BOOLEAN),\n    merge: or,\n    hashStrategy: CURRENT_DATA_LEVEL\n  },\n  \"/minimum\": {\n    validate: checkType(TYPE_NUMBER),\n    merge: maxValue,\n    hashStrategy: CURRENT_DATA_LEVEL\n  },\n  \"/exclusiveMinimum\": {\n    validate: checkType(TYPE_BOOLEAN),\n    merge: or,\n    hashStrategy: CURRENT_DATA_LEVEL\n  },\n  \"/maxLength\": {\n    validate: checkType(TYPE_NUMBER),\n    merge: minValue,\n    hashStrategy: CURRENT_DATA_LEVEL\n  },\n  \"/minLength\": {\n    validate: checkType(TYPE_NUMBER),\n    merge: maxValue,\n    hashStrategy: CURRENT_DATA_LEVEL\n  },\n  \"/pattern\": {\n    validate: checkType(TYPE_STRING),\n    merge: mergePattern,\n    hashStrategy: CURRENT_DATA_LEVEL\n  },\n  \"/maxItems\": {\n    validate: checkType(TYPE_NUMBER),\n    merge: minValue,\n    hashStrategy: CURRENT_DATA_LEVEL\n  },\n  \"/minItems\": {\n    validate: checkType(TYPE_NUMBER),\n    merge: maxValue,\n    hashStrategy: CURRENT_DATA_LEVEL\n  },\n  \"/uniqueItems\": {\n    validate: checkType(TYPE_BOOLEAN),\n    merge: or,\n    hashStrategy: CURRENT_DATA_LEVEL\n  },\n  \"/maxProperties\": {\n    validate: checkType(TYPE_NUMBER),\n    merge: minValue,\n    hashStrategy: CURRENT_DATA_LEVEL\n  },\n  \"/minProperties\": {\n    validate: checkType(TYPE_NUMBER),\n    merge: maxValue,\n    hashStrategy: CURRENT_DATA_LEVEL\n  },\n  \"/items\": ({ value }) => ({\n    ...Array.isArray(value) ? {\n      validate: [checkType(TYPE_ARRAY)],\n      \"/*\": {\n        ...self(),\n        hashStrategy: BEFORE_SECOND_DATA_LEVEL,\n        newDataLayer: true\n      }\n    } : {\n      ...self(),\n      newDataLayer: true\n    },\n    merge: itemsMergeResolver,\n    hashStrategy: CURRENT_DATA_LEVEL\n  }),\n  deprecation: {\n    deprecationResolver: (ctx) => JSON_SCHEMA_DEPRECATION_RESOLVER(ctx),\n    descriptionCalculator: (ctx) => `[Deprecated] schema ${calculateSchemaName(ctx)}`\n  },\n  \"/additionalItems\": ({ value }) => ({\n    ...typeof value === \"boolean\" ? { validate: [] } : {\n      ...self(),\n      newDataLayer: true\n    },\n    merge: additionalItemsMergeResolver,\n    hashStrategy: CURRENT_DATA_LEVEL\n  }),\n  \"/required\": {\n    validate: checkType(TYPE_ARRAY),\n    merge: mergeStringSets,\n    \"/*\": {\n      validate: checkType(TYPE_STRING),\n      hashStrategy: BEFORE_SECOND_DATA_LEVEL\n    },\n    hashStrategy: CURRENT_DATA_LEVEL\n  },\n  \"/enum\": {\n    validate: checkType(TYPE_ARRAY),\n    merge: mergeEnum,\n    unify: unifyJsonSchemaEnums,\n    \"/**\": {\n      validate: checkType(...TYPE_JSON_ANY),\n      hashStrategy: CURRENT_DATA_LEVEL\n    },\n    hashStrategy: CURRENT_DATA_LEVEL\n  },\n  \"/properties\": {\n    \"/*\": () => ({\n      ...self(),\n      newDataLayer: true,\n      hashStrategy: BEFORE_SECOND_DATA_LEVEL\n    }),\n    validate: checkType(TYPE_OBJECT),\n    merge: propertiesMergeResolver,\n    hashStrategy: CURRENT_DATA_LEVEL\n  },\n  \"/additionalProperties\": ({ value }) => ({\n    ...typeof value === \"boolean\" ? { validate: [] } : self(),\n    merge: additionalPropertiesMergeResolver,\n    hashStrategy: BEFORE_SECOND_DATA_LEVEL,\n    newDataLayer: true\n  }),\n  \"/patternProperties\": {\n    \"/*\": () => ({\n      ...self(),\n      newDataLayer: true,\n      hashStrategy: BEFORE_SECOND_DATA_LEVEL\n    }),\n    validate: checkType(TYPE_OBJECT),\n    merge: propertiesMergeResolver,\n    hashStrategy: CURRENT_DATA_LEVEL\n  },\n  \"/oneOf\": {\n    validate: checkType(TYPE_ARRAY),\n    merge: mergeCombination,\n    \"/*\": () => ({ ...self(), hashStrategy: BEFORE_SECOND_DATA_LEVEL }),\n    hashStrategy: BEFORE_SECOND_DATA_LEVEL\n  },\n  \"/anyOf\": {\n    validate: checkType(TYPE_ARRAY),\n    merge: mergeCombination,\n    \"/*\": self,\n    hashStrategy: BEFORE_SECOND_DATA_LEVEL\n  },\n  \"/not\": () => ({\n    ...self(),\n    merge: mergeNot,\n    hashStrategy: BEFORE_SECOND_DATA_LEVEL\n  }),\n  //TODO NOT BY SPECIFICATION. ONLY IN 06 VERSION. NC SPECIFIC EXCLUSION\n  \"/examples\": {\n    validate: checkType(TYPE_ARRAY),\n    merge: last,\n    \"/**\": {\n      validate: checkType(...TYPE_JSON_ANY)\n    }\n  },\n  \"/definitions\": {\n    \"/*\": self,\n    validate: checkType(TYPE_OBJECT),\n    merge: mergeObjects,\n    hashStrategy: BEFORE_SECOND_DATA_LEVEL\n  },\n  \"/allOf\": {\n    validate: checkType(TYPE_ARRAY),\n    //actually this contains only dead allOf. Cause all other should be already resolved\n    merge: concatArrays,\n    \"/*\": self,\n    hashStrategy: BEFORE_SECOND_DATA_LEVEL\n  },\n  \"/$ref\": {\n    validate: checkType(TYPE_STRING),\n    //actually this contains only dead refs. Cause all other should be already resolved\n    merge: concatString,\n    //why anyOf?\n    hashStrategy: BEFORE_SECOND_DATA_LEVEL\n  },\n  \"/**\": { referenceHandler: notAllowedReferenceHandler },\n  //4.3.2. Boolean JSON Schemas - not supported. Cause not tested\n  // The boolean schema values \"true\" and \"false\" are trivial schemas that always produce themselves as assertion results, regardless of the instance value. They never produce annotation results.\n  //\n  // These boolean schemas exist to clarify schema author intent and facilitate schema processing optimizations. They behave identically to the following schema objects (where \"not\" is part of the subschema application vocabulary defined in this document).\n  //\n  // true:\n  // Always passes validation, as if the empty schema {}\n  // false:\n  // Always fails validation, as if the schema { \"not\": {} }\n  // While the empty schema object is unambiguous, there are many possible equivalents to the \"false\" schema. Using the boolean values ensures that the intent is clear to both human readers and implementations.\n  validate: checkType(TYPE_OBJECT),\n  referenceHandler: referenceResolverRuleFunction(version),\n  merge: jsonSchemaMergeResolver,\n  canLiftCombiners: true,\n  resolvedReferenceNamePropertyKey: JSON_SCHEMA_PROPERTY_TITLE,\n  unify: [\n    extractEmptyJsonSchema,\n    jsonSchemaTypeInfer,\n    JSON_SCHEMA_DEFAULTS_UNIFY_FUNCTION[version],\n    JSON_SCHEMA_REPLACES_UNIFY_FUNCTION[version],\n    splitJsonSchemaTypeArray,\n    cleanJsonSchemaTypeSpecificProperties,\n    unifyJsonSchemaRequired,\n    cleanUpSyntheticJsonSchemaTypes\n  ],\n  mandatoryUnify: [forwardOnlyCleanUpSyntheticJsonSchemaTypes],\n  ...versionSpecific[version](self),\n  hashStrategy: CURRENT_DATA_LEVEL,\n  hashOwner: true\n});\nvar dist = {};\n(function(exports) {\n  exports.__esModule = true;\n  exports.OpenAPIV2 = exports.OpenAPIV3 = void 0;\n  (function(OpenAPIV3) {\n    (function(HttpMethods) {\n      HttpMethods[\"GET\"] = \"get\";\n      HttpMethods[\"PUT\"] = \"put\";\n      HttpMethods[\"POST\"] = \"post\";\n      HttpMethods[\"DELETE\"] = \"delete\";\n      HttpMethods[\"OPTIONS\"] = \"options\";\n      HttpMethods[\"HEAD\"] = \"head\";\n      HttpMethods[\"PATCH\"] = \"patch\";\n      HttpMethods[\"TRACE\"] = \"trace\";\n    })(OpenAPIV3.HttpMethods || (OpenAPIV3.HttpMethods = {}));\n  })(exports.OpenAPIV3 || (exports.OpenAPIV3 = {}));\n  (function(OpenAPIV2) {\n    (function(HttpMethods) {\n      HttpMethods[\"GET\"] = \"get\";\n      HttpMethods[\"PUT\"] = \"put\";\n      HttpMethods[\"POST\"] = \"post\";\n      HttpMethods[\"DELETE\"] = \"delete\";\n      HttpMethods[\"OPTIONS\"] = \"options\";\n      HttpMethods[\"HEAD\"] = \"head\";\n      HttpMethods[\"PATCH\"] = \"patch\";\n    })(OpenAPIV2.HttpMethods || (OpenAPIV2.HttpMethods = {}));\n  })(exports.OpenAPIV2 || (exports.OpenAPIV2 = {}));\n})(dist);\nconst EXTENSION_PREFIX = \"x-\";\nconst pathItemsUnification = (value, { options }) => {\n  if (!isObject$1(value)) {\n    return value;\n  }\n  const pathItem = value;\n  const {\n    parameters: pathParameters,\n    servers: pathServers,\n    summary: pathSummary,\n    description: pathDescription,\n    ...restItems\n  } = pathItem;\n  if (!pathParameters && !pathServers && !pathSummary && !pathDescription) {\n    return value;\n  }\n  const { symbols, extensionKeys } = Reflect.ownKeys(restItems).reduce((result, key) => {\n    if (typeof key === \"symbol\") {\n      result.symbols[key] = value[key];\n    }\n    if (typeof key === \"string\" && key.startsWith(EXTENSION_PREFIX)) {\n      result.extensionKeys.add(key);\n    }\n    return result;\n  }, { symbols: {}, extensionKeys: /* @__PURE__ */ new Set() });\n  const newPathItem = OPEN_API_HTTP_METHODS.reduce((result, method) => {\n    const operation = pathItem[method];\n    if (!operation) {\n      return result;\n    }\n    result[method] = operation;\n    concatenateArraysInProperty(pathItem, operation, \"parameters\", options.originsFlag);\n    concatenateArraysInProperty(pathItem, operation, \"servers\", options.originsFlag);\n    if (operation.summary === void 0 && pathSummary !== void 0) {\n      copyProperty(pathItem, operation, \"summary\", options.originsFlag);\n    }\n    if (operation.description === void 0 && pathDescription !== void 0) {\n      copyProperty(pathItem, operation, \"description\", options.originsFlag);\n    }\n    extensionKeys.forEach((extensionKey) => {\n      if (!(extensionKey in operation)) {\n        copyProperty(pathItem, operation, extensionKey, options.originsFlag);\n      }\n    });\n    return result;\n  }, { ...symbols });\n  cleanSeveralOrigins(newPathItem, [\"parameters\", \"servers\", \"summary\", \"description\", ...extensionKeys], options.originsFlag);\n  if (Object.keys(newPathItem).length === 0) {\n    return value;\n  }\n  return newPathItem;\n};\nconst OPEN_API_30_JSON_SCHEMA_NODE_TYPES = [\n  JSON_SCHEMA_NODE_TYPE_BOOLEAN,\n  JSON_SCHEMA_NODE_TYPE_STRING,\n  JSON_SCHEMA_NODE_TYPE_NUMBER,\n  JSON_SCHEMA_NODE_TYPE_INTEGER,\n  JSON_SCHEMA_NODE_TYPE_OBJECT,\n  JSON_SCHEMA_NODE_TYPE_ARRAY\n];\nconst EMPTY_MARKER$1 = Symbol(\"empty-items\");\nconst TO_EMPTY_OBJECT_MAPPING$1 = {\n  mapping: /* @__PURE__ */ new Map([[EMPTY_MARKER$1, {\n    value: () => ({}),\n    reverseMatcher: deepEqualsMatcher({})\n  }]])\n};\nconst TO_EMPTY_ARRAY_MAPPING$1 = {\n  mapping: /* @__PURE__ */ new Map([[EMPTY_MARKER$1, {\n    value: () => [],\n    reverseMatcher: deepEqualsMatcher([])\n  }]])\n};\nconst OPEN_API_30_JSON_SCHEMA_DEFAULTS = {\n  ...JSON_SCHEMA_DEFAULTS[SPEC_TYPE_JSON_SCHEMA_04],\n  [JSON_SCHEMA_PROPERTY_NULLABLE]: false,\n  [JSON_SCHEMA_PROPERTY_READ_ONLY]: false,\n  [JSON_SCHEMA_PROPERTY_WRITE_ONLY]: false,\n  [JSON_SCHEMA_PROPERTY_DEPRECATED]: false,\n  [JSON_SCHEMA_PROPERTY_ITEMS]: EMPTY_MARKER$1,\n  [OPEN_API_JSON_SCHEMA_PROPERTY_XML]: EMPTY_MARKER$1\n};\ndelete OPEN_API_30_JSON_SCHEMA_DEFAULTS[JSON_SCHEMA_PROPERTY_PATTERN_PROPERTIES];\nconst OPEN_API_30_JSON_SCHEMA_REPLACES = {\n  ...JSON_SCHEMA_REPLACES[SPEC_TYPE_JSON_SCHEMA_04],\n  [JSON_SCHEMA_PROPERTY_ITEMS]: {\n    mapping: /* @__PURE__ */ new Map([\n      [EMPTY_MARKER$1, {\n        value: (origins, opts) => opts.syntheticMetaDefinitions.emptyJsonSchema(origins),\n        reverseMatcher: deepEqualsWithEmptySchema\n      }]\n    ])\n  },\n  [OPEN_API_JSON_SCHEMA_PROPERTY_XML]: TO_EMPTY_OBJECT_MAPPING$1\n};\ndelete OPEN_API_30_JSON_SCHEMA_REPLACES[JSON_SCHEMA_PROPERTY_PATTERN_PROPERTIES];\nconst OPEN_API_OPERATION_DEFAULTS = {\n  [OPEN_API_PROPERTY_PARAMETERS]: EMPTY_MARKER$1,\n  [OPEN_API_PROPERTY_TAGS]: EMPTY_MARKER$1,\n  [OPEN_API_PROPERTY_DEPRECATED]: false\n};\nconst OPEN_API_OPERATION_REPLACES = {\n  [OPEN_API_PROPERTY_PARAMETERS]: TO_EMPTY_ARRAY_MAPPING$1,\n  [OPEN_API_PROPERTY_TAGS]: TO_EMPTY_ARRAY_MAPPING$1\n};\nconst OPEN_API_RESPONSE_DEFAULTS = {\n  [OPEN_API_PROPERTY_HEADERS]: EMPTY_MARKER$1\n};\nconst OPEN_API_RESPONSE_REPLACES = {\n  [OPEN_API_PROPERTY_HEADERS]: TO_EMPTY_OBJECT_MAPPING$1\n};\nconst OPEN_API_ENCODING_DEFAULTS = {\n  [OPEN_API_PROPERTY_HEADERS]: EMPTY_MARKER$1,\n  [OPEN_API_PROPERTY_ALLOW_RESERVED]: false\n};\nconst OPEN_API_ENCODING_REPLACES = {\n  [OPEN_API_PROPERTY_HEADERS]: TO_EMPTY_OBJECT_MAPPING$1\n};\nconst getOperationParameterStyleDefault = (parameter) => {\n  const inValue = parameter.in;\n  switch (inValue) {\n    case \"query\":\n    case \"cookie\":\n      return \"form\";\n    case \"path\":\n    case \"header\":\n      return \"simple\";\n  }\n};\nconst getXmlWrappedDefault = (jso, ctx) => {\n  if (ctx.parentValue && typeof ctx.parentValue === \"object\" && \"type\" in ctx.parentValue && ctx.parentValue.type === JSON_SCHEMA_NODE_TYPE_ARRAY) {\n    return false;\n  }\n  return void 0;\n};\nconst OPEN_API_PARAMETER_DEFAULTS = {\n  [OPEN_API_PROPERTY_DEPRECATED]: false,\n  [OPEN_API_PROPERTY_REQUIRED]: false,\n  [OPEN_API_PROPERTY_ALLOW_EMPTY_VALUE]: false,\n  [OPEN_API_PROPERTY_ALLOW_RESERVED]: false,\n  [OPEN_API_PROPERTY_EXAMPLES]: EMPTY_MARKER$1,\n  [OPEN_API_PROPERTY_STYLE]: getOperationParameterStyleDefault\n};\nconst OPEN_API_PARAMETER_REPLACES = {\n  [OPEN_API_PROPERTY_EXAMPLES]: TO_EMPTY_OBJECT_MAPPING$1\n};\nconst OPEN_API_HEADER_DEFAULTS = {\n  ...OPEN_API_PARAMETER_DEFAULTS\n};\nconst OPEN_API_HEADER_REPLACES = {\n  ...OPEN_API_PARAMETER_REPLACES\n};\nconst OPEN_API_MEDIA_TYPE_DEFAULTS = {\n  [OPEN_API_PROPERTY_EXAMPLES]: EMPTY_MARKER$1,\n  [OPEN_API_PROPERTY_ENCODING]: EMPTY_MARKER$1\n};\nconst OPEN_API_MEDIA_TYPE_REPLACES = {\n  [OPEN_API_PROPERTY_EXAMPLES]: TO_EMPTY_OBJECT_MAPPING$1,\n  [OPEN_API_PROPERTY_ENCODING]: TO_EMPTY_OBJECT_MAPPING$1\n};\nconst OPEN_API_REQUEST_BODY_DEFAULTS = {\n  [OPEN_API_PROPERTY_REQUIRED]: false\n};\nconst OPEN_API_XML_DEFAULTS = {\n  [OPEN_API_JSON_SCHEMA_PROPERTY_WRAPPED]: getXmlWrappedDefault,\n  [OPEN_API_JSON_SCHEMA_PROPERTY_ATTRIBUTE]: false\n};\nconst OPEN_API_ROOT_DEFAULTS = {\n  [OPEN_API_PROPERTY_PATHS]: EMPTY_MARKER$1,\n  [OPEN_API_PROPERTY_COMPONENTS]: EMPTY_MARKER$1\n};\nconst OPEN_API_ROOT_REPLACES = {\n  [OPEN_API_PROPERTY_PATHS]: TO_EMPTY_OBJECT_MAPPING$1,\n  [OPEN_API_PROPERTY_COMPONENTS]: TO_EMPTY_OBJECT_MAPPING$1\n};\nconst OPEN_API_COMPONENTS_DEFAULTS = {\n  [OPEN_API_PROPERTY_SECURITY_SCHEMAS]: EMPTY_MARKER$1,\n  [OPEN_API_PROPERTY_LINKS]: EMPTY_MARKER$1,\n  [OPEN_API_PROPERTY_SCHEMAS]: EMPTY_MARKER$1,\n  [OPEN_API_PROPERTY_RESPONSES]: EMPTY_MARKER$1,\n  [OPEN_API_PROPERTY_PARAMETERS]: EMPTY_MARKER$1,\n  [OPEN_API_PROPERTY_REQUEST_BODIES]: EMPTY_MARKER$1,\n  [OPEN_API_PROPERTY_HEADERS]: EMPTY_MARKER$1,\n  [OPEN_API_PROPERTY_EXAMPLES]: EMPTY_MARKER$1\n};\nconst OPEN_API_COMPONENTS_REPLACES = {\n  [OPEN_API_PROPERTY_SECURITY_SCHEMAS]: TO_EMPTY_OBJECT_MAPPING$1,\n  [OPEN_API_PROPERTY_LINKS]: TO_EMPTY_OBJECT_MAPPING$1,\n  [OPEN_API_PROPERTY_SCHEMAS]: TO_EMPTY_OBJECT_MAPPING$1,\n  [OPEN_API_PROPERTY_RESPONSES]: TO_EMPTY_OBJECT_MAPPING$1,\n  [OPEN_API_PROPERTY_PARAMETERS]: TO_EMPTY_OBJECT_MAPPING$1,\n  [OPEN_API_PROPERTY_REQUEST_BODIES]: TO_EMPTY_OBJECT_MAPPING$1,\n  [OPEN_API_PROPERTY_HEADERS]: TO_EMPTY_OBJECT_MAPPING$1,\n  [OPEN_API_PROPERTY_EXAMPLES]: TO_EMPTY_OBJECT_MAPPING$1\n};\nfunction referenceObjectRuleFunction({\n  version,\n  allowedOverrides\n}) {\n  switch (version) {\n    case SPEC_TYPE_OPEN_API_31:\n      return referenceObjectResolver(allowedOverrides);\n    case SPEC_TYPE_OPEN_API_30:\n      return referenceObjectResolver();\n    default:\n      return notAllowedReferenceHandler;\n  }\n}\nconst openApiExtensionRulesFunction = (elseRules) => ({\n  \"/*\": (ctx) => {\n    const { key } = ctx;\n    return typeof key === \"string\" && key.startsWith(\"x-\") ? {\n      isExtension: true,\n      validate: checkType(...TYPE_JSON_ANY),\n      merge: last,\n      \"/**\": { validate: checkType(...TYPE_JSON_ANY) }\n    } : typeof elseRules === \"function\" ? elseRules() : elseRules;\n  }\n});\nconst openApiExtensionRules = openApiExtensionRulesFunction({ validate: () => false });\nconst openApiExternalDocsRules = {\n  \"/externalDocs\": {\n    validate: checkType(TYPE_OBJECT),\n    merge: last,\n    \"/description\": { validate: checkType(TYPE_STRING) },\n    \"/url\": { validate: checkType(TYPE_STRING) },\n    ...openApiExtensionRules\n  }\n};\nconst openApiExampleRules = {\n  \"/example\": {\n    validate: checkType(...TYPE_JSON_ANY),\n    \"/**\": { validate: checkType(...TYPE_JSON_ANY) }\n  }\n};\nconst openApiExamplesRules = (version) => ({\n  \"/examples\": {\n    validate: checkType(TYPE_OBJECT),\n    merge: last,\n    \"/*\": {\n      ...openApiExtensionRulesFunction({\n        validate: checkType(...TYPE_JSON_ANY)\n      }),\n      referenceHandler: referenceObjectRuleFunction({\n        version,\n        allowedOverrides: [OPEN_API_PROPERTY_DESCRIPTION, OPEN_API_PROPERTY_SUMMARY]\n      })\n    },\n    \"/**\": { validate: checkType(...TYPE_JSON_ANY) }\n  }\n});\nconst openApiOAuthScopesRules = {\n  \"/*\": { validate: checkType(TYPE_STRING) },\n  validate: checkType(TYPE_OBJECT)\n};\nconst openApiServerRules = {\n  \"/url\": { validate: checkType(TYPE_STRING) },\n  \"/description\": { validate: checkType(TYPE_STRING) },\n  \"/variables\": {\n    \"/*\": {\n      \"/enum\": {\n        \"/*\": { validate: checkType(TYPE_STRING) },\n        validate: checkType(TYPE_ARRAY)\n      },\n      \"/default\": { validate: checkType(TYPE_STRING) },\n      \"/description\": { validate: checkType(TYPE_STRING) },\n      ...openApiExtensionRules,\n      validate: checkType(TYPE_OBJECT)\n    },\n    validate: checkType(TYPE_OBJECT)\n  },\n  ...openApiExtensionRules,\n  validate: checkType(TYPE_OBJECT)\n};\nconst openApiServersRules = {\n  \"/servers\": {\n    \"/*\": openApiServerRules,\n    validate: checkType(TYPE_ARRAY)\n  }\n};\nconst openApiSecurityRules = {\n  \"/security\": {\n    \"/*\": {\n      \"/*\": {\n        \"/*\": {\n          validate: checkType(TYPE_STRING)\n        },\n        validate: checkType(TYPE_ARRAY)\n      },\n      validate: checkType(TYPE_OBJECT)\n    },\n    validate: checkType(TYPE_ARRAY)\n  }\n};\nconst openApiLinksRules = (version) => ({\n  \"/*\": {\n    \"/operationId\": { validate: checkType(TYPE_STRING) },\n    \"/operationRef\": { validate: checkType(TYPE_STRING) },\n    \"/parameters\": {\n      \"/**\": { validate: checkType(...TYPE_JSON_ANY) },\n      validate: checkType(TYPE_OBJECT)\n    },\n    \"/requestBody\": {\n      \"/**\": { validate: checkType(...TYPE_JSON_ANY) },\n      validate: checkType(...TYPE_JSON_ANY)\n    },\n    \"/description\": { validate: checkType(TYPE_STRING) },\n    \"/server\": openApiServerRules,\n    ...openApiExtensionRules,\n    validate: checkType(TYPE_OBJECT),\n    referenceHandler: referenceObjectRuleFunction({ version, allowedOverrides: [OPEN_API_PROPERTY_DESCRIPTION] })\n  },\n  validate: checkType(TYPE_OBJECT)\n});\nconst openApiJsonSchemaExtensionRules = () => ({\n  \"/xml\": {\n    validate: checkType(...TYPE_JSON_ANY),\n    merge: mergeObjects,\n    unify: [\n      valueDefaults(OPEN_API_XML_DEFAULTS)\n    ],\n    ...openApiExtensionRulesFunction({ validate: checkType(...TYPE_JSON_ANY) }),\n    \"/**\": { validate: checkType(...TYPE_JSON_ANY) }\n  },\n  \"/discriminator\": {\n    validate: checkType(TYPE_OBJECT),\n    merge: last,\n    //todo need check\n    \"/propertyName\": {\n      validate: checkType(TYPE_STRING),\n      merge: last\n      //todo need check\n    },\n    \"/mapping\": {\n      validate: checkType(TYPE_OBJECT),\n      merge: last,\n      //todo need check\n      \"/*\": {\n        validate: checkType(TYPE_STRING),\n        merge: last\n        //todo need check\n      }\n    }\n  },\n  ...openApiExternalDocsRules,\n  ...openApiExtensionRules\n});\nconst customFor30JsonSchemaRulesFactory = () => {\n  const baseJsonSchemaVersion = SPEC_TYPE_JSON_SCHEMA_04;\n  const core = jsonSchemaRules(baseJsonSchemaVersion, () => customFor30JsonSchemaRules);\n  const extension = openApiJsonSchemaExtensionRules();\n  return {\n    ...core,\n    ...extension,\n    \"/type\": {\n      validate: [checkType(TYPE_STRING), checkContains(...OPEN_API_30_JSON_SCHEMA_NODE_TYPES)],\n      merge: mergeTypes,\n      hashStrategy: BEFORE_SECOND_DATA_LEVEL\n    },\n    \"/items\": () => ({\n      ...customFor30JsonSchemaRules,\n      merge: itemsMergeResolver,\n      hashStrategy: CURRENT_DATA_LEVEL,\n      newDataLayer: true\n    }),\n    \"/additionalItems\": {\n      validate: () => false,\n      hashStrategy: BEFORE_SECOND_DATA_LEVEL,\n      newDataLayer: true\n    },\n    \"/patternProperties\": {\n      validate: () => false,\n      hashStrategy: BEFORE_SECOND_DATA_LEVEL,\n      newDataLayer: true\n    },\n    \"/readOnly\": {\n      validate: checkType(TYPE_BOOLEAN),\n      merge: or,\n      hashStrategy: CURRENT_DATA_LEVEL\n    },\n    \"/writeOnly\": {\n      validate: checkType(TYPE_BOOLEAN),\n      merge: or,\n      hashStrategy: CURRENT_DATA_LEVEL\n    },\n    \"/deprecated\": {\n      validate: checkType(TYPE_BOOLEAN),\n      merge: or,\n      hashStrategy: CURRENT_DATA_LEVEL\n    },\n    \"/nullable\": {\n      validate: checkType(TYPE_BOOLEAN),\n      merge: or,\n      //todo need check\n      hashStrategy: CURRENT_DATA_LEVEL\n    },\n    \"/example\": {\n      validate: checkType(...TYPE_JSON_ANY),\n      merge: last,\n      \"/**\": { validate: checkType(...TYPE_JSON_ANY) },\n      hashStrategy: CURRENT_DATA_LEVEL\n    },\n    unify: insertIntoArrayByInstruction(\n      concatArrays$1(core.unify, extension.unify),\n      replaceValue(JSON_SCHEMA_DEFAULTS_UNIFY_FUNCTION[baseJsonSchemaVersion], valueDefaults(OPEN_API_30_JSON_SCHEMA_DEFAULTS)),\n      replaceValue(JSON_SCHEMA_REPLACES_UNIFY_FUNCTION[baseJsonSchemaVersion], valueReplaces(OPEN_API_30_JSON_SCHEMA_REPLACES)),\n      replaceValue(jsonSchemaTypeInfer, jsonSchemaTypeInferWithRestriction(OPEN_API_30_JSON_SCHEMA_NODE_TYPES))\n    )\n  };\n};\nconst customFor30JsonSchemaRules = customFor30JsonSchemaRulesFactory();\nconst customFor31JsonSchemaRulesFactory = () => ({\n  ...jsonSchemaRules(SPEC_TYPE_JSON_SCHEMA_07, () => customFor31JsonSchemaRules),\n  ...openApiJsonSchemaExtensionRules()\n});\nconst customFor31JsonSchemaRules = customFor31JsonSchemaRulesFactory();\nconst openApiJsonSchemaRules = (version) => {\n  switch (version) {\n    case SPEC_TYPE_OPEN_API_30:\n      return customFor30JsonSchemaRules;\n    case SPEC_TYPE_OPEN_API_31:\n      return customFor31JsonSchemaRules;\n  }\n};\nconst openApiMediaTypesRules = (version) => ({\n  \"/*\": {\n    \"/schema\": openApiJsonSchemaRules(version),\n    deprecation: {\n      inlineDescriptionSuffixCalculator: (ctx) => `${ctx.suffix} (${ctx.key.toString()})`\n    },\n    ...openApiExampleRules,\n    ...openApiExamplesRules(version),\n    \"/encoding\": {\n      \"/*\": {\n        deprecation: {\n          inlineDescriptionSuffixCalculator: (ctx) => `in encoding '${ctx.key.toString()}' ${ctx.suffix}`\n        },\n        \"/contentType\": { validate: checkType(TYPE_STRING) },\n        \"/headers\": () => openApiHeadersRules(version),\n        //break cycle\n        \"/style\": { validate: checkType(TYPE_STRING) },\n        \"/explode\": { validate: checkType(TYPE_BOOLEAN) },\n        \"/allowReserved\": { validate: checkType(TYPE_BOOLEAN) },\n        unify: [\n          valueDefaults(OPEN_API_ENCODING_DEFAULTS),\n          valueReplaces(OPEN_API_ENCODING_REPLACES)\n        ],\n        validate: checkType(TYPE_OBJECT),\n        ...openApiExtensionRules\n      },\n      validate: checkType(TYPE_OBJECT)\n    },\n    ...openApiExtensionRules,\n    unify: [\n      valueDefaults(OPEN_API_MEDIA_TYPE_DEFAULTS),\n      valueReplaces(OPEN_API_MEDIA_TYPE_REPLACES)\n    ],\n    validate: checkType(TYPE_OBJECT)\n  },\n  validate: checkType(TYPE_OBJECT)\n});\nconst openApiHeadersRules = (version) => ({\n  \"/*\": {\n    deprecation: {\n      deprecationResolver: (ctx) => OPEN_API_DEPRECATION_RESOLVER(ctx),\n      descriptionCalculator: (ctx) => `[Deprecated] header${nonEmptyString(calculateHeaderName(ctx.paths, ctx.key))}${nonEmptyString(calculateHeaderPlace(ctx.paths, ctx.suffix))}`,\n      inlineDescriptionSuffixCalculator: (ctx) => `in header '${ctx.key.toString()}' ${ctx.suffix}`\n    },\n    \"/description\": { validate: checkType(TYPE_STRING) },\n    \"/required\": { validate: checkType(TYPE_BOOLEAN) },\n    \"/deprecated\": { validate: checkType(TYPE_BOOLEAN) },\n    \"/allowEmptyValue\": { validate: checkType(TYPE_BOOLEAN) },\n    \"/style\": { validate: checkType(TYPE_STRING) },\n    \"/explode\": { validate: checkType(TYPE_BOOLEAN) },\n    \"/allowReserved\": { validate: checkType(TYPE_BOOLEAN) },\n    \"/content\": openApiMediaTypesRules(version),\n    ...openApiExampleRules,\n    ...openApiExamplesRules(version),\n    \"/schema\": openApiJsonSchemaRules(version),\n    ...openApiExtensionRules,\n    referenceHandler: referenceObjectRuleFunction({ version, allowedOverrides: [OPEN_API_PROPERTY_DESCRIPTION] }),\n    validate: checkType(TYPE_OBJECT),\n    unify: [\n      valueDefaults(OPEN_API_HEADER_DEFAULTS),\n      valueReplaces(OPEN_API_HEADER_REPLACES)\n    ]\n  },\n  deprecation: {\n    inlineDescriptionSuffixCalculator: (ctx) => `${ctx.suffix}`\n  },\n  validate: checkType(TYPE_OBJECT)\n});\nconst openApiParametersRules = (version) => ({\n  \"/*\": {\n    deprecation: {\n      inlineDescriptionSuffixCalculator: (ctx) => `in ${ctx.source.in} parameter '${ctx.source.name}'`,\n      deprecationResolver: (ctx) => OPEN_API_DEPRECATION_RESOLVER(ctx),\n      descriptionCalculator: (ctx) => `[Deprecated] ${ctx.source.in} parameter ${calculateParameterName(ctx)}`\n    },\n    \"/name\": {\n      validate: checkType(TYPE_STRING),\n      hashStrategy: CURRENT_DATA_LEVEL\n    },\n    \"/in\": {\n      validate: checkType(TYPE_STRING),\n      hashStrategy: CURRENT_DATA_LEVEL\n    },\n    \"/description\": { validate: checkType(TYPE_STRING) },\n    \"/required\": {\n      validate: checkType(TYPE_BOOLEAN),\n      hashStrategy: CURRENT_DATA_LEVEL\n    },\n    \"/deprecated\": {\n      validate: checkType(TYPE_BOOLEAN),\n      hashStrategy: CURRENT_DATA_LEVEL\n    },\n    \"/allowEmptyValue\": {\n      validate: checkType(TYPE_BOOLEAN),\n      hashStrategy: CURRENT_DATA_LEVEL\n    },\n    \"/style\": {\n      validate: checkType(TYPE_STRING),\n      hashStrategy: CURRENT_DATA_LEVEL\n    },\n    \"/explode\": {\n      validate: checkType(TYPE_BOOLEAN),\n      hashStrategy: CURRENT_DATA_LEVEL\n    },\n    \"/allowReserved\": {\n      validate: checkType(TYPE_BOOLEAN),\n      hashStrategy: CURRENT_DATA_LEVEL\n    },\n    \"/content\": openApiMediaTypesRules(version),\n    ...openApiExampleRules,\n    ...openApiExamplesRules(version),\n    \"/schema\": () => ({\n      ...openApiJsonSchemaRules(version),\n      newDataLayer: true\n    }),\n    ...openApiExtensionRules,\n    referenceHandler: referenceObjectRuleFunction({ version, allowedOverrides: [OPEN_API_PROPERTY_DESCRIPTION] }),\n    validate: checkType(TYPE_OBJECT),\n    unify: [\n      valueDefaults(OPEN_API_PARAMETER_DEFAULTS),\n      valueReplaces(OPEN_API_PARAMETER_REPLACES)\n    ],\n    hashStrategy: BEFORE_SECOND_DATA_LEVEL,\n    hashOwner: true\n  },\n  validate: checkType(TYPE_ARRAY)\n});\nconst openApiRequestRules = (version) => ({\n  \"/description\": { validate: checkType(TYPE_STRING) },\n  \"/required\": { validate: checkType(TYPE_BOOLEAN) },\n  \"/content\": openApiMediaTypesRules(version),\n  ...openApiExtensionRules,\n  referenceHandler: referenceObjectRuleFunction({ version, allowedOverrides: [OPEN_API_PROPERTY_DESCRIPTION] }),\n  unify: [\n    valueDefaults(OPEN_API_REQUEST_BODY_DEFAULTS)\n  ],\n  validate: checkType(TYPE_OBJECT),\n  deprecation: {\n    inlineDescriptionSuffixCalculator: () => \"in request body\"\n  }\n});\nconst openApiResponsesRules = (version) => ({\n  ...openApiExtensionRulesFunction({\n    \"/description\": { validate: checkType(TYPE_STRING) },\n    \"/headers\": openApiHeadersRules(version),\n    \"/content\": openApiMediaTypesRules(version),\n    \"/links\": openApiLinksRules(version),\n    ...openApiExtensionRules,\n    unify: [\n      valueDefaults(OPEN_API_RESPONSE_DEFAULTS),\n      valueReplaces(OPEN_API_RESPONSE_REPLACES)\n    ],\n    referenceHandler: referenceObjectRuleFunction({ version, allowedOverrides: [OPEN_API_PROPERTY_DESCRIPTION] }),\n    validate: checkType(TYPE_OBJECT),\n    deprecation: {\n      inlineDescriptionSuffixCalculator: (ctx) => `${ctx.suffix} '${ctx.key.toString()}'`\n    }\n  }),\n  deprecation: { inlineDescriptionSuffixCalculator: () => \"in response\" },\n  validate: checkType(TYPE_OBJECT)\n});\nconst openApiPathItemRules = (version) => ({\n  deprecation: { inlineDescriptionSuffixCalculator: (ctx) => `${ctx.key.toString()}` },\n  \"/summary\": { validate: checkType(TYPE_STRING) },\n  \"/description\": { validate: checkType(TYPE_STRING) },\n  \"/servers\": {\n    \"/*\": openApiServerRules,\n    validate: checkType(TYPE_ARRAY)\n  },\n  ...openApiExtensionRulesFunction({\n    deprecation: {\n      deprecationResolver: (ctx) => OPEN_API_DEPRECATION_RESOLVER(ctx),\n      descriptionCalculator: (ctx) => `[Deprecated] operation ${ctx.key.toString().toUpperCase()} ${ctx.suffix}`\n    },\n    \"/tags\": {\n      \"/*\": { validate: checkType(TYPE_STRING) },\n      validate: checkType(TYPE_ARRAY)\n    },\n    \"/summary\": { validate: checkType(TYPE_STRING) },\n    \"/description\": { validate: checkType(TYPE_STRING) },\n    ...openApiExternalDocsRules,\n    \"/operationId\": { validate: checkType(TYPE_STRING) },\n    \"/callbacks\": {\n      \"/*\": {\n        ...openApiExtensionRulesFunction(() => openApiPathItemRules(version))\n      }\n    },\n    \"/deprecated\": { validate: checkType(TYPE_BOOLEAN) },\n    ...openApiSecurityRules,\n    ...openApiServersRules,\n    \"/parameters\": openApiParametersRules(version),\n    \"/requestBody\": openApiRequestRules(version),\n    \"/responses\": openApiResponsesRules(version),\n    ...openApiExtensionRules,\n    unify: [\n      valueDefaults(OPEN_API_OPERATION_DEFAULTS),\n      valueReplaces(OPEN_API_OPERATION_REPLACES)\n    ],\n    validate: checkType(TYPE_OBJECT)\n  }),\n  \"/parameters\": openApiParametersRules(version),\n  referenceHandler: referenceObjectRuleFunction({\n    version,\n    allowedOverrides: [OPEN_API_PROPERTY_SUMMARY, OPEN_API_PROPERTY_DESCRIPTION]\n  }),\n  validate: checkType(TYPE_OBJECT),\n  unify: pathItemsUnification\n});\nconst openApiRules = (version) => ({\n  \"/openapi\": { validate: checkType(TYPE_STRING) },\n  \"/info\": {\n    \"/title\": { validate: checkType(TYPE_STRING) },\n    \"/description\": { validate: checkType(TYPE_STRING) },\n    \"/termsOfService\": { validate: checkType(TYPE_STRING) },\n    \"/contact\": {\n      \"/name\": { validate: checkType(TYPE_STRING) },\n      \"/url\": { validate: checkType(TYPE_STRING) },\n      \"/email\": { validate: checkType(TYPE_STRING) },\n      ...openApiExtensionRules,\n      validate: checkType(TYPE_OBJECT)\n    },\n    \"/license\": {\n      \"/name\": { validate: checkType(TYPE_STRING) },\n      \"/url\": { validate: checkType(TYPE_STRING) },\n      ...openApiExtensionRules,\n      validate: checkType(TYPE_OBJECT)\n    },\n    \"/version\": { validate: checkType(TYPE_STRING) },\n    ...openApiExtensionRules,\n    validate: checkType(TYPE_OBJECT)\n  },\n  ...openApiExternalDocsRules,\n  ...openApiServersRules,\n  ...openApiSecurityRules,\n  \"/tags\": {\n    \"/*\": {\n      \"/name\": { validate: checkType(TYPE_STRING) },\n      \"/description\": { validate: checkType(TYPE_STRING) },\n      ...openApiExternalDocsRules,\n      ...openApiExtensionRules,\n      validate: checkType(TYPE_OBJECT)\n    },\n    validate: checkType(TYPE_ARRAY)\n  },\n  \"/paths\": {\n    ...openApiExtensionRulesFunction(openApiPathItemRules(version)),\n    validate: checkType(TYPE_OBJECT)\n  },\n  \"/components\": {\n    \"/securitySchemes\": {\n      \"/*\": {\n        \"/type\": { validate: checkType(TYPE_STRING) },\n        \"/name\": { validate: checkType(TYPE_STRING) },\n        \"/in\": { validate: checkType(TYPE_STRING) },\n        \"/description\": { validate: checkType(TYPE_STRING) },\n        \"/scheme\": { validate: checkType(TYPE_STRING) },\n        \"/bearerFormat\": { validate: checkType(TYPE_STRING) },\n        \"/flows\": {\n          \"/implicit\": {\n            \"/authorizationUrl\": { validate: checkType(TYPE_STRING) },\n            \"/refreshUrl\": { validate: checkType(TYPE_STRING) },\n            \"/scopes\": openApiOAuthScopesRules,\n            ...openApiExtensionRules,\n            validate: checkType(TYPE_OBJECT)\n          },\n          \"/password\": {\n            \"/tokenUrl\": { validate: checkType(TYPE_STRING) },\n            \"/refreshUrl\": { validate: checkType(TYPE_STRING) },\n            \"/scopes\": openApiOAuthScopesRules,\n            ...openApiExtensionRules,\n            validate: checkType(TYPE_OBJECT)\n          },\n          \"/clientCredentials\": {\n            \"/tokenUrl\": { validate: checkType(TYPE_STRING) },\n            \"/refreshUrl\": { validate: checkType(TYPE_STRING) },\n            \"/scopes\": openApiOAuthScopesRules,\n            ...openApiExtensionRules,\n            validate: checkType(TYPE_OBJECT)\n          },\n          \"/authorizationCode\": {\n            \"/authorizationUrl\": { validate: checkType(TYPE_STRING) },\n            \"/tokenUrl\": { validate: checkType(TYPE_STRING) },\n            \"/refreshUrl\": { validate: checkType(TYPE_STRING) },\n            \"/scopes\": openApiOAuthScopesRules,\n            ...openApiExtensionRules,\n            validate: checkType(TYPE_OBJECT)\n          },\n          ...openApiExtensionRules,\n          validate: checkType(TYPE_OBJECT)\n        },\n        \"/openIdConnectUrl\": { validate: checkType(TYPE_STRING) },\n        validate: checkType(TYPE_OBJECT),\n        referenceHandler: referenceObjectRuleFunction({ version, allowedOverrides: [OPEN_API_PROPERTY_DESCRIPTION] }),\n        ...openApiExtensionRules\n      },\n      validate: checkType(TYPE_OBJECT)\n    },\n    \"/links\": openApiLinksRules(version),\n    \"/schemas\": {\n      \"/*\": openApiJsonSchemaRules(version),\n      validate: checkType(TYPE_OBJECT)\n    },\n    \"/responses\": openApiResponsesRules(version),\n    \"/parameters\": {\n      ...openApiParametersRules(version),\n      validate: checkType(TYPE_OBJECT)\n    },\n    \"/requestBodies\": {\n      \"/*\": openApiRequestRules(version),\n      validate: checkType(TYPE_OBJECT)\n    },\n    \"/headers\": openApiHeadersRules(version),\n    \"/callbacks\": {\n      \"/*\": {\n        ...openApiExtensionRulesFunction(() => openApiPathItemRules(version))\n      }\n    },\n    ...openApiExamplesRules(version),\n    ...openApiExtensionRules,\n    validate: checkType(TYPE_OBJECT),\n    unify: [\n      valueDefaults(OPEN_API_COMPONENTS_DEFAULTS),\n      valueReplaces(OPEN_API_COMPONENTS_REPLACES)\n    ]\n  },\n  ...openApiExtensionRules,\n  \"/**\": { referenceHandler: notAllowedReferenceHandler },\n  validate: checkType(TYPE_OBJECT),\n  unify: [\n    valueDefaults(OPEN_API_ROOT_DEFAULTS),\n    valueReplaces(OPEN_API_ROOT_REPLACES)\n  ]\n});\nfunction devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\nfunction isObjectLike(value) {\n  return typeof value == \"object\" && value !== null;\n}\nfunction invariant(condition, message) {\n  const booleanCondition = Boolean(condition);\n  if (!booleanCondition) {\n    throw new Error(\n      \"Unexpected invariant triggered.\"\n    );\n  }\n}\nconst LineRegExp = /\\r\\n|[\\n\\r]/g;\nfunction getLocation(source, position) {\n  let lastLineStart = 0;\n  let line = 1;\n  for (const match of source.body.matchAll(LineRegExp)) {\n    typeof match.index === \"number\" || invariant(false);\n    if (match.index >= position) {\n      break;\n    }\n    lastLineStart = match.index + match[0].length;\n    line += 1;\n  }\n  return {\n    line,\n    column: position + 1 - lastLineStart\n  };\n}\nfunction printLocation(location) {\n  return printSourceLocation(\n    location.source,\n    getLocation(location.source, location.start)\n  );\n}\nfunction printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = \"\".padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex];\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n    return locationStr + printPrefixedLines([\n      [`${lineNum} |`, subLines[0]],\n      ...subLines.slice(1, subLineIndex + 1).map((subLine) => [\"|\", subLine]),\n      [\"|\", \"^\".padStart(subLineColumnNum)],\n      [\"|\", subLines[subLineIndex + 1]]\n    ]);\n  }\n  return locationStr + printPrefixedLines([\n    // Lines specified like this: [\"prefix\", \"string\"],\n    [`${lineNum - 1} |`, lines[lineIndex - 1]],\n    [`${lineNum} |`, locationLine],\n    [\"|\", \"^\".padStart(columnNum)],\n    [`${lineNum + 1} |`, lines[lineIndex + 1]]\n  ]);\n}\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(([_, line]) => line !== void 0);\n  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));\n  return existingLines.map(([prefix, line]) => prefix.padStart(padLen) + (line ? \" \" + line : \"\")).join(\"\\n\");\n}\nfunction toNormalizedOptions(args) {\n  const firstArg = args[0];\n  if (firstArg == null || \"kind\" in firstArg || \"length\" in firstArg) {\n    return {\n      nodes: firstArg,\n      source: args[1],\n      positions: args[2],\n      path: args[3],\n      originalError: args[4],\n      extensions: args[5]\n    };\n  }\n  return firstArg;\n}\nclass GraphQLError extends Error {\n  /**\n   * An array of `{ line, column }` locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n  /**\n   * Extension fields to add to the formatted error.\n   */\n  /**\n   * @deprecated Please use the `GraphQLErrorOptions` constructor overload instead.\n   */\n  constructor(message, ...rawArgs) {\n    var _this$nodes, _nodeLocations$, _ref;\n    const { nodes, source, positions, path, originalError, extensions } = toNormalizedOptions(rawArgs);\n    super(message);\n    this.name = \"GraphQLError\";\n    this.path = path !== null && path !== void 0 ? path : void 0;\n    this.originalError = originalError !== null && originalError !== void 0 ? originalError : void 0;\n    this.nodes = undefinedIfEmpty(\n      Array.isArray(nodes) ? nodes : nodes ? [nodes] : void 0\n    );\n    const nodeLocations = undefinedIfEmpty(\n      (_this$nodes = this.nodes) === null || _this$nodes === void 0 ? void 0 : _this$nodes.map((node) => node.loc).filter((loc) => loc != null)\n    );\n    this.source = source !== null && source !== void 0 ? source : nodeLocations === null || nodeLocations === void 0 ? void 0 : (_nodeLocations$ = nodeLocations[0]) === null || _nodeLocations$ === void 0 ? void 0 : _nodeLocations$.source;\n    this.positions = positions !== null && positions !== void 0 ? positions : nodeLocations === null || nodeLocations === void 0 ? void 0 : nodeLocations.map((loc) => loc.start);\n    this.locations = positions && source ? positions.map((pos) => getLocation(source, pos)) : nodeLocations === null || nodeLocations === void 0 ? void 0 : nodeLocations.map((loc) => getLocation(loc.source, loc.start));\n    const originalExtensions = isObjectLike(\n      originalError === null || originalError === void 0 ? void 0 : originalError.extensions\n    ) ? originalError === null || originalError === void 0 ? void 0 : originalError.extensions : void 0;\n    this.extensions = (_ref = extensions !== null && extensions !== void 0 ? extensions : originalExtensions) !== null && _ref !== void 0 ? _ref : /* @__PURE__ */ Object.create(null);\n    Object.defineProperties(this, {\n      message: {\n        writable: true,\n        enumerable: true\n      },\n      name: {\n        enumerable: false\n      },\n      nodes: {\n        enumerable: false\n      },\n      source: {\n        enumerable: false\n      },\n      positions: {\n        enumerable: false\n      },\n      originalError: {\n        enumerable: false\n      }\n    });\n    if (originalError !== null && originalError !== void 0 && originalError.stack) {\n      Object.defineProperty(this, \"stack\", {\n        value: originalError.stack,\n        writable: true,\n        configurable: true\n      });\n    } else if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, GraphQLError);\n    } else {\n      Object.defineProperty(this, \"stack\", {\n        value: Error().stack,\n        writable: true,\n        configurable: true\n      });\n    }\n  }\n  get [Symbol.toStringTag]() {\n    return \"GraphQLError\";\n  }\n  toString() {\n    let output = this.message;\n    if (this.nodes) {\n      for (const node of this.nodes) {\n        if (node.loc) {\n          output += \"\\n\\n\" + printLocation(node.loc);\n        }\n      }\n    } else if (this.source && this.locations) {\n      for (const location of this.locations) {\n        output += \"\\n\\n\" + printSourceLocation(this.source, location);\n      }\n    }\n    return output;\n  }\n  toJSON() {\n    const formattedError = {\n      message: this.message\n    };\n    if (this.locations != null) {\n      formattedError.locations = this.locations;\n    }\n    if (this.path != null) {\n      formattedError.path = this.path;\n    }\n    if (this.extensions != null && Object.keys(this.extensions).length > 0) {\n      formattedError.extensions = this.extensions;\n    }\n    return formattedError;\n  }\n}\nfunction undefinedIfEmpty(array) {\n  return array === void 0 || array.length === 0 ? void 0 : array;\n}\nconst QueryDocumentKeys = {\n  Name: [],\n  Document: [\"definitions\"],\n  OperationDefinition: [\n    \"name\",\n    \"variableDefinitions\",\n    \"directives\",\n    \"selectionSet\"\n  ],\n  VariableDefinition: [\"variable\", \"type\", \"defaultValue\", \"directives\"],\n  Variable: [\"name\"],\n  SelectionSet: [\"selections\"],\n  Field: [\"alias\", \"name\", \"arguments\", \"directives\", \"selectionSet\"],\n  Argument: [\"name\", \"value\"],\n  FragmentSpread: [\"name\", \"directives\"],\n  InlineFragment: [\"typeCondition\", \"directives\", \"selectionSet\"],\n  FragmentDefinition: [\n    \"name\",\n    // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    \"variableDefinitions\",\n    \"typeCondition\",\n    \"directives\",\n    \"selectionSet\"\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: [\"values\"],\n  ObjectValue: [\"fields\"],\n  ObjectField: [\"name\", \"value\"],\n  Directive: [\"name\", \"arguments\"],\n  NamedType: [\"name\"],\n  ListType: [\"type\"],\n  NonNullType: [\"type\"],\n  SchemaDefinition: [\"description\", \"directives\", \"operationTypes\"],\n  OperationTypeDefinition: [\"type\"],\n  ScalarTypeDefinition: [\"description\", \"name\", \"directives\"],\n  ObjectTypeDefinition: [\n    \"description\",\n    \"name\",\n    \"interfaces\",\n    \"directives\",\n    \"fields\"\n  ],\n  FieldDefinition: [\"description\", \"name\", \"arguments\", \"type\", \"directives\"],\n  InputValueDefinition: [\n    \"description\",\n    \"name\",\n    \"type\",\n    \"defaultValue\",\n    \"directives\"\n  ],\n  InterfaceTypeDefinition: [\n    \"description\",\n    \"name\",\n    \"interfaces\",\n    \"directives\",\n    \"fields\"\n  ],\n  UnionTypeDefinition: [\"description\", \"name\", \"directives\", \"types\"],\n  EnumTypeDefinition: [\"description\", \"name\", \"directives\", \"values\"],\n  EnumValueDefinition: [\"description\", \"name\", \"directives\"],\n  InputObjectTypeDefinition: [\"description\", \"name\", \"directives\", \"fields\"],\n  DirectiveDefinition: [\"description\", \"name\", \"arguments\", \"locations\"],\n  SchemaExtension: [\"directives\", \"operationTypes\"],\n  ScalarTypeExtension: [\"name\", \"directives\"],\n  ObjectTypeExtension: [\"name\", \"interfaces\", \"directives\", \"fields\"],\n  InterfaceTypeExtension: [\"name\", \"interfaces\", \"directives\", \"fields\"],\n  UnionTypeExtension: [\"name\", \"directives\", \"types\"],\n  EnumTypeExtension: [\"name\", \"directives\", \"values\"],\n  InputObjectTypeExtension: [\"name\", \"directives\", \"fields\"]\n};\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\nfunction isNode(maybeNode) {\n  const maybeKind = maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === \"string\" && kindValues.has(maybeKind);\n}\nvar OperationTypeNode;\n(function(OperationTypeNode2) {\n  OperationTypeNode2[\"QUERY\"] = \"query\";\n  OperationTypeNode2[\"MUTATION\"] = \"mutation\";\n  OperationTypeNode2[\"SUBSCRIPTION\"] = \"subscription\";\n})(OperationTypeNode || (OperationTypeNode = {}));\nvar DirectiveLocation;\n(function(DirectiveLocation2) {\n  DirectiveLocation2[\"QUERY\"] = \"QUERY\";\n  DirectiveLocation2[\"MUTATION\"] = \"MUTATION\";\n  DirectiveLocation2[\"SUBSCRIPTION\"] = \"SUBSCRIPTION\";\n  DirectiveLocation2[\"FIELD\"] = \"FIELD\";\n  DirectiveLocation2[\"FRAGMENT_DEFINITION\"] = \"FRAGMENT_DEFINITION\";\n  DirectiveLocation2[\"FRAGMENT_SPREAD\"] = \"FRAGMENT_SPREAD\";\n  DirectiveLocation2[\"INLINE_FRAGMENT\"] = \"INLINE_FRAGMENT\";\n  DirectiveLocation2[\"VARIABLE_DEFINITION\"] = \"VARIABLE_DEFINITION\";\n  DirectiveLocation2[\"SCHEMA\"] = \"SCHEMA\";\n  DirectiveLocation2[\"SCALAR\"] = \"SCALAR\";\n  DirectiveLocation2[\"OBJECT\"] = \"OBJECT\";\n  DirectiveLocation2[\"FIELD_DEFINITION\"] = \"FIELD_DEFINITION\";\n  DirectiveLocation2[\"ARGUMENT_DEFINITION\"] = \"ARGUMENT_DEFINITION\";\n  DirectiveLocation2[\"INTERFACE\"] = \"INTERFACE\";\n  DirectiveLocation2[\"UNION\"] = \"UNION\";\n  DirectiveLocation2[\"ENUM\"] = \"ENUM\";\n  DirectiveLocation2[\"ENUM_VALUE\"] = \"ENUM_VALUE\";\n  DirectiveLocation2[\"INPUT_OBJECT\"] = \"INPUT_OBJECT\";\n  DirectiveLocation2[\"INPUT_FIELD_DEFINITION\"] = \"INPUT_FIELD_DEFINITION\";\n})(DirectiveLocation || (DirectiveLocation = {}));\nvar Kind;\n(function(Kind2) {\n  Kind2[\"NAME\"] = \"Name\";\n  Kind2[\"DOCUMENT\"] = \"Document\";\n  Kind2[\"OPERATION_DEFINITION\"] = \"OperationDefinition\";\n  Kind2[\"VARIABLE_DEFINITION\"] = \"VariableDefinition\";\n  Kind2[\"SELECTION_SET\"] = \"SelectionSet\";\n  Kind2[\"FIELD\"] = \"Field\";\n  Kind2[\"ARGUMENT\"] = \"Argument\";\n  Kind2[\"FRAGMENT_SPREAD\"] = \"FragmentSpread\";\n  Kind2[\"INLINE_FRAGMENT\"] = \"InlineFragment\";\n  Kind2[\"FRAGMENT_DEFINITION\"] = \"FragmentDefinition\";\n  Kind2[\"VARIABLE\"] = \"Variable\";\n  Kind2[\"INT\"] = \"IntValue\";\n  Kind2[\"FLOAT\"] = \"FloatValue\";\n  Kind2[\"STRING\"] = \"StringValue\";\n  Kind2[\"BOOLEAN\"] = \"BooleanValue\";\n  Kind2[\"NULL\"] = \"NullValue\";\n  Kind2[\"ENUM\"] = \"EnumValue\";\n  Kind2[\"LIST\"] = \"ListValue\";\n  Kind2[\"OBJECT\"] = \"ObjectValue\";\n  Kind2[\"OBJECT_FIELD\"] = \"ObjectField\";\n  Kind2[\"DIRECTIVE\"] = \"Directive\";\n  Kind2[\"NAMED_TYPE\"] = \"NamedType\";\n  Kind2[\"LIST_TYPE\"] = \"ListType\";\n  Kind2[\"NON_NULL_TYPE\"] = \"NonNullType\";\n  Kind2[\"SCHEMA_DEFINITION\"] = \"SchemaDefinition\";\n  Kind2[\"OPERATION_TYPE_DEFINITION\"] = \"OperationTypeDefinition\";\n  Kind2[\"SCALAR_TYPE_DEFINITION\"] = \"ScalarTypeDefinition\";\n  Kind2[\"OBJECT_TYPE_DEFINITION\"] = \"ObjectTypeDefinition\";\n  Kind2[\"FIELD_DEFINITION\"] = \"FieldDefinition\";\n  Kind2[\"INPUT_VALUE_DEFINITION\"] = \"InputValueDefinition\";\n  Kind2[\"INTERFACE_TYPE_DEFINITION\"] = \"InterfaceTypeDefinition\";\n  Kind2[\"UNION_TYPE_DEFINITION\"] = \"UnionTypeDefinition\";\n  Kind2[\"ENUM_TYPE_DEFINITION\"] = \"EnumTypeDefinition\";\n  Kind2[\"ENUM_VALUE_DEFINITION\"] = \"EnumValueDefinition\";\n  Kind2[\"INPUT_OBJECT_TYPE_DEFINITION\"] = \"InputObjectTypeDefinition\";\n  Kind2[\"DIRECTIVE_DEFINITION\"] = \"DirectiveDefinition\";\n  Kind2[\"SCHEMA_EXTENSION\"] = \"SchemaExtension\";\n  Kind2[\"SCALAR_TYPE_EXTENSION\"] = \"ScalarTypeExtension\";\n  Kind2[\"OBJECT_TYPE_EXTENSION\"] = \"ObjectTypeExtension\";\n  Kind2[\"INTERFACE_TYPE_EXTENSION\"] = \"InterfaceTypeExtension\";\n  Kind2[\"UNION_TYPE_EXTENSION\"] = \"UnionTypeExtension\";\n  Kind2[\"ENUM_TYPE_EXTENSION\"] = \"EnumTypeExtension\";\n  Kind2[\"INPUT_OBJECT_TYPE_EXTENSION\"] = \"InputObjectTypeExtension\";\n})(Kind || (Kind = {}));\nfunction isWhiteSpace(code) {\n  return code === 9 || code === 32;\n}\nfunction isDigit$1(code) {\n  return code >= 48 && code <= 57;\n}\nfunction isLetter(code) {\n  return code >= 97 && code <= 122 || // A-Z\n  code >= 65 && code <= 90;\n}\nfunction isNameStart(code) {\n  return isLetter(code) || code === 95;\n}\nfunction isNameContinue(code) {\n  return isLetter(code) || isDigit$1(code) || code === 95;\n}\nfunction printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"');\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1;\n  const forceLeadingNewLine = lines.length > 1 && lines.slice(1).every((line) => line.length === 0 || isWhiteSpace(line.charCodeAt(0)));\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"');\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith(\"\\\\\");\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines = (\n    // add leading and trailing new lines only if it improves readability\n    !isSingleLine || value.length > 70 || forceTrailingNewline || forceLeadingNewLine || hasTrailingTripleQuotes\n  );\n  let result = \"\";\n  const skipLeadingNewLine = isSingleLine && isWhiteSpace(value.charCodeAt(0));\n  if (printAsMultipleLines && !skipLeadingNewLine || forceLeadingNewLine) {\n    result += \"\\n\";\n  }\n  result += escapedValue;\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += \"\\n\";\n  }\n  return '\"\"\"' + result + '\"\"\"';\n}\nconst MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\nfunction inspect(value) {\n  return formatValue(value, []);\n}\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case \"string\":\n      return JSON.stringify(value);\n    case \"function\":\n      return value.name ? `[function ${value.name}]` : \"[function]\";\n    case \"object\":\n      return formatObjectValue(value, seenValues);\n    default:\n      return String(value);\n  }\n}\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return \"null\";\n  }\n  if (previouslySeenValues.includes(value)) {\n    return \"[Circular]\";\n  }\n  const seenValues = [...previouslySeenValues, value];\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON();\n    if (jsonValue !== value) {\n      return typeof jsonValue === \"string\" ? jsonValue : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n  return formatObject(value, seenValues);\n}\nfunction isJSONable(value) {\n  return typeof value.toJSON === \"function\";\n}\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n  if (entries.length === 0) {\n    return \"{}\";\n  }\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return \"[\" + getObjectTag(object) + \"]\";\n  }\n  const properties = entries.map(\n    ([key, value]) => key + \": \" + formatValue(value, seenValues)\n  );\n  return \"{ \" + properties.join(\", \") + \" }\";\n}\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return \"[]\";\n  }\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return \"[Array]\";\n  }\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n  if (remaining === 1) {\n    items.push(\"... 1 more item\");\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n  return \"[\" + items.join(\", \") + \"]\";\n}\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString.call(object).replace(/^\\[object /, \"\").replace(/]$/, \"\");\n  if (tag === \"Object\" && typeof object.constructor === \"function\") {\n    const name = object.constructor.name;\n    if (typeof name === \"string\" && name !== \"\") {\n      return name;\n    }\n  }\n  return tag;\n}\nconst isProduction = globalThis.process && // eslint-disable-next-line no-undef\nprocess.env.NODE_ENV === \"production\";\nconst instanceOf = (\n  /* c8 ignore next 6 */\n  // FIXME: https://github.com/graphql/graphql-js/issues/2317\n  isProduction ? function instanceOf2(value, constructor) {\n    return value instanceof constructor;\n  } : function instanceOf3(value, constructor) {\n    if (value instanceof constructor) {\n      return true;\n    }\n    if (typeof value === \"object\" && value !== null) {\n      var _value$constructor;\n      const className = constructor.prototype[Symbol.toStringTag];\n      const valueClassName = (\n        // We still need to support constructor's name to detect conflicts with older versions of this library.\n        Symbol.toStringTag in value ? value[Symbol.toStringTag] : (_value$constructor = value.constructor) === null || _value$constructor === void 0 ? void 0 : _value$constructor.name\n      );\n      if (className === valueClassName) {\n        const stringifiedValue = inspect(value);\n        throw new Error(`Cannot use ${className} \"${stringifiedValue}\" from another module or realm.\n\nEnsure that there is only one instance of \"graphql\" in the node_modules\ndirectory. If different versions of \"graphql\" are the dependencies of other\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate \"graphql\" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`);\n      }\n    }\n    return false;\n  }\n);\nconst MAX_SUGGESTIONS = 5;\nfunction didYouMean(firstArg, secondArg) {\n  const [subMessage, suggestionsArg] = secondArg ? [firstArg, secondArg] : [void 0, firstArg];\n  let message = \" Did you mean \";\n  if (subMessage) {\n    message += subMessage + \" \";\n  }\n  const suggestions = suggestionsArg.map((x) => `\"${x}\"`);\n  switch (suggestions.length) {\n    case 0:\n      return \"\";\n    case 1:\n      return message + suggestions[0] + \"?\";\n    case 2:\n      return message + suggestions[0] + \" or \" + suggestions[1] + \"?\";\n  }\n  const selected = suggestions.slice(0, MAX_SUGGESTIONS);\n  const lastItem = selected.pop();\n  return message + selected.join(\", \") + \", or \" + lastItem + \"?\";\n}\nfunction identityFunc(x) {\n  return x;\n}\nfunction keyMap(list, keyFn) {\n  const result = /* @__PURE__ */ Object.create(null);\n  for (const item of list) {\n    result[keyFn(item)] = item;\n  }\n  return result;\n}\nfunction keyValMap(list, keyFn, valFn) {\n  const result = /* @__PURE__ */ Object.create(null);\n  for (const item of list) {\n    result[keyFn(item)] = valFn(item);\n  }\n  return result;\n}\nfunction mapValue(map, fn) {\n  const result = /* @__PURE__ */ Object.create(null);\n  for (const key of Object.keys(map)) {\n    result[key] = fn(map[key], key);\n  }\n  return result;\n}\nfunction naturalCompare(aStr, bStr) {\n  let aIndex = 0;\n  let bIndex = 0;\n  while (aIndex < aStr.length && bIndex < bStr.length) {\n    let aChar = aStr.charCodeAt(aIndex);\n    let bChar = bStr.charCodeAt(bIndex);\n    if (isDigit(aChar) && isDigit(bChar)) {\n      let aNum = 0;\n      do {\n        ++aIndex;\n        aNum = aNum * 10 + aChar - DIGIT_0;\n        aChar = aStr.charCodeAt(aIndex);\n      } while (isDigit(aChar) && aNum > 0);\n      let bNum = 0;\n      do {\n        ++bIndex;\n        bNum = bNum * 10 + bChar - DIGIT_0;\n        bChar = bStr.charCodeAt(bIndex);\n      } while (isDigit(bChar) && bNum > 0);\n      if (aNum < bNum) {\n        return -1;\n      }\n      if (aNum > bNum) {\n        return 1;\n      }\n    } else {\n      if (aChar < bChar) {\n        return -1;\n      }\n      if (aChar > bChar) {\n        return 1;\n      }\n      ++aIndex;\n      ++bIndex;\n    }\n  }\n  return aStr.length - bStr.length;\n}\nconst DIGIT_0 = 48;\nconst DIGIT_9 = 57;\nfunction isDigit(code) {\n  return !isNaN(code) && DIGIT_0 <= code && code <= DIGIT_9;\n}\nfunction suggestionList(input, options) {\n  const optionsByDistance = /* @__PURE__ */ Object.create(null);\n  const lexicalDistance = new LexicalDistance(input);\n  const threshold = Math.floor(input.length * 0.4) + 1;\n  for (const option of options) {\n    const distance = lexicalDistance.measure(option, threshold);\n    if (distance !== void 0) {\n      optionsByDistance[option] = distance;\n    }\n  }\n  return Object.keys(optionsByDistance).sort((a, b) => {\n    const distanceDiff = optionsByDistance[a] - optionsByDistance[b];\n    return distanceDiff !== 0 ? distanceDiff : naturalCompare(a, b);\n  });\n}\nclass LexicalDistance {\n  constructor(input) {\n    this._input = input;\n    this._inputLowerCase = input.toLowerCase();\n    this._inputArray = stringToArray(this._inputLowerCase);\n    this._rows = [\n      new Array(input.length + 1).fill(0),\n      new Array(input.length + 1).fill(0),\n      new Array(input.length + 1).fill(0)\n    ];\n  }\n  measure(option, threshold) {\n    if (this._input === option) {\n      return 0;\n    }\n    const optionLowerCase = option.toLowerCase();\n    if (this._inputLowerCase === optionLowerCase) {\n      return 1;\n    }\n    let a = stringToArray(optionLowerCase);\n    let b = this._inputArray;\n    if (a.length < b.length) {\n      const tmp = a;\n      a = b;\n      b = tmp;\n    }\n    const aLength = a.length;\n    const bLength = b.length;\n    if (aLength - bLength > threshold) {\n      return void 0;\n    }\n    const rows = this._rows;\n    for (let j = 0; j <= bLength; j++) {\n      rows[0][j] = j;\n    }\n    for (let i = 1; i <= aLength; i++) {\n      const upRow = rows[(i - 1) % 3];\n      const currentRow = rows[i % 3];\n      let smallestCell = currentRow[0] = i;\n      for (let j = 1; j <= bLength; j++) {\n        const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n        let currentCell = Math.min(\n          upRow[j] + 1,\n          // delete\n          currentRow[j - 1] + 1,\n          // insert\n          upRow[j - 1] + cost\n          // substitute\n        );\n        if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n          const doubleDiagonalCell = rows[(i - 2) % 3][j - 2];\n          currentCell = Math.min(currentCell, doubleDiagonalCell + 1);\n        }\n        if (currentCell < smallestCell) {\n          smallestCell = currentCell;\n        }\n        currentRow[j] = currentCell;\n      }\n      if (smallestCell > threshold) {\n        return void 0;\n      }\n    }\n    const distance = rows[aLength % 3][bLength];\n    return distance <= threshold ? distance : void 0;\n  }\n}\nfunction stringToArray(str) {\n  const strLength = str.length;\n  const array = new Array(strLength);\n  for (let i = 0; i < strLength; ++i) {\n    array[i] = str.charCodeAt(i);\n  }\n  return array;\n}\nfunction toObjMap(obj) {\n  if (obj == null) {\n    return /* @__PURE__ */ Object.create(null);\n  }\n  if (Object.getPrototypeOf(obj) === null) {\n    return obj;\n  }\n  const map = /* @__PURE__ */ Object.create(null);\n  for (const [key, value] of Object.entries(obj)) {\n    map[key] = value;\n  }\n  return map;\n}\nfunction printString$1(str) {\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\n}\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\nfunction escapedReplacer(str) {\n  return escapeSequences[str.charCodeAt(0)];\n}\nconst escapeSequences = [\n  \"\\\\u0000\",\n  \"\\\\u0001\",\n  \"\\\\u0002\",\n  \"\\\\u0003\",\n  \"\\\\u0004\",\n  \"\\\\u0005\",\n  \"\\\\u0006\",\n  \"\\\\u0007\",\n  \"\\\\b\",\n  \"\\\\t\",\n  \"\\\\n\",\n  \"\\\\u000B\",\n  \"\\\\f\",\n  \"\\\\r\",\n  \"\\\\u000E\",\n  \"\\\\u000F\",\n  \"\\\\u0010\",\n  \"\\\\u0011\",\n  \"\\\\u0012\",\n  \"\\\\u0013\",\n  \"\\\\u0014\",\n  \"\\\\u0015\",\n  \"\\\\u0016\",\n  \"\\\\u0017\",\n  \"\\\\u0018\",\n  \"\\\\u0019\",\n  \"\\\\u001A\",\n  \"\\\\u001B\",\n  \"\\\\u001C\",\n  \"\\\\u001D\",\n  \"\\\\u001E\",\n  \"\\\\u001F\",\n  \"\",\n  \"\",\n  '\\\\\"',\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  // 2F\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  // 3F\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  // 4F\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\\\\\\\\\",\n  \"\",\n  \"\",\n  \"\",\n  // 5F\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  // 6F\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\\\\u007F\",\n  \"\\\\u0080\",\n  \"\\\\u0081\",\n  \"\\\\u0082\",\n  \"\\\\u0083\",\n  \"\\\\u0084\",\n  \"\\\\u0085\",\n  \"\\\\u0086\",\n  \"\\\\u0087\",\n  \"\\\\u0088\",\n  \"\\\\u0089\",\n  \"\\\\u008A\",\n  \"\\\\u008B\",\n  \"\\\\u008C\",\n  \"\\\\u008D\",\n  \"\\\\u008E\",\n  \"\\\\u008F\",\n  \"\\\\u0090\",\n  \"\\\\u0091\",\n  \"\\\\u0092\",\n  \"\\\\u0093\",\n  \"\\\\u0094\",\n  \"\\\\u0095\",\n  \"\\\\u0096\",\n  \"\\\\u0097\",\n  \"\\\\u0098\",\n  \"\\\\u0099\",\n  \"\\\\u009A\",\n  \"\\\\u009B\",\n  \"\\\\u009C\",\n  \"\\\\u009D\",\n  \"\\\\u009E\",\n  \"\\\\u009F\"\n];\nconst BREAK = Object.freeze({});\nfunction visit(root, visitor, visitorKeys = QueryDocumentKeys) {\n  const enterLeaveMap = /* @__PURE__ */ new Map();\n  for (const kind of Object.values(Kind)) {\n    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));\n  }\n  let stack = void 0;\n  let inArray = Array.isArray(root);\n  let keys = [root];\n  let index = -1;\n  let edits = [];\n  let node = root;\n  let key = void 0;\n  let parent = void 0;\n  const path = [];\n  const ancestors = [];\n  do {\n    index++;\n    const isLeaving = index === keys.length;\n    const isEdited = isLeaving && edits.length !== 0;\n    if (isLeaving) {\n      key = ancestors.length === 0 ? void 0 : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n          let editOffset = 0;\n          for (const [editKey, editValue] of edits) {\n            const arrayKey = editKey - editOffset;\n            if (editValue === null) {\n              node.splice(arrayKey, 1);\n              editOffset++;\n            } else {\n              node[arrayKey] = editValue;\n            }\n          }\n        } else {\n          node = Object.defineProperties(\n            {},\n            Object.getOwnPropertyDescriptors(node)\n          );\n          for (const [editKey, editValue] of edits) {\n            node[editKey] = editValue;\n          }\n        }\n      }\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else if (parent) {\n      key = inArray ? index : keys[index];\n      node = parent[key];\n      if (node === null || node === void 0) {\n        continue;\n      }\n      path.push(key);\n    }\n    let result;\n    if (!Array.isArray(node)) {\n      var _enterLeaveMap$get, _enterLeaveMap$get2;\n      isNode(node) || devAssert(false, `Invalid AST Node: ${inspect(node)}.`);\n      const visitFn = isLeaving ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null || _enterLeaveMap$get === void 0 ? void 0 : _enterLeaveMap$get.leave : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null || _enterLeaveMap$get2 === void 0 ? void 0 : _enterLeaveMap$get2.enter;\n      result = visitFn === null || visitFn === void 0 ? void 0 : visitFn.call(visitor, node, key, parent, path, ancestors);\n      if (result === BREAK) {\n        break;\n      }\n      if (result === false) {\n        if (!isLeaving) {\n          path.pop();\n          continue;\n        }\n      } else if (result !== void 0) {\n        edits.push([key, result]);\n        if (!isLeaving) {\n          if (isNode(result)) {\n            node = result;\n          } else {\n            path.pop();\n            continue;\n          }\n        }\n      }\n    }\n    if (result === void 0 && isEdited) {\n      edits.push([key, node]);\n    }\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _node$kind;\n      stack = {\n        inArray,\n        index,\n        keys,\n        edits,\n        prev: stack\n      };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : (_node$kind = visitorKeys[node.kind]) !== null && _node$kind !== void 0 ? _node$kind : [];\n      index = -1;\n      edits = [];\n      if (parent) {\n        ancestors.push(parent);\n      }\n      parent = node;\n    }\n  } while (stack !== void 0);\n  if (edits.length !== 0) {\n    return edits[edits.length - 1][1];\n  }\n  return root;\n}\nfunction getEnterLeaveForKind(visitor, kind) {\n  const kindVisitor = visitor[kind];\n  if (typeof kindVisitor === \"object\") {\n    return kindVisitor;\n  } else if (typeof kindVisitor === \"function\") {\n    return {\n      enter: kindVisitor,\n      leave: void 0\n    };\n  }\n  return {\n    enter: visitor.enter,\n    leave: visitor.leave\n  };\n}\nfunction print(ast) {\n  return visit(ast, printDocASTReducer);\n}\nconst MAX_LINE_LENGTH = 80;\nconst printDocASTReducer = {\n  Name: {\n    leave: (node) => node.value\n  },\n  Variable: {\n    leave: (node) => \"$\" + node.name\n  },\n  // Document\n  Document: {\n    leave: (node) => join(node.definitions, \"\\n\\n\")\n  },\n  OperationDefinition: {\n    leave(node) {\n      const varDefs = wrap(\"(\", join(node.variableDefinitions, \", \"), \")\");\n      const prefix = join(\n        [\n          node.operation,\n          join([node.name, varDefs]),\n          join(node.directives, \" \")\n        ],\n        \" \"\n      );\n      return (prefix === \"query\" ? \"\" : prefix + \" \") + node.selectionSet;\n    }\n  },\n  VariableDefinition: {\n    leave: ({ variable, type, defaultValue, directives }) => variable + \": \" + type + wrap(\" = \", defaultValue) + wrap(\" \", join(directives, \" \"))\n  },\n  SelectionSet: {\n    leave: ({ selections }) => block(selections)\n  },\n  Field: {\n    leave({ alias, name, arguments: args, directives, selectionSet }) {\n      const prefix = wrap(\"\", alias, \": \") + name;\n      let argsLine = prefix + wrap(\"(\", join(args, \", \"), \")\");\n      if (argsLine.length > MAX_LINE_LENGTH) {\n        argsLine = prefix + wrap(\"(\\n\", indent(join(args, \"\\n\")), \"\\n)\");\n      }\n      return join([argsLine, join(directives, \" \"), selectionSet], \" \");\n    }\n  },\n  Argument: {\n    leave: ({ name, value }) => name + \": \" + value\n  },\n  // Fragments\n  FragmentSpread: {\n    leave: ({ name, directives }) => \"...\" + name + wrap(\" \", join(directives, \" \"))\n  },\n  InlineFragment: {\n    leave: ({ typeCondition, directives, selectionSet }) => join(\n      [\n        \"...\",\n        wrap(\"on \", typeCondition),\n        join(directives, \" \"),\n        selectionSet\n      ],\n      \" \"\n    )\n  },\n  FragmentDefinition: {\n    leave: ({ name, typeCondition, variableDefinitions, directives, selectionSet }) => (\n      // or removed in the future.\n      `fragment ${name}${wrap(\"(\", join(variableDefinitions, \", \"), \")\")} on ${typeCondition} ${wrap(\"\", join(directives, \" \"), \" \")}` + selectionSet\n    )\n  },\n  // Value\n  IntValue: {\n    leave: ({ value }) => value\n  },\n  FloatValue: {\n    leave: ({ value }) => value\n  },\n  StringValue: {\n    leave: ({ value, block: isBlockString }) => isBlockString ? printBlockString(value) : printString$1(value)\n  },\n  BooleanValue: {\n    leave: ({ value }) => value ? \"true\" : \"false\"\n  },\n  NullValue: {\n    leave: () => \"null\"\n  },\n  EnumValue: {\n    leave: ({ value }) => value\n  },\n  ListValue: {\n    leave: ({ values }) => \"[\" + join(values, \", \") + \"]\"\n  },\n  ObjectValue: {\n    leave: ({ fields }) => \"{\" + join(fields, \", \") + \"}\"\n  },\n  ObjectField: {\n    leave: ({ name, value }) => name + \": \" + value\n  },\n  // Directive\n  Directive: {\n    leave: ({ name, arguments: args }) => \"@\" + name + wrap(\"(\", join(args, \", \"), \")\")\n  },\n  // Type\n  NamedType: {\n    leave: ({ name }) => name\n  },\n  ListType: {\n    leave: ({ type }) => \"[\" + type + \"]\"\n  },\n  NonNullType: {\n    leave: ({ type }) => type + \"!\"\n  },\n  // Type System Definitions\n  SchemaDefinition: {\n    leave: ({ description, directives, operationTypes }) => wrap(\"\", description, \"\\n\") + join([\"schema\", join(directives, \" \"), block(operationTypes)], \" \")\n  },\n  OperationTypeDefinition: {\n    leave: ({ operation, type }) => operation + \": \" + type\n  },\n  ScalarTypeDefinition: {\n    leave: ({ description, name, directives }) => wrap(\"\", description, \"\\n\") + join([\"scalar\", name, join(directives, \" \")], \" \")\n  },\n  ObjectTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) => wrap(\"\", description, \"\\n\") + join(\n      [\n        \"type\",\n        name,\n        wrap(\"implements \", join(interfaces, \" & \")),\n        join(directives, \" \"),\n        block(fields)\n      ],\n      \" \"\n    )\n  },\n  FieldDefinition: {\n    leave: ({ description, name, arguments: args, type, directives }) => wrap(\"\", description, \"\\n\") + name + (hasMultilineItems(args) ? wrap(\"(\\n\", indent(join(args, \"\\n\")), \"\\n)\") : wrap(\"(\", join(args, \", \"), \")\")) + \": \" + type + wrap(\" \", join(directives, \" \"))\n  },\n  InputValueDefinition: {\n    leave: ({ description, name, type, defaultValue, directives }) => wrap(\"\", description, \"\\n\") + join(\n      [name + \": \" + type, wrap(\"= \", defaultValue), join(directives, \" \")],\n      \" \"\n    )\n  },\n  InterfaceTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) => wrap(\"\", description, \"\\n\") + join(\n      [\n        \"interface\",\n        name,\n        wrap(\"implements \", join(interfaces, \" & \")),\n        join(directives, \" \"),\n        block(fields)\n      ],\n      \" \"\n    )\n  },\n  UnionTypeDefinition: {\n    leave: ({ description, name, directives, types }) => wrap(\"\", description, \"\\n\") + join(\n      [\"union\", name, join(directives, \" \"), wrap(\"= \", join(types, \" | \"))],\n      \" \"\n    )\n  },\n  EnumTypeDefinition: {\n    leave: ({ description, name, directives, values }) => wrap(\"\", description, \"\\n\") + join([\"enum\", name, join(directives, \" \"), block(values)], \" \")\n  },\n  EnumValueDefinition: {\n    leave: ({ description, name, directives }) => wrap(\"\", description, \"\\n\") + join([name, join(directives, \" \")], \" \")\n  },\n  InputObjectTypeDefinition: {\n    leave: ({ description, name, directives, fields }) => wrap(\"\", description, \"\\n\") + join([\"input\", name, join(directives, \" \"), block(fields)], \" \")\n  },\n  DirectiveDefinition: {\n    leave: ({ description, name, arguments: args, repeatable, locations }) => wrap(\"\", description, \"\\n\") + \"directive @\" + name + (hasMultilineItems(args) ? wrap(\"(\\n\", indent(join(args, \"\\n\")), \"\\n)\") : wrap(\"(\", join(args, \", \"), \")\")) + (repeatable ? \" repeatable\" : \"\") + \" on \" + join(locations, \" | \")\n  },\n  SchemaExtension: {\n    leave: ({ directives, operationTypes }) => join(\n      [\"extend schema\", join(directives, \" \"), block(operationTypes)],\n      \" \"\n    )\n  },\n  ScalarTypeExtension: {\n    leave: ({ name, directives }) => join([\"extend scalar\", name, join(directives, \" \")], \" \")\n  },\n  ObjectTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) => join(\n      [\n        \"extend type\",\n        name,\n        wrap(\"implements \", join(interfaces, \" & \")),\n        join(directives, \" \"),\n        block(fields)\n      ],\n      \" \"\n    )\n  },\n  InterfaceTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) => join(\n      [\n        \"extend interface\",\n        name,\n        wrap(\"implements \", join(interfaces, \" & \")),\n        join(directives, \" \"),\n        block(fields)\n      ],\n      \" \"\n    )\n  },\n  UnionTypeExtension: {\n    leave: ({ name, directives, types }) => join(\n      [\n        \"extend union\",\n        name,\n        join(directives, \" \"),\n        wrap(\"= \", join(types, \" | \"))\n      ],\n      \" \"\n    )\n  },\n  EnumTypeExtension: {\n    leave: ({ name, directives, values }) => join([\"extend enum\", name, join(directives, \" \"), block(values)], \" \")\n  },\n  InputObjectTypeExtension: {\n    leave: ({ name, directives, fields }) => join([\"extend input\", name, join(directives, \" \"), block(fields)], \" \")\n  }\n};\nfunction join(maybeArray, separator = \"\") {\n  var _maybeArray$filter$jo;\n  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter((x) => x).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : \"\";\n}\nfunction block(array) {\n  return wrap(\"{\\n\", indent(join(array, \"\\n\")), \"\\n}\");\n}\nfunction wrap(start, maybeString, end = \"\") {\n  return maybeString != null && maybeString !== \"\" ? start + maybeString + end : \"\";\n}\nfunction indent(str) {\n  return wrap(\"  \", str.replace(/\\n/g, \"\\n  \"));\n}\nfunction hasMultilineItems(maybeArray) {\n  var _maybeArray$some;\n  return (_maybeArray$some = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.some((str) => str.includes(\"\\n\"))) !== null && _maybeArray$some !== void 0 ? _maybeArray$some : false;\n}\nfunction valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case Kind.NULL:\n      return null;\n    case Kind.INT:\n      return parseInt(valueNode.value, 10);\n    case Kind.FLOAT:\n      return parseFloat(valueNode.value);\n    case Kind.STRING:\n    case Kind.ENUM:\n    case Kind.BOOLEAN:\n      return valueNode.value;\n    case Kind.LIST:\n      return valueNode.values.map(\n        (node) => valueFromASTUntyped(node, variables)\n      );\n    case Kind.OBJECT:\n      return keyValMap(\n        valueNode.fields,\n        (field) => field.name.value,\n        (field) => valueFromASTUntyped(field.value, variables)\n      );\n    case Kind.VARIABLE:\n      return variables === null || variables === void 0 ? void 0 : variables[valueNode.name.value];\n  }\n}\nfunction assertName(name) {\n  name != null || devAssert(false, \"Must provide name.\");\n  typeof name === \"string\" || devAssert(false, \"Expected name to be a string.\");\n  if (name.length === 0) {\n    throw new GraphQLError(\"Expected name to be a non-empty string.\");\n  }\n  for (let i = 1; i < name.length; ++i) {\n    if (!isNameContinue(name.charCodeAt(i))) {\n      throw new GraphQLError(\n        `Names must only contain [_a-zA-Z0-9] but \"${name}\" does not.`\n      );\n    }\n  }\n  if (!isNameStart(name.charCodeAt(0))) {\n    throw new GraphQLError(\n      `Names must start with [_a-zA-Z] but \"${name}\" does not.`\n    );\n  }\n  return name;\n}\nfunction assertEnumValueName(name) {\n  if (name === \"true\" || name === \"false\" || name === \"null\") {\n    throw new GraphQLError(`Enum values cannot be named: ${name}`);\n  }\n  return assertName(name);\n}\nfunction isType(type) {\n  return isScalarType$1(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isInputObjectType(type) || isListType$1(type) || isNonNullType$1(type);\n}\nfunction isScalarType$1(type) {\n  return instanceOf(type, GraphQLScalarType);\n}\nfunction isObjectType(type) {\n  return instanceOf(type, GraphQLObjectType);\n}\nfunction isInterfaceType(type) {\n  return instanceOf(type, GraphQLInterfaceType);\n}\nfunction isUnionType(type) {\n  return instanceOf(type, GraphQLUnionType);\n}\nfunction isEnumType(type) {\n  return instanceOf(type, GraphQLEnumType);\n}\nfunction isInputObjectType(type) {\n  return instanceOf(type, GraphQLInputObjectType);\n}\nfunction isListType$1(type) {\n  return instanceOf(type, GraphQLList);\n}\nfunction isNonNullType$1(type) {\n  return instanceOf(type, GraphQLNonNull);\n}\nclass GraphQLList {\n  constructor(ofType) {\n    isType(ofType) || devAssert(false, `Expected ${inspect(ofType)} to be a GraphQL type.`);\n    this.ofType = ofType;\n  }\n  get [Symbol.toStringTag]() {\n    return \"GraphQLList\";\n  }\n  toString() {\n    return \"[\" + String(this.ofType) + \"]\";\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\nclass GraphQLNonNull {\n  constructor(ofType) {\n    isNullableType(ofType) || devAssert(\n      false,\n      `Expected ${inspect(ofType)} to be a GraphQL nullable type.`\n    );\n    this.ofType = ofType;\n  }\n  get [Symbol.toStringTag]() {\n    return \"GraphQLNonNull\";\n  }\n  toString() {\n    return String(this.ofType) + \"!\";\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\nfunction isNullableType(type) {\n  return isType(type) && !isNonNullType$1(type);\n}\nfunction resolveReadonlyArrayThunk(thunk) {\n  return typeof thunk === \"function\" ? thunk() : thunk;\n}\nfunction resolveObjMapThunk(thunk) {\n  return typeof thunk === \"function\" ? thunk() : thunk;\n}\nclass GraphQLScalarType {\n  constructor(config) {\n    var _config$parseValue, _config$serialize, _config$parseLiteral, _config$extensionASTN;\n    const parseValue = (_config$parseValue = config.parseValue) !== null && _config$parseValue !== void 0 ? _config$parseValue : identityFunc;\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.specifiedByURL = config.specifiedByURL;\n    this.serialize = (_config$serialize = config.serialize) !== null && _config$serialize !== void 0 ? _config$serialize : identityFunc;\n    this.parseValue = parseValue;\n    this.parseLiteral = (_config$parseLiteral = config.parseLiteral) !== null && _config$parseLiteral !== void 0 ? _config$parseLiteral : (node, variables) => parseValue(valueFromASTUntyped(node, variables));\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = (_config$extensionASTN = config.extensionASTNodes) !== null && _config$extensionASTN !== void 0 ? _config$extensionASTN : [];\n    config.specifiedByURL == null || typeof config.specifiedByURL === \"string\" || devAssert(\n      false,\n      `${this.name} must provide \"specifiedByURL\" as a string, but got: ${inspect(config.specifiedByURL)}.`\n    );\n    config.serialize == null || typeof config.serialize === \"function\" || devAssert(\n      false,\n      `${this.name} must provide \"serialize\" function. If this custom Scalar is also used as an input type, ensure \"parseValue\" and \"parseLiteral\" functions are also provided.`\n    );\n    if (config.parseLiteral) {\n      typeof config.parseValue === \"function\" && typeof config.parseLiteral === \"function\" || devAssert(\n        false,\n        `${this.name} must provide both \"parseValue\" and \"parseLiteral\" functions.`\n      );\n    }\n  }\n  get [Symbol.toStringTag]() {\n    return \"GraphQLScalarType\";\n  }\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      specifiedByURL: this.specifiedByURL,\n      serialize: this.serialize,\n      parseValue: this.parseValue,\n      parseLiteral: this.parseLiteral,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes\n    };\n  }\n  toString() {\n    return this.name;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\nclass GraphQLObjectType {\n  constructor(config) {\n    var _config$extensionASTN2;\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.isTypeOf = config.isTypeOf;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = (_config$extensionASTN2 = config.extensionASTNodes) !== null && _config$extensionASTN2 !== void 0 ? _config$extensionASTN2 : [];\n    this._fields = () => defineFieldMap(config);\n    this._interfaces = () => defineInterfaces(config);\n    config.isTypeOf == null || typeof config.isTypeOf === \"function\" || devAssert(\n      false,\n      `${this.name} must provide \"isTypeOf\" as a function, but got: ${inspect(config.isTypeOf)}.`\n    );\n  }\n  get [Symbol.toStringTag]() {\n    return \"GraphQLObjectType\";\n  }\n  getFields() {\n    if (typeof this._fields === \"function\") {\n      this._fields = this._fields();\n    }\n    return this._fields;\n  }\n  getInterfaces() {\n    if (typeof this._interfaces === \"function\") {\n      this._interfaces = this._interfaces();\n    }\n    return this._interfaces;\n  }\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      isTypeOf: this.isTypeOf,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes\n    };\n  }\n  toString() {\n    return this.name;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\nfunction defineInterfaces(config) {\n  var _config$interfaces;\n  const interfaces = resolveReadonlyArrayThunk(\n    (_config$interfaces = config.interfaces) !== null && _config$interfaces !== void 0 ? _config$interfaces : []\n  );\n  Array.isArray(interfaces) || devAssert(\n    false,\n    `${config.name} interfaces must be an Array or a function which returns an Array.`\n  );\n  return interfaces;\n}\nfunction defineFieldMap(config) {\n  const fieldMap = resolveObjMapThunk(config.fields);\n  isPlainObj(fieldMap) || devAssert(\n    false,\n    `${config.name} fields must be an object with field names as keys or a function which returns such an object.`\n  );\n  return mapValue(fieldMap, (fieldConfig, fieldName) => {\n    var _fieldConfig$args;\n    isPlainObj(fieldConfig) || devAssert(\n      false,\n      `${config.name}.${fieldName} field config must be an object.`\n    );\n    fieldConfig.resolve == null || typeof fieldConfig.resolve === \"function\" || devAssert(\n      false,\n      `${config.name}.${fieldName} field resolver must be a function if provided, but got: ${inspect(fieldConfig.resolve)}.`\n    );\n    const argsConfig = (_fieldConfig$args = fieldConfig.args) !== null && _fieldConfig$args !== void 0 ? _fieldConfig$args : {};\n    isPlainObj(argsConfig) || devAssert(\n      false,\n      `${config.name}.${fieldName} args must be an object with argument names as keys.`\n    );\n    return {\n      name: assertName(fieldName),\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      args: defineArguments(argsConfig),\n      resolve: fieldConfig.resolve,\n      subscribe: fieldConfig.subscribe,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode\n    };\n  });\n}\nfunction defineArguments(config) {\n  return Object.entries(config).map(([argName, argConfig]) => ({\n    name: assertName(argName),\n    description: argConfig.description,\n    type: argConfig.type,\n    defaultValue: argConfig.defaultValue,\n    deprecationReason: argConfig.deprecationReason,\n    extensions: toObjMap(argConfig.extensions),\n    astNode: argConfig.astNode\n  }));\n}\nfunction isPlainObj(obj) {\n  return isObjectLike(obj) && !Array.isArray(obj);\n}\nfunction fieldsToFieldsConfig(fields) {\n  return mapValue(fields, (field) => ({\n    description: field.description,\n    type: field.type,\n    args: argsToArgsConfig(field.args),\n    resolve: field.resolve,\n    subscribe: field.subscribe,\n    deprecationReason: field.deprecationReason,\n    extensions: field.extensions,\n    astNode: field.astNode\n  }));\n}\nfunction argsToArgsConfig(args) {\n  return keyValMap(\n    args,\n    (arg) => arg.name,\n    (arg) => ({\n      description: arg.description,\n      type: arg.type,\n      defaultValue: arg.defaultValue,\n      deprecationReason: arg.deprecationReason,\n      extensions: arg.extensions,\n      astNode: arg.astNode\n    })\n  );\n}\nclass GraphQLInterfaceType {\n  constructor(config) {\n    var _config$extensionASTN3;\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = (_config$extensionASTN3 = config.extensionASTNodes) !== null && _config$extensionASTN3 !== void 0 ? _config$extensionASTN3 : [];\n    this._fields = defineFieldMap.bind(void 0, config);\n    this._interfaces = defineInterfaces.bind(void 0, config);\n    config.resolveType == null || typeof config.resolveType === \"function\" || devAssert(\n      false,\n      `${this.name} must provide \"resolveType\" as a function, but got: ${inspect(config.resolveType)}.`\n    );\n  }\n  get [Symbol.toStringTag]() {\n    return \"GraphQLInterfaceType\";\n  }\n  getFields() {\n    if (typeof this._fields === \"function\") {\n      this._fields = this._fields();\n    }\n    return this._fields;\n  }\n  getInterfaces() {\n    if (typeof this._interfaces === \"function\") {\n      this._interfaces = this._interfaces();\n    }\n    return this._interfaces;\n  }\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes\n    };\n  }\n  toString() {\n    return this.name;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\nclass GraphQLUnionType {\n  constructor(config) {\n    var _config$extensionASTN4;\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = (_config$extensionASTN4 = config.extensionASTNodes) !== null && _config$extensionASTN4 !== void 0 ? _config$extensionASTN4 : [];\n    this._types = defineTypes.bind(void 0, config);\n    config.resolveType == null || typeof config.resolveType === \"function\" || devAssert(\n      false,\n      `${this.name} must provide \"resolveType\" as a function, but got: ${inspect(config.resolveType)}.`\n    );\n  }\n  get [Symbol.toStringTag]() {\n    return \"GraphQLUnionType\";\n  }\n  getTypes() {\n    if (typeof this._types === \"function\") {\n      this._types = this._types();\n    }\n    return this._types;\n  }\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      types: this.getTypes(),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes\n    };\n  }\n  toString() {\n    return this.name;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\nfunction defineTypes(config) {\n  const types = resolveReadonlyArrayThunk(config.types);\n  Array.isArray(types) || devAssert(\n    false,\n    `Must provide Array of types or a function which returns such an array for Union ${config.name}.`\n  );\n  return types;\n}\nclass GraphQLEnumType {\n  /* <T> */\n  constructor(config) {\n    var _config$extensionASTN5;\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = (_config$extensionASTN5 = config.extensionASTNodes) !== null && _config$extensionASTN5 !== void 0 ? _config$extensionASTN5 : [];\n    this._values = typeof config.values === \"function\" ? config.values : defineEnumValues(this.name, config.values);\n    this._valueLookup = null;\n    this._nameLookup = null;\n  }\n  get [Symbol.toStringTag]() {\n    return \"GraphQLEnumType\";\n  }\n  getValues() {\n    if (typeof this._values === \"function\") {\n      this._values = defineEnumValues(this.name, this._values());\n    }\n    return this._values;\n  }\n  getValue(name) {\n    if (this._nameLookup === null) {\n      this._nameLookup = keyMap(this.getValues(), (value) => value.name);\n    }\n    return this._nameLookup[name];\n  }\n  serialize(outputValue) {\n    if (this._valueLookup === null) {\n      this._valueLookup = new Map(\n        this.getValues().map((enumValue2) => [enumValue2.value, enumValue2])\n      );\n    }\n    const enumValue = this._valueLookup.get(outputValue);\n    if (enumValue === void 0) {\n      throw new GraphQLError(\n        `Enum \"${this.name}\" cannot represent value: ${inspect(outputValue)}`\n      );\n    }\n    return enumValue.name;\n  }\n  parseValue(inputValue) {\n    if (typeof inputValue !== \"string\") {\n      const valueStr = inspect(inputValue);\n      throw new GraphQLError(\n        `Enum \"${this.name}\" cannot represent non-string value: ${valueStr}.` + didYouMeanEnumValue(this, valueStr)\n      );\n    }\n    const enumValue = this.getValue(inputValue);\n    if (enumValue == null) {\n      throw new GraphQLError(\n        `Value \"${inputValue}\" does not exist in \"${this.name}\" enum.` + didYouMeanEnumValue(this, inputValue)\n      );\n    }\n    return enumValue.value;\n  }\n  parseLiteral(valueNode, _variables) {\n    if (valueNode.kind !== Kind.ENUM) {\n      const valueStr = print(valueNode);\n      throw new GraphQLError(\n        `Enum \"${this.name}\" cannot represent non-enum value: ${valueStr}.` + didYouMeanEnumValue(this, valueStr),\n        {\n          nodes: valueNode\n        }\n      );\n    }\n    const enumValue = this.getValue(valueNode.value);\n    if (enumValue == null) {\n      const valueStr = print(valueNode);\n      throw new GraphQLError(\n        `Value \"${valueStr}\" does not exist in \"${this.name}\" enum.` + didYouMeanEnumValue(this, valueStr),\n        {\n          nodes: valueNode\n        }\n      );\n    }\n    return enumValue.value;\n  }\n  toConfig() {\n    const values = keyValMap(\n      this.getValues(),\n      (value) => value.name,\n      (value) => ({\n        description: value.description,\n        value: value.value,\n        deprecationReason: value.deprecationReason,\n        extensions: value.extensions,\n        astNode: value.astNode\n      })\n    );\n    return {\n      name: this.name,\n      description: this.description,\n      values,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes\n    };\n  }\n  toString() {\n    return this.name;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\nfunction didYouMeanEnumValue(enumType, unknownValueStr) {\n  const allNames = enumType.getValues().map((value) => value.name);\n  const suggestedValues = suggestionList(unknownValueStr, allNames);\n  return didYouMean(\"the enum value\", suggestedValues);\n}\nfunction defineEnumValues(typeName2, valueMap) {\n  isPlainObj(valueMap) || devAssert(\n    false,\n    `${typeName2} values must be an object with value names as keys.`\n  );\n  return Object.entries(valueMap).map(([valueName, valueConfig]) => {\n    isPlainObj(valueConfig) || devAssert(\n      false,\n      `${typeName2}.${valueName} must refer to an object with a \"value\" key representing an internal value but got: ${inspect(valueConfig)}.`\n    );\n    return {\n      name: assertEnumValueName(valueName),\n      description: valueConfig.description,\n      value: valueConfig.value !== void 0 ? valueConfig.value : valueName,\n      deprecationReason: valueConfig.deprecationReason,\n      extensions: toObjMap(valueConfig.extensions),\n      astNode: valueConfig.astNode\n    };\n  });\n}\nclass GraphQLInputObjectType {\n  constructor(config) {\n    var _config$extensionASTN6, _config$isOneOf;\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = (_config$extensionASTN6 = config.extensionASTNodes) !== null && _config$extensionASTN6 !== void 0 ? _config$extensionASTN6 : [];\n    this.isOneOf = (_config$isOneOf = config.isOneOf) !== null && _config$isOneOf !== void 0 ? _config$isOneOf : false;\n    this._fields = defineInputFieldMap.bind(void 0, config);\n  }\n  get [Symbol.toStringTag]() {\n    return \"GraphQLInputObjectType\";\n  }\n  getFields() {\n    if (typeof this._fields === \"function\") {\n      this._fields = this._fields();\n    }\n    return this._fields;\n  }\n  toConfig() {\n    const fields = mapValue(this.getFields(), (field) => ({\n      description: field.description,\n      type: field.type,\n      defaultValue: field.defaultValue,\n      deprecationReason: field.deprecationReason,\n      extensions: field.extensions,\n      astNode: field.astNode\n    }));\n    return {\n      name: this.name,\n      description: this.description,\n      fields,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n      isOneOf: this.isOneOf\n    };\n  }\n  toString() {\n    return this.name;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\nfunction defineInputFieldMap(config) {\n  const fieldMap = resolveObjMapThunk(config.fields);\n  isPlainObj(fieldMap) || devAssert(\n    false,\n    `${config.name} fields must be an object with field names as keys or a function which returns such an object.`\n  );\n  return mapValue(fieldMap, (fieldConfig, fieldName) => {\n    !(\"resolve\" in fieldConfig) || devAssert(\n      false,\n      `${config.name}.${fieldName} field has a resolve property, but Input Types cannot define resolvers.`\n    );\n    return {\n      name: assertName(fieldName),\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      defaultValue: fieldConfig.defaultValue,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode\n    };\n  });\n}\nconst GRAPHQL_MAX_INT = 2147483647;\nconst GRAPHQL_MIN_INT = -2147483648;\nnew GraphQLScalarType({\n  name: \"Int\",\n  description: \"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.\",\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n    if (typeof coercedValue === \"boolean\") {\n      return coercedValue ? 1 : 0;\n    }\n    let num = coercedValue;\n    if (typeof coercedValue === \"string\" && coercedValue !== \"\") {\n      num = Number(coercedValue);\n    }\n    if (typeof num !== \"number\" || !Number.isInteger(num)) {\n      throw new GraphQLError(\n        `Int cannot represent non-integer value: ${inspect(coercedValue)}`\n      );\n    }\n    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {\n      throw new GraphQLError(\n        \"Int cannot represent non 32-bit signed integer value: \" + inspect(coercedValue)\n      );\n    }\n    return num;\n  },\n  parseValue(inputValue) {\n    if (typeof inputValue !== \"number\" || !Number.isInteger(inputValue)) {\n      throw new GraphQLError(\n        `Int cannot represent non-integer value: ${inspect(inputValue)}`\n      );\n    }\n    if (inputValue > GRAPHQL_MAX_INT || inputValue < GRAPHQL_MIN_INT) {\n      throw new GraphQLError(\n        `Int cannot represent non 32-bit signed integer value: ${inputValue}`\n      );\n    }\n    return inputValue;\n  },\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\n        `Int cannot represent non-integer value: ${print(valueNode)}`,\n        {\n          nodes: valueNode\n        }\n      );\n    }\n    const num = parseInt(valueNode.value, 10);\n    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {\n      throw new GraphQLError(\n        `Int cannot represent non 32-bit signed integer value: ${valueNode.value}`,\n        {\n          nodes: valueNode\n        }\n      );\n    }\n    return num;\n  }\n});\nnew GraphQLScalarType({\n  name: \"Float\",\n  description: \"The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).\",\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n    if (typeof coercedValue === \"boolean\") {\n      return coercedValue ? 1 : 0;\n    }\n    let num = coercedValue;\n    if (typeof coercedValue === \"string\" && coercedValue !== \"\") {\n      num = Number(coercedValue);\n    }\n    if (typeof num !== \"number\" || !Number.isFinite(num)) {\n      throw new GraphQLError(\n        `Float cannot represent non numeric value: ${inspect(coercedValue)}`\n      );\n    }\n    return num;\n  },\n  parseValue(inputValue) {\n    if (typeof inputValue !== \"number\" || !Number.isFinite(inputValue)) {\n      throw new GraphQLError(\n        `Float cannot represent non numeric value: ${inspect(inputValue)}`\n      );\n    }\n    return inputValue;\n  },\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.FLOAT && valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\n        `Float cannot represent non numeric value: ${print(valueNode)}`,\n        valueNode\n      );\n    }\n    return parseFloat(valueNode.value);\n  }\n});\nconst GraphQLString = new GraphQLScalarType({\n  name: \"String\",\n  description: \"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.\",\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n    if (typeof coercedValue === \"string\") {\n      return coercedValue;\n    }\n    if (typeof coercedValue === \"boolean\") {\n      return coercedValue ? \"true\" : \"false\";\n    }\n    if (typeof coercedValue === \"number\" && Number.isFinite(coercedValue)) {\n      return coercedValue.toString();\n    }\n    throw new GraphQLError(\n      `String cannot represent value: ${inspect(outputValue)}`\n    );\n  },\n  parseValue(inputValue) {\n    if (typeof inputValue !== \"string\") {\n      throw new GraphQLError(\n        `String cannot represent a non string value: ${inspect(inputValue)}`\n      );\n    }\n    return inputValue;\n  },\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.STRING) {\n      throw new GraphQLError(\n        `String cannot represent a non string value: ${print(valueNode)}`,\n        {\n          nodes: valueNode\n        }\n      );\n    }\n    return valueNode.value;\n  }\n});\nconst GraphQLBoolean = new GraphQLScalarType({\n  name: \"Boolean\",\n  description: \"The `Boolean` scalar type represents `true` or `false`.\",\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n    if (typeof coercedValue === \"boolean\") {\n      return coercedValue;\n    }\n    if (Number.isFinite(coercedValue)) {\n      return coercedValue !== 0;\n    }\n    throw new GraphQLError(\n      `Boolean cannot represent a non boolean value: ${inspect(coercedValue)}`\n    );\n  },\n  parseValue(inputValue) {\n    if (typeof inputValue !== \"boolean\") {\n      throw new GraphQLError(\n        `Boolean cannot represent a non boolean value: ${inspect(inputValue)}`\n      );\n    }\n    return inputValue;\n  },\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.BOOLEAN) {\n      throw new GraphQLError(\n        `Boolean cannot represent a non boolean value: ${print(valueNode)}`,\n        {\n          nodes: valueNode\n        }\n      );\n    }\n    return valueNode.value;\n  }\n});\nnew GraphQLScalarType({\n  name: \"ID\",\n  description: 'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.',\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n    if (typeof coercedValue === \"string\") {\n      return coercedValue;\n    }\n    if (Number.isInteger(coercedValue)) {\n      return String(coercedValue);\n    }\n    throw new GraphQLError(\n      `ID cannot represent value: ${inspect(outputValue)}`\n    );\n  },\n  parseValue(inputValue) {\n    if (typeof inputValue === \"string\") {\n      return inputValue;\n    }\n    if (typeof inputValue === \"number\" && Number.isInteger(inputValue)) {\n      return inputValue.toString();\n    }\n    throw new GraphQLError(`ID cannot represent value: ${inspect(inputValue)}`);\n  },\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.STRING && valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\n        \"ID cannot represent a non-string and non-integer value: \" + print(valueNode),\n        {\n          nodes: valueNode\n        }\n      );\n    }\n    return valueNode.value;\n  }\n});\nfunction serializeObject(outputValue) {\n  if (isObjectLike(outputValue)) {\n    if (typeof outputValue.valueOf === \"function\") {\n      const valueOfResult = outputValue.valueOf();\n      if (!isObjectLike(valueOfResult)) {\n        return valueOfResult;\n      }\n    }\n    if (typeof outputValue.toJSON === \"function\") {\n      return outputValue.toJSON();\n    }\n  }\n  return outputValue;\n}\nclass GraphQLDirective {\n  constructor(config) {\n    var _config$isRepeatable, _config$args;\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.locations = config.locations;\n    this.isRepeatable = (_config$isRepeatable = config.isRepeatable) !== null && _config$isRepeatable !== void 0 ? _config$isRepeatable : false;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    Array.isArray(config.locations) || devAssert(false, `@${config.name} locations must be an Array.`);\n    const args = (_config$args = config.args) !== null && _config$args !== void 0 ? _config$args : {};\n    isObjectLike(args) && !Array.isArray(args) || devAssert(\n      false,\n      `@${config.name} args must be an object with argument names as keys.`\n    );\n    this.args = defineArguments(args);\n  }\n  get [Symbol.toStringTag]() {\n    return \"GraphQLDirective\";\n  }\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      locations: this.locations,\n      args: argsToArgsConfig(this.args),\n      isRepeatable: this.isRepeatable,\n      extensions: this.extensions,\n      astNode: this.astNode\n    };\n  }\n  toString() {\n    return \"@\" + this.name;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\nnew GraphQLDirective({\n  name: \"include\",\n  description: \"Directs the executor to include this field or fragment only when the `if` argument is true.\",\n  locations: [\n    DirectiveLocation.FIELD,\n    DirectiveLocation.FRAGMENT_SPREAD,\n    DirectiveLocation.INLINE_FRAGMENT\n  ],\n  args: {\n    if: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      description: \"Included when true.\"\n    }\n  }\n});\nnew GraphQLDirective({\n  name: \"skip\",\n  description: \"Directs the executor to skip this field or fragment when the `if` argument is true.\",\n  locations: [\n    DirectiveLocation.FIELD,\n    DirectiveLocation.FRAGMENT_SPREAD,\n    DirectiveLocation.INLINE_FRAGMENT\n  ],\n  args: {\n    if: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      description: \"Skipped when true.\"\n    }\n  }\n});\nconst DEFAULT_DEPRECATION_REASON = \"No longer supported\";\nnew GraphQLDirective({\n  name: \"deprecated\",\n  description: \"Marks an element of a GraphQL schema as no longer supported.\",\n  locations: [\n    DirectiveLocation.FIELD_DEFINITION,\n    DirectiveLocation.ARGUMENT_DEFINITION,\n    DirectiveLocation.INPUT_FIELD_DEFINITION,\n    DirectiveLocation.ENUM_VALUE\n  ],\n  args: {\n    reason: {\n      type: GraphQLString,\n      description: \"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).\",\n      defaultValue: DEFAULT_DEPRECATION_REASON\n    }\n  }\n});\nnew GraphQLDirective({\n  name: \"specifiedBy\",\n  description: \"Exposes a URL that specifies the behavior of this scalar.\",\n  locations: [DirectiveLocation.SCALAR],\n  args: {\n    url: {\n      type: new GraphQLNonNull(GraphQLString),\n      description: \"The URL that specifies the behavior of this scalar.\"\n    }\n  }\n});\nnew GraphQLDirective({\n  name: \"oneOf\",\n  description: \"Indicates exactly one field must be supplied and this field must not be `null`.\",\n  locations: [DirectiveLocation.INPUT_OBJECT],\n  args: {}\n});\nconst GRAPH_API_NODE_KIND_ID = \"ID\";\nconst GRAPH_API_NODE_KIND_STRING = \"string\";\nconst GRAPH_API_NODE_KIND_INTEGER = \"integer\";\nconst GRAPH_API_NODE_KIND_FLOAT = \"float\";\nconst GRAPH_API_NODE_KIND_BOOLEAN = \"boolean\";\nconst GRAPH_API_NODE_KIND_ENUM = \"enum\";\nconst GRAPH_API_NODE_KIND_OBJECT = \"object\";\nconst GRAPH_API_NODE_KIND_INTERFACE = \"interface\";\nconst GRAPH_API_NODE_KIND_SCALAR = \"scalar\";\nconst GRAPH_API_NODE_KIND_LIST = \"list\";\nconst GRAPH_API_NODE_KIND_UNION = \"union\";\nconst GRAPH_API_NODE_KIND_INPUT_OBJECT = \"input\";\nconst GRAPH_API_DIRECTIVE_LOCATIONS = [\n  /** Request Definitions */\n  DirectiveLocation.QUERY,\n  DirectiveLocation.MUTATION,\n  DirectiveLocation.SUBSCRIPTION,\n  DirectiveLocation.FIELD,\n  DirectiveLocation.FRAGMENT_DEFINITION,\n  DirectiveLocation.FRAGMENT_SPREAD,\n  DirectiveLocation.INLINE_FRAGMENT,\n  DirectiveLocation.VARIABLE_DEFINITION,\n  /** Type System Definitions */\n  DirectiveLocation.SCHEMA,\n  DirectiveLocation.SCALAR,\n  DirectiveLocation.OBJECT,\n  DirectiveLocation.FIELD_DEFINITION,\n  DirectiveLocation.ARGUMENT_DEFINITION,\n  DirectiveLocation.INTERFACE,\n  DirectiveLocation.UNION,\n  DirectiveLocation.ENUM,\n  DirectiveLocation.ENUM_VALUE,\n  DirectiveLocation.INPUT_OBJECT,\n  DirectiveLocation.INPUT_FIELD_DEFINITION\n];\nconst BUILT_IN_DIRECTIVE_SPECIFIED_BY = \"specifiedBy\";\nconst BUILT_IN_DIRECTIVE_SKIP = \"skip\";\nconst BUILT_IN_DIRECTIVE_INCLUDE = \"include\";\nconst BUILT_IN_DIRECTIVE_DEPRECATED = \"deprecated\";\nconst BUILT_IN_DIRECTIVE_ONE_OF = \"oneOf\";\nconst BUILT_IN_DIRECTIVES = [\n  BUILT_IN_DIRECTIVE_INCLUDE,\n  BUILT_IN_DIRECTIVE_SKIP,\n  BUILT_IN_DIRECTIVE_SPECIFIED_BY,\n  BUILT_IN_DIRECTIVE_DEPRECATED,\n  BUILT_IN_DIRECTIVE_ONE_OF\n];\nnew Set(BUILT_IN_DIRECTIVES);\nfunction isObject(maybeObject) {\n  return !!maybeObject && typeof maybeObject === \"object\";\n}\nfunction isGraphApiDirective(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  return \"definition\" in value && isGraphApiDirectiveDefinition(value.definition);\n}\nfunction isGraphApiDirectiveDefinition(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  return \"locations\" in value && Array.isArray(value.locations) && value.locations.length > 0 && value.locations.every(isGraphApiDirectiveLocation);\n}\nfunction isGraphApiDirectiveLocation(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  return GRAPH_API_DIRECTIVE_LOCATIONS.some((loc) => value === loc);\n}\nconst GRAPH_API_PROPERTY_TITLE = \"title\";\nconst GRAPH_API_PROPERTY_TYPE = \"type\";\nconst GRAPH_API_PROPERTY_KIND = \"kind\";\nconst GRAPH_API_PROPERTY_ONE_OF = \"oneOf\";\nconst GRAPH_API_PROPERTY_QUERIES = \"queries\";\nconst GRAPH_API_PROPERTY_MUTATIONS = \"mutations\";\nconst GRAPH_API_PROPERTY_SUBSCRIPTIONS = \"subscriptions\";\nconst GRAPH_API_PROPERTY_SCALARS = \"scalars\";\nconst GRAPH_API_PROPERTY_OBJECTS = \"objects\";\nconst GRAPH_API_PROPERTY_INTERFACES = \"interfaces\";\nconst GRAPH_API_PROPERTY_INPUT_OBJECTS = \"inputObjects\";\nconst GRAPH_API_PROPERTY_DIRECTIVES = \"directives\";\nconst GRAPH_API_PROPERTY_DEPRECATED_DIRECTIVE = \"deprecated\";\nconst GRAPH_API_PROPERTY_UNIONS = \"unions\";\nconst GRAPH_API_PROPERTY_ENUMS = \"enums\";\nconst GRAPH_API_PROPERTY_ARGS = \"args\";\nconst GRAPH_API_PROPERTY_LOCATIONS = \"locations\";\nconst GRAPH_API_PROPERTY_META = \"meta\";\nconst GRAPH_API_PROPERTY_NULLABLE = \"nullable\";\nconst GRAPH_API_PROPERTY_REPEATABLE = \"repeatable\";\nconst GRAPH_API_PROPERTY_DEFAULT = \"default\";\nconst GRAPH_API_PROPERTY_VALUES = \"values\";\nconst GRAPH_API_PROPERTY_PROPERTIES = \"properties\";\nconst GRAPH_API_PROPERTY_METHODS = \"methods\";\nconst GRAPH_API_PROPERTY_DEFINITION = \"definition\";\nconst GRAPH_API_PROPERTY_COMPONENTS = \"components\";\nconst directiveMetaUnification = (value, { options }) => {\n  if (!isObject$1(value)) {\n    return value;\n  }\n  const directive = value;\n  const { meta, definition } = directive;\n  if (!meta || !isGraphApiDirectiveDefinition(definition)) {\n    return value;\n  }\n  const args = definition.args;\n  if (!isObject$1(args)) {\n    return value;\n  }\n  const defaults = Object.entries(args).reduce((collector, [key, value2]) => {\n    if (!isObject$1(value2)) {\n      return collector;\n    }\n    if (!(GRAPH_API_PROPERTY_DEFAULT in value2)) {\n      return collector;\n    }\n    collector[key] = value2[GRAPH_API_PROPERTY_DEFAULT];\n    copyOrigins(value2, collector, GRAPH_API_PROPERTY_DEFAULT, key, options.originsFlag);\n    return collector;\n  }, {});\n  if (defaults.length === 0) {\n    return value;\n  }\n  const newMeta = {\n    ...defaults,\n    ...meta\n  };\n  if (options.originsFlag) {\n    const defaultsMeta = resolveOriginsMetaRecord(defaults, options.originsFlag) ?? {};\n    const existingMeta = resolveOriginsMetaRecord(newMeta, options.originsFlag) ?? {};\n    setJsoProperty(newMeta, options.originsFlag, {\n      ...defaultsMeta,\n      ...existingMeta\n    });\n  }\n  if (options.defaultsFlag) {\n    const defaultsMap = Object.entries(defaults).reduce((col, [key, value2]) => {\n      if (value2 !== newMeta[key]) {\n        return col;\n      }\n      col[key] = value2 === meta[key] ? DEFAULT_TYPE_FLAG_PURE : DEFAULT_TYPE_FLAG_SYNTHETIC;\n      return col;\n    }, {});\n    setJsoProperty(newMeta, options.defaultsFlag, defaultsMap);\n  }\n  return {\n    ...value,\n    meta: newMeta\n  };\n};\nconst GRAPH_API_DEPRECATION_PREDICATE = (value) => {\n  var _a;\n  const deprecatedDirectiveProperty = getJsoProperty(value, GRAPH_API_PROPERTY_DEPRECATED_DIRECTIVE);\n  if (!deprecatedDirectiveProperty) {\n    return void 0;\n  } else if (isGraphApiDirective(deprecatedDirectiveProperty)) {\n    return (_a = deprecatedDirectiveProperty.meta) == null ? void 0 : _a.reason;\n  }\n};\nconst EMPTY_MARKER = Symbol(\"empty-items\");\nconst GRAPH_API_DEFAULTS = {\n  [GRAPH_API_PROPERTY_COMPONENTS]: EMPTY_MARKER,\n  [GRAPH_API_PROPERTY_QUERIES]: EMPTY_MARKER,\n  [GRAPH_API_PROPERTY_MUTATIONS]: EMPTY_MARKER,\n  [GRAPH_API_PROPERTY_SUBSCRIPTIONS]: EMPTY_MARKER\n};\nconst COMPONENTS_DEFAULTS = {\n  [GRAPH_API_PROPERTY_SCALARS]: EMPTY_MARKER,\n  [GRAPH_API_PROPERTY_OBJECTS]: EMPTY_MARKER,\n  [GRAPH_API_PROPERTY_INTERFACES]: EMPTY_MARKER,\n  [GRAPH_API_PROPERTY_INPUT_OBJECTS]: EMPTY_MARKER,\n  [GRAPH_API_PROPERTY_DIRECTIVES]: EMPTY_MARKER,\n  [GRAPH_API_PROPERTY_UNIONS]: EMPTY_MARKER,\n  [GRAPH_API_PROPERTY_ENUMS]: EMPTY_MARKER\n};\nconst METHOD_DEFAULTS = {\n  [GRAPH_API_PROPERTY_ARGS]: EMPTY_MARKER,\n  [GRAPH_API_PROPERTY_DIRECTIVES]: EMPTY_MARKER\n};\nconst DIRECTIVE_DEFINITION_DEFAULTS = {\n  [GRAPH_API_PROPERTY_ARGS]: EMPTY_MARKER,\n  [GRAPH_API_PROPERTY_LOCATIONS]: EMPTY_MARKER,\n  [GRAPH_API_PROPERTY_REPEATABLE]: false,\n  [GRAPH_API_PROPERTY_DIRECTIVES]: EMPTY_MARKER\n};\nconst DIRECTIVE_USAGE_DEFAULTS = {\n  [GRAPH_API_PROPERTY_META]: EMPTY_MARKER\n};\nconst ENUM_VALUE_DEFAULTS = {\n  [GRAPH_API_PROPERTY_DIRECTIVES]: EMPTY_MARKER\n};\nconst TYPE_USAGE_DEFAULTS = {\n  [GRAPH_API_PROPERTY_NULLABLE]: true,\n  [GRAPH_API_PROPERTY_DIRECTIVES]: EMPTY_MARKER\n};\nconst SCALAR_DEFINITION_DEFAULTS = {};\nconst ENUM_DEFINITION_DEFAULTS = {\n  [GRAPH_API_PROPERTY_VALUES]: EMPTY_MARKER\n};\nconst INPUT_OBJECT_DEFINITION_DEFAULTS = {\n  [GRAPH_API_PROPERTY_PROPERTIES]: EMPTY_MARKER\n};\nconst INTERFACE_DEFINITION_DEFAULTS = {\n  [GRAPH_API_PROPERTY_INTERFACES]: EMPTY_MARKER,\n  [GRAPH_API_PROPERTY_METHODS]: EMPTY_MARKER\n};\nconst UNION_DEFINITION_DEFAULTS = {\n  [GRAPH_API_PROPERTY_ONE_OF]: EMPTY_MARKER\n};\nconst LIST_DEFINITION_DEFAULTS = {};\nconst DIRECTIVE_HOLDER_DEFAULTS = {\n  [GRAPH_API_PROPERTY_DIRECTIVES]: EMPTY_MARKER\n};\nconst TO_EMPTY_ARRAY_MAPPING = {\n  mapping: /* @__PURE__ */ new Map([[EMPTY_MARKER, {\n    value: () => [],\n    reverseMatcher: deepEqualsMatcher([])\n  }]])\n};\nconst TO_EMPTY_OBJECT_MAPPING = {\n  mapping: /* @__PURE__ */ new Map([[EMPTY_MARKER, {\n    value: () => ({}),\n    reverseMatcher: deepEqualsMatcher({})\n  }]])\n};\nconst GRAPH_API_REPLACES = {\n  [GRAPH_API_PROPERTY_COMPONENTS]: TO_EMPTY_OBJECT_MAPPING,\n  [GRAPH_API_PROPERTY_QUERIES]: TO_EMPTY_OBJECT_MAPPING,\n  [GRAPH_API_PROPERTY_MUTATIONS]: TO_EMPTY_OBJECT_MAPPING,\n  [GRAPH_API_PROPERTY_SUBSCRIPTIONS]: TO_EMPTY_OBJECT_MAPPING\n};\nconst COMPONENTS_REPLACES = {\n  [GRAPH_API_PROPERTY_SCALARS]: TO_EMPTY_OBJECT_MAPPING,\n  [GRAPH_API_PROPERTY_OBJECTS]: TO_EMPTY_OBJECT_MAPPING,\n  [GRAPH_API_PROPERTY_INTERFACES]: TO_EMPTY_OBJECT_MAPPING,\n  [GRAPH_API_PROPERTY_INPUT_OBJECTS]: TO_EMPTY_OBJECT_MAPPING,\n  [GRAPH_API_PROPERTY_DIRECTIVES]: TO_EMPTY_OBJECT_MAPPING,\n  [GRAPH_API_PROPERTY_UNIONS]: TO_EMPTY_OBJECT_MAPPING,\n  [GRAPH_API_PROPERTY_ENUMS]: TO_EMPTY_OBJECT_MAPPING\n};\nconst METHOD_REPLACES = {\n  [GRAPH_API_PROPERTY_ARGS]: TO_EMPTY_OBJECT_MAPPING,\n  [GRAPH_API_PROPERTY_DIRECTIVES]: TO_EMPTY_OBJECT_MAPPING\n};\nconst DIRECTIVE_DEFINITION_REPLACES = {\n  [GRAPH_API_PROPERTY_ARGS]: TO_EMPTY_OBJECT_MAPPING,\n  [GRAPH_API_PROPERTY_LOCATIONS]: TO_EMPTY_ARRAY_MAPPING,\n  [GRAPH_API_PROPERTY_DIRECTIVES]: TO_EMPTY_OBJECT_MAPPING\n};\nconst DIRECTIVE_USAGE_REPLACES = {\n  [GRAPH_API_PROPERTY_META]: TO_EMPTY_OBJECT_MAPPING\n};\nconst ENUM_VALUE_REPLACES = {\n  [GRAPH_API_PROPERTY_DIRECTIVES]: TO_EMPTY_OBJECT_MAPPING\n};\nconst TYPE_USAGE_REPLACES = {\n  [GRAPH_API_PROPERTY_DIRECTIVES]: TO_EMPTY_OBJECT_MAPPING\n};\nconst SCALAR_DEFINITION_REPLACES = {};\nconst ENUM_DEFINITION_REPLACES = {\n  [GRAPH_API_PROPERTY_VALUES]: TO_EMPTY_OBJECT_MAPPING\n};\nconst INPUT_OBJECT_DEFINITION_REPLACES = {\n  [GRAPH_API_PROPERTY_PROPERTIES]: TO_EMPTY_OBJECT_MAPPING\n};\nconst INTERFACE_DEFINITION_REPLACES = {\n  [GRAPH_API_PROPERTY_INTERFACES]: TO_EMPTY_ARRAY_MAPPING,\n  [GRAPH_API_PROPERTY_METHODS]: TO_EMPTY_OBJECT_MAPPING\n};\nconst UNION_DEFINITION_REPLACES = {\n  [GRAPH_API_PROPERTY_ONE_OF]: TO_EMPTY_ARRAY_MAPPING\n};\nconst LIST_DEFINITION_REPLACES = {};\nconst DIRECTIVE_HOLDER_REPLACES = {\n  [GRAPH_API_PROPERTY_DIRECTIVES]: TO_EMPTY_OBJECT_MAPPING\n};\nconst directivesUsagesRules = {\n  \"/directives\": {\n    deprecation: {\n      deprecationResolver: (ctx) => GRAPH_API_DEPRECATION_PREDICATE(ctx),\n      descriptionCalculator: () => \"[Deprecated]\"\n    },\n    \"/*\": {\n      \"/definition\": () => directiveDefinitionRules,\n      \"/meta\": {\n        \"/*\": { validate: checkType(...TYPE_JSON_ANY) },\n        validate: checkType(TYPE_OBJECT)\n      },\n      unify: [\n        valueDefaults(DIRECTIVE_USAGE_DEFAULTS),\n        valueReplaces(DIRECTIVE_USAGE_REPLACES),\n        directiveMetaUnification\n      ],\n      validate: checkType(TYPE_OBJECT)\n    },\n    validate: checkType(TYPE_OBJECT)\n  },\n  validate: checkType(TYPE_OBJECT),\n  unify: [\n    valueDefaults(DIRECTIVE_HOLDER_DEFAULTS),\n    valueReplaces(DIRECTIVE_HOLDER_REPLACES)\n  ]\n};\nconst baseRules = {\n  \"/description\": {\n    validate: checkType(TYPE_STRING)\n  },\n  ...directivesUsagesRules\n};\nconst selfNamedBaseRules = {\n  ...baseRules,\n  \"/title\": {\n    validate: checkType(TYPE_STRING)\n  }\n};\nconst directiveDefinitionRules = {\n  ...selfNamedBaseRules,\n  \"/args\": {\n    \"/*\": () => typeUsageRules,\n    //only scalar, input, enum, and array with it\n    validate: checkType(TYPE_OBJECT)\n  },\n  \"/repeatable\": { validate: checkType(TYPE_BOOLEAN) },\n  \"/locations\": {\n    \"/*\": { validate: [checkType(TYPE_STRING), checkContains(...GRAPH_API_DIRECTIVE_LOCATIONS)] },\n    validate: checkType(TYPE_ARRAY)\n  },\n  validate: checkType(TYPE_OBJECT),\n  unify: [\n    valueDefaults(DIRECTIVE_DEFINITION_DEFAULTS),\n    valueReplaces(DIRECTIVE_DEFINITION_REPLACES)\n  ],\n  referenceHandler: referenceObjectResolver()\n};\nconst typeDefinitionRules = ({ value }) => {\n  const kind = resolveValueByPath(value, [GRAPH_API_PROPERTY_TYPE, GRAPH_API_PROPERTY_KIND]);\n  switch (kind) {\n    case GRAPH_API_NODE_KIND_ID:\n    case GRAPH_API_NODE_KIND_STRING:\n    case GRAPH_API_NODE_KIND_INTEGER:\n    case GRAPH_API_NODE_KIND_FLOAT:\n    case GRAPH_API_NODE_KIND_BOOLEAN:\n    case GRAPH_API_NODE_KIND_SCALAR:\n      return scalarDefinitionRules;\n    case GRAPH_API_NODE_KIND_OBJECT:\n    case GRAPH_API_NODE_KIND_INTERFACE:\n      return interfaceDefinitionRules;\n    case GRAPH_API_NODE_KIND_ENUM:\n      return enumDefinitionRules;\n    case GRAPH_API_NODE_KIND_INPUT_OBJECT:\n      return inputObjectDefinitionRules;\n    case GRAPH_API_NODE_KIND_UNION:\n      return unionDefinitionRules;\n    case GRAPH_API_NODE_KIND_LIST:\n      return listDefinitionRules;\n    default:\n      return {\n        validate: () => false,\n        //TODO This function does not work with ref.\n        // It is used to resolve the reference object for the unknown type definition.\n        \"/**\": { referenceHandler: referenceObjectResolver() },\n        referenceHandler: referenceObjectResolver()\n      };\n  }\n};\nconst typeUsageRules = {\n  ...baseRules,\n  \"/default\": {\n    \"/**\": { validate: checkType(...TYPE_JSON_ANY) },\n    validate: checkType(...TYPE_JSON_ANY)\n  },\n  \"/nullable\": { validate: checkType(TYPE_BOOLEAN) },\n  \"/typeDef\": typeDefinitionRules,\n  unify: [\n    valueDefaults(TYPE_USAGE_DEFAULTS),\n    valueReplaces(TYPE_USAGE_REPLACES)\n  ]\n};\nconst methodRules = {\n  ...baseRules,\n  \"/args\": {\n    \"/*\": typeUsageRules,\n    //only scalar, input, enum, and array with it\n    validate: checkType(TYPE_OBJECT)\n  },\n  \"/output\": () => typeUsageRules,\n  unify: [\n    valueDefaults(METHOD_DEFAULTS),\n    valueReplaces(METHOD_REPLACES)\n  ]\n};\nconst scalarDefinitionRules = {\n  ...selfNamedBaseRules,\n  \"/type\": {\n    \"/kind\": {\n      validate: [checkType(TYPE_STRING), checkContains(GRAPH_API_NODE_KIND_ID, GRAPH_API_NODE_KIND_STRING, GRAPH_API_NODE_KIND_INTEGER, GRAPH_API_NODE_KIND_FLOAT, GRAPH_API_NODE_KIND_BOOLEAN, GRAPH_API_NODE_KIND_SCALAR)]\n    },\n    validate: checkType(TYPE_OBJECT),\n    unify: [\n      valueDefaults(SCALAR_DEFINITION_DEFAULTS),\n      valueReplaces(SCALAR_DEFINITION_REPLACES)\n    ]\n  }\n};\nconst enumDefinitionRules = {\n  ...selfNamedBaseRules,\n  \"/type\": {\n    \"/kind\": {\n      validate: [checkType(TYPE_STRING), checkContains(GRAPH_API_NODE_KIND_ENUM)]\n    },\n    \"/values\": {\n      \"/*\": {\n        ...baseRules,\n        unify: [\n          valueDefaults(ENUM_VALUE_DEFAULTS),\n          valueReplaces(ENUM_VALUE_REPLACES)\n        ],\n        validate: checkType(TYPE_OBJECT)\n      },\n      validate: checkType(TYPE_OBJECT)\n    },\n    validate: checkType(TYPE_OBJECT),\n    unify: [\n      valueDefaults(ENUM_DEFINITION_DEFAULTS),\n      valueReplaces(ENUM_DEFINITION_REPLACES)\n    ]\n  }\n};\nconst inputObjectDefinitionRules = {\n  ...selfNamedBaseRules,\n  \"/type\": {\n    \"/kind\": {\n      validate: [checkType(TYPE_STRING), checkContains(GRAPH_API_NODE_KIND_INPUT_OBJECT)]\n    },\n    \"/properties\": {\n      \"/*\": typeUsageRules,\n      //only scalar, input, enum, and array with it\n      validate: checkType(TYPE_OBJECT)\n    },\n    validate: checkType(TYPE_OBJECT),\n    unify: [\n      valueDefaults(INPUT_OBJECT_DEFINITION_DEFAULTS),\n      valueReplaces(INPUT_OBJECT_DEFINITION_REPLACES)\n    ]\n  }\n};\nconst interfaceDefinitionRules = {\n  ...selfNamedBaseRules,\n  \"/type\": {\n    \"/kind\": {\n      validate: [checkType(TYPE_STRING), checkContains(GRAPH_API_NODE_KIND_INTERFACE, GRAPH_API_NODE_KIND_OBJECT)]\n    },\n    \"/methods\": {\n      \"/*\": methodRules,\n      validate: checkType(TYPE_OBJECT)\n    },\n    \"/interfaces\": {\n      \"/*\": () => interfaceDefinitionRules,\n      validate: checkType(TYPE_ARRAY)\n    },\n    validate: checkType(TYPE_OBJECT),\n    unify: [\n      valueDefaults(INTERFACE_DEFINITION_DEFAULTS),\n      valueReplaces(INTERFACE_DEFINITION_REPLACES)\n    ]\n  }\n};\nconst unionDefinitionRules = {\n  ...selfNamedBaseRules,\n  \"/type\": {\n    \"/kind\": {\n      validate: [checkType(TYPE_STRING), checkContains(GRAPH_API_NODE_KIND_UNION)]\n    },\n    \"/oneOf\": {\n      \"/*\": typeDefinitionRules,\n      validate: checkType(TYPE_ARRAY)\n    },\n    validate: checkType(TYPE_OBJECT),\n    unify: [\n      valueDefaults(UNION_DEFINITION_DEFAULTS),\n      valueReplaces(UNION_DEFINITION_REPLACES)\n    ]\n  }\n};\nconst listDefinitionRules = {\n  ...selfNamedBaseRules,\n  \"/type\": {\n    \"/kind\": {\n      validate: [checkType(TYPE_STRING), checkContains(GRAPH_API_NODE_KIND_LIST)]\n    },\n    \"/items\": typeUsageRules,\n    validate: checkType(TYPE_OBJECT),\n    unify: [\n      valueDefaults(LIST_DEFINITION_DEFAULTS),\n      valueReplaces(LIST_DEFINITION_REPLACES)\n    ]\n  }\n};\nconst graphApiRules = () => ({\n  \"/graphapi\": { validate: checkType(TYPE_STRING) },\n  \"/queries\": {\n    \"/*\": methodRules,\n    validate: checkType(TYPE_OBJECT)\n  },\n  \"/mutations\": {\n    \"/*\": methodRules,\n    validate: checkType(TYPE_OBJECT)\n  },\n  \"/subscriptions\": {\n    \"/*\": methodRules,\n    validate: checkType(TYPE_OBJECT)\n  },\n  \"/components\": {\n    \"/scalars\": {\n      \"/*\": scalarDefinitionRules,\n      validate: checkType(TYPE_OBJECT)\n    },\n    \"/objects\": {\n      \"/*\": interfaceDefinitionRules,\n      validate: checkType(TYPE_OBJECT)\n    },\n    \"/interfaces\": {\n      \"/*\": interfaceDefinitionRules,\n      validate: checkType(TYPE_OBJECT)\n    },\n    \"/inputObjects\": {\n      \"/*\": inputObjectDefinitionRules,\n      validate: checkType(TYPE_OBJECT)\n    },\n    \"/directives\": {\n      \"/*\": directiveDefinitionRules,\n      validate: checkType(TYPE_OBJECT)\n    },\n    \"/unions\": {\n      \"/*\": unionDefinitionRules,\n      validate: checkType(TYPE_OBJECT)\n    },\n    \"/enums\": {\n      \"/*\": enumDefinitionRules,\n      validate: checkType(TYPE_OBJECT)\n    },\n    validate: checkType(TYPE_OBJECT),\n    unify: [\n      valueDefaults(COMPONENTS_DEFAULTS),\n      valueReplaces(COMPONENTS_REPLACES)\n    ]\n  },\n  \"/**\": {\n    referenceHandler: notAllowedReferenceHandler\n  },\n  validate: checkType(TYPE_OBJECT),\n  unify: [\n    valueDefaults(GRAPH_API_DEFAULTS),\n    valueReplaces(GRAPH_API_REPLACES)\n  ]\n});\nconst RULES = {\n  [SPEC_TYPE_JSON_SCHEMA_04]: jsonSchemaRules(SPEC_TYPE_JSON_SCHEMA_04),\n  [SPEC_TYPE_JSON_SCHEMA_06]: jsonSchemaRules(SPEC_TYPE_JSON_SCHEMA_06),\n  [SPEC_TYPE_JSON_SCHEMA_07]: jsonSchemaRules(SPEC_TYPE_JSON_SCHEMA_07),\n  [SPEC_TYPE_OPEN_API_30]: openApiRules(SPEC_TYPE_OPEN_API_30),\n  [SPEC_TYPE_OPEN_API_31]: openApiRules(SPEC_TYPE_OPEN_API_31),\n  [SPEC_TYPE_GRAPH_API]: graphApiRules(),\n  [SPEC_TYPE_ASYNCAPI_2]: {}\n};\nfunction evaluateSyntheticTitle(path, syntheticTitleFlag, targetPropertyKey) {\n  if (!path.length) {\n    return {};\n  }\n  const result = {\n    [targetPropertyKey]: path[path.length - 1].toString(),\n    [syntheticTitleFlag]: true\n  };\n  return result;\n}\nconst IMPOSSIBLE_ORIGIN_PARENT = { parent: void 0, value: \"ERROR!!!\" };\nconst defineOriginsAndResolveRef = (value, options) => {\n  const spec = resolveSpec(value);\n  const internalOptions = {\n    resolveRef: DEFAULT_OPTION_RESOLVE_REF,\n    originsAlreadyDefined: !!(options == null ? void 0 : options.originsFlag),\n    ...options,\n    originsFlag: (options == null ? void 0 : options.originsAlreadyDefined) ? void 0 : options == null ? void 0 : options.originsFlag,\n    source: (options == null ? void 0 : options.source) ?? value,\n    ignoreSymbols: /* @__PURE__ */ new Set([\n      ...(options == null ? void 0 : options.originsFlag) ? [options.originsFlag] : [],\n      ...(options == null ? void 0 : options.inlineRefsFlag) ? [options.inlineRefsFlag] : [],\n      ...(options == null ? void 0 : options.syntheticTitleFlag) ? [options.syntheticTitleFlag] : [],\n      ...(options == null ? void 0 : options.syntheticAllOfFlag) ? [options.syntheticAllOfFlag] : [],\n      ...(options == null ? void 0 : options.ignoreSymbols) ? options.ignoreSymbols : []\n    ])\n  };\n  const cycledJsoHandlerHook = createCycledJsoHandlerHook();\n  const originCache = /* @__PURE__ */ new Map();\n  const resolvedJso = syncClone(value, [cycledJsoHandlerHook, createDefineOriginsAndResolveRefHook(value, internalOptions, cycledJsoHandlerHook), cycledJsoHandlerHook], {\n    rules: RULES[spec.type],\n    state: {\n      ignoreTreeUnderSymbols: false,\n      originParent: void 0,\n      originCollector: {},\n      lazySourceOriginCollector: /* @__PURE__ */ new Map(),\n      syntheticsJumps: /* @__PURE__ */ new Map(),\n      originCache\n    }\n  });\n  if (options == null ? void 0 : options.originsFlag) {\n    const origins = [...originCache.values()];\n    if (isObject$1(resolvedJso) && options.originsFlag in resolvedJso) {\n      origins.push(...[...Object.values(resolvedJso[options.originsFlag])].flatMap((v) => v));\n    }\n    cleanupRootOrigin(origins);\n  }\n  return resolvedJso;\n};\nconst deDefineOriginsAndResolvedRefSymbols = (value, options) => {\n  const originsFlag = options == null ? void 0 : options.originsFlag;\n  const originsAlreadyDefined = options == null ? void 0 : options.originsAlreadyDefined;\n  const titleFlag = options == null ? void 0 : options.syntheticTitleFlag;\n  const allOfFlag = options == null ? void 0 : options.syntheticAllOfFlag;\n  const inlineFlag = options == null ? void 0 : options.inlineRefsFlag;\n  if (!originsFlag && !titleFlag && !allOfFlag && !inlineFlag) {\n    return value;\n  }\n  const ignoreSymbols = /* @__PURE__ */ new Set([\n    ...(options == null ? void 0 : options.originsFlag) ? [options.originsFlag] : [],\n    ...(options == null ? void 0 : options.inlineRefsFlag) ? [options.inlineRefsFlag] : [],\n    ...(options == null ? void 0 : options.syntheticTitleFlag) ? [options.syntheticTitleFlag] : [],\n    ...(options == null ? void 0 : options.syntheticAllOfFlag) ? [options.syntheticAllOfFlag] : [],\n    ...(options == null ? void 0 : options.ignoreSymbols) ? options.ignoreSymbols : []\n  ]);\n  const cycleGuard = /* @__PURE__ */ new Set();\n  syncCrawl(value, ({ key, value: value2 }) => {\n    if (!isObject$1(value2)) {\n      return { done: true };\n    }\n    if (ignoreSymbols.has(key)) {\n      return { done: true };\n    }\n    if (cycleGuard.has(value2)) {\n      return { done: true };\n    }\n    cycleGuard.add(value2);\n    originsFlag && !originsAlreadyDefined && delete value2[originsFlag];\n    titleFlag && delete value2[titleFlag];\n    allOfFlag && delete value2[allOfFlag];\n    inlineFlag && delete value2[inlineFlag];\n    return { value: value2 };\n  });\n  return value;\n};\nconst createDefineOriginsAndResolveRefHook = (rootJso, options, cycleJsoHook) => {\n  const cyclingGuard = /* @__PURE__ */ new Set();\n  const syntheticTitleCache = /* @__PURE__ */ new Map();\n  const defineOriginsAndResolveRefHook = ({ key, value, state, path, rules }) => {\n    var _a;\n    if (state.ignoreTreeUnderSymbols) {\n      return { value };\n    }\n    const safeKey = key ?? JSON_ROOT_KEY;\n    if (typeof safeKey === \"symbol\" && options.ignoreSymbols.has(safeKey)) {\n      return { value, state: { ...state, ignoreTreeUnderSymbols: true, originParent: IMPOSSIBLE_ORIGIN_PARENT } };\n    }\n    const originForLeaf = () => {\n      if (options.originsFlag) {\n        state.originCollector[safeKey] = state.originCollector[safeKey] ?? [{\n          parent: state.originParent,\n          value: safeKey\n        }];\n      }\n    };\n    if (!isObject$1(value)) {\n      originForLeaf();\n      return { value, state: { ...state, originParent: IMPOSSIBLE_ORIGIN_PARENT } };\n    }\n    const originForObj = options.originsFlag ? getOrSimpleCreateOrigin(value, state.originParent, safeKey, state.originCache) : IMPOSSIBLE_ORIGIN_PARENT;\n    if (options.resolveRef) {\n      const { $ref, ...otherSibling } = value;\n      const sibling = otherSibling;\n      if ($ref) {\n        const { referenceHandler } = rules || {};\n        if (!referenceHandler) {\n          (_a = options.onRefResolveError) == null ? void 0 : _a.call(options, ErrorMessage.referenceNotAllowed($ref), path, $ref, RefErrorTypes.REF_NOT_ALLOWED);\n          state.node[safeKey] = value;\n          return { done: true };\n        }\n        const resolveDefaultReference = (referenceHandler2) => {\n          var _a2, _b;\n          const originForRef = getOrReuseOrigin(originForObj, {\n            parent: originForObj,\n            value: JSON_SCHEMA_PROPERTY_REF\n          }, state.originCache);\n          if (typeof $ref !== \"string\") {\n            (_a2 = options.onRefResolveError) == null ? void 0 : _a2.call(options, ErrorMessage.refNotValidFormat($ref), path, $ref, RefErrorTypes.REF_NOT_VALID_FORMAT);\n            const brokenValueClone = { [JSON_SCHEMA_PROPERTY_REF]: $ref };\n            state.node[safeKey] = brokenValueClone;\n            setOrigins(state.node, safeKey, options.originsFlag, [originForObj]);\n            setOrigins(brokenValueClone, JSON_SCHEMA_PROPERTY_REF, options.originsFlag, [originForRef]);\n            return { done: true };\n          }\n          const reference = parseRef($ref);\n          const processWrapRefWithAllOfReference = (resolvedRefWithSibling) => {\n            const {\n              refValue,\n              origin,\n              refIndex = 0,\n              siblingIndex = 0,\n              titleIndex = 0\n            } = resolvedRefWithSibling;\n            const wrap2 = refValue;\n            const childrenOrigins2 = {};\n            state.syntheticsJumps.set(wrap2, () => wrap2[JSON_SCHEMA_PROPERTY_ALL_OF][refIndex]);\n            return {\n              value: wrap2,\n              state: {\n                ...state,\n                originParent: originForObj,\n                //? proof\n                originCollector: {}\n                //no need ? proof\n              },\n              afterHooksHook: () => {\n                const node = state.node[safeKey];\n                if (options.originsFlag && isObject$1(node)) {\n                  state.originCollector[safeKey] = [getOrReuseOrigin(node, originForObj, state.originCache)];\n                }\n              },\n              exitHook: () => {\n                const clonedAllOf = state.node[safeKey];\n                const alreadyExistedIndexOrigins = {\n                  [refIndex]: [originForRef]\n                };\n                if (titleIndex >= 0) {\n                  alreadyExistedIndexOrigins[titleIndex] = [originForRef];\n                }\n                if (siblingIndex >= 0) {\n                  alreadyExistedIndexOrigins[siblingIndex] = [originForObj];\n                }\n                state.syntheticsJumps.set(clonedAllOf, () => clonedAllOf[JSON_SCHEMA_PROPERTY_ALL_OF][refIndex]);\n                const clonedAllArray = clonedAllOf.allOf;\n                const clonedRef = clonedAllArray[refIndex];\n                options.inlineRefsFlag && isObject$1(clonedRef) && addRefInlineHistory(clonedRef, options.inlineRefsFlag, reference);\n                if (options.originsFlag && isObject$1(clonedRef) && origin) {\n                  state.originCollector[safeKey] = [originForObj];\n                  const lazyOrigins = state.lazySourceOriginCollector.get(refValue) ?? {};\n                  clonedRef[options.originsFlag] = {\n                    ...clonedRef[options.originsFlag] ?? {},\n                    ...lazyOrigins,\n                    ...childrenOrigins2\n                  };\n                  clonedAllArray[options.originsFlag] = {\n                    ...clonedAllArray[options.originsFlag] ?? {},\n                    ...alreadyExistedIndexOrigins\n                  };\n                  Object.assign(clonedAllOf, {\n                    [options.originsFlag]: {\n                      [JSON_SCHEMA_PROPERTY_ALL_OF]: [originForObj]\n                    }\n                  });\n                }\n              }\n            };\n          };\n          const processReferenceWithChildren = (resolvedRefWithSibling) => {\n            const { refValue, origin, childrenOrigins: childrenOrigins2 } = resolvedRefWithSibling;\n            return {\n              value: refValue,\n              state: {\n                ...state,\n                originParent: origin,\n                originCollector: childrenOrigins2\n              },\n              afterHooksHook: () => {\n                const node = state.node[safeKey];\n                if (options.originsFlag && isObject$1(node)) {\n                  state.originCollector[safeKey] = [getOrReuseOrigin(node, originForObj, state.originCache)];\n                  state.lazySourceOriginCollector.set(node, state.lazySourceOriginCollector.get(refValue) ?? {});\n                }\n              },\n              exitHook: () => {\n                const node = state.node[safeKey];\n                options.inlineRefsFlag && isObject$1(node) && addRefInlineHistory(node, options.inlineRefsFlag, reference);\n                if (options.originsFlag && isObject$1(node) && origin) {\n                  state.originCollector[safeKey] = [originForObj];\n                  const lazyOrigins = state.lazySourceOriginCollector.get(refValue) ?? {};\n                  node[options.originsFlag] = {\n                    ...node[options.originsFlag] ?? {},\n                    ...lazyOrigins,\n                    ...childrenOrigins2\n                  };\n                }\n              }\n            };\n          };\n          const processResolvedReference = (resolvedRefWithSibling) => {\n            if (hasChildrenOrigins(resolvedRefWithSibling)) {\n              return processReferenceWithChildren(resolvedRefWithSibling);\n            }\n            return processWrapRefWithAllOfReference(resolvedRefWithSibling);\n          };\n          if (cyclingGuard.has(reference.normalized)) {\n            return { value: void 0, done: true };\n          } else {\n            cyclingGuard.add(reference.normalized);\n          }\n          try {\n            const updateLazyParentChainItem = (item, parentValue, propertyKey) => state.lazySourceOriginCollector.set(parentValue, {\n              ...state.lazySourceOriginCollector.get(parentValue) ?? {},\n              [propertyKey]: [item]\n            });\n            const refInResultedJso = resolveRefNode(\n              reference,\n              state.root[JSON_ROOT_KEY],\n              defineOriginsAndResolveRefHook,\n              cycleJsoHook,\n              state,\n              rules,\n              options.originsFlag ? (value2, parentChain, parentValue, propertyKey) => getOrSimpleCreateOrigin(\n                value2,\n                parentChain,\n                propertyKey,\n                state.originCache\n                /*, item => updateLazyParentChainItem(item, parentValue, propertyKey) proof by test*/\n              ) : void 0\n            );\n            if ((refInResultedJso == null ? void 0 : refInResultedJso.refValue) !== void 0 && (refInResultedJso == null ? void 0 : refInResultedJso.refValue) !== null) {\n              const resolvedRefWithRules = referenceHandler2({\n                options,\n                state,\n                rules,\n                resolvedRef: refInResultedJso,\n                originForObj,\n                sibling,\n                syntheticTitleCache,\n                reference\n              });\n              return processResolvedReference(resolvedRefWithRules);\n            }\n            const refInSourceJso = resolveRefNode(\n              reference,\n              options.source,\n              defineOriginsAndResolveRefHook,\n              cycleJsoHook,\n              state,\n              rules,\n              options.originsFlag ? (value2, parentChain, parentValue, propertyKey) => getOrCustomCreateOrigin(\n                value2,\n                () => {\n                  const resolvedPath = parentChain ? pathItemToFullPath(parentChain) : [];\n                  const parentValueFromAlreadyCopiedJso = resolveValueByPath(state.root[JSON_ROOT_KEY], resolvedPath);\n                  if (isObject$1(parentValueFromAlreadyCopiedJso) && propertyKey in parentValueFromAlreadyCopiedJso) {\n                    return getOrSimpleCreateOrigin(\n                      parentValueFromAlreadyCopiedJso[propertyKey],\n                      parentChain,\n                      propertyKey,\n                      state.originCache\n                      /*, item => updateLazyParentChainItem(item, parentValueFromAlreadyCopiedJso, propertyKey) proof by test*/\n                    );\n                  }\n                  const parentValueThatNotYetHandledFromMain = resolveValueByPath(rootJso, resolvedPath);\n                  if (isObject$1(parentValueThatNotYetHandledFromMain) && propertyKey in parentValueThatNotYetHandledFromMain) {\n                    return getOrSimpleCreateOrigin(parentValueThatNotYetHandledFromMain[propertyKey], parentChain, propertyKey, state.originCache, (item) => updateLazyParentChainItem(item, parentValueThatNotYetHandledFromMain, propertyKey));\n                  }\n                  return getOrSimpleCreateOrigin(value2, parentChain, propertyKey, state.originCache, (item) => updateLazyParentChainItem(item, parentValue, propertyKey));\n                },\n                state.originCache\n              ) : void 0\n            );\n            if ((refInSourceJso == null ? void 0 : refInSourceJso.refValue) !== void 0 && (refInSourceJso == null ? void 0 : refInSourceJso.refValue) !== null) {\n              const resolvedRefWithRules = referenceHandler2({\n                options,\n                state,\n                rules,\n                resolvedRef: refInSourceJso,\n                originForObj,\n                sibling,\n                syntheticTitleCache,\n                reference\n              });\n              return processResolvedReference(resolvedRefWithRules);\n            }\n            (_b = options.onRefResolveError) == null ? void 0 : _b.call(options, ErrorMessage.refNotFound($ref), path, $ref, RefErrorTypes.REF_NOT_FOUND);\n            const brokenValueClone = { [JSON_SCHEMA_PROPERTY_REF]: $ref };\n            state.node[safeKey] = brokenValueClone;\n            setOrigins(state.node, safeKey, options.originsFlag, [originForObj]);\n            setOrigins(brokenValueClone, JSON_SCHEMA_PROPERTY_REF, options.originsFlag, [originForRef]);\n            return { done: true };\n          } finally {\n            cyclingGuard.delete(reference.normalized);\n          }\n        };\n        return referenceHandler({ path, ref: $ref, safeKey, options, state, value, resolveDefaultReference });\n      }\n    }\n    const childrenOrigins = state.lazySourceOriginCollector.get(value) ?? {};\n    return {\n      value,\n      state: {\n        ...state,\n        originCollector: childrenOrigins,\n        originParent: originForObj\n      },\n      afterHooksHook: () => {\n        const node = state.node[safeKey];\n        if (options.originsFlag && isObject$1(node)) {\n          state.originCollector[safeKey] = [getOrReuseOrigin(node, originForObj, state.originCache)];\n          state.lazySourceOriginCollector.set(node, childrenOrigins);\n        }\n      },\n      exitHook: () => {\n        const node = state.node[safeKey];\n        if (options.originsFlag && isObject$1(node)) {\n          state.originCollector[safeKey] = [getOrReuseOrigin(node, originForObj, state.originCache)];\n          const lazyOrigins = state.lazySourceOriginCollector.get(value) ?? {};\n          node[options.originsFlag] = {\n            ...node[options.originsFlag] ?? {},\n            ...lazyOrigins,\n            ...childrenOrigins\n          };\n        }\n      }\n    };\n  };\n  return defineOriginsAndResolveRefHook;\n};\nconst addRefInlineHistory = (jso, inlineRefsFlag, reference) => {\n  let history = jso[inlineRefsFlag];\n  if (!history) {\n    jso[inlineRefsFlag] = history = [];\n  }\n  const normalized = reference.normalized;\n  if (!history.includes(normalized)) {\n    history.push(normalized);\n  }\n};\nconst resolveRefNode = (reference, source, resolveRefHook, cycleJsoHook, state, rules, originResolver) => {\n  if (!isObject$1(source)) {\n    return void 0;\n  }\n  if (reference.filePath) {\n    return void 0;\n  }\n  let value = source;\n  let parentValue = void 0;\n  let pathChain = void 0;\n  const path = parsePointer(reference.pointer);\n  let isRefValue;\n  while ((isRefValue = isRefNode(value)) || path.length) {\n    const key = path[0];\n    if (isRefValue) {\n      const originCollector = {};\n      parentValue = value;\n      value = syncClone(value, [cycleJsoHook, resolveRefHook, cycleJsoHook], {\n        state: {\n          ...state,\n          originParent: void 0,\n          originCollector\n        },\n        rules\n      });\n      if (isRefNode(value)) {\n        return void 0;\n      }\n      pathChain = originResolver == null ? void 0 : originResolver(value, pathChain, parentValue, key);\n      continue;\n    }\n    const jumpF = state.syntheticsJumps.get(value);\n    if (jumpF) {\n      value = jumpF();\n    }\n    if (Array.isArray(value) && value.length > +key) {\n      parentValue = value;\n      value = value[+key];\n      path.shift();\n    } else if (isObject$1(value) && key in value) {\n      parentValue = value;\n      value = value[key];\n      path.shift();\n    } else {\n      parentValue = value;\n      value = void 0;\n    }\n    if (value === void 0) {\n      return void 0;\n    }\n    pathChain = originResolver == null ? void 0 : originResolver(value, pathChain, parentValue, key);\n  }\n  return {\n    refValue: value,\n    origin: pathChain\n  };\n};\nfunction hasChildrenOrigins(resolvedRef) {\n  return \"childrenOrigins\" in resolvedRef && resolvedRef.childrenOrigins !== void 0;\n}\nfunction getOrReuseOrigin(jsoInstance, origin, originCache, afterReuse) {\n  return getOrCustomCreateOrigin(jsoInstance, () => {\n    return origin;\n  }, originCache);\n}\nfunction getOrSimpleCreateOrigin(jsoInstance, parent, value, originCache, afterCreate) {\n  return getOrCustomCreateOrigin(jsoInstance, () => {\n    const origin = { parent, value };\n    afterCreate == null ? void 0 : afterCreate(origin);\n    return origin;\n  }, originCache);\n}\nfunction getOrCustomCreateOrigin(jsoInstance, originF, originCache) {\n  let result = originCache.get(jsoInstance);\n  if (!result) {\n    result = originF();\n    originCache == null ? void 0 : originCache.set(jsoInstance, result);\n  }\n  return result;\n}\nfunction cleanupRootOrigin(origins) {\n  origins.forEach((origin) => {\n    if (origin.parent && origin.parent.value === JSON_ROOT_KEY) {\n      origin.parent = void 0;\n    }\n  });\n}\nconst createValidationHook = (options) => {\n  const validateHook = ({ key, path, value, rules, state }) => {\n    var _a, _b, _c, _d;\n    if (state.ignoreTreeUnderSymbols) {\n      return { value };\n    }\n    const safeKey = key ?? JSON_ROOT_KEY;\n    if (typeof safeKey === \"symbol\" && options.ignoreSymbols.has(safeKey)) {\n      return { value, state: { ...state, ignoreTreeUnderSymbols: true, propertiesToCleanup: [] } };\n    }\n    if (!rules) {\n      (_a = options.onValidateError) == null ? void 0 : _a.call(options, `Key '${safeKey.toString()}' unexpected here`, path, value);\n      state.propertiesToCleanup.push(key);\n      return { done: true };\n    }\n    const { validate: validate2 } = rules;\n    if (!validate2) {\n      (_b = options.onValidateError) == null ? void 0 : _b.call(options, `Key '${safeKey.toString()}' unexpected here`, path, value);\n      state.propertiesToCleanup.push(key);\n      return { done: true };\n    }\n    const validatorsArray = isArray(validate2) ? validate2 : [validate2];\n    try {\n      const valid = validatorsArray.reduce((valid2, f) => valid2 && f(value), true);\n      if (!valid) {\n        (_c = options.onValidateError) == null ? void 0 : _c.call(options, `Value under '${safeKey.toString()}' excluded because doesn't match validation rule`, path, value);\n        state.propertiesToCleanup.push(key);\n        return { done: true };\n      }\n      const nestedPropertiesToCleanup = [];\n      return {\n        value,\n        state: { ...state, propertiesToCleanup: nestedPropertiesToCleanup },\n        exitHook: () => {\n          const clone = state.node[key];\n          if (isObject$1(clone)) {\n            cleanSeveralOrigins(clone, nestedPropertiesToCleanup, options.originsFlag);\n          }\n        }\n      };\n    } catch (e) {\n      (_d = options.onValidateError) == null ? void 0 : _d.call(options, `Value under '${safeKey.toString()}' fail to validate`, path, value, e);\n      state.propertiesToCleanup.push(key);\n      return { done: true };\n    }\n  };\n  return validateHook;\n};\nconst validate = (value, options) => {\n  const spec = resolveSpec(value);\n  const internalOptions = {\n    ...options,\n    ignoreSymbols: /* @__PURE__ */ new Set([\n      ...(options == null ? void 0 : options.originsFlag) ? [options == null ? void 0 : options.originsFlag] : [],\n      ...(options == null ? void 0 : options.inlineRefsFlag) ? [options == null ? void 0 : options.inlineRefsFlag] : [],\n      ...(options == null ? void 0 : options.syntheticTitleFlag) ? [options == null ? void 0 : options.syntheticTitleFlag] : [],\n      ...(options == null ? void 0 : options.syntheticAllOfFlag) ? [options == null ? void 0 : options.syntheticAllOfFlag] : []\n    ])\n  };\n  const cycledJsoHandlerHook = createCycledJsoHandlerHook();\n  const propertiesToCleanup = [];\n  const result = syncClone(value, [\n    cycledJsoHandlerHook,\n    createValidationHook(internalOptions)\n  ], { rules: RULES[spec.type] || {}, state: { ignoreTreeUnderSymbols: false, propertiesToCleanup } });\n  if (isObject$1(result)) {\n    cleanSeveralOrigins(result, propertiesToCleanup, internalOptions.originsFlag);\n  }\n  return result;\n};\nconst createNativeAnySchema = (specType, origins, originsFlag) => {\n  const any = {\n    [JSON_SCHEMA_PROPERTY_ANY_OF]: [\n      { [JSON_SCHEMA_PROPERTY_TYPE]: JSON_SCHEMA_NODE_TYPE_BOOLEAN },\n      { [JSON_SCHEMA_PROPERTY_TYPE]: JSON_SCHEMA_NODE_TYPE_STRING },\n      { [JSON_SCHEMA_PROPERTY_TYPE]: JSON_SCHEMA_NODE_TYPE_NUMBER },\n      { [JSON_SCHEMA_PROPERTY_TYPE]: JSON_SCHEMA_NODE_TYPE_INTEGER },\n      { [JSON_SCHEMA_PROPERTY_TYPE]: JSON_SCHEMA_NODE_TYPE_OBJECT },\n      { [JSON_SCHEMA_PROPERTY_TYPE]: JSON_SCHEMA_NODE_TYPE_ARRAY },\n      { [JSON_SCHEMA_PROPERTY_TYPE]: JSON_SCHEMA_NODE_TYPE_NULL }\n    ]\n  };\n  const anyAnyOf = any[JSON_SCHEMA_PROPERTY_ANY_OF];\n  if (specType === SPEC_TYPE_OPEN_API_30) {\n    anyAnyOf.pop();\n  }\n  setOrigins(any, JSON_SCHEMA_PROPERTY_ANY_OF, originsFlag, origins);\n  setOriginsForArray(any[JSON_SCHEMA_PROPERTY_ANY_OF], originsFlag, anyAnyOf.map(() => origins));\n  anyAnyOf.forEach((schemaWithType) => {\n    setOrigins(schemaWithType, JSON_SCHEMA_PROPERTY_TYPE, originsFlag, origins);\n  });\n  return any;\n};\nconst createNativeNothingSchema = (specType, origins, originsFlag) => {\n  const nothing = { [JSON_SCHEMA_PROPERTY_NOT]: createNativeAnySchema(specType, origins, originsFlag) };\n  setOrigins(nothing, JSON_SCHEMA_PROPERTY_NOT, originsFlag, origins);\n  return nothing;\n};\nconst SOME_NATIVE_ANY = {\n  [SPEC_TYPE_JSON_SCHEMA_04]: createNativeAnySchema(SPEC_TYPE_JSON_SCHEMA_04, void 0, void 0),\n  [SPEC_TYPE_JSON_SCHEMA_06]: createNativeAnySchema(SPEC_TYPE_JSON_SCHEMA_06, void 0, void 0),\n  [SPEC_TYPE_JSON_SCHEMA_07]: createNativeAnySchema(SPEC_TYPE_JSON_SCHEMA_07, void 0, void 0),\n  [SPEC_TYPE_OPEN_API_30]: createNativeAnySchema(SPEC_TYPE_OPEN_API_30, void 0, void 0),\n  [SPEC_TYPE_OPEN_API_31]: createNativeAnySchema(SPEC_TYPE_OPEN_API_31, void 0, void 0),\n  [SPEC_TYPE_ASYNCAPI_2]: createNativeAnySchema(SPEC_TYPE_ASYNCAPI_2, void 0, void 0),\n  [SPEC_TYPE_GRAPH_API]: createNativeAnySchema(SPEC_TYPE_GRAPH_API, void 0, void 0)\n};\nconst createNativeMetaDefinitions = (specType, originsFlag) => {\n  const someNativeAny = SOME_NATIVE_ANY[specType];\n  const matchAnyOfFunctions = someNativeAny[JSON_SCHEMA_PROPERTY_ANY_OF].map(\n    (value, index) => (otherArray, prefixPath, skip) => {\n      const otherArrayItem = otherArray[index];\n      if (skip == null ? void 0 : skip(otherArrayItem, [...prefixPath, index])) {\n        return void 0;\n      }\n      if (JSON_SCHEMA_PROPERTY_TYPE in otherArrayItem && otherArrayItem[JSON_SCHEMA_PROPERTY_TYPE] === value[JSON_SCHEMA_PROPERTY_TYPE]) {\n        if (skip == null ? void 0 : skip(otherArrayItem[JSON_SCHEMA_PROPERTY_TYPE], [...prefixPath, index, JSON_SCHEMA_PROPERTY_TYPE])) {\n          return void 0;\n        }\n        const { type, ...otherProperties } = otherArrayItem;\n        const entries = Object.entries(otherProperties);\n        if (entries.length === 0) {\n          return otherProperties;\n        }\n        const anyPrpSkip = entries.some(([otherPrpKey, otherPrpVal]) => !!(skip == null ? void 0 : skip(otherPrpVal, [...prefixPath, index, otherPrpKey])));\n        if (anyPrpSkip) {\n          return void 0;\n        }\n        return otherProperties;\n      }\n      return void 0;\n    }\n  );\n  const extractCommonPropertiesIfAssignableToAnyOf = (jso, prefixPath, originsFlag2, skip) => {\n    if (!(JSON_SCHEMA_PROPERTY_ANY_OF in jso)) {\n      return void 0;\n    }\n    const { anyOf, ...rootProperties } = jso;\n    cleanOrigins(rootProperties, JSON_SCHEMA_PROPERTY_ANY_OF, originsFlag2);\n    if (!isArray(anyOf) || anyOf.length !== someNativeAny[JSON_SCHEMA_PROPERTY_ANY_OF].length) {\n      return void 0;\n    }\n    if (skip == null ? void 0 : skip(anyOf, [JSON_SCHEMA_PROPERTY_ANY_OF])) {\n      return void 0;\n    }\n    return matchAnyOfFunctions.reduce((overallPropertiesToPull, f) => {\n      if (!overallPropertiesToPull) {\n        return void 0;\n      }\n      const extraItemProperties = f(anyOf, [...prefixPath, JSON_SCHEMA_PROPERTY_ANY_OF], skip);\n      if (!extraItemProperties) {\n        return void 0;\n      }\n      for (const prp in extraItemProperties) {\n        if (prp in overallPropertiesToPull && extraItemProperties[prp] !== overallPropertiesToPull[prp]) {\n          return void 0;\n        } else {\n          overallPropertiesToPull[prp] = extraItemProperties[prp];\n          copyOrigins(extraItemProperties, overallPropertiesToPull, prp, prp, originsFlag2);\n        }\n      }\n      return overallPropertiesToPull;\n    }, rootProperties);\n  };\n  const anyCache = createEvaluationCacheService();\n  const nothingCache = createEvaluationCacheService();\n  return {\n    emptyJsonSchema: (origins) => anyCache.cacheEvaluationResultByFootprint([specType, ...origins ?? [], originsFlag], () => createNativeAnySchema(specType, origins, originsFlag)),\n    invertedEmptyJsonSchema: (origins) => nothingCache.cacheEvaluationResultByFootprint([specType, ...origins ?? [], originsFlag], () => createNativeNothingSchema(specType, origins, originsFlag)),\n    omitIfAssignableToEmptyJsonSchema: (jso, skip) => {\n      const overallCommonProperties = extractCommonPropertiesIfAssignableToAnyOf(jso, [], originsFlag, skip);\n      if (!overallCommonProperties) {\n        return void 0;\n      }\n      delete jso[JSON_SCHEMA_PROPERTY_ANY_OF];\n      const resultedOrigins = resolveOrigins(jso, JSON_SCHEMA_PROPERTY_ANY_OF, originsFlag) ?? [];\n      cleanOrigins(jso, JSON_SCHEMA_PROPERTY_ANY_OF, originsFlag);\n      mergeOrigins(overallCommonProperties, [jso], originsFlag);\n      Object.assign(jso, overallCommonProperties);\n      return resultedOrigins;\n    },\n    omitIfAssignableToInvertedEmptyJsonSchema: (jso, skip) => {\n      if (!(JSON_SCHEMA_PROPERTY_NOT in jso)) {\n        return void 0;\n      }\n      const { not, ..._ } = jso;\n      if (!isObject$1(not)) {\n        return void 0;\n      }\n      if (skip == null ? void 0 : skip(not, [JSON_SCHEMA_PROPERTY_NOT])) {\n        return void 0;\n      }\n      const overallNotProperties = extractCommonPropertiesIfAssignableToAnyOf(not, [JSON_SCHEMA_PROPERTY_NOT], originsFlag, skip);\n      if (!overallNotProperties) {\n        return void 0;\n      }\n      delete jso[JSON_SCHEMA_PROPERTY_NOT];\n      const resultedOrigins = resolveOrigins(jso, JSON_SCHEMA_PROPERTY_NOT, originsFlag) ?? [];\n      cleanOrigins(jso, JSON_SCHEMA_PROPERTY_NOT, originsFlag);\n      return resultedOrigins;\n    }\n  };\n};\nconst createSyntheticAnySchema = (origins, originsFlag) => {\n  const any = { [JSON_SCHEMA_PROPERTY_TYPE]: JSON_SCHEMA_NODE_SYNTHETIC_TYPE_ANY };\n  setOrigins(any, JSON_SCHEMA_PROPERTY_TYPE, originsFlag, origins);\n  return any;\n};\nconst createSyntheticNothingSchema = (origins, originsFlag) => {\n  const nothing = { [JSON_SCHEMA_PROPERTY_TYPE]: JSON_SCHEMA_NODE_SYNTHETIC_TYPE_NOTHING };\n  setOrigins(nothing, JSON_SCHEMA_PROPERTY_TYPE, originsFlag, origins);\n  return nothing;\n};\nconst createSyntheticMetaDefinitions = (_, originsFlag) => {\n  const anyCache = createEvaluationCacheService();\n  const nothingCache = createEvaluationCacheService();\n  return {\n    emptyJsonSchema: (origins) => anyCache.cacheEvaluationResultByFootprint([...origins ?? [], originsFlag], () => createSyntheticAnySchema(origins, originsFlag)),\n    invertedEmptyJsonSchema: (origins) => nothingCache.cacheEvaluationResultByFootprint([...origins ?? [], originsFlag], () => createSyntheticNothingSchema(origins, originsFlag)),\n    omitIfAssignableToEmptyJsonSchema: (jso, skip) => {\n      if (JSON_SCHEMA_PROPERTY_TYPE in jso && jso[JSON_SCHEMA_PROPERTY_TYPE] === JSON_SCHEMA_NODE_SYNTHETIC_TYPE_ANY) {\n        if (skip == null ? void 0 : skip(jso[JSON_SCHEMA_PROPERTY_TYPE], [JSON_SCHEMA_PROPERTY_TYPE])) {\n          return void 0;\n        }\n        delete jso[JSON_SCHEMA_PROPERTY_TYPE];\n        const origins = resolveOrigins(jso, JSON_SCHEMA_PROPERTY_TYPE, originsFlag) ?? [];\n        cleanOrigins(jso, JSON_SCHEMA_PROPERTY_TYPE, originsFlag);\n        return origins;\n      }\n      return void 0;\n    },\n    omitIfAssignableToInvertedEmptyJsonSchema: (jso, skip) => {\n      if (JSON_SCHEMA_PROPERTY_TYPE in jso && jso[JSON_SCHEMA_PROPERTY_TYPE] === JSON_SCHEMA_NODE_SYNTHETIC_TYPE_NOTHING) {\n        if (skip == null ? void 0 : skip(jso[JSON_SCHEMA_PROPERTY_TYPE], [JSON_SCHEMA_PROPERTY_TYPE])) {\n          return void 0;\n        }\n        delete jso[JSON_SCHEMA_PROPERTY_TYPE];\n        const origins = resolveOrigins(jso, JSON_SCHEMA_PROPERTY_TYPE, originsFlag) ?? [];\n        cleanOrigins(jso, JSON_SCHEMA_PROPERTY_TYPE, originsFlag);\n        return origins;\n      }\n      return void 0;\n    }\n  };\n};\nconst createNativeNothingSchemaForDeUnify = (emptySchema, origins, originsFlag) => {\n  const nothing = { [JSON_SCHEMA_PROPERTY_NOT]: emptySchema };\n  setOrigins(nothing, JSON_SCHEMA_PROPERTY_NOT, originsFlag, origins);\n  return nothing;\n};\nconst createNativeMetaDefinitionsForDeUnify = (specType, originsFlag) => {\n  const nat = createNativeMetaDefinitions(specType, originsFlag);\n  const syn = createSyntheticMetaDefinitions(specType, originsFlag);\n  const nothingCache = createEvaluationCacheService();\n  return {\n    emptyJsonSchema: nat.emptyJsonSchema,\n    invertedEmptyJsonSchema: (origins) => {\n      const emptyJsonSchema = syn.emptyJsonSchema(origins);\n      return nothingCache.cacheEvaluationResultByFootprint([emptyJsonSchema, ...origins ?? [], originsFlag], () => createNativeNothingSchemaForDeUnify(emptyJsonSchema, origins, originsFlag));\n    },\n    omitIfAssignableToEmptyJsonSchema: nat.omitIfAssignableToEmptyJsonSchema,\n    omitIfAssignableToInvertedEmptyJsonSchema: (jso, skip) => {\n      if (!(JSON_SCHEMA_PROPERTY_NOT in jso)) {\n        return void 0;\n      }\n      const { not, ...rootProperties } = jso;\n      if (!isObject$1(not)) {\n        return void 0;\n      }\n      if (skip == null ? void 0 : skip(not, [JSON_SCHEMA_PROPERTY_NOT])) {\n        return void 0;\n      }\n      if (JSON_SCHEMA_PROPERTY_TYPE in not && not[JSON_SCHEMA_PROPERTY_TYPE] === JSON_SCHEMA_NODE_SYNTHETIC_TYPE_ANY) {\n        if (skip == null ? void 0 : skip(not[JSON_SCHEMA_PROPERTY_TYPE], [JSON_SCHEMA_PROPERTY_NOT, JSON_SCHEMA_PROPERTY_TYPE])) {\n          return void 0;\n        }\n        delete jso[JSON_SCHEMA_PROPERTY_NOT];\n        const origins = resolveOrigins(jso, JSON_SCHEMA_PROPERTY_NOT, originsFlag) ?? [];\n        cleanOrigins(jso, JSON_SCHEMA_PROPERTY_NOT, originsFlag);\n        return origins;\n      }\n      return void 0;\n    }\n  };\n};\nconst merge = (value, options) => {\n  const spec = resolveSpec(value);\n  if (spec.type === SPEC_TYPE_GRAPH_API) {\n    return value;\n  }\n  const internalMergeOptions = {\n    resolveRef: DEFAULT_OPTION_RESOLVE_REF,\n    originsAlreadyDefined: DEFAULT_OPTION_ORIGINS_ALREADY_DEFINED,\n    mergeAllOf: DEFAULT_OPTION_MERGE_ALL_OF,\n    ...options,\n    syntheticMetaDefinitions: createSyntheticMetaDefinitions(spec.type, options == null ? void 0 : options.originsFlag),\n    evaluationCacheService: createEvaluationCacheService(),\n    spreadAllOfCache: createPropertySpreadWithCacheService(JSON_SCHEMA_PROPERTY_ALL_OF),\n    liftCombiners: (options == null ? void 0 : options.liftCombiners) ?? DEFAULT_OPTION_LIFT_COMBINERS,\n    ignoreSymbols: /* @__PURE__ */ new Set([\n      ...(options == null ? void 0 : options.originsFlag) ? [options.originsFlag] : [],\n      ...(options == null ? void 0 : options.inlineRefsFlag) ? [options.inlineRefsFlag] : [],\n      ...(options == null ? void 0 : options.syntheticTitleFlag) ? [options.syntheticTitleFlag] : [],\n      ...(options == null ? void 0 : options.syntheticAllOfFlag) ? [options.syntheticAllOfFlag] : [],\n      ...(options == null ? void 0 : options.ignoreSymbols) ? options.ignoreSymbols : []\n    ])\n  };\n  const cycledJsoHandlerHook = createCycledJsoHandlerHook();\n  const liftCombinersHook = createLiftCombinersHook(internalMergeOptions);\n  return syncClone(\n    value,\n    [\n      cycledJsoHandlerHook,\n      createAllOfResolverHook(internalMergeOptions),\n      cycledJsoHandlerHook,\n      ...internalMergeOptions.liftCombiners ? [liftCombinersHook] : [],\n      createSelfOriginsCloneHook(internalMergeOptions.originsFlag)\n    ],\n    { rules: RULES[spec.type] || {}, state: { ignoreTreeUnderSymbols: false, selfOriginResolver: () => [] } }\n  );\n};\nconst isAllOfMergeRule = (rules) => {\n  return !!rules && rules[`/${JSON_SCHEMA_PROPERTY_ALL_OF}`] && \"merge\" in rules[`/${JSON_SCHEMA_PROPERTY_ALL_OF}`];\n};\nconst createAllOfResolverHook = (options) => {\n  const allOfResolver = ({ value, key, path, rules, state }) => {\n    var _a;\n    if (state.ignoreTreeUnderSymbols) {\n      return { value };\n    }\n    const safeKey = key ?? JSON_ROOT_KEY;\n    if (typeof safeKey === \"symbol\" && options.ignoreSymbols.has(safeKey)) {\n      return {\n        value,\n        state: { ...state, ignoreTreeUnderSymbols: true }\n      };\n    }\n    const mergeError = (valuesWithOrigins, message = ErrorMessage.mergeError()) => {\n      var _a2;\n      return (_a2 = options.onMergeError) == null ? void 0 : _a2.call(options, message, path, valuesWithOrigins.map((valueWithOrigins) => valueWithOrigins.value));\n    };\n    if (!isObject$1(value) || Array.isArray(value)) {\n      return { value };\n    }\n    if (!isAllOfMergeRule(rules)) {\n      return { value };\n    }\n    const [allOf, sibling] = options.spreadAllOfCache.spreadOrReuse(value);\n    const rawAllOfItemsWithOrigins = [];\n    if (Array.isArray(allOf)) {\n      rawAllOfItemsWithOrigins.push(...allOf.map((item, index) => ({\n        value: item,\n        origins: resolveOrigins(allOf, index, options.originsFlag) ?? []\n      })));\n    }\n    if (isSiblingKeysAreImportant(sibling, options)) {\n      rawAllOfItemsWithOrigins.push({ value: sibling, origins: state.selfOriginResolver(key) ?? [] });\n    }\n    if (!rawAllOfItemsWithOrigins.length) {\n      return { value: sibling };\n    }\n    const rawPlainAllOfItemsWithOrigins = flattenAllOfItems(rawAllOfItemsWithOrigins, options);\n    const plainAllOfItemsWithOrigins = unifyBooleanSchemas(rawPlainAllOfItemsWithOrigins, options);\n    if (plainAllOfItemsWithOrigins.some(\n      (valueWithOrigins) => isRefNode(valueWithOrigins.value)\n      /*all this refs means broken after resolve-allOf*/\n    )) {\n      (_a = options.onMergeError) == null ? void 0 : _a.call(options, ErrorMessage.mergeWithBrokenRef(), path, plainAllOfItemsWithOrigins.map((valueWithOrigins) => valueWithOrigins.value));\n      return { value };\n    }\n    const plainAllOfItemsWithOriginsAsKey = plainAllOfItemsWithOrigins.map(\n      (pair) => pair.value\n      /*origins should be in a key cause same value instance can have different origins*/\n    );\n    const resultValue = options.evaluationCacheService.cacheEvaluationResultByFootprint(\n      plainAllOfItemsWithOriginsAsKey,\n      () => {\n        let result;\n        if (plainAllOfItemsWithOrigins.length < 2) {\n          result = plainAllOfItemsWithOrigins.length ? plainAllOfItemsWithOrigins[0].value : {};\n        } else {\n          const complexResult = jsonSchemaMergeResolver(plainAllOfItemsWithOrigins, {\n            options,\n            allMergeItemsWithOrigins: plainAllOfItemsWithOrigins,\n            mergeRules: rules,\n            mergeError\n          });\n          result = complexResult == null ? void 0 : complexResult.value;\n        }\n        return result;\n      },\n      {},\n      (result, guard) => result && guard ? copyDescriptors(guard, result) : result\n    );\n    if (!resultValue) {\n      state.node[safeKey] = value;\n      return { done: true };\n    }\n    return {\n      value: resultValue,\n      state: { ...state }\n    };\n  };\n  return allOfResolver;\n};\nfunction toForwardMutationFunction(value) {\n  return typeof value === \"function\" ? value : value.forward;\n}\nfunction toBackwardMutationFunction(value) {\n  return typeof value === \"function\" ? void 0 : value.backward;\n}\nconst createUnifyHook = (options, mandatoryOnly) => {\n  const unifyHook = ({ key, path, value, rules, state }) => {\n    var _a;\n    const safeKey = key ?? JSON_ROOT_KEY;\n    if (state.ignoreTreeUnderSymbols) {\n      return { value };\n    }\n    if (typeof safeKey === \"symbol\") {\n      return { value, state: { ...state, ignoreTreeUnderSymbols: true } };\n    }\n    if (!rules) {\n      return { value, state: { ...state, parentValue: value } };\n    }\n    const { unify: unify2, mandatoryUnify } = rules;\n    const activeUnify = mandatoryOnly ? mandatoryUnify : unify2;\n    if (!activeUnify) {\n      return { value, state: { ...state, parentValue: value } };\n    }\n    const unifiesFunctionsArray = (isArray(activeUnify) ? activeUnify : [activeUnify]).map(toForwardMutationFunction);\n    if (unifiesFunctionsArray.length === 0) {\n      return { value, state: { ...state, parentValue: value } };\n    }\n    try {\n      const parentValue = state.parentValue;\n      const context = {\n        origins: state.selfOriginResolver(key),\n        options,\n        path,\n        parentValue\n      };\n      const unifiedValue = unifiesFunctionsArray.reduce((v, f) => f(v, context), value);\n      return { value: unifiedValue, state: { ...state, parentValue: value } };\n    } catch (e) {\n      (_a = options.onUnifyError) == null ? void 0 : _a.call(options, `Value under '${safeKey}' fail to unify`, path, value, e);\n      return { done: true };\n    }\n  };\n  return unifyHook;\n};\nconst createDeUnifyHook = (options, mandatoryOnly) => {\n  const deUnifyHook = ({ key, path, value, rules, state }) => {\n    if (state.ignoreTreeUnderSymbols) {\n      return { value };\n    }\n    const safeKey = key ?? JSON_ROOT_KEY;\n    if (typeof safeKey === \"symbol\" && options.ignoreSymbols.has(safeKey)) {\n      return { value, state: { ...state, ignoreTreeUnderSymbols: true } };\n    }\n    if (!rules) {\n      return { value, state: { ...state, parentValue: value } };\n    }\n    const { unify: unify2, mandatoryUnify } = rules;\n    const activeUnify = mandatoryOnly ? mandatoryUnify : unify2;\n    if (!activeUnify) {\n      return { value, state: { ...state, parentValue: value } };\n    }\n    const deUnifiesFunctionsArray = (isArray(activeUnify) ? activeUnify : [activeUnify]).flatMap((f) => {\n      const nf = toBackwardMutationFunction(f);\n      return nf ? [nf] : [];\n    }).reverse();\n    if (deUnifiesFunctionsArray.length === 0) {\n      return { value, state: { ...state, parentValue: value } };\n    }\n    return {\n      value,\n      exitHook: () => {\n        var _a;\n        try {\n          const parentValue = state.parentValue;\n          const context = {\n            origins: state.selfOriginResolver(key),\n            options,\n            path,\n            parentValue\n          };\n          const copiedValue = state.node[safeKey];\n          deUnifiesFunctionsArray.forEach((f) => f(copiedValue, context));\n        } catch (e) {\n          (_a = options.onUnifyError) == null ? void 0 : _a.call(options, `Value under '${safeKey.toString()}' fail to deunify`, path, value, e);\n        }\n      },\n      state: { ...state, parentValue: value }\n    };\n  };\n  return deUnifyHook;\n};\nconst unify = (value, options) => {\n  return unifyImpl(value, false, options);\n};\nconst cleanUpSynthetic = (value, options) => {\n  return unifyImpl(value, true, options);\n};\nconst unifyImpl = (value, mandatoryOnly, options) => {\n  const spec = resolveSpec(value);\n  const internalOptions = {\n    resolveRef: DEFAULT_OPTION_RESOLVE_REF,\n    originsAlreadyDefined: DEFAULT_OPTION_ORIGINS_ALREADY_DEFINED,\n    mergeAllOf: DEFAULT_OPTION_MERGE_ALL_OF,\n    liftCombiners: DEFAULT_OPTION_LIFT_COMBINERS,\n    allowNotValidSyntheticChanges: DEFAULT_OPTION_ALLOW_NOT_VALID_SYNTHETIC_CHANGES,\n    createOriginsForDefaults: () => DEFAULT_OPTION_ORIGINS_FOR_DEFAULTS,\n    ...options,\n    evaluationCacheService: createEvaluationCacheService(),\n    spreadAllOfCache: createPropertySpreadWithCacheService(JSON_SCHEMA_PROPERTY_ALL_OF),\n    syntheticMetaDefinitions: createSyntheticMetaDefinitions(spec.type, options == null ? void 0 : options.originsFlag),\n    nativeMetaDefinitions: createNativeMetaDefinitions(spec.type, options == null ? void 0 : options.originsFlag),\n    ignoreSymbols: /* @__PURE__ */ new Set([\n      ...(options == null ? void 0 : options.originsFlag) ? [options.originsFlag] : [],\n      ...(options == null ? void 0 : options.inlineRefsFlag) ? [options.inlineRefsFlag] : [],\n      ...(options == null ? void 0 : options.syntheticTitleFlag) ? [options.syntheticTitleFlag] : [],\n      ...(options == null ? void 0 : options.defaultsFlag) ? [options.defaultsFlag] : [],\n      ...(options == null ? void 0 : options.syntheticAllOfFlag) ? [options.syntheticAllOfFlag] : [],\n      ...(options == null ? void 0 : options.ignoreSymbols) ? options.ignoreSymbols : []\n    ])\n  };\n  const cycledJsoHandlerHook = createCycledJsoHandlerHook();\n  return syncClone(\n    value,\n    [\n      cycledJsoHandlerHook,\n      createUnifyHook(internalOptions, mandatoryOnly),\n      cycledJsoHandlerHook,\n      createSelfOriginsCloneHook(internalOptions.originsFlag)\n    ],\n    {\n      rules: RULES[spec.type] || {},\n      state: {\n        parentValue: void 0,\n        ignoreTreeUnderSymbols: false,\n        selfOriginResolver: () => []\n      }\n    }\n  );\n};\nconst deUnify = (value, options) => {\n  return deUnifyImpl(value, false, options);\n};\nconst deCleanUpSynthetic = (value, options) => {\n  return deUnifyImpl(value, true, options);\n};\nconst deUnifyImpl = (value, mandatoryOnly, options) => {\n  const spec = resolveSpec(value);\n  const internalOptions = {\n    resolveRef: DEFAULT_OPTION_RESOLVE_REF,\n    originsAlreadyDefined: DEFAULT_OPTION_ORIGINS_ALREADY_DEFINED,\n    mergeAllOf: DEFAULT_OPTION_MERGE_ALL_OF,\n    liftCombiners: DEFAULT_OPTION_LIFT_COMBINERS,\n    allowNotValidSyntheticChanges: DEFAULT_OPTION_ALLOW_NOT_VALID_SYNTHETIC_CHANGES,\n    createOriginsForDefaults: () => DEFAULT_OPTION_ORIGINS_FOR_DEFAULTS,\n    ...options,\n    evaluationCacheService: createEvaluationCacheService(),\n    spreadAllOfCache: createPropertySpreadWithCacheService(JSON_SCHEMA_PROPERTY_ALL_OF),\n    syntheticMetaDefinitions: createSyntheticMetaDefinitions(spec.type, options == null ? void 0 : options.originsFlag),\n    nativeMetaDefinitions: createNativeMetaDefinitionsForDeUnify(spec.type, options == null ? void 0 : options.originsFlag),\n    ignoreSymbols: /* @__PURE__ */ new Set([\n      ...(options == null ? void 0 : options.originsFlag) ? [options.originsFlag] : [],\n      ...(options == null ? void 0 : options.inlineRefsFlag) ? [options.inlineRefsFlag] : [],\n      ...(options == null ? void 0 : options.syntheticTitleFlag) ? [options.syntheticTitleFlag] : [],\n      ...(options == null ? void 0 : options.defaultsFlag) ? [options.defaultsFlag] : [],\n      ...(options == null ? void 0 : options.syntheticAllOfFlag) ? [options.syntheticAllOfFlag] : [],\n      ...(options == null ? void 0 : options.ignoreSymbols) ? options.ignoreSymbols : []\n    ])\n  };\n  const cycledJsoHandlerHook = createCycledJsoHandlerHook();\n  return syncClone(\n    value,\n    [\n      cycledJsoHandlerHook,\n      createDeUnifyHook(internalOptions, mandatoryOnly),\n      cycledJsoHandlerHook,\n      createSelfOriginsCloneHook(internalOptions.originsFlag)\n    ],\n    {\n      rules: RULES[spec.type] || {},\n      state: {\n        parentValue: void 0,\n        ignoreTreeUnderSymbols: false,\n        selfOriginResolver: () => []\n      }\n    }\n  );\n};\nconst calculateHash = (object) => {\n  const res = objectHash(object, {\n    unorderedArrays: true,\n    unorderedObjects: true,\n    algorithm: \"md5\"\n  });\n  return res;\n};\nconst createHashObject = (object, rules) => {\n  const creatorHook = createHashObjectCreatorHook();\n  return syncClone(object, creatorHook, { state: { dataLevel: 0 }, rules });\n};\nconst createHashObjectCreatorHook = () => {\n  const cycleGuard = /* @__PURE__ */ new Set();\n  const creatorHook = ({ key, value, rules, state }) => {\n    if (typeof key === \"symbol\") {\n      return { done: true };\n    }\n    if (!rules) {\n      return { done: true };\n    }\n    let ignoreKey = true;\n    switch (rules.hashStrategy) {\n      case CURRENT_DATA_LEVEL: {\n        ignoreKey = state.dataLevel > 0;\n        break;\n      }\n      case BEFORE_SECOND_DATA_LEVEL: {\n        ignoreKey = state.dataLevel > 1;\n        break;\n      }\n    }\n    if (!isObject$1(value)) {\n      return { done: ignoreKey, value };\n    }\n    if (cycleGuard.has(value)) {\n      return {\n        done: ignoreKey,\n        value: rules.newDataLayer ? value : void 0,\n        state: {\n          ...state,\n          dataLevel: key !== void 0 && rules.newDataLayer ? state.dataLevel + 1 : state.dataLevel\n        }\n      };\n    }\n    cycleGuard.add(value);\n    return {\n      done: ignoreKey,\n      value,\n      state: {\n        ...state,\n        dataLevel: key !== void 0 && rules.newDataLayer ? state.dataLevel + 1 : state.dataLevel\n      }\n    };\n  };\n  return creatorHook;\n};\nconst createHashScannerHook = (options) => {\n  const flag = options.hashFlag ?? Symbol(\"should-never-happen\");\n  const cycleGuard = /* @__PURE__ */ new Set();\n  const hashHook = ({ key, value, rules }) => {\n    if (typeof key === \"symbol\") {\n      return { done: true };\n    }\n    if (!isObject$1(value)) {\n      return { done: true };\n    }\n    if (cycleGuard.has(value)) {\n      return { done: true };\n    }\n    cycleGuard.add(value);\n    return {\n      value,\n      exitHook: (rules == null ? void 0 : rules.hashOwner) ? () => {\n        let hash2 = void 0;\n        value[flag] = () => {\n          if (!hash2) {\n            hash2 = calculateHash(createHashObject(value, rules));\n          }\n          return hash2;\n        };\n      } : void 0\n    };\n  };\n  return hashHook;\n};\nconst hash = (value, options) => {\n  const internalOptions = {\n    ...options\n  };\n  const flag = options == null ? void 0 : options.hashFlag;\n  if (!flag) {\n    return value;\n  }\n  const spec = resolveSpec(value);\n  if (spec.type === SPEC_TYPE_GRAPH_API) {\n    return value;\n  }\n  syncCrawl(\n    value,\n    [createHashScannerHook(internalOptions)],\n    { rules: RULES[spec.type] }\n  );\n  return value;\n};\nconst deHash = (value, options) => {\n  const flag = options == null ? void 0 : options.hashFlag;\n  if (!flag) {\n    return value;\n  }\n  const cycleGuard = /* @__PURE__ */ new Set();\n  syncCrawl(value, ({ value: value2 }) => {\n    if (!isObject$1(value2)) {\n      return { done: true };\n    }\n    if (cycleGuard.has(value2)) {\n      return { done: true };\n    }\n    cycleGuard.add(value2);\n    flag in value2 && delete value2[flag];\n    return { value: value2 };\n  });\n  return value;\n};\nconst createRemoveOasExtensionsHook = (options) => {\n  const removeOasExtensionsHook = ({ key, value, rules }) => {\n    var _a;\n    if ((rules == null ? void 0 : rules.isExtension) && ((_a = options.shouldRemoveOasExtension) == null ? void 0 : _a.call(options, key))) {\n      return { value: void 0 };\n    }\n    return { value };\n  };\n  return removeOasExtensionsHook;\n};\nconst removeOasExtensions = (value, options) => {\n  const internalOptions = {\n    ...options\n  };\n  const spec = resolveSpec(value);\n  if (spec.type === SPEC_TYPE_GRAPH_API) {\n    return value;\n  }\n  const cycledJsoHandlerHook = createCycledJsoHandlerHook();\n  return syncClone(\n    value,\n    [\n      cycledJsoHandlerHook,\n      createRemoveOasExtensionsHook(internalOptions)\n    ],\n    { rules: RULES[spec.type] }\n  );\n};\nconst normalize = (value, options = {}) => {\n  const optionsWithDefaults = createOptionsWithDefaults(options);\n  let spec = value;\n  if (optionsWithDefaults.resolveRef || !optionsWithDefaults.originsAlreadyDefined && optionsWithDefaults.originsFlag) {\n    spec = defineOriginsAndResolveRef(spec, optionsWithDefaults);\n  }\n  if (optionsWithDefaults.validate) {\n    spec = validate(spec, optionsWithDefaults);\n  }\n  if (optionsWithDefaults.mergeAllOf) {\n    spec = merge(spec, optionsWithDefaults);\n  }\n  if (optionsWithDefaults.unify) {\n    spec = unify(spec, optionsWithDefaults);\n  }\n  if (optionsWithDefaults.mergeAllOf && !optionsWithDefaults.unify && !optionsWithDefaults.allowNotValidSyntheticChanges) {\n    spec = cleanUpSynthetic(spec, optionsWithDefaults);\n  }\n  if (optionsWithDefaults.removeOasExtensions) {\n    spec = removeOasExtensions(spec, optionsWithDefaults);\n  }\n  if (optionsWithDefaults.hashFlag) {\n    spec = hash(spec, optionsWithDefaults);\n  }\n  return spec;\n};\nconst denormalize = (value, options = {}) => {\n  const optionsWithDefaults = createOptionsWithDefaults(options);\n  let spec = value;\n  if (optionsWithDefaults.hashFlag) {\n    spec = deHash(spec, optionsWithDefaults);\n  }\n  if (optionsWithDefaults.mergeAllOf && !optionsWithDefaults.unify && !optionsWithDefaults.allowNotValidSyntheticChanges) {\n    spec = deCleanUpSynthetic(spec, optionsWithDefaults);\n  }\n  if (optionsWithDefaults.unify) {\n    spec = deUnify(spec, optionsWithDefaults);\n  }\n  if (optionsWithDefaults.resolveRef || !optionsWithDefaults.originsAlreadyDefined && optionsWithDefaults.originsFlag) {\n    spec = deDefineOriginsAndResolvedRefSymbols(spec, optionsWithDefaults);\n  }\n  return spec;\n};\nfunction createOptionsWithDefaults(options) {\n  return {\n    resolveRef: DEFAULT_OPTION_RESOLVE_REF,\n    validate: DEFAULT_OPTION_VALIDATE,\n    mergeAllOf: DEFAULT_OPTION_MERGE_ALL_OF,\n    unify: DEFAULT_OPTION_UNIFY,\n    liftCombiners: DEFAULT_OPTION_LIFT_COMBINERS,\n    allowNotValidSyntheticChanges: DEFAULT_OPTION_ALLOW_NOT_VALID_SYNTHETIC_CHANGES,\n    originsAlreadyDefined: DEFAULT_OPTION_ORIGINS_ALREADY_DEFINED,\n    ...options\n  };\n}\nfunction calculateDeprecatedItems(data, originsSymbol) {\n  const spec = resolveSpec(data);\n  const deprecatedState = {\n    deprecatedItems: [],\n    cycleGuard: /* @__PURE__ */ new Set(),\n    inlineDescriptionSuffix: \"\"\n  };\n  syncCrawl(\n    data,\n    [({ key, value, state, rules }) => {\n      var _a;\n      if (state.cycleGuard.has(value) || typeof key === \"symbol\") {\n        return { done: true };\n      }\n      if (!isObject$1(value)) {\n        return { done: true };\n      }\n      const localState = {\n        ...state,\n        values: state.cycleGuard.add(value)\n      };\n      const descriptionCtx = {\n        key,\n        source: value,\n        paths: ((_a = resolveOrigins(value, JSON_SCHEMA_PROPERTY_DEPRECATED, originsSymbol)) == null ? void 0 : _a.map(pathItemToFullPath)) ?? [],\n        suffix: state.inlineDescriptionSuffix\n      };\n      const deprecatedRules = rules == null ? void 0 : rules.deprecation;\n      if (deprecatedRules == null ? void 0 : deprecatedRules.inlineDescriptionSuffixCalculator) {\n        localState.inlineDescriptionSuffix = deprecatedRules == null ? void 0 : deprecatedRules.inlineDescriptionSuffixCalculator(descriptionCtx);\n      }\n      if (!(deprecatedRules && deprecatedRules.descriptionCalculator && deprecatedRules.deprecationResolver)) {\n        return {\n          value,\n          state: localState\n        };\n      }\n      const deprecatedReason = deprecatedRules.deprecationResolver(value);\n      if (deprecatedReason !== void 0) {\n        if (areDeprecatedOriginsNotEmpty(value, originsSymbol)) {\n          state.deprecatedItems.push({\n            value,\n            description: deprecatedRules.descriptionCalculator(descriptionCtx),\n            ...deprecatedReason ? { deprecatedReason } : {}\n          });\n        } else {\n          throw new Error(\"Something wrong with origins\");\n        }\n      }\n      return {\n        value,\n        state: localState\n      };\n    }],\n    { state: deprecatedState, rules: RULES[spec.type] }\n  );\n  return deprecatedState.deprecatedItems;\n}\nfunction areDeprecatedOriginsNotEmpty(value, originsSymbol) {\n  const deprecatedOrigins = resolveOrigins(value, JSON_SCHEMA_PROPERTY_DEPRECATED, originsSymbol);\n  if (!deprecatedOrigins) {\n    return false;\n  }\n  return deprecatedOrigins.every((item) => Object.keys(item).length > 0);\n}\nexport {\n  BEFORE_SECOND_DATA_LEVEL,\n  CURRENT_DATA_LEVEL,\n  DEFAULT_OPTION_ALLOW_NOT_VALID_SYNTHETIC_CHANGES,\n  DEFAULT_OPTION_LIFT_COMBINERS,\n  DEFAULT_OPTION_MERGE_ALL_OF,\n  DEFAULT_OPTION_ORIGINS_ALREADY_DEFINED,\n  DEFAULT_OPTION_ORIGINS_FOR_DEFAULTS,\n  DEFAULT_OPTION_RESOLVE_REF,\n  DEFAULT_OPTION_UNIFY,\n  DEFAULT_OPTION_VALIDATE,\n  DEFAULT_TYPE_FLAG_PURE,\n  DEFAULT_TYPE_FLAG_SYNTHETIC,\n  GRAPH_API_PROPERTY_ARGS,\n  GRAPH_API_PROPERTY_COMPONENTS,\n  GRAPH_API_PROPERTY_DEFAULT,\n  GRAPH_API_PROPERTY_DEFINITION,\n  GRAPH_API_PROPERTY_DEPRECATED_DIRECTIVE,\n  GRAPH_API_PROPERTY_DIRECTIVES,\n  GRAPH_API_PROPERTY_ENUMS,\n  GRAPH_API_PROPERTY_INPUT_OBJECTS,\n  GRAPH_API_PROPERTY_INTERFACES,\n  GRAPH_API_PROPERTY_KIND,\n  GRAPH_API_PROPERTY_LOCATIONS,\n  GRAPH_API_PROPERTY_META,\n  GRAPH_API_PROPERTY_METHODS,\n  GRAPH_API_PROPERTY_MUTATIONS,\n  GRAPH_API_PROPERTY_NULLABLE,\n  GRAPH_API_PROPERTY_OBJECTS,\n  GRAPH_API_PROPERTY_ONE_OF,\n  GRAPH_API_PROPERTY_PROPERTIES,\n  GRAPH_API_PROPERTY_QUERIES,\n  GRAPH_API_PROPERTY_REPEATABLE,\n  GRAPH_API_PROPERTY_SCALARS,\n  GRAPH_API_PROPERTY_SUBSCRIPTIONS,\n  GRAPH_API_PROPERTY_TITLE,\n  GRAPH_API_PROPERTY_TYPE,\n  GRAPH_API_PROPERTY_UNIONS,\n  GRAPH_API_PROPERTY_VALUES,\n  JSON_SCHEMA_NODE_NORMALIZED_TYPES,\n  JSON_SCHEMA_NODE_SYNTHETIC_TYPES,\n  JSON_SCHEMA_NODE_SYNTHETIC_TYPE_ANY,\n  JSON_SCHEMA_NODE_SYNTHETIC_TYPE_NOTHING,\n  JSON_SCHEMA_NODE_TYPES,\n  JSON_SCHEMA_NODE_TYPE_ARRAY,\n  JSON_SCHEMA_NODE_TYPE_BOOLEAN,\n  JSON_SCHEMA_NODE_TYPE_INTEGER,\n  JSON_SCHEMA_NODE_TYPE_NULL,\n  JSON_SCHEMA_NODE_TYPE_NUMBER,\n  JSON_SCHEMA_NODE_TYPE_OBJECT,\n  JSON_SCHEMA_NODE_TYPE_STRING,\n  JSON_SCHEMA_PROPERTY_ADDITIONAL_ITEMS,\n  JSON_SCHEMA_PROPERTY_ADDITIONAL_PROPERTIES,\n  JSON_SCHEMA_PROPERTY_ALL_OF,\n  JSON_SCHEMA_PROPERTY_ANY_OF,\n  JSON_SCHEMA_PROPERTY_CONST,\n  JSON_SCHEMA_PROPERTY_CONTAINS,\n  JSON_SCHEMA_PROPERTY_CONTENT_MEDIA_TYPE,\n  JSON_SCHEMA_PROPERTY_DEFAULT,\n  JSON_SCHEMA_PROPERTY_DEFINITIONS,\n  JSON_SCHEMA_PROPERTY_DEFS,\n  JSON_SCHEMA_PROPERTY_DEPENDENCIES,\n  JSON_SCHEMA_PROPERTY_DEPRECATED,\n  JSON_SCHEMA_PROPERTY_DESCRIPTION,\n  JSON_SCHEMA_PROPERTY_ENUM,\n  JSON_SCHEMA_PROPERTY_EXAMPLES,\n  JSON_SCHEMA_PROPERTY_EXCLUSIVE_MAXIMUM,\n  JSON_SCHEMA_PROPERTY_EXCLUSIVE_MINIMUM,\n  JSON_SCHEMA_PROPERTY_FORMAT,\n  JSON_SCHEMA_PROPERTY_ITEMS,\n  JSON_SCHEMA_PROPERTY_MAXIMUM,\n  JSON_SCHEMA_PROPERTY_MAX_ITEMS,\n  JSON_SCHEMA_PROPERTY_MAX_LENGTH,\n  JSON_SCHEMA_PROPERTY_MAX_PROPERTIES,\n  JSON_SCHEMA_PROPERTY_MINIMUM,\n  JSON_SCHEMA_PROPERTY_MIN_ITEMS,\n  JSON_SCHEMA_PROPERTY_MIN_LENGTH,\n  JSON_SCHEMA_PROPERTY_MIN_PROPERTIES,\n  JSON_SCHEMA_PROPERTY_MULTIPLE_OF,\n  JSON_SCHEMA_PROPERTY_NOT,\n  JSON_SCHEMA_PROPERTY_NULLABLE,\n  JSON_SCHEMA_PROPERTY_ONE_OF,\n  JSON_SCHEMA_PROPERTY_PATTERN,\n  JSON_SCHEMA_PROPERTY_PATTERN_PROPERTIES,\n  JSON_SCHEMA_PROPERTY_PROPERTIES,\n  JSON_SCHEMA_PROPERTY_PROPERTY_NAMES,\n  JSON_SCHEMA_PROPERTY_READ_ONLY,\n  JSON_SCHEMA_PROPERTY_REF,\n  JSON_SCHEMA_PROPERTY_REQUIRED,\n  JSON_SCHEMA_PROPERTY_TITLE,\n  JSON_SCHEMA_PROPERTY_TYPE,\n  JSON_SCHEMA_PROPERTY_UNIQUE_ITEMS,\n  JSON_SCHEMA_PROPERTY_WRITE_ONLY,\n  MapArray,\n  OPEN_API_HTTP_METHODS,\n  OPEN_API_HTTP_METHOD_DELETE,\n  OPEN_API_HTTP_METHOD_GET,\n  OPEN_API_HTTP_METHOD_HEAD,\n  OPEN_API_HTTP_METHOD_OPTIONS,\n  OPEN_API_HTTP_METHOD_PATCH,\n  OPEN_API_HTTP_METHOD_POST,\n  OPEN_API_HTTP_METHOD_PUT,\n  OPEN_API_HTTP_METHOD_TRACE,\n  OPEN_API_JSON_SCHEMA_PROPERTY_ATTRIBUTE,\n  OPEN_API_JSON_SCHEMA_PROPERTY_WRAPPED,\n  OPEN_API_JSON_SCHEMA_PROPERTY_XML,\n  OPEN_API_PROPERTY_ALLOW_EMPTY_VALUE,\n  OPEN_API_PROPERTY_ALLOW_RESERVED,\n  OPEN_API_PROPERTY_COMPONENTS,\n  OPEN_API_PROPERTY_CONTENT,\n  OPEN_API_PROPERTY_DEPRECATED,\n  OPEN_API_PROPERTY_DESCRIPTION,\n  OPEN_API_PROPERTY_ENCODING,\n  OPEN_API_PROPERTY_EXAMPLE,\n  OPEN_API_PROPERTY_EXAMPLES,\n  OPEN_API_PROPERTY_HEADERS,\n  OPEN_API_PROPERTY_LINKS,\n  OPEN_API_PROPERTY_PARAMETERS,\n  OPEN_API_PROPERTY_PATHS,\n  OPEN_API_PROPERTY_REQUEST_BODIES,\n  OPEN_API_PROPERTY_REQUEST_BODY,\n  OPEN_API_PROPERTY_REQUIRED,\n  OPEN_API_PROPERTY_RESPONSES,\n  OPEN_API_PROPERTY_SCHEMA,\n  OPEN_API_PROPERTY_SCHEMAS,\n  OPEN_API_PROPERTY_SECURITY_SCHEMAS,\n  OPEN_API_PROPERTY_STYLE,\n  OPEN_API_PROPERTY_SUMMARY,\n  OPEN_API_PROPERTY_TAGS,\n  OPEN_API_PROPERTY_VALUE,\n  PREDICATE_ANY_VALUE,\n  PREDICATE_UNCLOSED_END,\n  RefErrorTypes,\n  SPEC_TYPE_ASYNCAPI_2,\n  SPEC_TYPE_GRAPH_API,\n  SPEC_TYPE_JSON_SCHEMA_04,\n  SPEC_TYPE_JSON_SCHEMA_06,\n  SPEC_TYPE_JSON_SCHEMA_07,\n  SPEC_TYPE_OPEN_API_30,\n  SPEC_TYPE_OPEN_API_31,\n  afterValue,\n  areDeprecatedOriginsNotEmpty,\n  arrayToSingleOrArray,\n  beforeValue,\n  buildPointer,\n  calculateDeprecatedItems,\n  calculateGCD,\n  calculateLCM,\n  calculateMatchingDepth,\n  cleanAllOrigins,\n  cleanOrigins,\n  cleanSeveralOrigins,\n  concatArrays$1 as concatArrays,\n  concatenateArraysInProperty,\n  convertOriginToHumanReadable,\n  copyDescriptors,\n  copyOrigins,\n  copyOriginsForArray,\n  copyProperty,\n  createCycledJsoHandlerHook,\n  createEvaluationCacheService,\n  createPropertySpreadWithCacheService,\n  createRef,\n  createSelfMetaCloneHook,\n  createSelfMetaCrawlHook,\n  createSelfOriginsCloneHook,\n  denormalize,\n  findMultiplierForInteger,\n  getJsoProperty,\n  grepValue,\n  insertIntoArrayByInstruction,\n  isDefaultValue,\n  isPossibleRawJsonSchema,\n  isPureRefNode,\n  isRefNode,\n  matchPaths,\n  mergeOrigins,\n  normalize,\n  parsePointer,\n  parseRef,\n  pathItemToFullPath,\n  pathMask,\n  removeDuplicatesWithMergeOrigins,\n  replaceValue,\n  resolveOrigins,\n  resolveOriginsMetaRecord,\n  resolveSpec,\n  resolveValueByPath,\n  selfMetaResolverFactory,\n  setJsoProperty,\n  setOrigins,\n  setOriginsForArray,\n  singleOrArrayToArray,\n  startFromOpenApiComponents,\n  stringifyCyclicJso,\n  stringifyCyclicJsoWithOrigins,\n  typeOf,\n  uniqueItems\n};\n//# sourceMappingURL=index.es.js.map\n","/**\r\n * Default equality comparator pass-through, used as the standard `isEqual` creator for\r\n * use inside the built comparator.\r\n */\r\nfunction createDefaultIsNestedEqual(comparator) {\r\n    return function isEqual(a, b, _indexOrKeyA, _indexOrKeyB, _parentA, _parentB, meta) {\r\n        return comparator(a, b, meta);\r\n    };\r\n}\r\n/**\r\n * Wrap the provided `areItemsEqual` method to manage the circular cache, allowing\r\n * for circular references to be safely included in the comparison without creating\r\n * stack overflows.\r\n */\r\nfunction createIsCircular(areItemsEqual) {\r\n    return function isCircular(a, b, isEqual, cache) {\r\n        if (!a || !b || typeof a !== 'object' || typeof b !== 'object') {\r\n            return areItemsEqual(a, b, isEqual, cache);\r\n        }\r\n        var cachedA = cache.get(a);\r\n        var cachedB = cache.get(b);\r\n        if (cachedA && cachedB) {\r\n            return cachedA === b && cachedB === a;\r\n        }\r\n        cache.set(a, b);\r\n        cache.set(b, a);\r\n        var result = areItemsEqual(a, b, isEqual, cache);\r\n        cache.delete(a);\r\n        cache.delete(b);\r\n        return result;\r\n    };\r\n}\r\n/**\r\n * Targeted shallow merge of two objects.\r\n *\r\n * @NOTE\r\n * This exists as a tinier compiled version of the `__assign` helper that\r\n * `tsc` injects in case of `Object.assign` not being present.\r\n */\r\nfunction merge(a, b) {\r\n    var merged = {};\r\n    for (var key in a) {\r\n        merged[key] = a[key];\r\n    }\r\n    for (var key in b) {\r\n        merged[key] = b[key];\r\n    }\r\n    return merged;\r\n}\r\n/**\r\n * Whether the value is a plain object.\r\n *\r\n * @NOTE\r\n * This is a same-realm compariosn only.\r\n */\r\nfunction isPlainObject(value) {\r\n    return value.constructor === Object || value.constructor == null;\r\n}\r\n/**\r\n * When the value is `Promise`-like, aka \"then-able\".\r\n */\r\nfunction isPromiseLike(value) {\r\n    return typeof value.then === 'function';\r\n}\r\n/**\r\n * Whether the values passed are strictly equal or both NaN.\r\n */\r\nfunction sameValueZeroEqual(a, b) {\r\n    return a === b || (a !== a && b !== b);\r\n}\n\nvar ARGUMENTS_TAG = '[object Arguments]';\r\nvar BOOLEAN_TAG = '[object Boolean]';\r\nvar DATE_TAG = '[object Date]';\r\nvar REG_EXP_TAG = '[object RegExp]';\r\nvar MAP_TAG = '[object Map]';\r\nvar NUMBER_TAG = '[object Number]';\r\nvar OBJECT_TAG = '[object Object]';\r\nvar SET_TAG = '[object Set]';\r\nvar STRING_TAG = '[object String]';\r\nvar toString = Object.prototype.toString;\r\nfunction createComparator(_a) {\r\n    var areArraysEqual = _a.areArraysEqual, areDatesEqual = _a.areDatesEqual, areMapsEqual = _a.areMapsEqual, areObjectsEqual = _a.areObjectsEqual, areRegExpsEqual = _a.areRegExpsEqual, areSetsEqual = _a.areSetsEqual, createIsNestedEqual = _a.createIsNestedEqual;\r\n    var isEqual = createIsNestedEqual(comparator);\r\n    /**\r\n     * compare the value of the two objects and return true if they are equivalent in values\r\n     */\r\n    function comparator(a, b, meta) {\r\n        // If the items are strictly equal, no need to do a value comparison.\r\n        if (a === b) {\r\n            return true;\r\n        }\r\n        // If the items are not non-nullish objects, then the only possibility\r\n        // of them being equal but not strictly is if they are both `NaN`. Since\r\n        // `NaN` is uniquely not equal to itself, we can use self-comparison of\r\n        // both objects, which is faster than `isNaN()`.\r\n        if (!a || !b || typeof a !== 'object' || typeof b !== 'object') {\r\n            return a !== a && b !== b;\r\n        }\r\n        // Checks are listed in order of commonality of use-case:\r\n        //   1. Common complex object types (plain object, array)\r\n        //   2. Common data values (date, regexp)\r\n        //   3. Less-common complex object types (map, set)\r\n        //   4. Less-common data values (promise, primitive wrappers)\r\n        // Inherently this is both subjective and assumptive, however\r\n        // when reviewing comparable libraries in the wild this order\r\n        // appears to be generally consistent.\r\n        // `isPlainObject` only checks against the object's own realm. Cross-realm\r\n        // comparisons are rare, and will be handled in the ultimate fallback, so\r\n        // we can avoid the `toString.call()` cost unless necessary.\r\n        if (isPlainObject(a) && isPlainObject(b)) {\r\n            return areObjectsEqual(a, b, isEqual, meta);\r\n        }\r\n        // `isArray()` works on subclasses and is cross-realm, so we can again avoid\r\n        // the `toString.call()` cost unless necessary by just checking if either\r\n        // and then both are arrays.\r\n        var aArray = Array.isArray(a);\r\n        var bArray = Array.isArray(b);\r\n        if (aArray || bArray) {\r\n            return aArray === bArray && areArraysEqual(a, b, isEqual, meta);\r\n        }\r\n        // Since this is a custom object, use the classic `toString.call()` to get its\r\n        // type. This is reasonably performant in modern environments like v8 and\r\n        // SpiderMonkey, and allows for cross-realm comparison when other checks like\r\n        // `instanceof` do not.\r\n        var aTag = toString.call(a);\r\n        if (aTag !== toString.call(b)) {\r\n            return false;\r\n        }\r\n        if (aTag === DATE_TAG) {\r\n            // `getTime()` showed better results compared to alternatives like `valueOf()`\r\n            // or the unary `+` operator.\r\n            return areDatesEqual(a, b, isEqual, meta);\r\n        }\r\n        if (aTag === REG_EXP_TAG) {\r\n            return areRegExpsEqual(a, b, isEqual, meta);\r\n        }\r\n        if (aTag === MAP_TAG) {\r\n            return areMapsEqual(a, b, isEqual, meta);\r\n        }\r\n        if (aTag === SET_TAG) {\r\n            return areSetsEqual(a, b, isEqual, meta);\r\n        }\r\n        // If a simple object tag, then we can prioritize a simple object comparison because\r\n        // it is likely a custom class. If an arguments tag, it should be treated as a standard\r\n        // object.\r\n        if (aTag === OBJECT_TAG || aTag === ARGUMENTS_TAG) {\r\n            // The exception for value comparison is `Promise`-like contracts. These should be\r\n            // treated the same as standard `Promise` objects, which means strict equality.\r\n            return isPromiseLike(a) || isPromiseLike(b)\r\n                ? false\r\n                : areObjectsEqual(a, b, isEqual, meta);\r\n        }\r\n        // As the penultimate fallback, check if the values passed are primitive wrappers. This\r\n        // is very rare in modern JS, which is why it is deprioritized compared to all other object\r\n        // types.\r\n        if (aTag === BOOLEAN_TAG || aTag === NUMBER_TAG || aTag === STRING_TAG) {\r\n            return sameValueZeroEqual(a.valueOf(), b.valueOf());\r\n        }\r\n        // If not matching any tags that require a specific type of comparison, then we hard-code false because\r\n        // the only thing remaining is strict equality, which has already been compared. This is for a few reasons:\r\n        //   - Certain types that cannot be introspected (e.g., `WeakMap`). For these types, this is the only\r\n        //     comparison that can be made.\r\n        //   - For types that can be introspected, but rarely have requirements to be compared\r\n        //     (`ArrayBuffer`, `DataView`, etc.), the cost is avoided to prioritize the common\r\n        //     use-cases (may be included in a future release, if requested enough).\r\n        //   - For types that can be introspected but do not have an objective definition of what\r\n        //     equality is (`Error`, etc.), the subjective decision is to be conservative and strictly compare.\r\n        // In all cases, these decisions should be reevaluated based on changes to the language and\r\n        // common development practices.\r\n        return false;\r\n    }\r\n    return comparator;\r\n}\n\n/**\r\n * Whether the arrays are equal in value.\r\n */\r\nfunction areArraysEqual(a, b, isEqual, meta) {\r\n    var index = a.length;\r\n    if (b.length !== index) {\r\n        return false;\r\n    }\r\n    // Decrementing `while` showed faster results than either incrementing or\r\n    // decrementing `for` loop and than an incrementing `while` loop. Declarative\r\n    // methods like `some` / `every` were not used to avoid incurring the garbage\r\n    // cost of anonymous callbacks.\r\n    while (index-- > 0) {\r\n        if (!isEqual(a[index], b[index], index, index, a, b, meta)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Whether the arrays are equal in value, including circular references.\r\n */\r\nvar areArraysEqualCircular = createIsCircular(areArraysEqual);\n\n/**\r\n * Whether the dates passed are equal in value.\r\n *\r\n * @NOTE\r\n * This is a standalone function instead of done inline in the comparator\r\n * to allow for overrides.\r\n */\r\nfunction areDatesEqual(a, b) {\r\n    return sameValueZeroEqual(a.valueOf(), b.valueOf());\r\n}\n\n/**\r\n * Whether the `Map`s are equal in value.\r\n */\r\nfunction areMapsEqual(a, b, isEqual, meta) {\r\n    var isValueEqual = a.size === b.size;\r\n    if (!isValueEqual) {\r\n        return false;\r\n    }\r\n    if (!a.size) {\r\n        return true;\r\n    }\r\n    // The use of `forEach()` is to avoid the transpilation cost of `for...of` comparisons, and\r\n    // the inability to control the performance of the resulting code. It also avoids excessive\r\n    // iteration compared to doing comparisons of `keys()` and `values()`. As a result, though,\r\n    // we cannot short-circuit the iterations; bookkeeping must be done to short-circuit the\r\n    // equality checks themselves.\r\n    var matchedIndices = {};\r\n    var indexA = 0;\r\n    a.forEach(function (aValue, aKey) {\r\n        if (!isValueEqual) {\r\n            return;\r\n        }\r\n        var hasMatch = false;\r\n        var matchIndexB = 0;\r\n        b.forEach(function (bValue, bKey) {\r\n            if (!hasMatch &&\r\n                !matchedIndices[matchIndexB] &&\r\n                (hasMatch =\r\n                    isEqual(aKey, bKey, indexA, matchIndexB, a, b, meta) &&\r\n                        isEqual(aValue, bValue, aKey, bKey, a, b, meta))) {\r\n                matchedIndices[matchIndexB] = true;\r\n            }\r\n            matchIndexB++;\r\n        });\r\n        indexA++;\r\n        isValueEqual = hasMatch;\r\n    });\r\n    return isValueEqual;\r\n}\r\n/**\r\n * Whether the `Map`s are equal in value, including circular references.\r\n */\r\nvar areMapsEqualCircular = createIsCircular(areMapsEqual);\n\nvar OWNER = '_owner';\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n/**\r\n * Whether the objects are equal in value.\r\n */\r\nfunction areObjectsEqual(a, b, isEqual, meta) {\r\n    var keysA = Object.keys(a);\r\n    var index = keysA.length;\r\n    if (Object.keys(b).length !== index) {\r\n        return false;\r\n    }\r\n    var key;\r\n    // Decrementing `while` showed faster results than either incrementing or\r\n    // decrementing `for` loop and than an incrementing `while` loop. Declarative\r\n    // methods like `some` / `every` were not used to avoid incurring the garbage\r\n    // cost of anonymous callbacks.\r\n    while (index-- > 0) {\r\n        key = keysA[index];\r\n        if (key === OWNER) {\r\n            var reactElementA = !!a.$$typeof;\r\n            var reactElementB = !!b.$$typeof;\r\n            if ((reactElementA || reactElementB) && reactElementA !== reactElementB) {\r\n                return false;\r\n            }\r\n        }\r\n        if (!hasOwnProperty.call(b, key) ||\r\n            !isEqual(a[key], b[key], key, key, a, b, meta)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Whether the objects are equal in value, including circular references.\r\n */\r\nvar areObjectsEqualCircular = createIsCircular(areObjectsEqual);\n\n/**\r\n * Whether the regexps passed are equal in value.\r\n *\r\n * @NOTE\r\n * This is a standalone function instead of done inline in the comparator\r\n * to allow for overrides. An example of this would be supporting a\r\n * pre-ES2015 environment where the `flags` property is not available.\r\n */\r\nfunction areRegExpsEqual(a, b) {\r\n    return a.source === b.source && a.flags === b.flags;\r\n}\n\n/**\r\n * Whether the `Set`s are equal in value.\r\n */\r\nfunction areSetsEqual(a, b, isEqual, meta) {\r\n    var isValueEqual = a.size === b.size;\r\n    if (!isValueEqual) {\r\n        return false;\r\n    }\r\n    if (!a.size) {\r\n        return true;\r\n    }\r\n    // The use of `forEach()` is to avoid the transpilation cost of `for...of` comparisons, and\r\n    // the inability to control the performance of the resulting code. It also avoids excessive\r\n    // iteration compared to doing comparisons of `keys()` and `values()`. As a result, though,\r\n    // we cannot short-circuit the iterations; bookkeeping must be done to short-circuit the\r\n    // equality checks themselves.\r\n    var matchedIndices = {};\r\n    a.forEach(function (aValue, aKey) {\r\n        if (!isValueEqual) {\r\n            return;\r\n        }\r\n        var hasMatch = false;\r\n        var matchIndex = 0;\r\n        b.forEach(function (bValue, bKey) {\r\n            if (!hasMatch &&\r\n                !matchedIndices[matchIndex] &&\r\n                (hasMatch = isEqual(aValue, bValue, aKey, bKey, a, b, meta))) {\r\n                matchedIndices[matchIndex] = true;\r\n            }\r\n            matchIndex++;\r\n        });\r\n        isValueEqual = hasMatch;\r\n    });\r\n    return isValueEqual;\r\n}\r\n/**\r\n * Whether the `Set`s are equal in value, including circular references.\r\n */\r\nvar areSetsEqualCircular = createIsCircular(areSetsEqual);\n\nvar DEFAULT_CONFIG = Object.freeze({\r\n    areArraysEqual: areArraysEqual,\r\n    areDatesEqual: areDatesEqual,\r\n    areMapsEqual: areMapsEqual,\r\n    areObjectsEqual: areObjectsEqual,\r\n    areRegExpsEqual: areRegExpsEqual,\r\n    areSetsEqual: areSetsEqual,\r\n    createIsNestedEqual: createDefaultIsNestedEqual,\r\n});\r\nvar DEFAULT_CIRCULAR_CONFIG = Object.freeze({\r\n    areArraysEqual: areArraysEqualCircular,\r\n    areDatesEqual: areDatesEqual,\r\n    areMapsEqual: areMapsEqualCircular,\r\n    areObjectsEqual: areObjectsEqualCircular,\r\n    areRegExpsEqual: areRegExpsEqual,\r\n    areSetsEqual: areSetsEqualCircular,\r\n    createIsNestedEqual: createDefaultIsNestedEqual,\r\n});\r\nvar isDeepEqual = createComparator(DEFAULT_CONFIG);\r\n/**\r\n * Whether the items passed are deeply-equal in value.\r\n */\r\nfunction deepEqual(a, b) {\r\n    return isDeepEqual(a, b, undefined);\r\n}\r\nvar isShallowEqual = createComparator(merge(DEFAULT_CONFIG, { createIsNestedEqual: function () { return sameValueZeroEqual; } }));\r\n/**\r\n * Whether the items passed are shallowly-equal in value.\r\n */\r\nfunction shallowEqual(a, b) {\r\n    return isShallowEqual(a, b, undefined);\r\n}\r\nvar isCircularDeepEqual = createComparator(DEFAULT_CIRCULAR_CONFIG);\r\n/**\r\n * Whether the items passed are deeply-equal in value, including circular references.\r\n */\r\nfunction circularDeepEqual(a, b) {\r\n    return isCircularDeepEqual(a, b, new WeakMap());\r\n}\r\nvar isCircularShallowEqual = createComparator(merge(DEFAULT_CIRCULAR_CONFIG, {\r\n    createIsNestedEqual: function () { return sameValueZeroEqual; },\r\n}));\r\n/**\r\n * Whether the items passed are shallowly-equal in value, including circular references.\r\n */\r\nfunction circularShallowEqual(a, b) {\r\n    return isCircularShallowEqual(a, b, new WeakMap());\r\n}\r\n/**\r\n * Create a custom equality comparison method.\r\n *\r\n * This can be done to create very targeted comparisons in extreme hot-path scenarios\r\n * where the standard methods are not performant enough, but can also be used to provide\r\n * support for legacy environments that do not support expected features like\r\n * `RegExp.prototype.flags` out of the box.\r\n */\r\nfunction createCustomEqual(getComparatorOptions) {\r\n    return createComparator(merge(DEFAULT_CONFIG, getComparatorOptions(DEFAULT_CONFIG)));\r\n}\r\n/**\r\n * Create a custom equality comparison method that handles circular references. This is very\r\n * similar to `createCustomEqual`, with the only difference being that `meta` expects to be\r\n * populated with a `WeakMap`-like contract.\r\n *\r\n * This can be done to create very targeted comparisons in extreme hot-path scenarios\r\n * where the standard methods are not performant enough, but can also be used to provide\r\n * support for legacy environments that do not support expected features like\r\n * `WeakMap` out of the box.\r\n */\r\nfunction createCustomCircularEqual(getComparatorOptions) {\r\n    var comparator = createComparator(merge(DEFAULT_CIRCULAR_CONFIG, getComparatorOptions(DEFAULT_CIRCULAR_CONFIG)));\r\n    return (function (a, b, meta) {\r\n        if (meta === void 0) { meta = new WeakMap(); }\r\n        return comparator(a, b, meta);\r\n    });\r\n}\n\nexport { circularDeepEqual, circularShallowEqual, createCustomCircularEqual, createCustomEqual, deepEqual, sameValueZeroEqual, shallowEqual };\n//# sourceMappingURL=fast-equals.esm.js.map\n","import { anyArrayKeys, syncCrawl, getNodeRules, syncClone, isArray as isArray$1, isObject as isObject$1 } from \"@netcracker/qubership-apihub-json-crawl\";\nimport { JSON_SCHEMA_NODE_SYNTHETIC_TYPE_NOTHING, JSON_SCHEMA_NODE_TYPE_BOOLEAN, JSON_SCHEMA_NODE_SYNTHETIC_TYPE_ANY, JSON_SCHEMA_NODE_TYPE_OBJECT, JSON_SCHEMA_NODE_TYPE_ARRAY, JSON_SCHEMA_NODE_TYPE_NUMBER, JSON_SCHEMA_NODE_TYPE_STRING, JSON_SCHEMA_NODE_TYPE_INTEGER, JSON_SCHEMA_NODE_TYPE_NULL, normalize, denormalize, isDefaultValue, resolveOrigins, pathItemToFullPath, JSON_SCHEMA_PROPERTY_ONE_OF, JSON_SCHEMA_PROPERTY_ANY_OF, copyOrigins, JSON_SCHEMA_PROPERTY_TYPE, cleanOrigins, setOrigins, copyDescriptors, SPEC_TYPE_JSON_SCHEMA_04, createEvaluationCacheService, GRAPH_API_PROPERTY_ONE_OF, GRAPH_API_PROPERTY_DIRECTIVES, GRAPH_API_PROPERTY_TITLE, GRAPH_API_PROPERTY_TYPE, GRAPH_API_PROPERTY_KIND, GRAPH_API_PROPERTY_NULLABLE, GRAPH_API_PROPERTY_DEFAULT, GRAPH_API_PROPERTY_LOCATIONS, GRAPH_API_PROPERTY_DEFINITION, SPEC_TYPE_JSON_SCHEMA_07, calculateMatchingDepth, startFromOpenApiComponents, OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_REQUEST_BODIES, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_CONTENT, grepValue, OPEN_API_PROPERTY_ENCODING, OPEN_API_HTTP_METHODS, OPEN_API_PROPERTY_PATHS, OPEN_API_PROPERTY_REQUEST_BODY, OPEN_API_PROPERTY_RESPONSES, PREDICATE_UNCLOSED_END, OPEN_API_PROPERTY_HEADERS, matchPaths, OPEN_API_PROPERTY_PARAMETERS, OPEN_API_PROPERTY_SCHEMA, OPEN_API_PROPERTY_SCHEMAS, SPEC_TYPE_OPEN_API_30, SPEC_TYPE_OPEN_API_31, OPEN_API_PROPERTY_EXAMPLE, OPEN_API_PROPERTY_EXAMPLES, resolveSpec, SPEC_TYPE_JSON_SCHEMA_06, SPEC_TYPE_ASYNCAPI_2, SPEC_TYPE_GRAPH_API } from \"@netcracker/qubership-apihub-api-unifier\";\nimport { deepEqual } from \"fast-equals\";\nconst FAILED_PARAMS_CALCULATION = {};\nconst IGNORE_DIFFERENCE_IN_KEYS_RULE = \"ignoreKeyDifference\";\nconst START_NEW_COMPARE_SCOPE_RULE = \"newCompareScope\";\nconst COMPARE_SCOPE_ROOT = \"root\";\nconst COMPARE_MODE_DEFAULT = \"default\";\nconst COMPARE_MODE_OPERATION = \"operation\";\nconst isObject = (value) => {\n  return typeof value === \"object\" && value !== null;\n};\nconst isArray = (value) => {\n  return Array.isArray(value);\n};\nconst isNotEmptyArray = (value) => {\n  return !!(Array.isArray(value) && value.length);\n};\nconst isEmptyArray = (value) => {\n  return Array.isArray(value) && !value.length;\n};\nconst isExist = (value) => {\n  return typeof value !== \"undefined\";\n};\nconst isString = (value) => {\n  return typeof value === \"string\";\n};\nconst isBoolean = (value) => {\n  return typeof value === \"boolean\";\n};\nconst isSymbol = (value) => {\n  return typeof value === \"symbol\";\n};\nconst isNumber = (value) => {\n  return typeof value === \"number\" || isString(value) && !Number.isNaN(+value);\n};\nconst isFunc = (value) => {\n  return typeof value === \"function\";\n};\nconst typeOf = (value) => {\n  if (Array.isArray(value)) {\n    return \"array\";\n  }\n  return value === null ? \"null\" : typeof value;\n};\nconst objectKeys = (value) => {\n  return Object.keys(value);\n};\nconst getKeyValue = (obj, ...path) => {\n  let value = obj;\n  for (const key of path) {\n    if (!isSymbol(key) && Array.isArray(value) && typeof +key === \"number\" && value.length < +key) {\n      value = value[+key];\n    } else if (isObject(value) && key in value) {\n      value = value[key];\n    } else {\n      return;\n    }\n    if (value === void 0) {\n      return;\n    }\n  }\n  return value;\n};\nconst getStringValue = (obj, ...path) => {\n  const value = getKeyValue(obj, ...path);\n  return typeof value === \"string\" ? value : void 0;\n};\nconst getObjectValue = (obj, ...path) => {\n  const value = getKeyValue(obj, ...path);\n  return isObject(value) ? value : void 0;\n};\nconst getArrayValue = (obj, ...path) => {\n  const value = getKeyValue(obj, ...path);\n  return Array.isArray(value) ? value : void 0;\n};\nconst JSON_SCHEMA_ASSIGN_TYPE_MAPPING = {\n  [JSON_SCHEMA_NODE_TYPE_BOOLEAN]: /* @__PURE__ */ new Set([JSON_SCHEMA_NODE_TYPE_BOOLEAN, JSON_SCHEMA_NODE_SYNTHETIC_TYPE_ANY]),\n  [JSON_SCHEMA_NODE_TYPE_OBJECT]: /* @__PURE__ */ new Set([JSON_SCHEMA_NODE_TYPE_OBJECT, JSON_SCHEMA_NODE_SYNTHETIC_TYPE_ANY]),\n  [JSON_SCHEMA_NODE_TYPE_ARRAY]: /* @__PURE__ */ new Set([JSON_SCHEMA_NODE_TYPE_ARRAY, JSON_SCHEMA_NODE_SYNTHETIC_TYPE_ANY]),\n  [JSON_SCHEMA_NODE_TYPE_NUMBER]: /* @__PURE__ */ new Set([JSON_SCHEMA_NODE_TYPE_NUMBER, JSON_SCHEMA_NODE_SYNTHETIC_TYPE_ANY]),\n  [JSON_SCHEMA_NODE_TYPE_STRING]: /* @__PURE__ */ new Set([JSON_SCHEMA_NODE_TYPE_STRING, JSON_SCHEMA_NODE_SYNTHETIC_TYPE_ANY]),\n  [JSON_SCHEMA_NODE_TYPE_INTEGER]: /* @__PURE__ */ new Set([JSON_SCHEMA_NODE_TYPE_INTEGER, JSON_SCHEMA_NODE_TYPE_NUMBER, JSON_SCHEMA_NODE_SYNTHETIC_TYPE_ANY]),\n  [JSON_SCHEMA_NODE_TYPE_NULL]: /* @__PURE__ */ new Set([JSON_SCHEMA_NODE_TYPE_NULL]),\n  [JSON_SCHEMA_NODE_SYNTHETIC_TYPE_ANY]: /* @__PURE__ */ new Set([JSON_SCHEMA_NODE_SYNTHETIC_TYPE_ANY]),\n  [JSON_SCHEMA_NODE_SYNTHETIC_TYPE_NOTHING]: /* @__PURE__ */ new Set(\n    [\n      JSON_SCHEMA_NODE_SYNTHETIC_TYPE_NOTHING,\n      JSON_SCHEMA_NODE_TYPE_BOOLEAN,\n      JSON_SCHEMA_NODE_TYPE_OBJECT,\n      JSON_SCHEMA_NODE_TYPE_ARRAY,\n      JSON_SCHEMA_NODE_TYPE_NUMBER,\n      JSON_SCHEMA_NODE_TYPE_STRING,\n      JSON_SCHEMA_NODE_TYPE_INTEGER,\n      JSON_SCHEMA_NODE_TYPE_NULL,\n      JSON_SCHEMA_NODE_SYNTHETIC_TYPE_ANY\n    ]\n  )\n};\nconst isTypeAssignable = (fromType, toType, covariant) => {\n  if (toType === JSON_SCHEMA_NODE_SYNTHETIC_TYPE_NOTHING) {\n    return false;\n  }\n  if (fromType === JSON_SCHEMA_NODE_SYNTHETIC_TYPE_NOTHING) {\n    return true;\n  }\n  const from = !covariant ? fromType : toType;\n  const to = !covariant ? toType : fromType;\n  const allowedTypes = JSON_SCHEMA_ASSIGN_TYPE_MAPPING[from];\n  if (!allowedTypes) {\n    return false;\n  }\n  return allowedTypes.has(to);\n};\nconst nonBreakingIf = (v) => v ? nonBreaking : breaking;\nconst isDiffAdd = (diff) => diff.action === DiffAction.add;\nconst isDiffRemove = (diff) => diff.action === DiffAction.remove;\nconst isDiffRename = (diff) => diff.action === DiffAction.rename;\nconst isDiffReplace = (diff) => diff.action === DiffAction.replace;\nconst onlyExistedArrayIndexes = (array) => anyArrayKeys(array).flatMap((value) => typeof value === \"number\" ? [value] : []);\nconst resolveNodeContextFromCompareContext = (diff, ctx) => {\n  return isDiffRemove(diff) ? ctx.before : ctx.after;\n};\nconst resolveCurrentNode = (diff, ctx) => {\n  const context = resolveNodeContextFromCompareContext(diff, ctx);\n  const parent = strictResolveValueFromContext(context);\n  if (!isObject(parent)) {\n    return void 0;\n  }\n  return parent;\n};\nconst resolveParentNode = (diff, ctx) => {\n  const context = resolveNodeContextFromCompareContext(diff, ctx);\n  const parent = strictResolveValueFromContext(context, PARENT_JUMP);\n  if (!isObject(parent)) {\n    return void 0;\n  }\n  return parent;\n};\nconst resolveValueFromCompareContext = (diff, ctx, ...path) => {\n  const context = resolveNodeContextFromCompareContext(diff, ctx);\n  const parent = strictResolveValueFromContext(context, ...path);\n  if (!isObject(parent)) {\n    return void 0;\n  }\n  return parent;\n};\nconst resolveAllDeclarationPath = (diff) => {\n  let declarationPaths;\n  switch (diff.action) {\n    case DiffAction.add:\n      declarationPaths = [...diff.afterDeclarationPaths];\n      break;\n    case DiffAction.remove:\n      declarationPaths = [...diff.beforeDeclarationPaths];\n      break;\n    case DiffAction.replace:\n      declarationPaths = [...diff.beforeDeclarationPaths, ...diff.afterDeclarationPaths];\n      break;\n    case DiffAction.rename:\n      declarationPaths = [...diff.beforeDeclarationPaths, ...diff.afterDeclarationPaths];\n      break;\n  }\n  return declarationPaths;\n};\nconst calculateParentJumpDeep = (deep) => {\n  return [...Array(deep)].fill(PARENT_JUMP);\n};\nconst checkPrimitiveType = (value) => {\n  if (isObject(value)) {\n    return void 0;\n  }\n  if (isString(value) || isBoolean(value) || isNumber(value)) {\n    return value;\n  }\n  return void 0;\n};\nconst DIFF_META_KEY = Symbol(\"$diff\");\nconst DEFAULT_NORMALIZED_RESULT = false;\nconst DEFAULT_OPTION_DEFAULTS_META_KEY = Symbol(\"$defaults\");\nconst DEFAULT_OPTION_ORIGINS_META_KEY = Symbol(\"$origins\");\nconst JSO_ROOT = \"#\";\nconst DiffAction = {\n  add: \"add\",\n  remove: \"remove\",\n  replace: \"replace\",\n  rename: \"rename\"\n};\nconst ClassifierType = {\n  breaking: \"breaking\",\n  nonBreaking: \"non-breaking\",\n  risky: \"risky\",\n  annotation: \"annotation\",\n  unclassified: \"unclassified\",\n  deprecated: \"deprecated\"\n};\nconst { breaking, nonBreaking, risky, unclassified, annotation, deprecated } = ClassifierType;\nconst allNonBreaking = [nonBreaking, nonBreaking, nonBreaking];\nconst allBreaking = [breaking, breaking, breaking];\nconst onlyAddBreaking = [breaking, nonBreaking, nonBreaking];\nconst addNonBreaking = [nonBreaking, breaking, breaking];\nconst allUnclassified = [unclassified, unclassified, unclassified];\nconst allAnnotation = [annotation, annotation, annotation];\nconst allDeprecated = [deprecated, deprecated, deprecated];\nconst ANY_COMBINER_INDEX = -1;\nconst ANY_COMBINER_PATH = [];\nconst diffDescription = (descriptionTemplate) => {\n  const diffDescriptionRule = (diff, ctx) => {\n    const paramCalculator = resolveParamCalculator(ctx);\n    if (paramCalculator === void 0) {\n      return void 0;\n    }\n    const params = paramCalculator(diff, ctx);\n    if (params === FAILED_PARAMS_CALCULATION) {\n      return void 0;\n    }\n    return createDescription(isArray(descriptionTemplate) ? descriptionTemplate : [descriptionTemplate], params);\n  };\n  return diffDescriptionRule;\n};\nconst resolveParamCalculator = (ctx) => {\n  if (ctx === void 0) {\n    return void 0;\n  }\n  const descriptionParamCalculator = ctx.rules.descriptionParamCalculator;\n  if (descriptionParamCalculator) {\n    return descriptionParamCalculator;\n  }\n  return resolveParamCalculator(ctx.parentContext);\n};\nconst calculateDefaultDiffDescription = (diff) => {\n  let declarationPaths;\n  switch (diff.action) {\n    case DiffAction.add:\n      declarationPaths = [...diff.afterDeclarationPaths];\n      break;\n    case DiffAction.remove:\n      declarationPaths = [...diff.beforeDeclarationPaths];\n      break;\n    case DiffAction.replace:\n      if (diff.afterDeclarationPaths) {\n        declarationPaths = [...diff.afterDeclarationPaths];\n      } else {\n        declarationPaths = [...diff.beforeDeclarationPaths];\n      }\n      break;\n    case DiffAction.rename:\n      if (diff.afterDeclarationPaths) {\n        declarationPaths = [...diff.afterDeclarationPaths];\n      } else {\n        declarationPaths = [...diff.beforeDeclarationPaths];\n      }\n      break;\n  }\n  const paths = declarationPaths.map((path) => `'${path.join(\".\")}'`).join(\", \");\n  if (diff.scope) {\n    return `[${DIFF_ACTION_TO_ACTION_MAP[diff.action]}] ${paths} in ${diff.scope}`;\n  }\n  return `[${DIFF_ACTION_TO_ACTION_MAP[diff.action]}] ${paths}`;\n};\nconst createDescription = (descriptionTemplates, params) => {\n  if (isEmptyArray(descriptionTemplates)) {\n    return \"\";\n  }\n  return applyTemplateParams(descriptionTemplates, params);\n};\nconst applyTemplateParams = (templates, params) => {\n  const template = findTemplate(templates, params);\n  if (!template) {\n    return void 0;\n  }\n  return applyTempleParams(template, params);\n};\nconst findTemplate = (templates, params) => {\n  var _a;\n  return (_a = templates.reduce((suitableTemplate, template) => {\n    const templateParams = [...template.matchAll(/{{(\\w+)}}/g)].map((matchResult) => matchResult[0]).map((param) => param.slice(2, -2));\n    let suitability = 0;\n    for (const templateParam of templateParams) {\n      if (params[templateParam] === void 0) {\n        return suitableTemplate;\n      }\n      suitability += 1;\n    }\n    return suitableTemplate && suitableTemplate.suitability > suitability ? suitableTemplate : { template, suitability };\n  }, void 0)) == null ? void 0 : _a.template;\n};\nconst applyTempleParams = (template, params) => {\n  if (!template) {\n    return \"\";\n  }\n  const placeholders = {};\n  for (const key of objectKeys(params)) {\n    placeholders[key] = params[key];\n  }\n  for (const match of [...template.matchAll(/{{(\\w+)}}/g)].reverse()) {\n    if (!(match[1] in placeholders)) {\n      continue;\n    }\n    const index = match.index ?? 0;\n    template = template.substring(0, index) + String(placeholders[match[1]]) + template.substring(index + match[0].length);\n  }\n  return template;\n};\nconst DIFF_ACTION_TO_PREPOSITION_MAP = {\n  [DiffAction.add]: \"to\",\n  [DiffAction.remove]: \"from\",\n  [DiffAction.replace]: \"for\",\n  [DiffAction.rename]: \"of\"\n};\nconst DIFF_ACTION_TO_ACTION_MAP = {\n  [DiffAction.add]: \"Added\",\n  [DiffAction.remove]: \"Deleted\",\n  [DiffAction.replace]: \"Changed\",\n  [DiffAction.rename]: \"Renamed\"\n};\nconst GREP_TEMPLATE_PARAM_HEADER_NAME = \"headerName\";\nconst GREP_TEMPLATE_PARAM_RESPONSE_NAME = \"responseName\";\nconst GREP_TEMPLATE_PARAM_EXAMPLE_NAME = \"exampleName\";\nconst GREP_TEMPLATE_PARAM_PARAMETER_NAME = \"parameterName\";\nconst GREP_TEMPLATE_PARAM_MEDIA_TYPE = \"mediaType\";\nconst GREP_TEMPLATE_PARAM_ENCODING_NAME = \"encodingName\";\nconst TEMPLATE_PARAM_ACTION = \"action\";\nconst TEMPLATE_PARAM_PREPOSITION = \"preposition\";\nconst TEMPLATE_PARAM_PROPERTY_NAME = \"propertyName\";\nconst TEMPLATE_PARAM_RESPONSE_PATH = \"responsePath\";\nconst TEMPLATE_PARAM_REQUEST_PATH = \"requestPath\";\nconst TEMPLATE_PARAM_HEADER_PATH = \"headerPath\";\nconst TEMPLATE_PARAM_EXAMPLE_PATH = \"examplePath\";\nconst TEMPLATE_PARAM_PARAMETER_PATH = \"parameterPath\";\nconst TEMPLATE_PARAM_SCHEMA_PATH = \"schemaPath\";\nconst TEMPLATE_PARAM_COMPONENT_PATH = \"componentPath\";\nconst TEMPLATE_PARAM_PARAMETER_LOCATION = \"parameterLocation\";\nconst TEMPLATE_PARAM_PLACE = \"place\";\nconst TEMPLATE_PARAM_SCOPE = \"scope\";\nconst NEVER_KEY = Symbol(\"never-key\");\nconst createDiff = (diff, ctx) => {\n  var _a, _b, _c, _d, _e, _f, _g;\n  const classifierRule = ((_a = ctx.rules) == null ? void 0 : _a.$) ?? {};\n  const mutableDiffCopy = { ...diff, type: unclassified };\n  if (classifierRule) {\n    const classifier = Array.isArray(classifierRule) ? classifierRule : allUnclassified;\n    const index = diff.action === DiffAction.rename ? 2 : [DiffAction.add, DiffAction.remove, DiffAction.replace].indexOf(diff.action);\n    const changeType = classifier[index];\n    try {\n      mutableDiffCopy.type = isFunc(changeType) ? changeType(ctx) : changeType;\n    } catch (error) {\n      (_c = (_b = ctx.options).onCreateDiffError) == null ? void 0 : _c.call(_b, `Unable to find diff type. ${error instanceof Error ? error.message : \"\"}`, mutableDiffCopy, ctx);\n    }\n  }\n  try {\n    mutableDiffCopy.description = ((_e = (_d = ctx.rules).description) == null ? void 0 : _e.call(_d, mutableDiffCopy, ctx)) ?? calculateDefaultDiffDescription(mutableDiffCopy);\n  } catch (error) {\n    (_g = (_f = ctx.options).onCreateDiffError) == null ? void 0 : _g.call(_f, `Unable to create description for diff. ${error instanceof Error ? error.message : \"\"}`, mutableDiffCopy, ctx);\n  }\n  return mutableDiffCopy;\n};\nconst diffFactory = {\n  added: (ctx) => {\n    var _a, _b;\n    return {\n      propertyKey: ctx.mergeKey,\n      diff: createDiff({\n        afterValue: (_a = ctx.after) == null ? void 0 : _a.value,\n        afterNormalizedValue: (_b = ctx.after) == null ? void 0 : _b.value,\n        action: DiffAction.add,\n        afterDeclarationPaths: ctx.after.declarativePaths,\n        scope: ctx.scope\n      }, ctx)\n    };\n  },\n  removed: (ctx) => ({\n    propertyKey: ctx.mergeKey,\n    diff: createDiff({\n      beforeValue: ctx.before.value,\n      beforeNormalizedValue: ctx.before.value,\n      action: DiffAction.remove,\n      beforeDeclarationPaths: ctx.before.declarativePaths,\n      scope: ctx.scope\n    }, ctx)\n  }),\n  replaced: (ctx) => ({\n    propertyKey: ctx.mergeKey,\n    diff: createDiff({\n      beforeValue: ctx.before.value,\n      beforeNormalizedValue: ctx.before.value,\n      afterValue: ctx.after.value,\n      afterNormalizedValue: ctx.after.value,\n      action: DiffAction.replace,\n      afterDeclarationPaths: ctx.after.declarativePaths,\n      beforeDeclarationPaths: ctx.before.declarativePaths,\n      scope: ctx.scope\n    }, ctx)\n  }),\n  renamed: (ctx) => {\n    var _a, _b, _c, _d;\n    return {\n      propertyKey: ctx.mergeKey,\n      diff: createDiff({\n        beforeKey: (_a = ctx.before) == null ? void 0 : _a.key,\n        afterKey: (_b = ctx.after) == null ? void 0 : _b.key,\n        action: DiffAction.rename,\n        afterDeclarationPaths: ((_c = ctx.after) == null ? void 0 : _c.declarativePaths) ?? [],\n        beforeDeclarationPaths: ((_d = ctx.before) == null ? void 0 : _d.declarativePaths) ?? [],\n        scope: ctx.scope\n      }, ctx)\n    };\n  }\n};\nconst addDiffObjectToContainer = (container, diffMetaKey, diffs) => {\n  if (diffMetaKey === void 0 || diffs.length === 0) {\n    return;\n  }\n  const metaRecord = diffMetaKey in container ? container[diffMetaKey] : {};\n  diffs.forEach(({ propertyKey, diff }) => metaRecord[propertyKey] = diff);\n  container[diffMetaKey] = metaRecord;\n};\nconst PARENT_JUMP = \"..\";\nconst strictResolveValueFromContext = (ctx, ...path) => resolveValueFromContext(true, ctx, ...path);\nconst optionalResolveValueFromContext = (ctx, ...path) => resolveValueFromContext(false, ctx, ...path);\nconst resolveValueFromContext = (strict, ctx, ...path) => {\n  if (path.length === 0) {\n    return ctx.value;\n  }\n  let fromObj = ctx.value;\n  let fromContext = ctx;\n  let countParentJump = 0;\n  for (const pathItem of path) {\n    if (pathItem !== PARENT_JUMP) {\n      break;\n    }\n    if (!(fromContext == null ? void 0 : fromContext.parentContext)) {\n      if (strict) {\n        throw Error(`Could not get data from the context along path '${path.join(\"/\")}'`);\n      } else {\n        return void 0;\n      }\n    }\n    fromContext = fromContext == null ? void 0 : fromContext.parentContext;\n    fromObj = fromContext == null ? void 0 : fromContext.value;\n    countParentJump += 1;\n  }\n  path = path.slice(countParentJump);\n  return getKeyValue(fromObj, ...path);\n};\nconst arrayMappingResolver = (before, after) => {\n  const length = Math.abs(before.length - after.length);\n  const arr = Array.from({ length: Math.min(before.length, after.length) }, (_, i) => i);\n  return {\n    removed: before.length > after.length ? Array.from({ length }, (_, i) => after.length + i) : [],\n    added: before.length < after.length ? Array.from({ length }, (_, i) => before.length + i) : [],\n    mapped: arr.reduce((res, i) => {\n      res[i] = i;\n      return res;\n    }, {})\n  };\n};\nconst customUniqueItemsArrayMappingResolver = (equalityFn) => (before, after) => {\n  const result = { added: [], removed: [], mapped: {} };\n  const beforeArrayIndexes = onlyExistedArrayIndexes(before);\n  const afterArrayIndexes = onlyExistedArrayIndexes(after);\n  const beforeMatchedArrayIndexes = new Set(beforeArrayIndexes);\n  const afterMatchedArrayIndexes = new Set(afterArrayIndexes);\n  for (const i of beforeArrayIndexes) {\n    const beforeItem = before[i];\n    for (const j of afterArrayIndexes) {\n      if (!afterMatchedArrayIndexes.has(j)) {\n        continue;\n      }\n      const afterItem = after[j];\n      if (equalityFn(beforeItem, afterItem)) {\n        afterMatchedArrayIndexes.delete(j);\n        beforeMatchedArrayIndexes.delete(i);\n        result.mapped[i] = j;\n        break;\n      }\n    }\n  }\n  for (const j of afterMatchedArrayIndexes.values()) {\n    result.added.push(j);\n  }\n  for (const i of beforeMatchedArrayIndexes.values()) {\n    result.removed.push(i);\n  }\n  return result;\n};\nconst deepEqualsUniqueItemsArrayMappingResolver = customUniqueItemsArrayMappingResolver(deepEqual);\nconst objectMappingResolver = (before, after) => {\n  const result = { added: [], removed: [], mapped: {} };\n  const afterKeys = new Set(Object.keys(after));\n  for (const key of Object.keys(before)) {\n    if (afterKeys.has(key)) {\n      result.mapped[key] = key;\n      afterKeys.delete(key);\n    } else {\n      result.removed.push(key);\n    }\n  }\n  afterKeys.forEach((key) => result.added.push(key));\n  return result;\n};\nconst extractDeclarationPaths = (jso, originMetaKey, property) => {\n  const origins = resolveOrigins(jso, property, originMetaKey);\n  if (!origins) {\n    return [];\n  }\n  return origins.map((leaf) => pathItemToFullPath(leaf));\n};\nfunction createNodeContext(parentContext, jso, key, value, options, root) {\n  return {\n    parentContext,\n    key,\n    declarativePaths: extractDeclarationPaths(jso, options.originsFlag, key),\n    parent: jso,\n    value,\n    root\n  };\n}\nconst createContext = (data, options) => {\n  const {\n    beforeJso,\n    afterJso,\n    root,\n    afterKey,\n    beforeKey,\n    mergeKey,\n    beforeValue,\n    afterValue,\n    rules,\n    compareScope,\n    parentContext\n  } = data;\n  return {\n    parentContext,\n    scope: compareScope,\n    before: createNodeContext(parentContext == null ? void 0 : parentContext.before, beforeJso, beforeKey, beforeValue, options, root.before[JSO_ROOT]),\n    after: createNodeContext(parentContext == null ? void 0 : parentContext.after, afterJso, afterKey, afterValue, options, root.after[JSO_ROOT]),\n    mergeKey,\n    rules,\n    options\n  };\n};\nconst createChildContext = (ctx, mergedKey, beforeChildKey, afterChildKey) => {\n  const { before, after, rules, options, scope } = ctx;\n  let beforeContext;\n  if (beforeChildKey !== void 0 && isObject(before.value)) {\n    beforeContext = createNodeContext(before, before.value, beforeChildKey, before.value[beforeChildKey], options, before.root);\n  } else {\n    beforeContext = {\n      parentContext: before,\n      declarativePaths: [],\n      key: NEVER_KEY,\n      value: void 0,\n      parent: before == null ? void 0 : before.value,\n      root: before == null ? void 0 : before.root\n    };\n  }\n  let afterContext;\n  if (afterChildKey !== void 0 && isObject(after.value)) {\n    afterContext = createNodeContext(after, after.value, afterChildKey, after.value[afterChildKey], options, after.root);\n  } else {\n    afterContext = {\n      parentContext: after,\n      declarativePaths: [],\n      key: NEVER_KEY,\n      value: void 0,\n      parent: after == null ? void 0 : after.value,\n      root: after == null ? void 0 : after.root\n    };\n  }\n  return {\n    parentContext: ctx,\n    before: beforeContext,\n    after: afterContext,\n    mergeKey: mergedKey,\n    rules: getNodeRules(\n      rules,\n      beforeChildKey ?? afterChildKey ?? NEVER_KEY,\n      ANY_COMBINER_PATH,\n      afterContext.value ?? beforeContext.value ?? void 0\n    ) ?? {},\n    options,\n    scope\n  };\n};\nconst buildPathsIdentifier = (paths) => {\n  return paths.map((path) => path.join(\"|\")).sort().join(\"\\n\");\n};\nconst cleanUpRecursive = (ctx) => {\n  if (!isObject(ctx.value)) {\n    return ctx;\n  }\n  let lastGoodContext = ctx;\n  let currentContext = ctx;\n  while (currentContext) {\n    if (currentContext.value === ctx.value) {\n      lastGoodContext = currentContext;\n    }\n    currentContext = currentContext.parentContext;\n  }\n  return lastGoodContext;\n};\nconst getOrCreateChildDiffAdd = (diffUniquenessCache, childCtx) => {\n  return diffUniquenessCache.cacheEvaluationResultByFootprint([childCtx.after.value, buildPathsIdentifier(childCtx.after.declarativePaths), childCtx.scope, DiffAction.add], () => {\n    return diffFactory.added(childCtx);\n  }, {}, (result, guard) => {\n    Object.assign(guard, result);\n    return guard;\n  });\n};\nconst getOrCreateChildDiffRemove = (diffUniquenessCache, childCtx) => {\n  return diffUniquenessCache.cacheEvaluationResultByFootprint([childCtx.before.value, buildPathsIdentifier(childCtx.before.declarativePaths), childCtx.scope, DiffAction.remove], () => {\n    return diffFactory.removed(childCtx);\n  }, {}, (result, guard) => {\n    Object.assign(guard, result);\n    return guard;\n  });\n};\nconst adaptValues = (beforeJso, beforeKey, afterJso, afterKey, adapter, options) => {\n  const beforeValue = beforeJso[beforeKey];\n  const afterValue = afterJso[afterKey];\n  if (!adapter) {\n    return [beforeValue, afterValue];\n  }\n  let beforeValueAdapted = beforeValue;\n  let afterValueAdapted = afterValue;\n  const transformer = (value, transformId, f) => options.valueAdaptationCache.cacheEvaluationResultByFootprint([value, transformId], ([value2]) => f(value2));\n  const beforeCtx = {\n    transformer,\n    options,\n    valueOrigins: resolveOrigins(beforeJso, beforeKey, options.originsFlag)\n  };\n  const afterCtx = {\n    transformer,\n    options,\n    valueOrigins: resolveOrigins(afterJso, afterKey, options.originsFlag)\n  };\n  adapter == null ? void 0 : adapter.forEach((f) => {\n    beforeValueAdapted = f(beforeValueAdapted, afterValueAdapted, beforeCtx);\n    afterValueAdapted = f(afterValueAdapted, beforeValueAdapted, afterCtx);\n  });\n  return [beforeValueAdapted, afterValueAdapted];\n};\nconst useMergeFactory = (onDiff, options) => {\n  const { metaKey } = options;\n  const diffs = /* @__PURE__ */ new Set();\n  const addDiff = (diff) => {\n    const oldSize = diffs.size;\n    diffs.add(diff);\n    if (diffs.size !== oldSize)\n      onDiff(diff);\n  };\n  const hook = (crawlContext) => {\n    const { rules = {}, state, value, key: unsafeKey } = crawlContext;\n    const {\n      adapter,\n      compare: compare2,\n      mapping,\n      ignoreKeyDifference,\n      newCompareScope\n    } = rules;\n    const {\n      keyMap: keyMap2,\n      beforeJso,\n      afterJso,\n      mergedJso,\n      mergedJsoCache,\n      diffUniquenessCache,\n      createdMergedJso,\n      compareScope\n    } = state;\n    if (typeof unsafeKey === \"symbol\") {\n      return { done: true };\n    }\n    const beforeKey = unsafeKey ?? (isArray(beforeJso) ? +Object.keys(keyMap2).pop() : Object.keys(keyMap2).pop());\n    const afterKey = keyMap2[beforeKey];\n    const mergeKey = isArray(mergedJso) && isNumber(beforeKey) ? beforeKey : afterKey;\n    if (!(beforeKey in keyMap2)) {\n      mergedJso[beforeKey] = value;\n      return { done: true };\n    }\n    const [\n      beforeValueAdapted,\n      afterValueAdapted\n    ] = adaptValues(beforeJso, beforeKey, afterJso, afterKey, adapter, options);\n    const ctx = createContext({\n      ...state,\n      beforeValue: beforeValueAdapted,\n      afterValue: afterValueAdapted,\n      afterKey,\n      beforeKey,\n      mergeKey,\n      rules,\n      compareScope: newCompareScope ?? compareScope\n    }, options);\n    const beforeDeclarativePathsId = buildPathsIdentifier(cleanUpRecursive(ctx.before).declarativePaths);\n    const afterDeclarativePathsId = buildPathsIdentifier(cleanUpRecursive(ctx.after).declarativePaths);\n    const reuseResult = mergedJsoCache.cacheEvaluationResultByFootprint([ctx.before.value, ctx.after.value, beforeDeclarativePathsId, afterDeclarativePathsId, ctx.scope], ([beforeValue, afterValue]) => {\n      if (!ignoreKeyDifference && beforeKey !== afterKey) {\n        const diffEntry = diffFactory.renamed(ctx);\n        addDiff(diffEntry.diff);\n        addDiffObjectToContainer(mergedJso, metaKey, [diffEntry]);\n      }\n      const compared = compare2 == null ? void 0 : compare2(ctx);\n      if (compared) {\n        const { diffs: customComparedDiffs, ownerDiffEntry: ownerDiff, merged } = compared;\n        customComparedDiffs.forEach((diff) => addDiff(diff));\n        return { diffsToPullUp: ownerDiff ? [ownerDiff] : [], mergedValue: merged };\n      }\n      if (typeOf(beforeValue) !== typeOf(afterValue)) {\n        const diffEntry = diffFactory.replaced(ctx);\n        addDiff(diffEntry.diff);\n        return { diffsToPullUp: [diffEntry], mergedValue: afterValue };\n      }\n      if (isObject(beforeValue) && isObject(afterValue)) {\n        const mergedJsoValue = isArray(beforeValue) ? [] : {};\n        const mapKeys = mapping ?? (isArray(beforeValue) ? arrayMappingResolver : objectMappingResolver);\n        const {\n          added: addedKeys,\n          removed: removedKeys,\n          mapped: mappedKeys\n        } = mapKeys(beforeValue, afterValue, ctx);\n        const jsoDiffEntries = [];\n        const keyToRemove = removedKeys.filter((key) => !isDefaultValue(beforeValue, key, options.defaultsFlag));\n        const keysToAdd = addedKeys.filter((key) => !isDefaultValue(afterValue, key, options.defaultsFlag));\n        let once = false;\n        const exitHook = () => {\n          if (once) {\n            return;\n          }\n          once = true;\n          keyToRemove.forEach((keyToBefore) => {\n            const childCtx = createChildContext(ctx, keyToBefore, keyToBefore, void 0);\n            jsoDiffEntries.push(getOrCreateChildDiffRemove(diffUniquenessCache, childCtx));\n          });\n          keysToAdd.forEach((keyInAfter) => {\n            const keyInMerge = isArray(mergedJsoValue) ? mergedJsoValue.length : keyInAfter;\n            const childCtx = createChildContext(ctx, keyInMerge, void 0, keyInAfter);\n            jsoDiffEntries.push(getOrCreateChildDiffAdd(diffUniquenessCache, childCtx));\n            mergedJsoValue[keyInMerge] = afterValue[keyInAfter];\n          });\n          jsoDiffEntries.forEach((e) => addDiff(e.diff));\n          addDiffObjectToContainer(mergedJsoValue, metaKey, jsoDiffEntries);\n        };\n        return {\n          mergedValue: mergedJsoValue,\n          nextValue: beforeValue,\n          nextMappedKeys: mappedKeys,\n          exitHook\n        };\n      }\n      const diffsToPullUp = [];\n      const res = {\n        mergedValue: afterValue,\n        diffsToPullUp\n      };\n      if (beforeValue !== afterValue) {\n        const diffEntry = diffFactory.replaced(ctx);\n        diffsToPullUp.push(diffEntry);\n        addDiff(diffEntry.diff);\n      }\n      return res;\n    });\n    mergedJso[mergeKey] = reuseResult.mergedValue;\n    if (\"diffsToPullUp\" in reuseResult) {\n      addDiffObjectToContainer(mergedJso, metaKey, reuseResult.diffsToPullUp);\n    }\n    if (\"nextValue\" in reuseResult) {\n      const mergedValue = reuseResult.mergedValue;\n      if (createdMergedJso.has(mergedValue)) {\n        return { done: true };\n      }\n      createdMergedJso.add(mergedValue);\n      const childState = {\n        ...crawlContext.state,\n        parentContext: ctx,\n        keyMap: reuseResult.nextMappedKeys,\n        beforeJso: beforeValueAdapted,\n        afterJso: afterValueAdapted,\n        mergedJso: mergedValue,\n        compareScope: newCompareScope ?? compareScope\n      };\n      return { value: reuseResult.nextValue, state: childState, exitHook: reuseResult.exitHook };\n    } else {\n      return { done: true };\n    }\n  };\n  return hook;\n};\nfunction denormalizeWithDiffsSave(merged, options) {\n  const jsoWithoutDiff = /* @__PURE__ */ new Set();\n  const jsoWithDiff = /* @__PURE__ */ new Set();\n  return denormalize(\n    merged,\n    {\n      ...options,\n      source: merged,\n      ...options.metaKey !== void 0 ? {\n        skip: (value, path) => {\n          const metaKey = options.metaKey;\n          if (path.length === 0) {\n            return false;\n          }\n          const key = path[path.length - 1];\n          const containerJsonPath = path.slice(0, path.length - 1);\n          const jso = getObjectValue(merged, ...containerJsonPath);\n          if (jso !== void 0) {\n            const diffs = jso[metaKey];\n            if (isObject(diffs) && key in diffs) {\n              jsoWithDiff.add(jso);\n              return true;\n            }\n          }\n          if (isObject(value)) {\n            let found = false;\n            const operationObjects = /* @__PURE__ */ new Set();\n            syncCrawl(value, ({ value: innerValue }) => {\n              if (!isObject(innerValue)) {\n                return { done: true };\n              }\n              if (jsoWithoutDiff.has(innerValue)) {\n                return { done: true };\n              }\n              if (jsoWithDiff.has(innerValue)) {\n                found = true;\n                return { terminate: true };\n              }\n              if (operationObjects.has(innerValue)) {\n                return { done: true };\n              }\n              operationObjects.add(innerValue);\n              if (metaKey in innerValue) {\n                found = true;\n                return { terminate: true };\n              }\n            });\n            if (found) {\n              operationObjects.forEach((v) => jsoWithDiff.add(v));\n              return true;\n            } else {\n              operationObjects.forEach((v) => jsoWithoutDiff.add(v));\n              return false;\n            }\n          }\n        }\n      } : {}\n    }\n  );\n}\nfunction addNormalizedValuesToDenormalizedDiff(denormalizedDiffs, rawDiffs) {\n  for (let i = 0; i < denormalizedDiffs.length && i < rawDiffs.length; i++) {\n    const denormalizedDiff = denormalizedDiffs[i];\n    const normalizedDiff = rawDiffs[i];\n    if (isDiffAdd(normalizedDiff) && isDiffAdd(denormalizedDiff)) {\n      denormalizedDiff.afterNormalizedValue = normalizedDiff.afterNormalizedValue;\n    } else if (isDiffRemove(normalizedDiff) && isDiffRemove(denormalizedDiff)) {\n      denormalizedDiff.beforeNormalizedValue = normalizedDiff.beforeNormalizedValue;\n    } else if (isDiffReplace(normalizedDiff) && isDiffReplace(denormalizedDiff)) {\n      denormalizedDiff.afterNormalizedValue = normalizedDiff.afterNormalizedValue;\n      denormalizedDiff.beforeNormalizedValue = normalizedDiff.beforeNormalizedValue;\n    }\n  }\n}\nconst compare = (before, after, options) => {\n  const beforeFullyResolved = normalize(before, {\n    ...options,\n    source: options.beforeSource\n  });\n  const afterFullyResolved = normalize(after, {\n    ...options,\n    source: options.afterSource\n  });\n  const rawDiffs = [];\n  const onDiff = (diff) => rawDiffs.push(diff);\n  let merged = compareInternal(beforeFullyResolved, afterFullyResolved, onDiff, options);\n  if (options.normalizedResult) {\n    return {\n      diffs: rawDiffs,\n      ownerDiffEntry: void 0,\n      merged\n    };\n  }\n  const diffFlags = Symbol(\"diffs\");\n  if (isObject(merged)) {\n    merged[diffFlags] = rawDiffs;\n  }\n  merged = denormalizeWithDiffsSave(merged, options);\n  let denormalizedDiffs = rawDiffs;\n  if (isObject(merged)) {\n    denormalizedDiffs = merged[diffFlags];\n    delete merged[diffFlags];\n  }\n  addNormalizedValuesToDenormalizedDiff(denormalizedDiffs, rawDiffs);\n  return {\n    diffs: denormalizedDiffs,\n    ownerDiffEntry: void 0,\n    merged\n  };\n};\nconst nestedCompare = (before, after, options) => {\n  const diffs = [];\n  const merged = compareInternal(before, after, (diff) => diffs.push(diff), options);\n  return { merged, diffs, ownerDiffEntry: void 0 };\n};\nconst compareInternal = (before, after, onDiff, options) => {\n  const root = {\n    before: { [JSO_ROOT]: before },\n    after: { [JSO_ROOT]: after },\n    merged: {}\n  };\n  const beforeRootJso = root.before;\n  const afterRootJso = root.after;\n  if (!isObject(beforeRootJso) || !isObject(afterRootJso)) {\n    throw new Error(\"Not ready to compare primitive\");\n  }\n  const hook = useMergeFactory(onDiff, options);\n  const rootState = {\n    parentContext: void 0,\n    mergedJso: root.merged,\n    beforeJso: beforeRootJso,\n    afterJso: afterRootJso,\n    keyMap: { [JSO_ROOT]: JSO_ROOT },\n    root,\n    mergedJsoCache: options.mergedJsoCache,\n    diffUniquenessCache: options.diffUniquenessCache,\n    createdMergedJso: options.createdMergedJso,\n    compareScope: options.compareScope\n  };\n  syncCrawl(before, [hook], { state: rootState, rules: options.rules });\n  return root.merged[JSO_ROOT];\n};\nconst transformCompareRules = (rules, transformer) => {\n  return syncClone(rules, ({ value, key, state, path }) => {\n    if (key && (!isString(key) || !key.startsWith(\"/\"))) {\n      state.node[key] = value;\n      return { done: true };\n    }\n    if (typeof value === \"function\") {\n      return { value: (...args) => transformCompareRules(value(...args), transformer) };\n    } else if (!Array.isArray(value) && isObject(value)) {\n      return { value: transformer(value) };\n    }\n  });\n};\nconst reverseClassifyRuleTransformer = (value) => {\n  if (\"$\" in value && Array.isArray(value.$)) {\n    return { ...value, $: reverseClassifyRule(value.$) };\n  }\n  return value;\n};\nconst reverseDiffType = (diffType) => {\n  if (typeof diffType === \"function\") {\n    return (ctx) => reverseDiffType(diffType(ctx));\n  } else {\n    switch (diffType) {\n      case breaking:\n        return nonBreaking;\n      case nonBreaking:\n        return breaking;\n      default:\n        return diffType;\n    }\n  }\n};\nconst reverseClassifyRule = ([add, remove, replace, reverseAdd, reverseRemove, reverseReplace]) => {\n  return [\n    reverseAdd ?? reverseDiffType(add),\n    reverseRemove ?? reverseDiffType(remove),\n    reverseReplace ?? reverseDiffType(replace)\n  ];\n};\nconst transformClassifyRule = ([add, remove, replace, reverseAdd, reverseRemove, reverseReplace], transformer) => {\n  const transformedRule = (ruleDiffType, diffAction) => (ctx) => transformer(isFunc(ruleDiffType) ? ruleDiffType(ctx) : ruleDiffType, ctx, diffAction);\n  if (reverseAdd !== void 0 && reverseRemove !== void 0 && reverseReplace !== void 0) {\n    return [\n      transformedRule(add, DiffAction.add),\n      transformedRule(remove, DiffAction.remove),\n      transformedRule(replace, DiffAction.replace),\n      transformedRule(reverseAdd, DiffAction.add),\n      transformedRule(reverseRemove, DiffAction.remove),\n      transformedRule(reverseReplace, DiffAction.replace)\n    ];\n  }\n  return [\n    transformedRule(add, DiffAction.add),\n    transformedRule(remove, DiffAction.remove),\n    transformedRule(replace, DiffAction.replace)\n  ];\n};\nconst breakingIf = (v) => v ? breaking : nonBreaking;\nconst breakingIfAfterTrue = ({ after }) => breakingIf(!!after.value);\nconst booleanClassifier = [\n  breakingIfAfterTrue,\n  nonBreaking,\n  breakingIfAfterTrue\n];\nconst typeClassifier = [\n  breaking,\n  //not tested\n  breaking,\n  //not tested\n  ({ before, after }) => nonBreakingIf(isTypeAssignable(before.value, after.value, false)),\n  breaking,\n  //not tested\n  breaking,\n  //not tested\n  ({ before, after }) => nonBreakingIf(isTypeAssignable(before.value, after.value, true))\n];\nconst maxClassifier = [\n  breaking,\n  nonBreaking,\n  ({ before, after }) => breakingIf(!isNumber(before.value) || !isNumber(after.value) || before.value > after.value)\n];\nconst minClassifier = [\n  breaking,\n  nonBreaking,\n  ({ before, after }) => breakingIf(!isNumber(before.value) || !isNumber(after.value) || before.value < after.value)\n];\nconst minimumClassifier = [\n  ({ before, after }) => {\n    const beforeExclusiveMinimum = getKeyValue(before.parent, \"exclusiveMinimum\");\n    return breakingIf(!isNumber(beforeExclusiveMinimum) || !isNumber(after.value) || beforeExclusiveMinimum < after.value);\n  },\n  nonBreaking,\n  ({ before, after }) => breakingIf(!isNumber(before.value) || !isNumber(after.value) || before.value < after.value)\n];\nconst maximumClassifier = [\n  ({ before, after }) => {\n    const beforeExclusiveMaximum = getKeyValue(before.parent, \"exclusiveMaximum\");\n    return breakingIf(!isNumber(beforeExclusiveMaximum) || !isNumber(after.value) || beforeExclusiveMaximum > after.value);\n  },\n  nonBreaking,\n  ({ before, after }) => breakingIf(!isNumber(before.value) || !isNumber(after.value) || before.value > after.value)\n];\nconst exclusiveClassifier = [\n  ({ after }) => after.value === true ? breaking : unclassified,\n  ({ before }) => before.value === true ? nonBreaking : unclassified,\n  breakingIfAfterTrue\n];\nconst multipleOfClassifier = [\n  breaking,\n  nonBreaking,\n  ({ before, after }) => breakingIfNotMultiple(before.value, after.value),\n  nonBreaking,\n  breaking,\n  breaking\n];\nconst requiredItemClassifyRule = [\n  ({ after }) => !isString(after.value) || isExist(strictResolveValueFromContext(after, PARENT_JUMP, PARENT_JUMP, \"properties\", after.value, \"default\")) ? nonBreaking : breaking,\n  nonBreaking,\n  ({ after }) => !isString(after.value) || isExist(strictResolveValueFromContext(after, PARENT_JUMP, PARENT_JUMP, \"properties\", after.value, \"default\")) ? nonBreaking : breaking,\n  nonBreaking,\n  breaking,\n  breaking\n];\nconst propertyClassifyRule = [\n  ({ after }) => {\n    var _a;\n    return !isExist(getKeyValue(after.value, \"default\")) && ((_a = getArrayValue(strictResolveValueFromContext(after, PARENT_JUMP, PARENT_JUMP, \"required\"))) == null ? void 0 : _a.includes(after.key)) ? breaking : nonBreaking;\n  },\n  breaking,\n  unclassified,\n  nonBreaking,\n  ({ before }) => {\n    var _a;\n    return ((_a = getArrayValue(strictResolveValueFromContext(before, PARENT_JUMP, PARENT_JUMP, \"required\"))) == null ? void 0 : _a.includes(before.key)) ? breaking : nonBreaking;\n  },\n  unclassified\n];\nconst enumClassifyRule = [\n  ({ before }) => isNotEmptyArray(before.parent) ? nonBreaking : breaking,\n  ({ after }) => isNotEmptyArray(after.parent) ? breaking : nonBreaking,\n  breaking,\n  ({ before }) => isNotEmptyArray(before.parent) ? risky : nonBreaking,\n  ({ after }) => isNotEmptyArray(after.parent) ? nonBreaking : risky,\n  nonBreaking\n];\nconst breakingIfNotMultiple = (num1, num2) => breakingIf(!isNumber(num1) || !isNumber(num2) || num1 % num2 !== 0);\nconst unwrapAnyType = (value, combiner, ctx, nativeAnyFactory) => {\n  var _a, _b;\n  switch (combiner) {\n    case JSON_SCHEMA_PROPERTY_ANY_OF: {\n      return ctx.transformer(value, combiner, (value2) => {\n        return nativeAnyFactory(value2, ctx.valueOrigins, ctx.options);\n      });\n    }\n    case JSON_SCHEMA_PROPERTY_ONE_OF: {\n      (_b = (_a = ctx.options).onUnifyError) == null ? void 0 : _b.call(_a, \"Not Implemented case when anyOf compare with oneOf\", [\"todo\"], value);\n      return value;\n    }\n  }\n};\nconst unwrapNothingType = (value, combiner, ctx) => {\n  return ctx.transformer(value, combiner, (value2) => {\n    const { type, ...copyWithoutType } = value2;\n    copyWithoutType[combiner] = [];\n    copyOrigins(value2, copyWithoutType, JSON_SCHEMA_PROPERTY_TYPE, combiner, ctx.options.originsFlag);\n    cleanOrigins(copyWithoutType, JSON_SCHEMA_PROPERTY_TYPE, ctx.options.originsFlag);\n    return copyWithoutType;\n  });\n};\nconst wrapBySingletonCombiner = (value, combiner, ctx) => {\n  var _a, _b;\n  if (isArray(value)) {\n    (_b = (_a = ctx.options).onUnifyError) == null ? void 0 : _b.call(_a, \"Not Implemented case when anyOf compare with oneOf\", [\"todo\"], value);\n    return value;\n  }\n  return ctx.transformer(value, combiner, (value2) => {\n    const combinerValues = [value2];\n    const valueCopy = { [combiner]: combinerValues };\n    setOrigins(valueCopy, combiner, ctx.options.originsFlag, ctx.valueOrigins);\n    setOrigins(combinerValues, 0, ctx.options.originsFlag, ctx.valueOrigins);\n    return valueCopy;\n  });\n};\nconst jsonSchemaAdapter = (factory) => (value, reference, ctx) => {\n  if (!isObject(value) || !isObject(reference)) {\n    return value;\n  }\n  let newValue = value;\n  const valueContext = ctx;\n  for (const combiner of [JSON_SCHEMA_PROPERTY_ONE_OF, JSON_SCHEMA_PROPERTY_ANY_OF]) {\n    if (!(combiner in newValue) && combiner in reference) {\n      const type = newValue[JSON_SCHEMA_PROPERTY_TYPE];\n      switch (type) {\n        case JSON_SCHEMA_NODE_SYNTHETIC_TYPE_ANY: {\n          newValue = unwrapAnyType(newValue, combiner, valueContext, factory);\n          break;\n        }\n        case JSON_SCHEMA_NODE_SYNTHETIC_TYPE_NOTHING: {\n          newValue = unwrapNothingType(newValue, combiner, valueContext);\n          break;\n        }\n        default:\n          newValue = wrapBySingletonCombiner(newValue, combiner, valueContext);\n          break;\n      }\n    }\n  }\n  return newValue;\n};\nconst jsonSchemaMappingResolver = (before, after, ctx) => {\n  const { added, removed, mapped } = objectMappingResolver(before, after);\n  return { added, removed, mapped };\n};\nconst combinersCompareResolver = (ctx) => {\n  const { before, after, options, scope } = ctx;\n  const { metaKey } = options;\n  if (!before || !after) {\n    return { diffs: [], ownerDiffEntry: void 0, merged: void 0 };\n  }\n  if (!isArray(before.value) || !isArray(after.value)) {\n    const diffEntry = diffFactory.replaced(ctx);\n    return { diffs: [diffEntry.diff], ownerDiffEntry: diffEntry, merged: after.value };\n  }\n  const beforeArrayIndexes = onlyExistedArrayIndexes(before.value);\n  const afterArrayIndexes = onlyExistedArrayIndexes(after.value);\n  const beforeMatchedArrayIndexes = new Set(beforeArrayIndexes);\n  const afterMatchedArrayIndexes = new Set(afterArrayIndexes);\n  const comparedItems = [];\n  const mergedCombinerJsoArray = [];\n  const diffs = /* @__PURE__ */ new Set();\n  const rules = getNodeRules(ctx.rules, ANY_COMBINER_INDEX, ANY_COMBINER_PATH, before.value) || {};\n  for (const i of beforeArrayIndexes) {\n    const beforeCombinerJso = before.value[i];\n    for (const j of afterArrayIndexes) {\n      if (!afterMatchedArrayIndexes.has(j)) {\n        continue;\n      }\n      const afterCombinerJso = after.value[j];\n      const {\n        diffs: localDiffs,\n        merged\n      } = ctx.options.mergedJsoCache.cacheEvaluationResultByFootprint(\n        [beforeCombinerJso, afterCombinerJso, scope],\n        ([beforeCombinerJso2, afterCombinerJso2]) => nestedCompare(beforeCombinerJso2, afterCombinerJso2, {\n          ...options,\n          rules,\n          compareScope: ctx.scope\n        }),\n        { diffs: [], ownerDiffEntry: void 0, merged: {} },\n        (result, guard) => {\n          guard.diffs.push(...result.diffs);\n          if (isObject(guard.merged) && isObject(result.merged))\n            guard.merged = copyDescriptors(guard.merged, result.merged);\n          else\n            guard.merged = result.merged;\n          return guard;\n        }\n      );\n      if (!localDiffs.length) {\n        afterMatchedArrayIndexes.delete(j);\n        beforeMatchedArrayIndexes.delete(i);\n        mergedCombinerJsoArray[j] = merged;\n        break;\n      }\n      comparedItems.push({\n        before: i,\n        after: j,\n        diffs: localDiffs,\n        merged\n      });\n    }\n  }\n  comparedItems.sort((a, b) => {\n    const mainDiff = a.diffs.length - b.diffs.length;\n    return mainDiff !== 0 ? mainDiff : Math.abs(a.before - a.after) - Math.abs(b.before - b.after);\n  });\n  for (const compared of comparedItems) {\n    if (!afterMatchedArrayIndexes.has(compared.after) || !beforeMatchedArrayIndexes.has(compared.before)) {\n      continue;\n    }\n    afterMatchedArrayIndexes.delete(compared.after);\n    beforeMatchedArrayIndexes.delete(compared.before);\n    mergedCombinerJsoArray[compared.after] = compared.merged;\n    compared.diffs.forEach((diff) => diffs.add(diff));\n  }\n  const arrayMetaDiffEntries = [];\n  for (const j of afterMatchedArrayIndexes.values()) {\n    mergedCombinerJsoArray[j] = after.value[j];\n    const childCtx = createChildContext(ctx, j, void 0, j);\n    const diffEntry = getOrCreateChildDiffAdd(options.diffUniquenessCache, childCtx);\n    arrayMetaDiffEntries.push(diffEntry);\n    diffs.add(diffEntry.diff);\n  }\n  const usedIndexesArray = onlyExistedArrayIndexes(mergedCombinerJsoArray);\n  const from = Math.min(0, Math.min(...usedIndexesArray));\n  const to = Math.max(...usedIndexesArray) + beforeArrayIndexes.length;\n  const usedIndexes = new Set(usedIndexesArray);\n  const freeIndexesArray = [];\n  for (let k = from; k <= to; k++) {\n    if (!usedIndexes.has(k)) {\n      freeIndexesArray.push(k);\n    }\n  }\n  for (const i of beforeMatchedArrayIndexes.values()) {\n    const safeInsertIndex = freeIndexesArray.shift();\n    mergedCombinerJsoArray[safeInsertIndex] = before.value[i];\n    const childCtx = createChildContext(ctx, safeInsertIndex, i, void 0);\n    const diffEntry = getOrCreateChildDiffRemove(options.diffUniquenessCache, childCtx);\n    arrayMetaDiffEntries.push(diffEntry);\n    diffs.add(diffEntry.diff);\n  }\n  addDiffObjectToContainer(mergedCombinerJsoArray, metaKey, arrayMetaDiffEntries);\n  return {\n    diffs: [...diffs],\n    ownerDiffEntry: void 0,\n    //actually we don't make deep copy here and create \"way to modify\" original source. But fix not so trivial and performance expansive\n    merged: diffs.size === 0 ? after.value : mergedCombinerJsoArray\n  };\n};\nconst simpleRule$1 = (classify, descriptionTemplate) => ({\n  $: classify,\n  description: diffDescription(descriptionTemplate)\n});\nconst arrayItemsRules = (value, rules) => {\n  return Array.isArray(value) ? {\n    \"/*\": {\n      ...rules,\n      $: allBreaking\n    }\n  } : {\n    ...rules,\n    $: allNonBreaking\n  };\n};\nconst jsonSchemaAnyFactory = (schema, _, opt) => {\n  return normalize(schema, {\n    ...opt,\n    // schema is already normalized, resolveRef is disabled and originsAlreadyDefined is true in order to prevent origins override\n    resolveRef: false,\n    originsAlreadyDefined: true,\n    validate: false,\n    allowNotValidSyntheticChanges: false\n  });\n};\nconst jsonSchemaRules = ({\n  additionalRules,\n  version\n}) => {\n  const rules = {\n    adapter: [\n      jsonSchemaAdapter(jsonSchemaAnyFactory)\n    ],\n    mapping: jsonSchemaMappingResolver,\n    // todo: add descriptionParamCalculator only for jsonScheme\n    \"/title\": simpleRule$1(allAnnotation, resolveSchemaDescriptionTemplates(\"title\")),\n    \"/description\": simpleRule$1(allAnnotation, resolveSchemaDescriptionTemplates(\"description\")),\n    \"/type\": simpleRule$1(typeClassifier, resolveSchemaDescriptionTemplates(\"type\")),\n    \"/multipleOf\": simpleRule$1(multipleOfClassifier, resolveSchemaDescriptionTemplates(\"multipleOf validator\")),\n    \"/maximum\": simpleRule$1(maximumClassifier, resolveSchemaDescriptionTemplates(\"maximum validator\")),\n    \"/minimum\": simpleRule$1(minimumClassifier, resolveSchemaDescriptionTemplates(\"minimum validator\")),\n    ...version === SPEC_TYPE_JSON_SCHEMA_04 ? {\n      \"/exclusiveMaximum\": simpleRule$1(exclusiveClassifier, resolveSchemaDescriptionTemplates(\"exclusiveMaximum validator\")),\n      \"/exclusiveMinimum\": simpleRule$1(exclusiveClassifier, resolveSchemaDescriptionTemplates(\"exclusiveMinimum validator\"))\n    } : {\n      \"/exclusiveMaximum\": simpleRule$1(maxClassifier, resolveSchemaDescriptionTemplates(\"exclusiveMaximum validator\")),\n      \"/exclusiveMinimum\": simpleRule$1(minClassifier, resolveSchemaDescriptionTemplates(\"exclusiveMinimum validator\"))\n    },\n    \"/maxLength\": simpleRule$1(maxClassifier, resolveSchemaDescriptionTemplates(\"maxLength validator\")),\n    \"/minLength\": simpleRule$1(minClassifier, resolveSchemaDescriptionTemplates(\"minLength validator\")),\n    \"/pattern\": simpleRule$1([breaking, nonBreaking, breaking, nonBreaking, breaking, breaking], resolveSchemaDescriptionTemplates(\"pattern validator\")),\n    \"/maxItems\": simpleRule$1(maxClassifier, resolveSchemaDescriptionTemplates(\"maxItems validator\")),\n    \"/minItems\": simpleRule$1(minClassifier, resolveSchemaDescriptionTemplates(\"minItems validator\")),\n    \"/uniqueItems\": simpleRule$1(booleanClassifier, resolveSchemaDescriptionTemplates(\"uniqueItems validator\")),\n    \"/maxProperties\": simpleRule$1(maxClassifier, resolveSchemaDescriptionTemplates(\"maxProperties validator\")),\n    \"/minProperties\": simpleRule$1(minClassifier, resolveSchemaDescriptionTemplates(\"minProperties validator\")),\n    \"/readOnly\": simpleRule$1([...booleanClassifier, ...allNonBreaking], resolveSchemaDescriptionTemplates(\"readOnly status\")),\n    \"/writeOnly\": simpleRule$1([...allNonBreaking, ...allNonBreaking], resolveSchemaDescriptionTemplates(\"writeOnly status\")),\n    \"/deprecated\": simpleRule$1(allDeprecated, resolveSchemaDescriptionTemplates(\"deprecated status\")),\n    \"/required\": {\n      mapping: deepEqualsUniqueItemsArrayMappingResolver,\n      \"/*\": ({ key, value }) => {\n        if (!isNumber(key) || !isString(value)) {\n          return void 0;\n        }\n        return {\n          ...simpleRule$1(requiredItemClassifyRule, resolveSchemaDescriptionTemplates(`required status for property '${value}'`)),\n          ignoreKeyDifference: true\n        };\n      }\n    },\n    \"/format\": simpleRule$1([breaking, nonBreaking, breaking, nonBreaking, breaking, breaking], resolveSchemaDescriptionTemplates(\"format\")),\n    \"/default\": simpleRule$1([nonBreaking, breaking, breaking], resolveSchemaDescriptionTemplates(\"default value\")),\n    \"/enum\": {\n      $: [breaking, nonBreaking, breaking, nonBreaking, risky, nonBreaking],\n      mapping: deepEqualsUniqueItemsArrayMappingResolver,\n      \"/*\": ({ key, value }) => {\n        if (!isNumber(key)) {\n          return void 0;\n        }\n        return {\n          $: enumClassifyRule,\n          description: diffDescription(resolveSchemaDescriptionTemplates(isString(value) || isBoolean(value) || isNumber(value) ? `possible value '${value.toString()}'` : \"some possible value\")),\n          ignoreKeyDifference: true\n        };\n      }\n    },\n    \"/oneOf\": {\n      compare: combinersCompareResolver,\n      \"/*\": ({ key }) => {\n        if (!isNumber(key)) {\n          return void 0;\n        }\n        return {\n          ...rules,\n          $: [nonBreaking, breaking, breaking],\n          description: diffDescription(resolveSchemaDescriptionTemplates(`oneOf[${key.toString()}]`))\n        };\n      }\n    },\n    \"/anyOf\": {\n      compare: combinersCompareResolver,\n      \"/*\": ({ key }) => {\n        if (!isNumber(key)) {\n          return void 0;\n        }\n        return {\n          ...rules,\n          $: [nonBreaking, breaking, breaking],\n          description: diffDescription(resolveSchemaDescriptionTemplates(`anyOf[${key.toString()}]`))\n        };\n      }\n    },\n    \"/allOf\": {\n      //TODO CHECK. This node wil be only if allOf broken!!! do we need merge it?\n      compare: combinersCompareResolver,\n      \"/*\": () => ({\n        ...rules,\n        $: allBreaking\n      })\n    },\n    \"/const\": simpleRule$1([breaking, nonBreaking, breaking], resolveSchemaDescriptionTemplates(\"const\")),\n    \"/not\": () => ({\n      // TODO check\n      ...transformCompareRules(rules, reverseClassifyRuleTransformer),\n      $: allBreaking\n    }),\n    \"/items\": ({ value }) => arrayItemsRules(value, rules),\n    \"/additionalItems\": () => ({\n      ...rules,\n      $: [nonBreaking, breaking, unclassified]\n    }),\n    \"/properties\": {\n      \"/*\": ({ key }) => {\n        if (!isString(key)) {\n          return void 0;\n        }\n        return {\n          ...rules,\n          $: propertyClassifyRule,\n          description: diffDescription(resolveSchemaDescriptionTemplates(`property '${key.toString()}'`))\n        };\n      }\n    },\n    \"/additionalProperties\": () => ({\n      ...rules,\n      $: additionalPropertiesClassifier\n    }),\n    \"/patternProperties\": {\n      \"/*\": () => ({\n        ...rules,\n        $: [breaking, nonBreaking, unclassified]\n      })\n    },\n    \"/propertyNames\": () => ({ ...rules, $: onlyAddBreaking }),\n    // TODO \"/dependencies\": {},\n    \"/definitions\": {\n      \"/*\": () => ({\n        ...rules,\n        $: allNonBreaking\n      })\n    },\n    \"/$defs\": {\n      \"/*\": () => ({\n        ...rules,\n        $: allNonBreaking\n      })\n    },\n    //TODO NOT BY SPECIFICATION. ONLY IN 06 VERSION. NC SPECIFIC EXCLUSION\n    \"/examples\": {\n      $: allAnnotation,\n      \"/*\": { $: allAnnotation }\n    },\n    // unknown tags\n    \"/**\": {\n      $: allUnclassified\n    },\n    ...additionalRules\n  };\n  return rules;\n};\nconst additionalPropertiesClassifier = [\n  breaking,\n  breaking,\n  (ctx) => breakingIf(!!ctx.before.value),\n  breaking,\n  breaking,\n  (ctx) => breakingIf(!!ctx.after.value)\n];\nconst resolveSchemaDescriptionTemplates = (details = `{{${TEMPLATE_PARAM_PROPERTY_NAME}}}`) => [\n  `[{{${TEMPLATE_PARAM_ACTION}}}] schema {{${TEMPLATE_PARAM_PLACE}}}`,\n  `[{{${TEMPLATE_PARAM_ACTION}}}] schema in {{${TEMPLATE_PARAM_SCOPE}}}`,\n  `[{{${TEMPLATE_PARAM_ACTION}}}] ${details} {{${TEMPLATE_PARAM_PREPOSITION}}} schema in {{${TEMPLATE_PARAM_SCOPE}}}`,\n  `[{{${TEMPLATE_PARAM_ACTION}}}] ${details} {{${TEMPLATE_PARAM_PREPOSITION}}} schema {{${TEMPLATE_PARAM_PLACE}}}`,\n  `[{{${TEMPLATE_PARAM_ACTION}}}] ${details} {{${TEMPLATE_PARAM_PREPOSITION}}} '{{${TEMPLATE_PARAM_SCHEMA_PATH}}}' in {{${TEMPLATE_PARAM_SCOPE}}}`,\n  `[{{${TEMPLATE_PARAM_ACTION}}}] ${details} {{${TEMPLATE_PARAM_PREPOSITION}}} '{{${TEMPLATE_PARAM_SCHEMA_PATH}}}' {{${TEMPLATE_PARAM_PLACE}}}`\n];\nconst compareJsonSchema = (version) => (before, after, options) => {\n  return compare(before, after, {\n    ...options,\n    rules: jsonSchemaRules({ version, additionalRules: {} }),\n    compareScope: COMPARE_SCOPE_ROOT,\n    mergedJsoCache: createEvaluationCacheService(),\n    diffUniquenessCache: createEvaluationCacheService(),\n    createdMergedJso: /* @__PURE__ */ new Set()\n  });\n};\nvar DirectiveLocation$1;\n(function(DirectiveLocation2) {\n  DirectiveLocation2[\"QUERY\"] = \"QUERY\";\n  DirectiveLocation2[\"MUTATION\"] = \"MUTATION\";\n  DirectiveLocation2[\"SUBSCRIPTION\"] = \"SUBSCRIPTION\";\n  DirectiveLocation2[\"FIELD\"] = \"FIELD\";\n  DirectiveLocation2[\"FRAGMENT_DEFINITION\"] = \"FRAGMENT_DEFINITION\";\n  DirectiveLocation2[\"FRAGMENT_SPREAD\"] = \"FRAGMENT_SPREAD\";\n  DirectiveLocation2[\"INLINE_FRAGMENT\"] = \"INLINE_FRAGMENT\";\n  DirectiveLocation2[\"VARIABLE_DEFINITION\"] = \"VARIABLE_DEFINITION\";\n  DirectiveLocation2[\"SCHEMA\"] = \"SCHEMA\";\n  DirectiveLocation2[\"SCALAR\"] = \"SCALAR\";\n  DirectiveLocation2[\"OBJECT\"] = \"OBJECT\";\n  DirectiveLocation2[\"FIELD_DEFINITION\"] = \"FIELD_DEFINITION\";\n  DirectiveLocation2[\"ARGUMENT_DEFINITION\"] = \"ARGUMENT_DEFINITION\";\n  DirectiveLocation2[\"INTERFACE\"] = \"INTERFACE\";\n  DirectiveLocation2[\"UNION\"] = \"UNION\";\n  DirectiveLocation2[\"ENUM\"] = \"ENUM\";\n  DirectiveLocation2[\"ENUM_VALUE\"] = \"ENUM_VALUE\";\n  DirectiveLocation2[\"INPUT_OBJECT\"] = \"INPUT_OBJECT\";\n  DirectiveLocation2[\"INPUT_FIELD_DEFINITION\"] = \"INPUT_FIELD_DEFINITION\";\n})(DirectiveLocation$1 || (DirectiveLocation$1 = {}));\nconst COMPARE_SCOPE_OUTPUT = \"output\";\nconst COMPARE_SCOPE_ARGS = \"args\";\nconst COMPARE_SCOPE_COMPONENTS$1 = \"components\";\nconst COMPARE_SCOPE_DIRECTIVE_USAGES = \"directive-usages\";\nconst RUNTIME_DIRECTIVE_LOCATIONS = /* @__PURE__ */ new Set([\n  DirectiveLocation$1.QUERY,\n  DirectiveLocation$1.MUTATION,\n  DirectiveLocation$1.SUBSCRIPTION,\n  DirectiveLocation$1.FIELD,\n  DirectiveLocation$1.FRAGMENT_DEFINITION,\n  DirectiveLocation$1.FRAGMENT_SPREAD,\n  DirectiveLocation$1.INLINE_FRAGMENT,\n  DirectiveLocation$1.VARIABLE_DEFINITION\n]);\nfunction devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\nfunction isObjectLike(value) {\n  return typeof value == \"object\" && value !== null;\n}\nfunction invariant(condition, message) {\n  const booleanCondition = Boolean(condition);\n  if (!booleanCondition) {\n    throw new Error(\n      \"Unexpected invariant triggered.\"\n    );\n  }\n}\nconst LineRegExp = /\\r\\n|[\\n\\r]/g;\nfunction getLocation(source, position) {\n  let lastLineStart = 0;\n  let line = 1;\n  for (const match of source.body.matchAll(LineRegExp)) {\n    typeof match.index === \"number\" || invariant(false);\n    if (match.index >= position) {\n      break;\n    }\n    lastLineStart = match.index + match[0].length;\n    line += 1;\n  }\n  return {\n    line,\n    column: position + 1 - lastLineStart\n  };\n}\nfunction printLocation(location) {\n  return printSourceLocation(\n    location.source,\n    getLocation(location.source, location.start)\n  );\n}\nfunction printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = \"\".padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex];\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n    return locationStr + printPrefixedLines([\n      [`${lineNum} |`, subLines[0]],\n      ...subLines.slice(1, subLineIndex + 1).map((subLine) => [\"|\", subLine]),\n      [\"|\", \"^\".padStart(subLineColumnNum)],\n      [\"|\", subLines[subLineIndex + 1]]\n    ]);\n  }\n  return locationStr + printPrefixedLines([\n    // Lines specified like this: [\"prefix\", \"string\"],\n    [`${lineNum - 1} |`, lines[lineIndex - 1]],\n    [`${lineNum} |`, locationLine],\n    [\"|\", \"^\".padStart(columnNum)],\n    [`${lineNum + 1} |`, lines[lineIndex + 1]]\n  ]);\n}\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(([_, line]) => line !== void 0);\n  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));\n  return existingLines.map(([prefix, line]) => prefix.padStart(padLen) + (line ? \" \" + line : \"\")).join(\"\\n\");\n}\nfunction toNormalizedOptions(args) {\n  const firstArg = args[0];\n  if (firstArg == null || \"kind\" in firstArg || \"length\" in firstArg) {\n    return {\n      nodes: firstArg,\n      source: args[1],\n      positions: args[2],\n      path: args[3],\n      originalError: args[4],\n      extensions: args[5]\n    };\n  }\n  return firstArg;\n}\nclass GraphQLError extends Error {\n  /**\n   * An array of `{ line, column }` locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n  /**\n   * Extension fields to add to the formatted error.\n   */\n  /**\n   * @deprecated Please use the `GraphQLErrorOptions` constructor overload instead.\n   */\n  constructor(message, ...rawArgs) {\n    var _this$nodes, _nodeLocations$, _ref;\n    const { nodes, source, positions, path, originalError, extensions } = toNormalizedOptions(rawArgs);\n    super(message);\n    this.name = \"GraphQLError\";\n    this.path = path !== null && path !== void 0 ? path : void 0;\n    this.originalError = originalError !== null && originalError !== void 0 ? originalError : void 0;\n    this.nodes = undefinedIfEmpty(\n      Array.isArray(nodes) ? nodes : nodes ? [nodes] : void 0\n    );\n    const nodeLocations = undefinedIfEmpty(\n      (_this$nodes = this.nodes) === null || _this$nodes === void 0 ? void 0 : _this$nodes.map((node) => node.loc).filter((loc) => loc != null)\n    );\n    this.source = source !== null && source !== void 0 ? source : nodeLocations === null || nodeLocations === void 0 ? void 0 : (_nodeLocations$ = nodeLocations[0]) === null || _nodeLocations$ === void 0 ? void 0 : _nodeLocations$.source;\n    this.positions = positions !== null && positions !== void 0 ? positions : nodeLocations === null || nodeLocations === void 0 ? void 0 : nodeLocations.map((loc) => loc.start);\n    this.locations = positions && source ? positions.map((pos) => getLocation(source, pos)) : nodeLocations === null || nodeLocations === void 0 ? void 0 : nodeLocations.map((loc) => getLocation(loc.source, loc.start));\n    const originalExtensions = isObjectLike(\n      originalError === null || originalError === void 0 ? void 0 : originalError.extensions\n    ) ? originalError === null || originalError === void 0 ? void 0 : originalError.extensions : void 0;\n    this.extensions = (_ref = extensions !== null && extensions !== void 0 ? extensions : originalExtensions) !== null && _ref !== void 0 ? _ref : /* @__PURE__ */ Object.create(null);\n    Object.defineProperties(this, {\n      message: {\n        writable: true,\n        enumerable: true\n      },\n      name: {\n        enumerable: false\n      },\n      nodes: {\n        enumerable: false\n      },\n      source: {\n        enumerable: false\n      },\n      positions: {\n        enumerable: false\n      },\n      originalError: {\n        enumerable: false\n      }\n    });\n    if (originalError !== null && originalError !== void 0 && originalError.stack) {\n      Object.defineProperty(this, \"stack\", {\n        value: originalError.stack,\n        writable: true,\n        configurable: true\n      });\n    } else if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, GraphQLError);\n    } else {\n      Object.defineProperty(this, \"stack\", {\n        value: Error().stack,\n        writable: true,\n        configurable: true\n      });\n    }\n  }\n  get [Symbol.toStringTag]() {\n    return \"GraphQLError\";\n  }\n  toString() {\n    let output = this.message;\n    if (this.nodes) {\n      for (const node of this.nodes) {\n        if (node.loc) {\n          output += \"\\n\\n\" + printLocation(node.loc);\n        }\n      }\n    } else if (this.source && this.locations) {\n      for (const location of this.locations) {\n        output += \"\\n\\n\" + printSourceLocation(this.source, location);\n      }\n    }\n    return output;\n  }\n  toJSON() {\n    const formattedError = {\n      message: this.message\n    };\n    if (this.locations != null) {\n      formattedError.locations = this.locations;\n    }\n    if (this.path != null) {\n      formattedError.path = this.path;\n    }\n    if (this.extensions != null && Object.keys(this.extensions).length > 0) {\n      formattedError.extensions = this.extensions;\n    }\n    return formattedError;\n  }\n}\nfunction undefinedIfEmpty(array) {\n  return array === void 0 || array.length === 0 ? void 0 : array;\n}\nconst QueryDocumentKeys = {\n  Name: [],\n  Document: [\"definitions\"],\n  OperationDefinition: [\n    \"name\",\n    \"variableDefinitions\",\n    \"directives\",\n    \"selectionSet\"\n  ],\n  VariableDefinition: [\"variable\", \"type\", \"defaultValue\", \"directives\"],\n  Variable: [\"name\"],\n  SelectionSet: [\"selections\"],\n  Field: [\"alias\", \"name\", \"arguments\", \"directives\", \"selectionSet\"],\n  Argument: [\"name\", \"value\"],\n  FragmentSpread: [\"name\", \"directives\"],\n  InlineFragment: [\"typeCondition\", \"directives\", \"selectionSet\"],\n  FragmentDefinition: [\n    \"name\",\n    // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    \"variableDefinitions\",\n    \"typeCondition\",\n    \"directives\",\n    \"selectionSet\"\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: [\"values\"],\n  ObjectValue: [\"fields\"],\n  ObjectField: [\"name\", \"value\"],\n  Directive: [\"name\", \"arguments\"],\n  NamedType: [\"name\"],\n  ListType: [\"type\"],\n  NonNullType: [\"type\"],\n  SchemaDefinition: [\"description\", \"directives\", \"operationTypes\"],\n  OperationTypeDefinition: [\"type\"],\n  ScalarTypeDefinition: [\"description\", \"name\", \"directives\"],\n  ObjectTypeDefinition: [\n    \"description\",\n    \"name\",\n    \"interfaces\",\n    \"directives\",\n    \"fields\"\n  ],\n  FieldDefinition: [\"description\", \"name\", \"arguments\", \"type\", \"directives\"],\n  InputValueDefinition: [\n    \"description\",\n    \"name\",\n    \"type\",\n    \"defaultValue\",\n    \"directives\"\n  ],\n  InterfaceTypeDefinition: [\n    \"description\",\n    \"name\",\n    \"interfaces\",\n    \"directives\",\n    \"fields\"\n  ],\n  UnionTypeDefinition: [\"description\", \"name\", \"directives\", \"types\"],\n  EnumTypeDefinition: [\"description\", \"name\", \"directives\", \"values\"],\n  EnumValueDefinition: [\"description\", \"name\", \"directives\"],\n  InputObjectTypeDefinition: [\"description\", \"name\", \"directives\", \"fields\"],\n  DirectiveDefinition: [\"description\", \"name\", \"arguments\", \"locations\"],\n  SchemaExtension: [\"directives\", \"operationTypes\"],\n  ScalarTypeExtension: [\"name\", \"directives\"],\n  ObjectTypeExtension: [\"name\", \"interfaces\", \"directives\", \"fields\"],\n  InterfaceTypeExtension: [\"name\", \"interfaces\", \"directives\", \"fields\"],\n  UnionTypeExtension: [\"name\", \"directives\", \"types\"],\n  EnumTypeExtension: [\"name\", \"directives\", \"values\"],\n  InputObjectTypeExtension: [\"name\", \"directives\", \"fields\"]\n};\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\nfunction isNode(maybeNode) {\n  const maybeKind = maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === \"string\" && kindValues.has(maybeKind);\n}\nvar OperationTypeNode;\n(function(OperationTypeNode2) {\n  OperationTypeNode2[\"QUERY\"] = \"query\";\n  OperationTypeNode2[\"MUTATION\"] = \"mutation\";\n  OperationTypeNode2[\"SUBSCRIPTION\"] = \"subscription\";\n})(OperationTypeNode || (OperationTypeNode = {}));\nvar DirectiveLocation;\n(function(DirectiveLocation2) {\n  DirectiveLocation2[\"QUERY\"] = \"QUERY\";\n  DirectiveLocation2[\"MUTATION\"] = \"MUTATION\";\n  DirectiveLocation2[\"SUBSCRIPTION\"] = \"SUBSCRIPTION\";\n  DirectiveLocation2[\"FIELD\"] = \"FIELD\";\n  DirectiveLocation2[\"FRAGMENT_DEFINITION\"] = \"FRAGMENT_DEFINITION\";\n  DirectiveLocation2[\"FRAGMENT_SPREAD\"] = \"FRAGMENT_SPREAD\";\n  DirectiveLocation2[\"INLINE_FRAGMENT\"] = \"INLINE_FRAGMENT\";\n  DirectiveLocation2[\"VARIABLE_DEFINITION\"] = \"VARIABLE_DEFINITION\";\n  DirectiveLocation2[\"SCHEMA\"] = \"SCHEMA\";\n  DirectiveLocation2[\"SCALAR\"] = \"SCALAR\";\n  DirectiveLocation2[\"OBJECT\"] = \"OBJECT\";\n  DirectiveLocation2[\"FIELD_DEFINITION\"] = \"FIELD_DEFINITION\";\n  DirectiveLocation2[\"ARGUMENT_DEFINITION\"] = \"ARGUMENT_DEFINITION\";\n  DirectiveLocation2[\"INTERFACE\"] = \"INTERFACE\";\n  DirectiveLocation2[\"UNION\"] = \"UNION\";\n  DirectiveLocation2[\"ENUM\"] = \"ENUM\";\n  DirectiveLocation2[\"ENUM_VALUE\"] = \"ENUM_VALUE\";\n  DirectiveLocation2[\"INPUT_OBJECT\"] = \"INPUT_OBJECT\";\n  DirectiveLocation2[\"INPUT_FIELD_DEFINITION\"] = \"INPUT_FIELD_DEFINITION\";\n})(DirectiveLocation || (DirectiveLocation = {}));\nvar Kind;\n(function(Kind2) {\n  Kind2[\"NAME\"] = \"Name\";\n  Kind2[\"DOCUMENT\"] = \"Document\";\n  Kind2[\"OPERATION_DEFINITION\"] = \"OperationDefinition\";\n  Kind2[\"VARIABLE_DEFINITION\"] = \"VariableDefinition\";\n  Kind2[\"SELECTION_SET\"] = \"SelectionSet\";\n  Kind2[\"FIELD\"] = \"Field\";\n  Kind2[\"ARGUMENT\"] = \"Argument\";\n  Kind2[\"FRAGMENT_SPREAD\"] = \"FragmentSpread\";\n  Kind2[\"INLINE_FRAGMENT\"] = \"InlineFragment\";\n  Kind2[\"FRAGMENT_DEFINITION\"] = \"FragmentDefinition\";\n  Kind2[\"VARIABLE\"] = \"Variable\";\n  Kind2[\"INT\"] = \"IntValue\";\n  Kind2[\"FLOAT\"] = \"FloatValue\";\n  Kind2[\"STRING\"] = \"StringValue\";\n  Kind2[\"BOOLEAN\"] = \"BooleanValue\";\n  Kind2[\"NULL\"] = \"NullValue\";\n  Kind2[\"ENUM\"] = \"EnumValue\";\n  Kind2[\"LIST\"] = \"ListValue\";\n  Kind2[\"OBJECT\"] = \"ObjectValue\";\n  Kind2[\"OBJECT_FIELD\"] = \"ObjectField\";\n  Kind2[\"DIRECTIVE\"] = \"Directive\";\n  Kind2[\"NAMED_TYPE\"] = \"NamedType\";\n  Kind2[\"LIST_TYPE\"] = \"ListType\";\n  Kind2[\"NON_NULL_TYPE\"] = \"NonNullType\";\n  Kind2[\"SCHEMA_DEFINITION\"] = \"SchemaDefinition\";\n  Kind2[\"OPERATION_TYPE_DEFINITION\"] = \"OperationTypeDefinition\";\n  Kind2[\"SCALAR_TYPE_DEFINITION\"] = \"ScalarTypeDefinition\";\n  Kind2[\"OBJECT_TYPE_DEFINITION\"] = \"ObjectTypeDefinition\";\n  Kind2[\"FIELD_DEFINITION\"] = \"FieldDefinition\";\n  Kind2[\"INPUT_VALUE_DEFINITION\"] = \"InputValueDefinition\";\n  Kind2[\"INTERFACE_TYPE_DEFINITION\"] = \"InterfaceTypeDefinition\";\n  Kind2[\"UNION_TYPE_DEFINITION\"] = \"UnionTypeDefinition\";\n  Kind2[\"ENUM_TYPE_DEFINITION\"] = \"EnumTypeDefinition\";\n  Kind2[\"ENUM_VALUE_DEFINITION\"] = \"EnumValueDefinition\";\n  Kind2[\"INPUT_OBJECT_TYPE_DEFINITION\"] = \"InputObjectTypeDefinition\";\n  Kind2[\"DIRECTIVE_DEFINITION\"] = \"DirectiveDefinition\";\n  Kind2[\"SCHEMA_EXTENSION\"] = \"SchemaExtension\";\n  Kind2[\"SCALAR_TYPE_EXTENSION\"] = \"ScalarTypeExtension\";\n  Kind2[\"OBJECT_TYPE_EXTENSION\"] = \"ObjectTypeExtension\";\n  Kind2[\"INTERFACE_TYPE_EXTENSION\"] = \"InterfaceTypeExtension\";\n  Kind2[\"UNION_TYPE_EXTENSION\"] = \"UnionTypeExtension\";\n  Kind2[\"ENUM_TYPE_EXTENSION\"] = \"EnumTypeExtension\";\n  Kind2[\"INPUT_OBJECT_TYPE_EXTENSION\"] = \"InputObjectTypeExtension\";\n})(Kind || (Kind = {}));\nfunction isWhiteSpace(code) {\n  return code === 9 || code === 32;\n}\nfunction isDigit$1(code) {\n  return code >= 48 && code <= 57;\n}\nfunction isLetter(code) {\n  return code >= 97 && code <= 122 || // A-Z\n  code >= 65 && code <= 90;\n}\nfunction isNameStart(code) {\n  return isLetter(code) || code === 95;\n}\nfunction isNameContinue(code) {\n  return isLetter(code) || isDigit$1(code) || code === 95;\n}\nfunction printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"');\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1;\n  const forceLeadingNewLine = lines.length > 1 && lines.slice(1).every((line) => line.length === 0 || isWhiteSpace(line.charCodeAt(0)));\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"');\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith(\"\\\\\");\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines = (\n    // add leading and trailing new lines only if it improves readability\n    !isSingleLine || value.length > 70 || forceTrailingNewline || forceLeadingNewLine || hasTrailingTripleQuotes\n  );\n  let result = \"\";\n  const skipLeadingNewLine = isSingleLine && isWhiteSpace(value.charCodeAt(0));\n  if (printAsMultipleLines && !skipLeadingNewLine || forceLeadingNewLine) {\n    result += \"\\n\";\n  }\n  result += escapedValue;\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += \"\\n\";\n  }\n  return '\"\"\"' + result + '\"\"\"';\n}\nconst MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\nfunction inspect(value) {\n  return formatValue(value, []);\n}\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case \"string\":\n      return JSON.stringify(value);\n    case \"function\":\n      return value.name ? `[function ${value.name}]` : \"[function]\";\n    case \"object\":\n      return formatObjectValue(value, seenValues);\n    default:\n      return String(value);\n  }\n}\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return \"null\";\n  }\n  if (previouslySeenValues.includes(value)) {\n    return \"[Circular]\";\n  }\n  const seenValues = [...previouslySeenValues, value];\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON();\n    if (jsonValue !== value) {\n      return typeof jsonValue === \"string\" ? jsonValue : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n  return formatObject(value, seenValues);\n}\nfunction isJSONable(value) {\n  return typeof value.toJSON === \"function\";\n}\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n  if (entries.length === 0) {\n    return \"{}\";\n  }\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return \"[\" + getObjectTag(object) + \"]\";\n  }\n  const properties = entries.map(\n    ([key, value]) => key + \": \" + formatValue(value, seenValues)\n  );\n  return \"{ \" + properties.join(\", \") + \" }\";\n}\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return \"[]\";\n  }\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return \"[Array]\";\n  }\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n  if (remaining === 1) {\n    items.push(\"... 1 more item\");\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n  return \"[\" + items.join(\", \") + \"]\";\n}\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString.call(object).replace(/^\\[object /, \"\").replace(/]$/, \"\");\n  if (tag === \"Object\" && typeof object.constructor === \"function\") {\n    const name = object.constructor.name;\n    if (typeof name === \"string\" && name !== \"\") {\n      return name;\n    }\n  }\n  return tag;\n}\nconst isProduction = globalThis.process && // eslint-disable-next-line no-undef\nprocess.env.NODE_ENV === \"production\";\nconst instanceOf = (\n  /* c8 ignore next 6 */\n  // FIXME: https://github.com/graphql/graphql-js/issues/2317\n  isProduction ? function instanceOf2(value, constructor) {\n    return value instanceof constructor;\n  } : function instanceOf3(value, constructor) {\n    if (value instanceof constructor) {\n      return true;\n    }\n    if (typeof value === \"object\" && value !== null) {\n      var _value$constructor;\n      const className = constructor.prototype[Symbol.toStringTag];\n      const valueClassName = (\n        // We still need to support constructor's name to detect conflicts with older versions of this library.\n        Symbol.toStringTag in value ? value[Symbol.toStringTag] : (_value$constructor = value.constructor) === null || _value$constructor === void 0 ? void 0 : _value$constructor.name\n      );\n      if (className === valueClassName) {\n        const stringifiedValue = inspect(value);\n        throw new Error(`Cannot use ${className} \"${stringifiedValue}\" from another module or realm.\n\nEnsure that there is only one instance of \"graphql\" in the node_modules\ndirectory. If different versions of \"graphql\" are the dependencies of other\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate \"graphql\" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`);\n      }\n    }\n    return false;\n  }\n);\nconst MAX_SUGGESTIONS = 5;\nfunction didYouMean(firstArg, secondArg) {\n  const [subMessage, suggestionsArg] = secondArg ? [firstArg, secondArg] : [void 0, firstArg];\n  let message = \" Did you mean \";\n  if (subMessage) {\n    message += subMessage + \" \";\n  }\n  const suggestions = suggestionsArg.map((x) => `\"${x}\"`);\n  switch (suggestions.length) {\n    case 0:\n      return \"\";\n    case 1:\n      return message + suggestions[0] + \"?\";\n    case 2:\n      return message + suggestions[0] + \" or \" + suggestions[1] + \"?\";\n  }\n  const selected = suggestions.slice(0, MAX_SUGGESTIONS);\n  const lastItem = selected.pop();\n  return message + selected.join(\", \") + \", or \" + lastItem + \"?\";\n}\nfunction identityFunc(x) {\n  return x;\n}\nfunction keyMap(list, keyFn) {\n  const result = /* @__PURE__ */ Object.create(null);\n  for (const item of list) {\n    result[keyFn(item)] = item;\n  }\n  return result;\n}\nfunction keyValMap(list, keyFn, valFn) {\n  const result = /* @__PURE__ */ Object.create(null);\n  for (const item of list) {\n    result[keyFn(item)] = valFn(item);\n  }\n  return result;\n}\nfunction mapValue(map, fn) {\n  const result = /* @__PURE__ */ Object.create(null);\n  for (const key of Object.keys(map)) {\n    result[key] = fn(map[key], key);\n  }\n  return result;\n}\nfunction naturalCompare(aStr, bStr) {\n  let aIndex = 0;\n  let bIndex = 0;\n  while (aIndex < aStr.length && bIndex < bStr.length) {\n    let aChar = aStr.charCodeAt(aIndex);\n    let bChar = bStr.charCodeAt(bIndex);\n    if (isDigit(aChar) && isDigit(bChar)) {\n      let aNum = 0;\n      do {\n        ++aIndex;\n        aNum = aNum * 10 + aChar - DIGIT_0;\n        aChar = aStr.charCodeAt(aIndex);\n      } while (isDigit(aChar) && aNum > 0);\n      let bNum = 0;\n      do {\n        ++bIndex;\n        bNum = bNum * 10 + bChar - DIGIT_0;\n        bChar = bStr.charCodeAt(bIndex);\n      } while (isDigit(bChar) && bNum > 0);\n      if (aNum < bNum) {\n        return -1;\n      }\n      if (aNum > bNum) {\n        return 1;\n      }\n    } else {\n      if (aChar < bChar) {\n        return -1;\n      }\n      if (aChar > bChar) {\n        return 1;\n      }\n      ++aIndex;\n      ++bIndex;\n    }\n  }\n  return aStr.length - bStr.length;\n}\nconst DIGIT_0 = 48;\nconst DIGIT_9 = 57;\nfunction isDigit(code) {\n  return !isNaN(code) && DIGIT_0 <= code && code <= DIGIT_9;\n}\nfunction suggestionList(input, options) {\n  const optionsByDistance = /* @__PURE__ */ Object.create(null);\n  const lexicalDistance = new LexicalDistance(input);\n  const threshold = Math.floor(input.length * 0.4) + 1;\n  for (const option of options) {\n    const distance = lexicalDistance.measure(option, threshold);\n    if (distance !== void 0) {\n      optionsByDistance[option] = distance;\n    }\n  }\n  return Object.keys(optionsByDistance).sort((a, b) => {\n    const distanceDiff = optionsByDistance[a] - optionsByDistance[b];\n    return distanceDiff !== 0 ? distanceDiff : naturalCompare(a, b);\n  });\n}\nclass LexicalDistance {\n  constructor(input) {\n    this._input = input;\n    this._inputLowerCase = input.toLowerCase();\n    this._inputArray = stringToArray(this._inputLowerCase);\n    this._rows = [\n      new Array(input.length + 1).fill(0),\n      new Array(input.length + 1).fill(0),\n      new Array(input.length + 1).fill(0)\n    ];\n  }\n  measure(option, threshold) {\n    if (this._input === option) {\n      return 0;\n    }\n    const optionLowerCase = option.toLowerCase();\n    if (this._inputLowerCase === optionLowerCase) {\n      return 1;\n    }\n    let a = stringToArray(optionLowerCase);\n    let b = this._inputArray;\n    if (a.length < b.length) {\n      const tmp = a;\n      a = b;\n      b = tmp;\n    }\n    const aLength = a.length;\n    const bLength = b.length;\n    if (aLength - bLength > threshold) {\n      return void 0;\n    }\n    const rows = this._rows;\n    for (let j = 0; j <= bLength; j++) {\n      rows[0][j] = j;\n    }\n    for (let i = 1; i <= aLength; i++) {\n      const upRow = rows[(i - 1) % 3];\n      const currentRow = rows[i % 3];\n      let smallestCell = currentRow[0] = i;\n      for (let j = 1; j <= bLength; j++) {\n        const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n        let currentCell = Math.min(\n          upRow[j] + 1,\n          // delete\n          currentRow[j - 1] + 1,\n          // insert\n          upRow[j - 1] + cost\n          // substitute\n        );\n        if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n          const doubleDiagonalCell = rows[(i - 2) % 3][j - 2];\n          currentCell = Math.min(currentCell, doubleDiagonalCell + 1);\n        }\n        if (currentCell < smallestCell) {\n          smallestCell = currentCell;\n        }\n        currentRow[j] = currentCell;\n      }\n      if (smallestCell > threshold) {\n        return void 0;\n      }\n    }\n    const distance = rows[aLength % 3][bLength];\n    return distance <= threshold ? distance : void 0;\n  }\n}\nfunction stringToArray(str) {\n  const strLength = str.length;\n  const array = new Array(strLength);\n  for (let i = 0; i < strLength; ++i) {\n    array[i] = str.charCodeAt(i);\n  }\n  return array;\n}\nfunction toObjMap(obj) {\n  if (obj == null) {\n    return /* @__PURE__ */ Object.create(null);\n  }\n  if (Object.getPrototypeOf(obj) === null) {\n    return obj;\n  }\n  const map = /* @__PURE__ */ Object.create(null);\n  for (const [key, value] of Object.entries(obj)) {\n    map[key] = value;\n  }\n  return map;\n}\nfunction printString$1(str) {\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\n}\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\nfunction escapedReplacer(str) {\n  return escapeSequences[str.charCodeAt(0)];\n}\nconst escapeSequences = [\n  \"\\\\u0000\",\n  \"\\\\u0001\",\n  \"\\\\u0002\",\n  \"\\\\u0003\",\n  \"\\\\u0004\",\n  \"\\\\u0005\",\n  \"\\\\u0006\",\n  \"\\\\u0007\",\n  \"\\\\b\",\n  \"\\\\t\",\n  \"\\\\n\",\n  \"\\\\u000B\",\n  \"\\\\f\",\n  \"\\\\r\",\n  \"\\\\u000E\",\n  \"\\\\u000F\",\n  \"\\\\u0010\",\n  \"\\\\u0011\",\n  \"\\\\u0012\",\n  \"\\\\u0013\",\n  \"\\\\u0014\",\n  \"\\\\u0015\",\n  \"\\\\u0016\",\n  \"\\\\u0017\",\n  \"\\\\u0018\",\n  \"\\\\u0019\",\n  \"\\\\u001A\",\n  \"\\\\u001B\",\n  \"\\\\u001C\",\n  \"\\\\u001D\",\n  \"\\\\u001E\",\n  \"\\\\u001F\",\n  \"\",\n  \"\",\n  '\\\\\"',\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  // 2F\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  // 3F\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  // 4F\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\\\\\\\\\",\n  \"\",\n  \"\",\n  \"\",\n  // 5F\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  // 6F\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\",\n  \"\\\\u007F\",\n  \"\\\\u0080\",\n  \"\\\\u0081\",\n  \"\\\\u0082\",\n  \"\\\\u0083\",\n  \"\\\\u0084\",\n  \"\\\\u0085\",\n  \"\\\\u0086\",\n  \"\\\\u0087\",\n  \"\\\\u0088\",\n  \"\\\\u0089\",\n  \"\\\\u008A\",\n  \"\\\\u008B\",\n  \"\\\\u008C\",\n  \"\\\\u008D\",\n  \"\\\\u008E\",\n  \"\\\\u008F\",\n  \"\\\\u0090\",\n  \"\\\\u0091\",\n  \"\\\\u0092\",\n  \"\\\\u0093\",\n  \"\\\\u0094\",\n  \"\\\\u0095\",\n  \"\\\\u0096\",\n  \"\\\\u0097\",\n  \"\\\\u0098\",\n  \"\\\\u0099\",\n  \"\\\\u009A\",\n  \"\\\\u009B\",\n  \"\\\\u009C\",\n  \"\\\\u009D\",\n  \"\\\\u009E\",\n  \"\\\\u009F\"\n];\nconst BREAK = Object.freeze({});\nfunction visit(root, visitor, visitorKeys = QueryDocumentKeys) {\n  const enterLeaveMap = /* @__PURE__ */ new Map();\n  for (const kind of Object.values(Kind)) {\n    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));\n  }\n  let stack = void 0;\n  let inArray = Array.isArray(root);\n  let keys = [root];\n  let index = -1;\n  let edits = [];\n  let node = root;\n  let key = void 0;\n  let parent = void 0;\n  const path = [];\n  const ancestors = [];\n  do {\n    index++;\n    const isLeaving = index === keys.length;\n    const isEdited = isLeaving && edits.length !== 0;\n    if (isLeaving) {\n      key = ancestors.length === 0 ? void 0 : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n          let editOffset = 0;\n          for (const [editKey, editValue] of edits) {\n            const arrayKey = editKey - editOffset;\n            if (editValue === null) {\n              node.splice(arrayKey, 1);\n              editOffset++;\n            } else {\n              node[arrayKey] = editValue;\n            }\n          }\n        } else {\n          node = Object.defineProperties(\n            {},\n            Object.getOwnPropertyDescriptors(node)\n          );\n          for (const [editKey, editValue] of edits) {\n            node[editKey] = editValue;\n          }\n        }\n      }\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else if (parent) {\n      key = inArray ? index : keys[index];\n      node = parent[key];\n      if (node === null || node === void 0) {\n        continue;\n      }\n      path.push(key);\n    }\n    let result;\n    if (!Array.isArray(node)) {\n      var _enterLeaveMap$get, _enterLeaveMap$get2;\n      isNode(node) || devAssert(false, `Invalid AST Node: ${inspect(node)}.`);\n      const visitFn = isLeaving ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null || _enterLeaveMap$get === void 0 ? void 0 : _enterLeaveMap$get.leave : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null || _enterLeaveMap$get2 === void 0 ? void 0 : _enterLeaveMap$get2.enter;\n      result = visitFn === null || visitFn === void 0 ? void 0 : visitFn.call(visitor, node, key, parent, path, ancestors);\n      if (result === BREAK) {\n        break;\n      }\n      if (result === false) {\n        if (!isLeaving) {\n          path.pop();\n          continue;\n        }\n      } else if (result !== void 0) {\n        edits.push([key, result]);\n        if (!isLeaving) {\n          if (isNode(result)) {\n            node = result;\n          } else {\n            path.pop();\n            continue;\n          }\n        }\n      }\n    }\n    if (result === void 0 && isEdited) {\n      edits.push([key, node]);\n    }\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _node$kind;\n      stack = {\n        inArray,\n        index,\n        keys,\n        edits,\n        prev: stack\n      };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : (_node$kind = visitorKeys[node.kind]) !== null && _node$kind !== void 0 ? _node$kind : [];\n      index = -1;\n      edits = [];\n      if (parent) {\n        ancestors.push(parent);\n      }\n      parent = node;\n    }\n  } while (stack !== void 0);\n  if (edits.length !== 0) {\n    return edits[edits.length - 1][1];\n  }\n  return root;\n}\nfunction getEnterLeaveForKind(visitor, kind) {\n  const kindVisitor = visitor[kind];\n  if (typeof kindVisitor === \"object\") {\n    return kindVisitor;\n  } else if (typeof kindVisitor === \"function\") {\n    return {\n      enter: kindVisitor,\n      leave: void 0\n    };\n  }\n  return {\n    enter: visitor.enter,\n    leave: visitor.leave\n  };\n}\nfunction print(ast) {\n  return visit(ast, printDocASTReducer);\n}\nconst MAX_LINE_LENGTH = 80;\nconst printDocASTReducer = {\n  Name: {\n    leave: (node) => node.value\n  },\n  Variable: {\n    leave: (node) => \"$\" + node.name\n  },\n  // Document\n  Document: {\n    leave: (node) => join(node.definitions, \"\\n\\n\")\n  },\n  OperationDefinition: {\n    leave(node) {\n      const varDefs = wrap(\"(\", join(node.variableDefinitions, \", \"), \")\");\n      const prefix = join(\n        [\n          node.operation,\n          join([node.name, varDefs]),\n          join(node.directives, \" \")\n        ],\n        \" \"\n      );\n      return (prefix === \"query\" ? \"\" : prefix + \" \") + node.selectionSet;\n    }\n  },\n  VariableDefinition: {\n    leave: ({ variable, type, defaultValue, directives }) => variable + \": \" + type + wrap(\" = \", defaultValue) + wrap(\" \", join(directives, \" \"))\n  },\n  SelectionSet: {\n    leave: ({ selections }) => block(selections)\n  },\n  Field: {\n    leave({ alias, name, arguments: args, directives, selectionSet }) {\n      const prefix = wrap(\"\", alias, \": \") + name;\n      let argsLine = prefix + wrap(\"(\", join(args, \", \"), \")\");\n      if (argsLine.length > MAX_LINE_LENGTH) {\n        argsLine = prefix + wrap(\"(\\n\", indent(join(args, \"\\n\")), \"\\n)\");\n      }\n      return join([argsLine, join(directives, \" \"), selectionSet], \" \");\n    }\n  },\n  Argument: {\n    leave: ({ name, value }) => name + \": \" + value\n  },\n  // Fragments\n  FragmentSpread: {\n    leave: ({ name, directives }) => \"...\" + name + wrap(\" \", join(directives, \" \"))\n  },\n  InlineFragment: {\n    leave: ({ typeCondition, directives, selectionSet }) => join(\n      [\n        \"...\",\n        wrap(\"on \", typeCondition),\n        join(directives, \" \"),\n        selectionSet\n      ],\n      \" \"\n    )\n  },\n  FragmentDefinition: {\n    leave: ({ name, typeCondition, variableDefinitions, directives, selectionSet }) => (\n      // or removed in the future.\n      `fragment ${name}${wrap(\"(\", join(variableDefinitions, \", \"), \")\")} on ${typeCondition} ${wrap(\"\", join(directives, \" \"), \" \")}` + selectionSet\n    )\n  },\n  // Value\n  IntValue: {\n    leave: ({ value }) => value\n  },\n  FloatValue: {\n    leave: ({ value }) => value\n  },\n  StringValue: {\n    leave: ({ value, block: isBlockString }) => isBlockString ? printBlockString(value) : printString$1(value)\n  },\n  BooleanValue: {\n    leave: ({ value }) => value ? \"true\" : \"false\"\n  },\n  NullValue: {\n    leave: () => \"null\"\n  },\n  EnumValue: {\n    leave: ({ value }) => value\n  },\n  ListValue: {\n    leave: ({ values }) => \"[\" + join(values, \", \") + \"]\"\n  },\n  ObjectValue: {\n    leave: ({ fields }) => \"{\" + join(fields, \", \") + \"}\"\n  },\n  ObjectField: {\n    leave: ({ name, value }) => name + \": \" + value\n  },\n  // Directive\n  Directive: {\n    leave: ({ name, arguments: args }) => \"@\" + name + wrap(\"(\", join(args, \", \"), \")\")\n  },\n  // Type\n  NamedType: {\n    leave: ({ name }) => name\n  },\n  ListType: {\n    leave: ({ type }) => \"[\" + type + \"]\"\n  },\n  NonNullType: {\n    leave: ({ type }) => type + \"!\"\n  },\n  // Type System Definitions\n  SchemaDefinition: {\n    leave: ({ description, directives, operationTypes }) => wrap(\"\", description, \"\\n\") + join([\"schema\", join(directives, \" \"), block(operationTypes)], \" \")\n  },\n  OperationTypeDefinition: {\n    leave: ({ operation, type }) => operation + \": \" + type\n  },\n  ScalarTypeDefinition: {\n    leave: ({ description, name, directives }) => wrap(\"\", description, \"\\n\") + join([\"scalar\", name, join(directives, \" \")], \" \")\n  },\n  ObjectTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) => wrap(\"\", description, \"\\n\") + join(\n      [\n        \"type\",\n        name,\n        wrap(\"implements \", join(interfaces, \" & \")),\n        join(directives, \" \"),\n        block(fields)\n      ],\n      \" \"\n    )\n  },\n  FieldDefinition: {\n    leave: ({ description, name, arguments: args, type, directives }) => wrap(\"\", description, \"\\n\") + name + (hasMultilineItems(args) ? wrap(\"(\\n\", indent(join(args, \"\\n\")), \"\\n)\") : wrap(\"(\", join(args, \", \"), \")\")) + \": \" + type + wrap(\" \", join(directives, \" \"))\n  },\n  InputValueDefinition: {\n    leave: ({ description, name, type, defaultValue, directives }) => wrap(\"\", description, \"\\n\") + join(\n      [name + \": \" + type, wrap(\"= \", defaultValue), join(directives, \" \")],\n      \" \"\n    )\n  },\n  InterfaceTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) => wrap(\"\", description, \"\\n\") + join(\n      [\n        \"interface\",\n        name,\n        wrap(\"implements \", join(interfaces, \" & \")),\n        join(directives, \" \"),\n        block(fields)\n      ],\n      \" \"\n    )\n  },\n  UnionTypeDefinition: {\n    leave: ({ description, name, directives, types }) => wrap(\"\", description, \"\\n\") + join(\n      [\"union\", name, join(directives, \" \"), wrap(\"= \", join(types, \" | \"))],\n      \" \"\n    )\n  },\n  EnumTypeDefinition: {\n    leave: ({ description, name, directives, values }) => wrap(\"\", description, \"\\n\") + join([\"enum\", name, join(directives, \" \"), block(values)], \" \")\n  },\n  EnumValueDefinition: {\n    leave: ({ description, name, directives }) => wrap(\"\", description, \"\\n\") + join([name, join(directives, \" \")], \" \")\n  },\n  InputObjectTypeDefinition: {\n    leave: ({ description, name, directives, fields }) => wrap(\"\", description, \"\\n\") + join([\"input\", name, join(directives, \" \"), block(fields)], \" \")\n  },\n  DirectiveDefinition: {\n    leave: ({ description, name, arguments: args, repeatable, locations }) => wrap(\"\", description, \"\\n\") + \"directive @\" + name + (hasMultilineItems(args) ? wrap(\"(\\n\", indent(join(args, \"\\n\")), \"\\n)\") : wrap(\"(\", join(args, \", \"), \")\")) + (repeatable ? \" repeatable\" : \"\") + \" on \" + join(locations, \" | \")\n  },\n  SchemaExtension: {\n    leave: ({ directives, operationTypes }) => join(\n      [\"extend schema\", join(directives, \" \"), block(operationTypes)],\n      \" \"\n    )\n  },\n  ScalarTypeExtension: {\n    leave: ({ name, directives }) => join([\"extend scalar\", name, join(directives, \" \")], \" \")\n  },\n  ObjectTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) => join(\n      [\n        \"extend type\",\n        name,\n        wrap(\"implements \", join(interfaces, \" & \")),\n        join(directives, \" \"),\n        block(fields)\n      ],\n      \" \"\n    )\n  },\n  InterfaceTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) => join(\n      [\n        \"extend interface\",\n        name,\n        wrap(\"implements \", join(interfaces, \" & \")),\n        join(directives, \" \"),\n        block(fields)\n      ],\n      \" \"\n    )\n  },\n  UnionTypeExtension: {\n    leave: ({ name, directives, types }) => join(\n      [\n        \"extend union\",\n        name,\n        join(directives, \" \"),\n        wrap(\"= \", join(types, \" | \"))\n      ],\n      \" \"\n    )\n  },\n  EnumTypeExtension: {\n    leave: ({ name, directives, values }) => join([\"extend enum\", name, join(directives, \" \"), block(values)], \" \")\n  },\n  InputObjectTypeExtension: {\n    leave: ({ name, directives, fields }) => join([\"extend input\", name, join(directives, \" \"), block(fields)], \" \")\n  }\n};\nfunction join(maybeArray, separator = \"\") {\n  var _maybeArray$filter$jo;\n  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter((x) => x).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : \"\";\n}\nfunction block(array) {\n  return wrap(\"{\\n\", indent(join(array, \"\\n\")), \"\\n}\");\n}\nfunction wrap(start, maybeString, end = \"\") {\n  return maybeString != null && maybeString !== \"\" ? start + maybeString + end : \"\";\n}\nfunction indent(str) {\n  return wrap(\"  \", str.replace(/\\n/g, \"\\n  \"));\n}\nfunction hasMultilineItems(maybeArray) {\n  var _maybeArray$some;\n  return (_maybeArray$some = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.some((str) => str.includes(\"\\n\"))) !== null && _maybeArray$some !== void 0 ? _maybeArray$some : false;\n}\nfunction valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case Kind.NULL:\n      return null;\n    case Kind.INT:\n      return parseInt(valueNode.value, 10);\n    case Kind.FLOAT:\n      return parseFloat(valueNode.value);\n    case Kind.STRING:\n    case Kind.ENUM:\n    case Kind.BOOLEAN:\n      return valueNode.value;\n    case Kind.LIST:\n      return valueNode.values.map(\n        (node) => valueFromASTUntyped(node, variables)\n      );\n    case Kind.OBJECT:\n      return keyValMap(\n        valueNode.fields,\n        (field) => field.name.value,\n        (field) => valueFromASTUntyped(field.value, variables)\n      );\n    case Kind.VARIABLE:\n      return variables === null || variables === void 0 ? void 0 : variables[valueNode.name.value];\n  }\n}\nfunction assertName(name) {\n  name != null || devAssert(false, \"Must provide name.\");\n  typeof name === \"string\" || devAssert(false, \"Expected name to be a string.\");\n  if (name.length === 0) {\n    throw new GraphQLError(\"Expected name to be a non-empty string.\");\n  }\n  for (let i = 1; i < name.length; ++i) {\n    if (!isNameContinue(name.charCodeAt(i))) {\n      throw new GraphQLError(\n        `Names must only contain [_a-zA-Z0-9] but \"${name}\" does not.`\n      );\n    }\n  }\n  if (!isNameStart(name.charCodeAt(0))) {\n    throw new GraphQLError(\n      `Names must start with [_a-zA-Z] but \"${name}\" does not.`\n    );\n  }\n  return name;\n}\nfunction assertEnumValueName(name) {\n  if (name === \"true\" || name === \"false\" || name === \"null\") {\n    throw new GraphQLError(`Enum values cannot be named: ${name}`);\n  }\n  return assertName(name);\n}\nfunction isType(type) {\n  return isScalarType$1(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isInputObjectType(type) || isListType$1(type) || isNonNullType$1(type);\n}\nfunction isScalarType$1(type) {\n  return instanceOf(type, GraphQLScalarType);\n}\nfunction isObjectType(type) {\n  return instanceOf(type, GraphQLObjectType);\n}\nfunction isInterfaceType(type) {\n  return instanceOf(type, GraphQLInterfaceType);\n}\nfunction isUnionType(type) {\n  return instanceOf(type, GraphQLUnionType);\n}\nfunction isEnumType(type) {\n  return instanceOf(type, GraphQLEnumType);\n}\nfunction isInputObjectType(type) {\n  return instanceOf(type, GraphQLInputObjectType);\n}\nfunction isListType$1(type) {\n  return instanceOf(type, GraphQLList);\n}\nfunction isNonNullType$1(type) {\n  return instanceOf(type, GraphQLNonNull);\n}\nclass GraphQLList {\n  constructor(ofType) {\n    isType(ofType) || devAssert(false, `Expected ${inspect(ofType)} to be a GraphQL type.`);\n    this.ofType = ofType;\n  }\n  get [Symbol.toStringTag]() {\n    return \"GraphQLList\";\n  }\n  toString() {\n    return \"[\" + String(this.ofType) + \"]\";\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\nclass GraphQLNonNull {\n  constructor(ofType) {\n    isNullableType(ofType) || devAssert(\n      false,\n      `Expected ${inspect(ofType)} to be a GraphQL nullable type.`\n    );\n    this.ofType = ofType;\n  }\n  get [Symbol.toStringTag]() {\n    return \"GraphQLNonNull\";\n  }\n  toString() {\n    return String(this.ofType) + \"!\";\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\nfunction isNullableType(type) {\n  return isType(type) && !isNonNullType$1(type);\n}\nfunction resolveReadonlyArrayThunk(thunk) {\n  return typeof thunk === \"function\" ? thunk() : thunk;\n}\nfunction resolveObjMapThunk(thunk) {\n  return typeof thunk === \"function\" ? thunk() : thunk;\n}\nclass GraphQLScalarType {\n  constructor(config) {\n    var _config$parseValue, _config$serialize, _config$parseLiteral, _config$extensionASTN;\n    const parseValue = (_config$parseValue = config.parseValue) !== null && _config$parseValue !== void 0 ? _config$parseValue : identityFunc;\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.specifiedByURL = config.specifiedByURL;\n    this.serialize = (_config$serialize = config.serialize) !== null && _config$serialize !== void 0 ? _config$serialize : identityFunc;\n    this.parseValue = parseValue;\n    this.parseLiteral = (_config$parseLiteral = config.parseLiteral) !== null && _config$parseLiteral !== void 0 ? _config$parseLiteral : (node, variables) => parseValue(valueFromASTUntyped(node, variables));\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = (_config$extensionASTN = config.extensionASTNodes) !== null && _config$extensionASTN !== void 0 ? _config$extensionASTN : [];\n    config.specifiedByURL == null || typeof config.specifiedByURL === \"string\" || devAssert(\n      false,\n      `${this.name} must provide \"specifiedByURL\" as a string, but got: ${inspect(config.specifiedByURL)}.`\n    );\n    config.serialize == null || typeof config.serialize === \"function\" || devAssert(\n      false,\n      `${this.name} must provide \"serialize\" function. If this custom Scalar is also used as an input type, ensure \"parseValue\" and \"parseLiteral\" functions are also provided.`\n    );\n    if (config.parseLiteral) {\n      typeof config.parseValue === \"function\" && typeof config.parseLiteral === \"function\" || devAssert(\n        false,\n        `${this.name} must provide both \"parseValue\" and \"parseLiteral\" functions.`\n      );\n    }\n  }\n  get [Symbol.toStringTag]() {\n    return \"GraphQLScalarType\";\n  }\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      specifiedByURL: this.specifiedByURL,\n      serialize: this.serialize,\n      parseValue: this.parseValue,\n      parseLiteral: this.parseLiteral,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes\n    };\n  }\n  toString() {\n    return this.name;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\nclass GraphQLObjectType {\n  constructor(config) {\n    var _config$extensionASTN2;\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.isTypeOf = config.isTypeOf;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = (_config$extensionASTN2 = config.extensionASTNodes) !== null && _config$extensionASTN2 !== void 0 ? _config$extensionASTN2 : [];\n    this._fields = () => defineFieldMap(config);\n    this._interfaces = () => defineInterfaces(config);\n    config.isTypeOf == null || typeof config.isTypeOf === \"function\" || devAssert(\n      false,\n      `${this.name} must provide \"isTypeOf\" as a function, but got: ${inspect(config.isTypeOf)}.`\n    );\n  }\n  get [Symbol.toStringTag]() {\n    return \"GraphQLObjectType\";\n  }\n  getFields() {\n    if (typeof this._fields === \"function\") {\n      this._fields = this._fields();\n    }\n    return this._fields;\n  }\n  getInterfaces() {\n    if (typeof this._interfaces === \"function\") {\n      this._interfaces = this._interfaces();\n    }\n    return this._interfaces;\n  }\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      isTypeOf: this.isTypeOf,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes\n    };\n  }\n  toString() {\n    return this.name;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\nfunction defineInterfaces(config) {\n  var _config$interfaces;\n  const interfaces = resolveReadonlyArrayThunk(\n    (_config$interfaces = config.interfaces) !== null && _config$interfaces !== void 0 ? _config$interfaces : []\n  );\n  Array.isArray(interfaces) || devAssert(\n    false,\n    `${config.name} interfaces must be an Array or a function which returns an Array.`\n  );\n  return interfaces;\n}\nfunction defineFieldMap(config) {\n  const fieldMap = resolveObjMapThunk(config.fields);\n  isPlainObj(fieldMap) || devAssert(\n    false,\n    `${config.name} fields must be an object with field names as keys or a function which returns such an object.`\n  );\n  return mapValue(fieldMap, (fieldConfig, fieldName) => {\n    var _fieldConfig$args;\n    isPlainObj(fieldConfig) || devAssert(\n      false,\n      `${config.name}.${fieldName} field config must be an object.`\n    );\n    fieldConfig.resolve == null || typeof fieldConfig.resolve === \"function\" || devAssert(\n      false,\n      `${config.name}.${fieldName} field resolver must be a function if provided, but got: ${inspect(fieldConfig.resolve)}.`\n    );\n    const argsConfig = (_fieldConfig$args = fieldConfig.args) !== null && _fieldConfig$args !== void 0 ? _fieldConfig$args : {};\n    isPlainObj(argsConfig) || devAssert(\n      false,\n      `${config.name}.${fieldName} args must be an object with argument names as keys.`\n    );\n    return {\n      name: assertName(fieldName),\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      args: defineArguments(argsConfig),\n      resolve: fieldConfig.resolve,\n      subscribe: fieldConfig.subscribe,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode\n    };\n  });\n}\nfunction defineArguments(config) {\n  return Object.entries(config).map(([argName, argConfig]) => ({\n    name: assertName(argName),\n    description: argConfig.description,\n    type: argConfig.type,\n    defaultValue: argConfig.defaultValue,\n    deprecationReason: argConfig.deprecationReason,\n    extensions: toObjMap(argConfig.extensions),\n    astNode: argConfig.astNode\n  }));\n}\nfunction isPlainObj(obj) {\n  return isObjectLike(obj) && !Array.isArray(obj);\n}\nfunction fieldsToFieldsConfig(fields) {\n  return mapValue(fields, (field) => ({\n    description: field.description,\n    type: field.type,\n    args: argsToArgsConfig(field.args),\n    resolve: field.resolve,\n    subscribe: field.subscribe,\n    deprecationReason: field.deprecationReason,\n    extensions: field.extensions,\n    astNode: field.astNode\n  }));\n}\nfunction argsToArgsConfig(args) {\n  return keyValMap(\n    args,\n    (arg) => arg.name,\n    (arg) => ({\n      description: arg.description,\n      type: arg.type,\n      defaultValue: arg.defaultValue,\n      deprecationReason: arg.deprecationReason,\n      extensions: arg.extensions,\n      astNode: arg.astNode\n    })\n  );\n}\nclass GraphQLInterfaceType {\n  constructor(config) {\n    var _config$extensionASTN3;\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = (_config$extensionASTN3 = config.extensionASTNodes) !== null && _config$extensionASTN3 !== void 0 ? _config$extensionASTN3 : [];\n    this._fields = defineFieldMap.bind(void 0, config);\n    this._interfaces = defineInterfaces.bind(void 0, config);\n    config.resolveType == null || typeof config.resolveType === \"function\" || devAssert(\n      false,\n      `${this.name} must provide \"resolveType\" as a function, but got: ${inspect(config.resolveType)}.`\n    );\n  }\n  get [Symbol.toStringTag]() {\n    return \"GraphQLInterfaceType\";\n  }\n  getFields() {\n    if (typeof this._fields === \"function\") {\n      this._fields = this._fields();\n    }\n    return this._fields;\n  }\n  getInterfaces() {\n    if (typeof this._interfaces === \"function\") {\n      this._interfaces = this._interfaces();\n    }\n    return this._interfaces;\n  }\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes\n    };\n  }\n  toString() {\n    return this.name;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\nclass GraphQLUnionType {\n  constructor(config) {\n    var _config$extensionASTN4;\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = (_config$extensionASTN4 = config.extensionASTNodes) !== null && _config$extensionASTN4 !== void 0 ? _config$extensionASTN4 : [];\n    this._types = defineTypes.bind(void 0, config);\n    config.resolveType == null || typeof config.resolveType === \"function\" || devAssert(\n      false,\n      `${this.name} must provide \"resolveType\" as a function, but got: ${inspect(config.resolveType)}.`\n    );\n  }\n  get [Symbol.toStringTag]() {\n    return \"GraphQLUnionType\";\n  }\n  getTypes() {\n    if (typeof this._types === \"function\") {\n      this._types = this._types();\n    }\n    return this._types;\n  }\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      types: this.getTypes(),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes\n    };\n  }\n  toString() {\n    return this.name;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\nfunction defineTypes(config) {\n  const types = resolveReadonlyArrayThunk(config.types);\n  Array.isArray(types) || devAssert(\n    false,\n    `Must provide Array of types or a function which returns such an array for Union ${config.name}.`\n  );\n  return types;\n}\nclass GraphQLEnumType {\n  /* <T> */\n  constructor(config) {\n    var _config$extensionASTN5;\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = (_config$extensionASTN5 = config.extensionASTNodes) !== null && _config$extensionASTN5 !== void 0 ? _config$extensionASTN5 : [];\n    this._values = typeof config.values === \"function\" ? config.values : defineEnumValues(this.name, config.values);\n    this._valueLookup = null;\n    this._nameLookup = null;\n  }\n  get [Symbol.toStringTag]() {\n    return \"GraphQLEnumType\";\n  }\n  getValues() {\n    if (typeof this._values === \"function\") {\n      this._values = defineEnumValues(this.name, this._values());\n    }\n    return this._values;\n  }\n  getValue(name) {\n    if (this._nameLookup === null) {\n      this._nameLookup = keyMap(this.getValues(), (value) => value.name);\n    }\n    return this._nameLookup[name];\n  }\n  serialize(outputValue) {\n    if (this._valueLookup === null) {\n      this._valueLookup = new Map(\n        this.getValues().map((enumValue2) => [enumValue2.value, enumValue2])\n      );\n    }\n    const enumValue = this._valueLookup.get(outputValue);\n    if (enumValue === void 0) {\n      throw new GraphQLError(\n        `Enum \"${this.name}\" cannot represent value: ${inspect(outputValue)}`\n      );\n    }\n    return enumValue.name;\n  }\n  parseValue(inputValue) {\n    if (typeof inputValue !== \"string\") {\n      const valueStr = inspect(inputValue);\n      throw new GraphQLError(\n        `Enum \"${this.name}\" cannot represent non-string value: ${valueStr}.` + didYouMeanEnumValue(this, valueStr)\n      );\n    }\n    const enumValue = this.getValue(inputValue);\n    if (enumValue == null) {\n      throw new GraphQLError(\n        `Value \"${inputValue}\" does not exist in \"${this.name}\" enum.` + didYouMeanEnumValue(this, inputValue)\n      );\n    }\n    return enumValue.value;\n  }\n  parseLiteral(valueNode, _variables) {\n    if (valueNode.kind !== Kind.ENUM) {\n      const valueStr = print(valueNode);\n      throw new GraphQLError(\n        `Enum \"${this.name}\" cannot represent non-enum value: ${valueStr}.` + didYouMeanEnumValue(this, valueStr),\n        {\n          nodes: valueNode\n        }\n      );\n    }\n    const enumValue = this.getValue(valueNode.value);\n    if (enumValue == null) {\n      const valueStr = print(valueNode);\n      throw new GraphQLError(\n        `Value \"${valueStr}\" does not exist in \"${this.name}\" enum.` + didYouMeanEnumValue(this, valueStr),\n        {\n          nodes: valueNode\n        }\n      );\n    }\n    return enumValue.value;\n  }\n  toConfig() {\n    const values = keyValMap(\n      this.getValues(),\n      (value) => value.name,\n      (value) => ({\n        description: value.description,\n        value: value.value,\n        deprecationReason: value.deprecationReason,\n        extensions: value.extensions,\n        astNode: value.astNode\n      })\n    );\n    return {\n      name: this.name,\n      description: this.description,\n      values,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes\n    };\n  }\n  toString() {\n    return this.name;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\nfunction didYouMeanEnumValue(enumType, unknownValueStr) {\n  const allNames = enumType.getValues().map((value) => value.name);\n  const suggestedValues = suggestionList(unknownValueStr, allNames);\n  return didYouMean(\"the enum value\", suggestedValues);\n}\nfunction defineEnumValues(typeName2, valueMap) {\n  isPlainObj(valueMap) || devAssert(\n    false,\n    `${typeName2} values must be an object with value names as keys.`\n  );\n  return Object.entries(valueMap).map(([valueName, valueConfig]) => {\n    isPlainObj(valueConfig) || devAssert(\n      false,\n      `${typeName2}.${valueName} must refer to an object with a \"value\" key representing an internal value but got: ${inspect(valueConfig)}.`\n    );\n    return {\n      name: assertEnumValueName(valueName),\n      description: valueConfig.description,\n      value: valueConfig.value !== void 0 ? valueConfig.value : valueName,\n      deprecationReason: valueConfig.deprecationReason,\n      extensions: toObjMap(valueConfig.extensions),\n      astNode: valueConfig.astNode\n    };\n  });\n}\nclass GraphQLInputObjectType {\n  constructor(config) {\n    var _config$extensionASTN6, _config$isOneOf;\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = (_config$extensionASTN6 = config.extensionASTNodes) !== null && _config$extensionASTN6 !== void 0 ? _config$extensionASTN6 : [];\n    this.isOneOf = (_config$isOneOf = config.isOneOf) !== null && _config$isOneOf !== void 0 ? _config$isOneOf : false;\n    this._fields = defineInputFieldMap.bind(void 0, config);\n  }\n  get [Symbol.toStringTag]() {\n    return \"GraphQLInputObjectType\";\n  }\n  getFields() {\n    if (typeof this._fields === \"function\") {\n      this._fields = this._fields();\n    }\n    return this._fields;\n  }\n  toConfig() {\n    const fields = mapValue(this.getFields(), (field) => ({\n      description: field.description,\n      type: field.type,\n      defaultValue: field.defaultValue,\n      deprecationReason: field.deprecationReason,\n      extensions: field.extensions,\n      astNode: field.astNode\n    }));\n    return {\n      name: this.name,\n      description: this.description,\n      fields,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n      isOneOf: this.isOneOf\n    };\n  }\n  toString() {\n    return this.name;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\nfunction defineInputFieldMap(config) {\n  const fieldMap = resolveObjMapThunk(config.fields);\n  isPlainObj(fieldMap) || devAssert(\n    false,\n    `${config.name} fields must be an object with field names as keys or a function which returns such an object.`\n  );\n  return mapValue(fieldMap, (fieldConfig, fieldName) => {\n    !(\"resolve\" in fieldConfig) || devAssert(\n      false,\n      `${config.name}.${fieldName} field has a resolve property, but Input Types cannot define resolvers.`\n    );\n    return {\n      name: assertName(fieldName),\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      defaultValue: fieldConfig.defaultValue,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode\n    };\n  });\n}\nconst GRAPHQL_MAX_INT = 2147483647;\nconst GRAPHQL_MIN_INT = -2147483648;\nnew GraphQLScalarType({\n  name: \"Int\",\n  description: \"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.\",\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n    if (typeof coercedValue === \"boolean\") {\n      return coercedValue ? 1 : 0;\n    }\n    let num = coercedValue;\n    if (typeof coercedValue === \"string\" && coercedValue !== \"\") {\n      num = Number(coercedValue);\n    }\n    if (typeof num !== \"number\" || !Number.isInteger(num)) {\n      throw new GraphQLError(\n        `Int cannot represent non-integer value: ${inspect(coercedValue)}`\n      );\n    }\n    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {\n      throw new GraphQLError(\n        \"Int cannot represent non 32-bit signed integer value: \" + inspect(coercedValue)\n      );\n    }\n    return num;\n  },\n  parseValue(inputValue) {\n    if (typeof inputValue !== \"number\" || !Number.isInteger(inputValue)) {\n      throw new GraphQLError(\n        `Int cannot represent non-integer value: ${inspect(inputValue)}`\n      );\n    }\n    if (inputValue > GRAPHQL_MAX_INT || inputValue < GRAPHQL_MIN_INT) {\n      throw new GraphQLError(\n        `Int cannot represent non 32-bit signed integer value: ${inputValue}`\n      );\n    }\n    return inputValue;\n  },\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\n        `Int cannot represent non-integer value: ${print(valueNode)}`,\n        {\n          nodes: valueNode\n        }\n      );\n    }\n    const num = parseInt(valueNode.value, 10);\n    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {\n      throw new GraphQLError(\n        `Int cannot represent non 32-bit signed integer value: ${valueNode.value}`,\n        {\n          nodes: valueNode\n        }\n      );\n    }\n    return num;\n  }\n});\nnew GraphQLScalarType({\n  name: \"Float\",\n  description: \"The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).\",\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n    if (typeof coercedValue === \"boolean\") {\n      return coercedValue ? 1 : 0;\n    }\n    let num = coercedValue;\n    if (typeof coercedValue === \"string\" && coercedValue !== \"\") {\n      num = Number(coercedValue);\n    }\n    if (typeof num !== \"number\" || !Number.isFinite(num)) {\n      throw new GraphQLError(\n        `Float cannot represent non numeric value: ${inspect(coercedValue)}`\n      );\n    }\n    return num;\n  },\n  parseValue(inputValue) {\n    if (typeof inputValue !== \"number\" || !Number.isFinite(inputValue)) {\n      throw new GraphQLError(\n        `Float cannot represent non numeric value: ${inspect(inputValue)}`\n      );\n    }\n    return inputValue;\n  },\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.FLOAT && valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\n        `Float cannot represent non numeric value: ${print(valueNode)}`,\n        valueNode\n      );\n    }\n    return parseFloat(valueNode.value);\n  }\n});\nconst GraphQLString = new GraphQLScalarType({\n  name: \"String\",\n  description: \"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.\",\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n    if (typeof coercedValue === \"string\") {\n      return coercedValue;\n    }\n    if (typeof coercedValue === \"boolean\") {\n      return coercedValue ? \"true\" : \"false\";\n    }\n    if (typeof coercedValue === \"number\" && Number.isFinite(coercedValue)) {\n      return coercedValue.toString();\n    }\n    throw new GraphQLError(\n      `String cannot represent value: ${inspect(outputValue)}`\n    );\n  },\n  parseValue(inputValue) {\n    if (typeof inputValue !== \"string\") {\n      throw new GraphQLError(\n        `String cannot represent a non string value: ${inspect(inputValue)}`\n      );\n    }\n    return inputValue;\n  },\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.STRING) {\n      throw new GraphQLError(\n        `String cannot represent a non string value: ${print(valueNode)}`,\n        {\n          nodes: valueNode\n        }\n      );\n    }\n    return valueNode.value;\n  }\n});\nconst GraphQLBoolean = new GraphQLScalarType({\n  name: \"Boolean\",\n  description: \"The `Boolean` scalar type represents `true` or `false`.\",\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n    if (typeof coercedValue === \"boolean\") {\n      return coercedValue;\n    }\n    if (Number.isFinite(coercedValue)) {\n      return coercedValue !== 0;\n    }\n    throw new GraphQLError(\n      `Boolean cannot represent a non boolean value: ${inspect(coercedValue)}`\n    );\n  },\n  parseValue(inputValue) {\n    if (typeof inputValue !== \"boolean\") {\n      throw new GraphQLError(\n        `Boolean cannot represent a non boolean value: ${inspect(inputValue)}`\n      );\n    }\n    return inputValue;\n  },\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.BOOLEAN) {\n      throw new GraphQLError(\n        `Boolean cannot represent a non boolean value: ${print(valueNode)}`,\n        {\n          nodes: valueNode\n        }\n      );\n    }\n    return valueNode.value;\n  }\n});\nnew GraphQLScalarType({\n  name: \"ID\",\n  description: 'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.',\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n    if (typeof coercedValue === \"string\") {\n      return coercedValue;\n    }\n    if (Number.isInteger(coercedValue)) {\n      return String(coercedValue);\n    }\n    throw new GraphQLError(\n      `ID cannot represent value: ${inspect(outputValue)}`\n    );\n  },\n  parseValue(inputValue) {\n    if (typeof inputValue === \"string\") {\n      return inputValue;\n    }\n    if (typeof inputValue === \"number\" && Number.isInteger(inputValue)) {\n      return inputValue.toString();\n    }\n    throw new GraphQLError(`ID cannot represent value: ${inspect(inputValue)}`);\n  },\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.STRING && valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\n        \"ID cannot represent a non-string and non-integer value: \" + print(valueNode),\n        {\n          nodes: valueNode\n        }\n      );\n    }\n    return valueNode.value;\n  }\n});\nfunction serializeObject(outputValue) {\n  if (isObjectLike(outputValue)) {\n    if (typeof outputValue.valueOf === \"function\") {\n      const valueOfResult = outputValue.valueOf();\n      if (!isObjectLike(valueOfResult)) {\n        return valueOfResult;\n      }\n    }\n    if (typeof outputValue.toJSON === \"function\") {\n      return outputValue.toJSON();\n    }\n  }\n  return outputValue;\n}\nclass GraphQLDirective {\n  constructor(config) {\n    var _config$isRepeatable, _config$args;\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.locations = config.locations;\n    this.isRepeatable = (_config$isRepeatable = config.isRepeatable) !== null && _config$isRepeatable !== void 0 ? _config$isRepeatable : false;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    Array.isArray(config.locations) || devAssert(false, `@${config.name} locations must be an Array.`);\n    const args = (_config$args = config.args) !== null && _config$args !== void 0 ? _config$args : {};\n    isObjectLike(args) && !Array.isArray(args) || devAssert(\n      false,\n      `@${config.name} args must be an object with argument names as keys.`\n    );\n    this.args = defineArguments(args);\n  }\n  get [Symbol.toStringTag]() {\n    return \"GraphQLDirective\";\n  }\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      locations: this.locations,\n      args: argsToArgsConfig(this.args),\n      isRepeatable: this.isRepeatable,\n      extensions: this.extensions,\n      astNode: this.astNode\n    };\n  }\n  toString() {\n    return \"@\" + this.name;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\nnew GraphQLDirective({\n  name: \"include\",\n  description: \"Directs the executor to include this field or fragment only when the `if` argument is true.\",\n  locations: [\n    DirectiveLocation.FIELD,\n    DirectiveLocation.FRAGMENT_SPREAD,\n    DirectiveLocation.INLINE_FRAGMENT\n  ],\n  args: {\n    if: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      description: \"Included when true.\"\n    }\n  }\n});\nnew GraphQLDirective({\n  name: \"skip\",\n  description: \"Directs the executor to skip this field or fragment when the `if` argument is true.\",\n  locations: [\n    DirectiveLocation.FIELD,\n    DirectiveLocation.FRAGMENT_SPREAD,\n    DirectiveLocation.INLINE_FRAGMENT\n  ],\n  args: {\n    if: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      description: \"Skipped when true.\"\n    }\n  }\n});\nconst DEFAULT_DEPRECATION_REASON = \"No longer supported\";\nnew GraphQLDirective({\n  name: \"deprecated\",\n  description: \"Marks an element of a GraphQL schema as no longer supported.\",\n  locations: [\n    DirectiveLocation.FIELD_DEFINITION,\n    DirectiveLocation.ARGUMENT_DEFINITION,\n    DirectiveLocation.INPUT_FIELD_DEFINITION,\n    DirectiveLocation.ENUM_VALUE\n  ],\n  args: {\n    reason: {\n      type: GraphQLString,\n      description: \"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).\",\n      defaultValue: DEFAULT_DEPRECATION_REASON\n    }\n  }\n});\nnew GraphQLDirective({\n  name: \"specifiedBy\",\n  description: \"Exposes a URL that specifies the behavior of this scalar.\",\n  locations: [DirectiveLocation.SCALAR],\n  args: {\n    url: {\n      type: new GraphQLNonNull(GraphQLString),\n      description: \"The URL that specifies the behavior of this scalar.\"\n    }\n  }\n});\nnew GraphQLDirective({\n  name: \"oneOf\",\n  description: \"Indicates exactly one field must be supplied and this field must not be `null`.\",\n  locations: [DirectiveLocation.INPUT_OBJECT],\n  args: {}\n});\nconst GRAPH_API_NODE_KIND_UNION = \"union\";\n[\n  /** Request Definitions */\n  DirectiveLocation.QUERY,\n  DirectiveLocation.MUTATION,\n  DirectiveLocation.SUBSCRIPTION,\n  DirectiveLocation.FIELD,\n  DirectiveLocation.FRAGMENT_DEFINITION,\n  DirectiveLocation.FRAGMENT_SPREAD,\n  DirectiveLocation.INLINE_FRAGMENT,\n  DirectiveLocation.VARIABLE_DEFINITION,\n  /** Type System Definitions */\n  DirectiveLocation.SCHEMA,\n  DirectiveLocation.SCALAR,\n  DirectiveLocation.OBJECT,\n  DirectiveLocation.FIELD_DEFINITION,\n  DirectiveLocation.ARGUMENT_DEFINITION,\n  DirectiveLocation.INTERFACE,\n  DirectiveLocation.UNION,\n  DirectiveLocation.ENUM,\n  DirectiveLocation.ENUM_VALUE,\n  DirectiveLocation.INPUT_OBJECT,\n  DirectiveLocation.INPUT_FIELD_DEFINITION\n];\nconst BUILT_IN_DIRECTIVE_SPECIFIED_BY = \"specifiedBy\";\nconst BUILT_IN_DIRECTIVE_SKIP = \"skip\";\nconst BUILT_IN_DIRECTIVE_INCLUDE = \"include\";\nconst BUILT_IN_DIRECTIVE_DEPRECATED = \"deprecated\";\nconst BUILT_IN_DIRECTIVE_ONE_OF = \"oneOf\";\nconst BUILT_IN_DIRECTIVES = [\n  BUILT_IN_DIRECTIVE_INCLUDE,\n  BUILT_IN_DIRECTIVE_SKIP,\n  BUILT_IN_DIRECTIVE_SPECIFIED_BY,\n  BUILT_IN_DIRECTIVE_DEPRECATED,\n  BUILT_IN_DIRECTIVE_ONE_OF\n];\nnew Set(BUILT_IN_DIRECTIVES);\nconst wrapBySingletonUnion = (value, ctx) => {\n  return ctx.transformer(value, GRAPH_API_PROPERTY_ONE_OF, (value2) => {\n    const combinerValues = [value2];\n    const wrap2 = {\n      [GRAPH_API_PROPERTY_DIRECTIVES]: {},\n      ...value2[GRAPH_API_PROPERTY_TITLE] ? { [GRAPH_API_PROPERTY_TITLE]: value2[GRAPH_API_PROPERTY_TITLE] } : {},\n      [GRAPH_API_PROPERTY_TYPE]: {\n        [GRAPH_API_PROPERTY_KIND]: GRAPH_API_NODE_KIND_UNION,\n        [GRAPH_API_PROPERTY_ONE_OF]: combinerValues,\n        [ctx.options.originsFlag]: {\n          [GRAPH_API_PROPERTY_KIND]: ctx.valueOrigins,\n          [GRAPH_API_PROPERTY_ONE_OF]: ctx.valueOrigins\n        }\n      }\n    };\n    setOrigins(combinerValues, 0, ctx.options.originsFlag, ctx.valueOrigins);\n    if (value2[GRAPH_API_PROPERTY_TITLE])\n      copyOrigins(value2, wrap2, GRAPH_API_PROPERTY_TITLE, GRAPH_API_PROPERTY_TITLE, ctx.options.originsFlag);\n    copyOrigins(value2, wrap2, GRAPH_API_PROPERTY_TYPE, GRAPH_API_PROPERTY_TYPE, ctx.options.originsFlag);\n    return wrap2;\n  });\n};\nconst isRuntimeDirectiveLocations = (value) => {\n  return isArray$1(value) && value.some((location) => RUNTIME_DIRECTIVE_LOCATIONS.has(location));\n};\nconst graphApiSchemaAdapter = (value, reference, ctx) => {\n  if (!isObject(value) || !isObject(reference)) {\n    return value;\n  }\n  let newValue = value;\n  const valueContext = ctx;\n  const { type: valueType } = newValue;\n  const { type: referenceType } = reference;\n  if (!isObject(valueType) || !isObject(referenceType)) {\n    return value;\n  }\n  const { kind: valueKind } = valueType;\n  const { kind: referenceKind } = referenceType;\n  if (valueKind !== referenceKind && referenceKind === GRAPH_API_NODE_KIND_UNION) {\n    newValue = wrapBySingletonUnion(newValue, valueContext);\n  }\n  return newValue;\n};\nconst removeNotCorrectlySupportedInterfacesAdapter = (value, _, ctx) => {\n  if (!isArray$1(value)) {\n    return value;\n  }\n  return ctx.transformer(value, \"to-empty-array\", () => []);\n};\nconst complexTypeCompareResolver = (ctx) => {\n  const { before, after } = ctx;\n  const beforeValue = before.value;\n  const afterValue = after.value;\n  if (!isObject(beforeValue) || !isObject(afterValue) || !isString(beforeValue.kind) || !isString(afterValue.kind)) {\n    const diffEntry2 = diffFactory.replaced(ctx);\n    return { diffs: [diffEntry2.diff], ownerDiffEntry: diffEntry2, merged: after.value };\n  }\n  if (beforeValue.kind === afterValue.kind) {\n    return void 0;\n  }\n  const diffEntry = diffFactory.replaced(ctx);\n  return { diffs: [diffEntry.diff], ownerDiffEntry: diffEntry, merged: after.value };\n};\nconst titleBaseUniqueItemsArrayMappingResolver = customUniqueItemsArrayMappingResolver(\n  (one, another) => isObject$1(one) && isObject$1(another) && GRAPH_API_PROPERTY_TITLE in one && GRAPH_API_PROPERTY_TITLE in another && one[GRAPH_API_PROPERTY_TITLE] === another[GRAPH_API_PROPERTY_TITLE]\n);\nconst nullableClassifier = [\n  unclassified,\n  unclassified,\n  ({ after, scope }) => {\n    const changedNullabilityValue = !!after.value;\n    const willHaveDefault = strictResolveValueFromContext(after, PARENT_JUMP, GRAPH_API_PROPERTY_DEFAULT) !== void 0;\n    if (changedNullabilityValue) {\n      switch (scope) {\n        case COMPARE_SCOPE_OUTPUT:\n          return breaking;\n        case COMPARE_SCOPE_ARGS:\n          return nonBreaking;\n      }\n    } else {\n      switch (scope) {\n        case COMPARE_SCOPE_OUTPUT:\n          return nonBreaking;\n        case COMPARE_SCOPE_ARGS:\n          return breakingIf(!willHaveDefault);\n      }\n    }\n    return unclassified;\n  }\n];\nconst defaultClassifier = [\n  ({ before, after }) => {\n    const possibleDirectiveLocations = optionalResolveValueFromContext(after, PARENT_JUMP, PARENT_JUMP, PARENT_JUMP, GRAPH_API_PROPERTY_LOCATIONS);\n    const argumentWasOptional = !!strictResolveValueFromContext(before, PARENT_JUMP, GRAPH_API_PROPERTY_NULLABLE);\n    if (possibleDirectiveLocations) {\n      if (isRuntimeDirectiveLocations(possibleDirectiveLocations)) {\n        return argumentWasOptional ? unclassified : nonBreaking;\n      } else {\n        return nonBreaking;\n      }\n    } else {\n      return breakingIf(argumentWasOptional);\n    }\n  },\n  ({ before, after }) => {\n    const possibleDirectiveLocations = optionalResolveValueFromContext(after, PARENT_JUMP, PARENT_JUMP, PARENT_JUMP, GRAPH_API_PROPERTY_LOCATIONS);\n    const argumentWasOptional = !!strictResolveValueFromContext(before, PARENT_JUMP, GRAPH_API_PROPERTY_NULLABLE);\n    if (possibleDirectiveLocations) {\n      if (isRuntimeDirectiveLocations(possibleDirectiveLocations)) {\n        return argumentWasOptional ? unclassified : nonBreaking;\n      } else {\n        return nonBreaking;\n      }\n    } else {\n      return breakingIf(argumentWasOptional);\n    }\n  },\n  ({ before, after }) => {\n    {\n      const possibleDirectiveLocations = optionalResolveValueFromContext(after, PARENT_JUMP, PARENT_JUMP, PARENT_JUMP, GRAPH_API_PROPERTY_LOCATIONS);\n      const argumentWasOptional = !!strictResolveValueFromContext(before, PARENT_JUMP, GRAPH_API_PROPERTY_NULLABLE);\n      if (possibleDirectiveLocations) {\n        if (isRuntimeDirectiveLocations(possibleDirectiveLocations)) {\n          return argumentWasOptional ? unclassified : nonBreaking;\n        } else {\n          return nonBreaking;\n        }\n      } else {\n        return breakingIf(argumentWasOptional);\n      }\n    }\n  }\n];\nconst directiveUsageClassifier = [\n  ({ mergeKey }) => {\n    if (mergeKey === BUILT_IN_DIRECTIVE_DEPRECATED) {\n      return deprecated;\n    }\n    if (mergeKey === BUILT_IN_DIRECTIVE_SPECIFIED_BY) {\n      return annotation;\n    }\n    return unclassified;\n  },\n  ({ mergeKey }) => {\n    if (mergeKey === BUILT_IN_DIRECTIVE_DEPRECATED) {\n      return deprecated;\n    }\n    if (mergeKey === BUILT_IN_DIRECTIVE_SPECIFIED_BY) {\n      return annotation;\n    }\n    return unclassified;\n  },\n  unclassified\n];\nconst directiveMetaClassifier = [\n  ({ after }) => {\n    const directiveLocations = strictResolveValueFromContext(after, PARENT_JUMP, PARENT_JUMP, GRAPH_API_PROPERTY_DEFINITION, GRAPH_API_PROPERTY_LOCATIONS);\n    if (isRuntimeDirectiveLocations(directiveLocations)) {\n      return unclassified;\n    }\n    return annotation;\n  },\n  ({ before }) => {\n    const directiveLocations = strictResolveValueFromContext(before, PARENT_JUMP, PARENT_JUMP, GRAPH_API_PROPERTY_DEFINITION, GRAPH_API_PROPERTY_LOCATIONS);\n    if (isRuntimeDirectiveLocations(directiveLocations)) {\n      return unclassified;\n    }\n    return annotation;\n  },\n  ({ after, before }) => {\n    const oldDirectiveLocations = strictResolveValueFromContext(after, PARENT_JUMP, PARENT_JUMP, GRAPH_API_PROPERTY_DEFINITION, GRAPH_API_PROPERTY_LOCATIONS);\n    const newDirectiveLocations = strictResolveValueFromContext(before, PARENT_JUMP, PARENT_JUMP, GRAPH_API_PROPERTY_DEFINITION, GRAPH_API_PROPERTY_LOCATIONS);\n    if (isRuntimeDirectiveLocations(oldDirectiveLocations) || isRuntimeDirectiveLocations(newDirectiveLocations)) {\n      return unclassified;\n    }\n    return annotation;\n  }\n];\nconst directiveDefinitionClassifier = [\n  nonBreaking,\n  ({ before }) => {\n    const directiveLocations = strictResolveValueFromContext(before, GRAPH_API_PROPERTY_LOCATIONS);\n    if (isRuntimeDirectiveLocations(directiveLocations)) {\n      return breaking;\n    }\n    return nonBreaking;\n  },\n  unclassified\n];\nconst directiveArgumentsClassifier = [\n  ({ after }) => {\n    const isRuntimeDirective = isRuntimeDirectiveLocations(strictResolveValueFromContext(after, PARENT_JUMP, PARENT_JUMP, GRAPH_API_PROPERTY_LOCATIONS));\n    if (isRuntimeDirective) {\n      const argumentWillOptional = !!strictResolveValueFromContext(after, GRAPH_API_PROPERTY_NULLABLE);\n      return !argumentWillOptional ? breaking : unclassified;\n    }\n    return nonBreaking;\n  },\n  ({ before }) => {\n    const isRuntimeDirective = isRuntimeDirectiveLocations(strictResolveValueFromContext(before, PARENT_JUMP, PARENT_JUMP, GRAPH_API_PROPERTY_LOCATIONS));\n    return isRuntimeDirective ? breaking : nonBreaking;\n  },\n  unclassified\n];\nconst directiveLocationClassifier = [\n  ({ before, after }) => {\n    const wasRuntime = isRuntimeDirectiveLocations(strictResolveValueFromContext(before, PARENT_JUMP));\n    const willRuntime = isRuntimeDirectiveLocations(strictResolveValueFromContext(after, PARENT_JUMP));\n    return wasRuntime !== willRuntime ? unclassified : nonBreaking;\n  },\n  ({ before, after }) => {\n    const wasRuntime = isRuntimeDirectiveLocations(strictResolveValueFromContext(before, PARENT_JUMP));\n    const willRuntime = isRuntimeDirectiveLocations(strictResolveValueFromContext(after, PARENT_JUMP));\n    return !wasRuntime && !willRuntime ? nonBreaking : breaking;\n  },\n  unclassified\n];\nfunction simpleRule(classify, descriptionTemplate) {\n  return {\n    $: classify,\n    description: diffDescription(descriptionTemplate)\n  };\n}\nconst directivesUsagesRules = {\n  \"/directives\": {\n    \"/*\": {\n      \"/definition\": () => directiveDefinitionRules,\n      //shold make all unclasified\n      \"/meta\": {\n        \"/*\": { $: directiveMetaClassifier }\n      },\n      $: directiveUsageClassifier\n    },\n    newCompareScope: COMPARE_SCOPE_DIRECTIVE_USAGES\n  }\n};\nconst baseRules = {\n  \"/description\": simpleRule(allAnnotation, resolveSchemaDescriptionTemplates(\"description\")),\n  ...directivesUsagesRules\n};\nconst selfNamedBaseRules = {\n  ...baseRules,\n  \"/title\": simpleRule(allUnclassified, resolveSchemaDescriptionTemplates(\"title\"))\n};\nconst directiveDefinitionRules = {\n  ...selfNamedBaseRules,\n  \"/args\": {\n    \"/*\": () => ({\n      ...typeUsageRules,\n      $: directiveArgumentsClassifier\n    })\n    //only scalar, input, enum, and array with it ,\n  },\n  \"/repeatable\": simpleRule(allUnclassified, resolveSchemaDescriptionTemplates(\"repeatable\")),\n  \"/locations\": {\n    \"/*\": () => ({\n      $: directiveLocationClassifier,\n      ignoreKeyDifference: true\n    }),\n    mapping: deepEqualsUniqueItemsArrayMappingResolver\n  }\n};\nconst typeDefinitionRules = {\n  ...selfNamedBaseRules,\n  \"/type\": {\n    // '/kind': // checked inside complexTypeCompareResolver\n    compare: complexTypeCompareResolver,\n    $: allBreaking,\n    //todo support Float->Int changes and compatible interfaces\n    //enum\n    \"/values\": {\n      \"/*\": {\n        ...baseRules,\n        $: [\n          ({ scope }) => breakingIf(scope === COMPARE_SCOPE_OUTPUT),\n          ({ scope }) => breakingIf(scope === COMPARE_SCOPE_ARGS),\n          unclassified\n        ]\n      }\n    },\n    //input\n    \"/properties\": {\n      \"/*\": () => ({\n        ...typeUsageRules,\n        $: [\n          ({ after }) => {\n            var _a;\n            return breakingIf(isObject$1(after.value) && GRAPH_API_PROPERTY_NULLABLE in after.value && !((_a = after.value) == null ? void 0 : _a[GRAPH_API_PROPERTY_NULLABLE]));\n          },\n          breaking,\n          unclassified\n        ]\n      })\n      //only scalar, input, enum, and array with it \n    },\n    //interface object\n    \"/methods\": {\n      \"/*\": () => ({\n        ...methodRules,\n        $: [nonBreaking, breaking, unclassified]\n      })\n    },\n    \"/interfaces\": {\n      \"/*\": () => typeDefinitionRules,\n      // crop to empty array for this parameter cause there are no design for comparing interfaces\n      adapter: [removeNotCorrectlySupportedInterfacesAdapter]\n    },\n    //union\n    \"/oneOf\": {\n      \"/*\": () => ({\n        ...typeDefinitionRules,\n        $: [breaking, breaking, unclassified],\n        ignoreKeyDifference: true\n      }),\n      mapping: titleBaseUniqueItemsArrayMappingResolver\n    },\n    //array\n    \"/items\": () => typeUsageRules\n  },\n  adapter: [graphApiSchemaAdapter]\n};\nconst typeUsageRules = {\n  ...baseRules,\n  \"/default\": {\n    $: defaultClassifier,\n    \"/**\": {\n      $: allUnclassified\n      //todo need samples in compatibility suites\n    }\n  },\n  \"/nullable\": {\n    $: nullableClassifier\n  },\n  \"/typeDef\": typeDefinitionRules\n};\nconst methodRules = {\n  ...baseRules,\n  \"/args\": {\n    \"/*\": {\n      ...typeUsageRules,\n      $: [\n        ({ after }) => {\n          var _a;\n          return breakingIf(isObject$1(after.value) && GRAPH_API_PROPERTY_NULLABLE in after.value && !((_a = after.value) == null ? void 0 : _a[GRAPH_API_PROPERTY_NULLABLE]));\n        },\n        breaking,\n        breaking\n      ]\n    },\n    //only scalar, input, enum, and array with it\n    newCompareScope: COMPARE_SCOPE_ARGS\n  },\n  \"/output\": {\n    ...typeUsageRules,\n    newCompareScope: COMPARE_SCOPE_OUTPUT\n  }\n};\nconst graphApiRules = () => {\n  return {\n    \"/graphapi\": { $: allAnnotation },\n    \"/queries\": {\n      \"/*\": {\n        ...methodRules,\n        $: addNonBreaking\n      }\n    },\n    \"/mutations\": {\n      \"/*\": {\n        ...methodRules,\n        $: addNonBreaking\n      }\n    },\n    \"/subscriptions\": {\n      \"/*\": {\n        ...methodRules,\n        $: addNonBreaking\n      }\n    },\n    \"/components\": {\n      \"/scalars\": {\n        \"/*\": {\n          ...typeDefinitionRules,\n          $: addNonBreaking\n        }\n      },\n      \"/objects\": {\n        \"/*\": {\n          ...typeDefinitionRules,\n          $: addNonBreaking\n        }\n      },\n      \"/interfaces\": {\n        \"/*\": {\n          ...typeDefinitionRules,\n          $: addNonBreaking\n        }\n      },\n      \"/inputObjects\": {\n        \"/*\": {\n          ...typeDefinitionRules,\n          $: addNonBreaking\n        }\n      },\n      \"/directives\": {\n        \"/*\": {\n          ...directiveDefinitionRules,\n          $: directiveDefinitionClassifier\n        }\n      },\n      \"/unions\": {\n        \"/*\": {\n          ...typeDefinitionRules,\n          $: addNonBreaking\n        }\n      },\n      \"/enums\": {\n        \"/*\": {\n          ...typeDefinitionRules,\n          $: addNonBreaking\n        }\n      },\n      newCompareScope: COMPARE_SCOPE_COMPONENTS$1\n    }\n  };\n};\nconst compareGraphApi = (before, after, options) => {\n  return compare(before, after, {\n    ...options,\n    rules: graphApiRules()\n  });\n};\nconst asyncApi2Rules = (_) => {\n  const subSchemaRules = transformCompareRules(jsonSchemaRules({\n    additionalRules: {},\n    version: SPEC_TYPE_JSON_SCHEMA_07\n  }), reverseClassifyRuleTransformer);\n  const pubSchemaRules = jsonSchemaRules({\n    additionalRules: {},\n    version: SPEC_TYPE_JSON_SCHEMA_07\n  });\n  const correlationIdRules = {\n    $: addNonBreaking,\n    \"/location\": { $: addNonBreaking },\n    \"/description\": { $: allAnnotation }\n  };\n  const bindingsRule = {\n    $: allUnclassified,\n    \"/*\": {\n      $: allUnclassified,\n      \"/*\": { $: allUnclassified },\n      \"/query\": () => subSchemaRules,\n      \"/headers\": () => pubSchemaRules\n    }\n  };\n  const commonRules = {\n    \"/summary\": { $: allAnnotation },\n    \"/tags\": { $: allAnnotation },\n    \"/externalDocs\": { $: allAnnotation },\n    \"/bindings\": bindingsRule\n  };\n  const pubsubTraitsRules = {\n    $: addNonBreaking,\n    \"/*\": { $: addNonBreaking },\n    \"/operationId\": { $: allAnnotation },\n    \"/description\": { $: allAnnotation },\n    ...commonRules\n  };\n  const messageTraitsRules = {\n    $: addNonBreaking,\n    \"/*\": { $: addNonBreaking },\n    \"/headers\": { $: allUnclassified },\n    \"/correlationId\": correlationIdRules,\n    \"/schemaFormat\": { $: allBreaking },\n    \"/contentType\": { $: addNonBreaking },\n    \"/name\": { $: allNonBreaking },\n    \"/title\": { $: allNonBreaking },\n    \"/examples\": { $: allAnnotation },\n    ...commonRules\n  };\n  const messageRules = (sub = false) => ({\n    $: allBreaking,\n    \"/headers\": { $: allUnclassified },\n    \"/correlationId\": correlationIdRules,\n    \"/schemaFormat\": { $: allBreaking },\n    \"/contentType\": { $: addNonBreaking },\n    \"/name\": { $: allNonBreaking },\n    \"/title\": { $: allAnnotation },\n    \"/description\": { $: allAnnotation },\n    \"/examples\": { $: allAnnotation },\n    \"/traits\": messageTraitsRules,\n    \"/payload\": () => ({\n      ...sub ? subSchemaRules : pubSchemaRules,\n      $: allBreaking\n    }),\n    ...commonRules\n  });\n  const pubsubRules = (sub = false) => ({\n    $: addNonBreaking,\n    \"/operationId\": { $: allAnnotation },\n    \"/description\": { $: allAnnotation },\n    \"/traits\": pubsubTraitsRules,\n    \"/message\": messageRules(sub),\n    ...commonRules\n  });\n  const infoRules = {\n    $: allAnnotation,\n    \"/version\": { $: allAnnotation },\n    \"/termsOfService\": { $: allAnnotation },\n    \"/license\": {\n      $: allAnnotation,\n      \"/name\": { $: allAnnotation },\n      \"/url\": { $: allAnnotation }\n    },\n    \"/title\": { $: allAnnotation },\n    \"/description\": { $: allAnnotation },\n    \"/contact\": {\n      $: allAnnotation,\n      \"/name\": { $: allAnnotation },\n      \"/url\": { $: allAnnotation },\n      \"/email\": { $: allAnnotation }\n    }\n  };\n  const serversRules = {\n    $: allAnnotation,\n    \"/*\": {\n      $: allAnnotation,\n      \"/url\": { $: allAnnotation },\n      \"/description\": { $: allAnnotation },\n      \"/protocol\": { $: allAnnotation },\n      \"/protocolVersion\": { $: allAnnotation },\n      \"/variables\": {\n        $: allAnnotation,\n        \"/*\": {\n          $: allAnnotation,\n          \"/enum\": {\n            $: allAnnotation,\n            \"/*\": { $: allAnnotation }\n          },\n          \"/default\": { $: allAnnotation },\n          \"/description\": { $: allAnnotation },\n          \"/examples\": { $: allAnnotation }\n        }\n      },\n      \"/security\": {\n        $: allAnnotation,\n        \"/*\": { $: allAnnotation }\n      },\n      \"/bindings\": bindingsRule\n    }\n  };\n  const channelRules = {\n    $: addNonBreaking,\n    \"/description\": { $: allAnnotation },\n    \"/bindings\": bindingsRule,\n    \"/subscribe\": pubsubRules(true),\n    \"/publish\": pubsubRules(false),\n    \"/parameters\": {\n      $: allBreaking,\n      \"/*\": {\n        $: addNonBreaking,\n        \"/description\": { $: allAnnotation },\n        \"/schema\": () => ({\n          ...pubSchemaRules,\n          $: allBreaking\n        }),\n        \"/location\": { $: allBreaking }\n      }\n    }\n  };\n  return {\n    \"/asyncapi\": { $: allAnnotation },\n    \"/id\": { $: allAnnotation },\n    \"/defaultContentType\": { $: allBreaking },\n    \"/info\": infoRules,\n    \"/servers\": serversRules,\n    \"/channels\": {\n      $: addNonBreaking,\n      \"/*\": channelRules\n    },\n    \"/components\": {\n      \"/*\": { $: allAnnotation }\n    },\n    \"/tags\": { $: allAnnotation },\n    \"/externalDocs\": { $: allAnnotation }\n  };\n};\nconst compareAsyncApi = (before, after, options) => {\n  return compare(before, after, {\n    ...options,\n    rules: asyncApi2Rules(options.mode)\n  });\n};\nconst emptySecurity = (value) => {\n  if (!Array.isArray(value)) {\n    return false;\n  }\n  return !!value && (value.length === 0 || value.length === 1 && Object.keys(value[0]).length === 0);\n};\nconst includeSecurity = (value = [], items = []) => {\n  if (!Array.isArray(value) || !Array.isArray(items) || items.length === 0) {\n    return false;\n  }\n  const valueSet = new Set(value.map((item) => Object.keys(item)[0]));\n  for (const item of items) {\n    if (!valueSet.has(Object.keys(item)[0])) {\n      return false;\n    }\n  }\n  return true;\n};\nconst extractPathContext = (ctx, jumpsToPathLevel) => {\n  let context = ctx;\n  for (let i = 0; i < jumpsToPathLevel; i++) {\n    context = context == null ? void 0 : context.parentContext;\n  }\n  return context;\n};\nconst extractPaths = (ctx, jumpsToPathLevel) => {\n  const pathContext = extractPathContext(ctx, jumpsToPathLevel);\n  if (!pathContext) {\n    return;\n  }\n  const { before: { key: pathBefore }, after: { key: pathAfter } } = pathContext;\n  return [pathBefore, pathAfter];\n};\nconst mapPathParams = (ctx, jumpsToPathLevel) => {\n  const [pathBefore, pathAfter] = extractPaths(ctx, jumpsToPathLevel) ?? [];\n  if (!isString(pathBefore) || !isString(pathAfter)) {\n    return {};\n  }\n  const beforeParams = [...pathBefore.matchAll(new RegExp(\"{(.*?)}\", \"g\"))].map((arr) => arr.pop());\n  const afterParams = [...pathAfter.matchAll(new RegExp(\"{(.*?)}\", \"g\"))].map((arr) => arr.pop());\n  const result = {};\n  for (let i = 0; i < beforeParams.length && i < afterParams.length; i++) {\n    result[beforeParams[i]] = afterParams[i];\n  }\n  return result;\n};\nconst isResponseSchema = (path) => {\n  return path[3] === \"responses\" && path[7] === \"schema\";\n};\nconst singleOperationPathMappingResolver = (before, after) => {\n  const result = { added: [], removed: [], mapped: {} };\n  const beforeKeys = objectKeys(before);\n  const afterKeys = objectKeys(after);\n  const keysMaxLength = Math.max(beforeKeys.length, afterKeys.length);\n  for (let i = 0; i < keysMaxLength; i++) {\n    if (!beforeKeys[i]) {\n      result.added.push(afterKeys[i]);\n    } else if (!afterKeys[i]) {\n      result.removed.push(beforeKeys[i]);\n    } else {\n      result.mapped[beforeKeys[i]] = afterKeys[i];\n    }\n  }\n  return result;\n};\nconst pathMappingResolver = (before, after) => {\n  const result = { added: [], removed: [], mapped: {} };\n  const originalBeforeKeys = objectKeys(before);\n  const originalAfterKeys = objectKeys(after);\n  const unifiedAfterKeys = originalAfterKeys.map(hidePathParamNames);\n  const notMappedAfterIndices = new Set(originalAfterKeys.keys());\n  originalBeforeKeys.forEach((beforeKey) => {\n    const unifiedBeforePath = hidePathParamNames(beforeKey);\n    const index = unifiedAfterKeys.indexOf(unifiedBeforePath);\n    if (index < 0) {\n      result.removed.push(beforeKey);\n    } else {\n      result.mapped[beforeKey] = originalAfterKeys[index];\n      notMappedAfterIndices.delete(index);\n    }\n  });\n  notMappedAfterIndices.forEach((notMappedIndex) => result.added.push(originalAfterKeys[notMappedIndex]));\n  return result;\n};\nconst paramMappingResolver = (pathLevel) => {\n  return (before, after, ctx) => {\n    const result = { added: [], removed: [], mapped: {} };\n    const pathParamMapping = mapPathParams(ctx, pathLevel);\n    const afterKeys = onlyExistedArrayIndexes(after);\n    const beforeKeys = onlyExistedArrayIndexes(before);\n    const mappedIndex = new Set(afterKeys);\n    beforeKeys.forEach((i) => {\n      const beforeIn = getStringValue(before[i], \"in\");\n      const beforeName = getStringValue(before[i], \"name\") ?? \"\";\n      const _afterIndex = after.findIndex((a) => {\n        const afterIn = getStringValue(a, \"in\");\n        const afterName = getStringValue(a, \"name\") ?? \"\";\n        return beforeIn === afterIn && (beforeName === afterName || beforeIn === \"path\" && pathParamMapping[beforeName] === afterName);\n      });\n      if (_afterIndex < 0) {\n        result.removed.push(i);\n      } else {\n        result.mapped[i] = _afterIndex;\n        mappedIndex.delete(_afterIndex);\n      }\n    });\n    mappedIndex.forEach((i) => result.added.push(i));\n    return result;\n  };\n};\nconst contentMediaTypeMappingResolver = (before, after) => {\n  const result = { added: [], removed: [], mapped: {} };\n  const beforeKeys = objectKeys(before);\n  const afterKeys = objectKeys(after);\n  const unmappedAfterIndices = new Set(afterKeys.keys());\n  const unmappedBeforeIndices = new Set(beforeKeys.keys());\n  function mapExactMatches(getComparisonKey) {\n    for (const beforeIndex of unmappedBeforeIndices) {\n      const beforeKey = getComparisonKey(beforeKeys[beforeIndex]);\n      let matchingAfterIndex;\n      for (const afterIndex of unmappedAfterIndices) {\n        const afterKey = getComparisonKey(afterKeys[afterIndex]);\n        if (afterKey === beforeKey) {\n          matchingAfterIndex = afterIndex;\n          break;\n        }\n      }\n      if (matchingAfterIndex !== void 0) {\n        result.mapped[beforeKeys[beforeIndex]] = afterKeys[matchingAfterIndex];\n        unmappedAfterIndices.delete(matchingAfterIndex);\n        unmappedBeforeIndices.delete(beforeIndex);\n      }\n    }\n  }\n  mapExactMatches((key) => key);\n  mapExactMatches(getMediaTypeBase);\n  if (unmappedBeforeIndices.size === 1 && unmappedAfterIndices.size === 1) {\n    const beforeIndex = Array.from(unmappedBeforeIndices)[0];\n    const afterIndex = Array.from(unmappedAfterIndices)[0];\n    const beforeKey = beforeKeys[beforeIndex];\n    const afterKey = afterKeys[afterIndex];\n    const beforeBaseType = getMediaTypeBase(beforeKey);\n    const afterBaseType = getMediaTypeBase(afterKey);\n    if (isWildcardCompatible(beforeBaseType, afterBaseType)) {\n      result.mapped[beforeKeys[beforeIndex]] = afterKeys[afterIndex];\n      unmappedAfterIndices.delete(afterIndex);\n      unmappedBeforeIndices.delete(beforeIndex);\n    }\n  }\n  unmappedBeforeIndices.forEach((index) => result.removed.push(beforeKeys[index]));\n  unmappedAfterIndices.forEach((index) => result.added.push(afterKeys[index]));\n  return result;\n};\nfunction getMediaTypeBase(mediaType) {\n  return mediaType.split(\";\")[0] ?? \"\";\n}\nfunction isWildcardCompatible(beforeType, afterType) {\n  const [beforeMainType, beforeSubType] = beforeType.split(\"/\");\n  const [afterMainType, afterSubType] = afterType.split(\"/\");\n  if (beforeMainType !== afterMainType && beforeMainType !== \"*\" && afterMainType !== \"*\") {\n    return false;\n  }\n  if (beforeSubType !== afterSubType && beforeSubType !== \"*\" && afterSubType !== \"*\") {\n    return false;\n  }\n  return true;\n}\nfunction hidePathParamNames(path) {\n  return path.replace(PATH_PARAMETER_REGEXP, PATH_PARAM_UNIFIED_PLACEHOLDER);\n}\nconst PATH_PARAMETER_REGEXP = /\\{.*?\\}/g;\nconst PATH_PARAM_UNIFIED_PLACEHOLDER = \"*\";\nconst paramClassifyRule = [\n  ({ after }) => {\n    if (isIgnoredHeaderParam(after.value)) {\n      return unclassified;\n    }\n    return getKeyValue(after.value, \"required\") && !isExist(getKeyValue(after.value, \"schema\", \"default\")) ? breaking : nonBreaking;\n  },\n  ({ before }) => {\n    return isIgnoredHeaderParam(before.value) ? unclassified : breaking;\n  },\n  unclassified\n];\nconst NON_BREAKING_HEADERS = [\"Accept\", \"Content-Type\", \"Authorization\", \"authorization\"];\nconst isIgnoredHeaderParam = (param) => {\n  return param.in === \"header\" && NON_BREAKING_HEADERS.includes(param.name);\n};\nconst apihubParametersRemovalClassifyRule = (ctx) => {\n  const { before: { value } } = ctx;\n  if (!Array.isArray(value)) {\n    return breaking;\n  }\n  return value.every(isIgnoredHeaderParam) ? nonBreaking : breaking;\n};\nconst parameterExplodeClassifyRule = [\n  ({ after }) => after.value && getKeyValue(after.parent, \"style\") === \"form\" || !after.value && getKeyValue(after.parent, \"style\") !== \"form\" ? annotation : breaking,\n  ({ before }) => before.value && getKeyValue(before.parent, \"style\") === \"form\" || !before.value && getKeyValue(before.parent, \"style\") !== \"form\" ? annotation : breaking,\n  breaking\n];\nconst parameterAllowReservedClassifyRule = [\n  ({ after }) => [\"path\", \"cookie\", \"header\"].includes(getKeyValue(after.parent, \"in\")) ? unclassified : nonBreaking,\n  ({ after }) => [\"path\", \"cookie\", \"header\"].includes(getKeyValue(after.parent, \"in\")) ? unclassified : breaking,\n  ({ after }) => {\n    if ([\"path\", \"cookie\", \"header\"].includes(getKeyValue(after.parent, \"in\"))) {\n      return unclassified;\n    }\n    return after.value ? nonBreaking : breaking;\n  }\n];\nconst parameterNameClassifyRule = [\n  nonBreaking,\n  breaking,\n  ({ before }) => getKeyValue(before.parent, \"in\") === \"path\" ? annotation : breaking\n];\nconst parameterRequiredClassifyRule = [\n  breaking,\n  nonBreaking,\n  (ctx) => getKeyValue(ctx.after.parent, \"schema\", \"default\") ? nonBreaking : breakingIfAfterTrue(ctx)\n];\nconst apihubAllowEmptyValueParameterClassifyRule = transformClassifyRule(\n  reverseClassifyRule(booleanClassifier),\n  (type, { after }, action) => getKeyValue(after.parent, \"in\") === \"query\" ? type : unclassified\n);\nconst globalSecurityClassifyRule = [\n  ({ after }) => !emptySecurity(after.value) ? breaking : nonBreaking,\n  nonBreaking,\n  ({\n    after,\n    before\n  }) => includeSecurity(after.value, before.value) || emptySecurity(after.value) ? nonBreaking : breaking\n];\nconst globalSecurityItemClassifyRule = [\n  ({ before }) => isNotEmptyArray(before.parent) ? nonBreaking : breaking,\n  ({ after }) => isNotEmptyArray(after.parent) ? nonBreaking : breaking,\n  ({\n    after,\n    before\n  }) => includeSecurity(after.parent, before.parent) || emptySecurity(after.value) ? nonBreaking : breaking\n];\nconst operationSecurityClassifyRule = [\n  ({\n    before,\n    after\n  }) => emptySecurity(after.value) || includeSecurity(after.value, getKeyValue(before.root, \"security\")) ? nonBreaking : breaking,\n  ({ before, after }) => includeSecurity(getKeyValue(after.root, \"security\"), before.value) ? nonBreaking : breaking,\n  ({\n    before,\n    after\n  }) => includeSecurity(after.value, before.value) || emptySecurity(after.value) ? nonBreaking : breaking\n];\nconst operationSecurityItemClassifyRule = [\n  ({ before }) => isNotEmptyArray(before.parent) ? nonBreaking : breaking,\n  ({ after }) => isNotEmptyArray(after.parent) ? breaking : nonBreaking,\n  ({\n    before,\n    after\n  }) => includeSecurity(after.parent, before.parent) || emptySecurity(after.value) ? nonBreaking : breaking\n];\nconst pathChangeClassifyRule = [\n  nonBreaking,\n  breaking,\n  ({ before, after }) => {\n    const beforePath = before.key;\n    const afterPath = after.key;\n    const unifiedBeforePath = hidePathParamNames(beforePath);\n    const unifiedAfterPath = hidePathParamNames(afterPath);\n    return unifiedBeforePath === unifiedAfterPath ? annotation : breaking;\n  }\n];\nconst calculateChangedProperty = (matchResult, ignoredLastProperty = false) => {\n  const path = calculateMatchingPathEnd(matchResult, ignoredLastProperty);\n  if (isEmptyArray(path)) {\n    return void 0;\n  }\n  return path.join(\".\");\n};\nconst calculateMatchingPathEnd = (matchResult, ignoredLastProperty = false) => {\n  let matchingDepth = calculateMatchingDepth(matchResult);\n  matchingDepth = ignoredLastProperty ? matchingDepth + 1 : matchingDepth;\n  return matchResult.path.slice(matchingDepth);\n};\nconst calculateComponentsPath = (matchResult) => {\n  return matchResult.path.slice(0, 3).join(\".\");\n};\nconst calculateRequestPlace = (matchResult) => {\n  let place;\n  const mediaType = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_MEDIA_TYPE]);\n  if (startFromOpenApiComponents(matchResult.path)) {\n    const requestPath = calculateComponentsPath(matchResult);\n    place = `in '${requestPath}' (${mediaType})`;\n  } else {\n    place = `in request body (${mediaType})`;\n  }\n  return place;\n};\nconst calculateResponsePlace = (matchResult) => {\n  let place;\n  const mediaType = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_MEDIA_TYPE]);\n  if (startFromOpenApiComponents(matchResult.path)) {\n    const responsePath = calculateComponentsPath(matchResult);\n    place = `in '${responsePath}' (${mediaType})`;\n  } else {\n    const responseName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_RESPONSE_NAME]);\n    place = `in response '${responseName}' (${mediaType})`;\n  }\n  return place;\n};\nconst calculateParameterPlace = (matchResult, diff, ctx, depthInParameter = 0) => {\n  let parameterName;\n  let parameterIn;\n  let parameterPath;\n  let place;\n  if (startFromOpenApiComponents(matchResult.path)) {\n    parameterPath = calculateComponentsPath(matchResult);\n    place = `in '${parameterPath}'`;\n  } else {\n    const matchingDepth = calculateMatchingDepth(matchResult);\n    const parameterNode = resolveValueFromCompareContext(diff, ctx, ...calculateParentJumpDeep(matchResult.path.length - matchingDepth + 1 - depthInParameter));\n    if (!parameterNode) {\n      return void 0;\n    }\n    parameterName = checkPrimitiveType(parameterNode[\"name\"]);\n    parameterIn = checkPrimitiveType(parameterNode[\"in\"]);\n    place = `in ${parameterIn} parameter '${parameterName}'`;\n  }\n  return place;\n};\nconst calculateHeaderPlace = (matchResult) => {\n  let place;\n  let headerName;\n  let headerPath;\n  if (startFromOpenApiComponents(matchResult.path)) {\n    headerPath = calculateComponentsPath(matchResult);\n    place = `in '${headerPath}'`;\n  } else {\n    headerName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_HEADER_NAME]);\n    place = `in header '${headerName}'`;\n  }\n  return place;\n};\nconst calculateEncodingPlaceInResponse = (matchResult) => {\n  let responsePath;\n  const mediaType = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_MEDIA_TYPE]);\n  if (startFromOpenApiComponents(matchResult.path)) {\n    const componentsResponsePath = calculateComponentsPath(matchResult);\n    responsePath = `'${componentsResponsePath}' (${mediaType})`;\n  } else {\n    const responseName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_RESPONSE_NAME]);\n    responsePath = `response '${responseName}' (${mediaType})`;\n  }\n  const headerName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_HEADER_NAME]);\n  const encodingName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_ENCODING_NAME]);\n  return `in header ${headerName} of encoding '${encodingName}' of ${responsePath}`;\n};\nconst calculateEncodingPlaceInRequest = (matchResult) => {\n  let requestPath;\n  const mediaType = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_MEDIA_TYPE]);\n  if (startFromOpenApiComponents(matchResult.path)) {\n    const componentsRequestPath = calculateComponentsPath(matchResult);\n    requestPath = `'${componentsRequestPath}' (${mediaType})`;\n  } else {\n    requestPath = `request body (${mediaType})`;\n  }\n  const headerName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_HEADER_NAME]);\n  const encodingName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_ENCODING_NAME]);\n  return `in header ${headerName} of encoding '${encodingName}' of ${requestPath}`;\n};\nconst encodingParamsCalculator = (diff, _) => {\n  const result = {\n    action: DIFF_ACTION_TO_ACTION_MAP[diff.action],\n    preposition: DIFF_ACTION_TO_PREPOSITION_MAP[diff.action]\n  };\n  const declarationPaths = resolveAllDeclarationPath(diff);\n  let matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_ENCODING_IN_REQUEST);\n  if (matchResult) {\n    const place = calculateRequestPlace(matchResult);\n    const encodingName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_ENCODING_NAME]);\n    return {\n      ...result,\n      encodingName,\n      place\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_ENCODING_IN_RESPONSE);\n  if (matchResult) {\n    const place = calculateResponsePlace(matchResult);\n    const encodingName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_ENCODING_NAME]);\n    return {\n      ...result,\n      encodingName,\n      place\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_ENCODING_IN_REQUEST);\n  if (matchResult) {\n    const encodingParams = calculateEncodingParamsInRequest(matchResult);\n    return {\n      ...result,\n      ...encodingParams\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_ENCODING_IN_RESPONSE);\n  if (matchResult) {\n    const encodingParams = calculateEncodingParamsInResponse(matchResult);\n    return {\n      ...result,\n      ...encodingParams\n    };\n  }\n  return result;\n};\nconst calculateEncodingParamsInResponse = (matchResult) => {\n  const place = calculateResponsePlace(matchResult);\n  const encodingName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_ENCODING_NAME]);\n  const propertyName = calculateChangedProperty(matchResult, true);\n  return { place, encodingName, propertyName };\n};\nconst calculateEncodingParamsInRequest = (matchResult) => {\n  const place = calculateRequestPlace(matchResult);\n  const encodingName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_ENCODING_NAME]);\n  const propertyName = calculateChangedProperty(matchResult, true);\n  return { place, encodingName, propertyName };\n};\nconst PREDICATES_PATHS_FOR_CHANGED_ENCODING_IN_REQUEST = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_REQUEST_BODIES, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME)],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_REQUEST_BODY, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME)])\n];\nconst PREDICATES_PATHS_FOR_CHANGED_ENCODING_IN_RESPONSE = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME)],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME)])\n];\nconst PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_ENCODING_IN_REQUEST = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_REQUEST_BODIES, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME), PREDICATE_UNCLOSED_END],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_REQUEST_BODY, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME), PREDICATE_UNCLOSED_END])\n];\nconst PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_ENCODING_IN_RESPONSE = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME), PREDICATE_UNCLOSED_END],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME), PREDICATE_UNCLOSED_END])\n];\nconst PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_ENCODING_IN_HEADER_IN_RESPONSE = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME), OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME), PREDICATE_UNCLOSED_END],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME), OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME), PREDICATE_UNCLOSED_END])\n];\nconst PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_ENCODING_IN_HEADER_IN_REQUEST = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_REQUEST_BODIES, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME), OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME), PREDICATE_UNCLOSED_END],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_REQUEST_BODY, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME), OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME), PREDICATE_UNCLOSED_END])\n];\nconst schemaParamsCalculator = (diff, ctx) => {\n  const result = {\n    action: DIFF_ACTION_TO_ACTION_MAP[diff.action],\n    preposition: DIFF_ACTION_TO_PREPOSITION_MAP[diff.action]\n  };\n  const declarationPaths = resolveAllDeclarationPath(diff);\n  let matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_SCHEMA_IN_COMPONENTS);\n  if (matchResult) {\n    const scope = diff.scope;\n    const componentsSchemaPath = calculateComponentsPath(matchResult);\n    const commonSchemaParams = calculateCommonSchemaParams(matchResult, componentsSchemaPath);\n    return {\n      ...result,\n      ...commonSchemaParams,\n      scope\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_SCHEMA_IN_PARAMETER);\n  if (matchResult) {\n    const place = calculateParameterPlace(matchResult, diff, ctx, 1);\n    const commonSchemaParams = calculateCommonSchemaParams(matchResult);\n    return {\n      ...result,\n      ...commonSchemaParams,\n      place\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_SCHEMA_IN_REQUEST);\n  if (matchResult) {\n    const place = calculateRequestPlace(matchResult);\n    const commonSchemaParams = calculateCommonSchemaParams(matchResult);\n    return {\n      ...result,\n      ...commonSchemaParams,\n      place\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_SCHEMA_IN_RESPONSE);\n  if (matchResult) {\n    const place = calculateResponsePlace(matchResult);\n    const commonSchemaParams = calculateCommonSchemaParams(matchResult);\n    return {\n      ...result,\n      ...commonSchemaParams,\n      place\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_SCHEMA_IN_HEADER);\n  if (matchResult) {\n    const place = calculateHeaderPlace(matchResult);\n    const commonSchemaParams = calculateCommonSchemaParams(matchResult);\n    return {\n      ...result,\n      ...commonSchemaParams,\n      place\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_SCHEMA_IN_HEADER_IN_RESPONSE);\n  if (matchResult) {\n    const place = calculateHeaderPlace(matchResult);\n    const commonSchemaParams = calculateCommonSchemaParams(matchResult);\n    return {\n      ...result,\n      ...commonSchemaParams,\n      place\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_ENCODING_IN_HEADER_IN_RESPONSE);\n  if (matchResult) {\n    const place = calculateEncodingPlaceInResponse(matchResult);\n    const commonSchemaParams = calculateCommonSchemaParams(matchResult);\n    return {\n      ...result,\n      ...commonSchemaParams,\n      place\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_ENCODING_IN_HEADER_IN_REQUEST);\n  if (matchResult) {\n    const place = calculateEncodingPlaceInRequest(matchResult);\n    const commonSchemaParams = calculateCommonSchemaParams(matchResult);\n    return {\n      ...result,\n      ...commonSchemaParams,\n      place\n    };\n  }\n  return result;\n};\nconst calculateCommonSchemaParams = (schemaMatchResult, componentsSchemaPath) => {\n  let schemaPath;\n  const pathEnd = calculateMatchingPathEnd(schemaMatchResult);\n  if (pathEnd.length < 4) {\n    schemaPath = componentsSchemaPath;\n    return { schemaPath };\n  }\n  if (pathEnd[0] !== OPEN_API_PROPERTY_SCHEMA) {\n    pathEnd.shift();\n  }\n  pathEnd.pop();\n  schemaPath = pathEnd.join(\".\");\n  if (componentsSchemaPath) {\n    schemaPath = schemaPath ? [componentsSchemaPath, schemaPath].join(\".\") : componentsSchemaPath;\n  }\n  return { schemaPath };\n};\nconst PREDICATES_PATHS_FOR_CHANGED_SCHEMA_IN_COMPONENTS = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_SCHEMAS, PREDICATE_ANY_VALUE, PREDICATE_UNCLOSED_END]\n];\nconst PREDICATES_PATHS_FOR_CHANGED_SCHEMA_IN_PARAMETER = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_PARAMETERS, grepValue(GREP_TEMPLATE_PARAM_PARAMETER_NAME), OPEN_API_PROPERTY_SCHEMA, PREDICATE_UNCLOSED_END],\n  [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_PARAMETERS, grepValue(GREP_TEMPLATE_PARAM_PARAMETER_NAME), OPEN_API_PROPERTY_SCHEMA, PREDICATE_UNCLOSED_END],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_PARAMETERS, grepValue(GREP_TEMPLATE_PARAM_PARAMETER_NAME), OPEN_API_PROPERTY_SCHEMA, PREDICATE_UNCLOSED_END])\n];\nconst PREDICATES_PATHS_FOR_CHANGED_SCHEMA_IN_REQUEST = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_REQUEST_BODIES, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_SCHEMA, PREDICATE_UNCLOSED_END],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_REQUEST_BODY, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_SCHEMA, PREDICATE_UNCLOSED_END])\n];\nconst PREDICATES_PATHS_FOR_CHANGED_SCHEMA_IN_RESPONSE = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_SCHEMA, PREDICATE_UNCLOSED_END],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_SCHEMA, PREDICATE_UNCLOSED_END])\n];\nconst PREDICATES_PATHS_FOR_CHANGED_SCHEMA_IN_HEADER = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME), OPEN_API_PROPERTY_SCHEMA, PREDICATE_UNCLOSED_END]\n];\nconst PREDICATES_PATHS_FOR_CHANGED_SCHEMA_IN_HEADER_IN_RESPONSE = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME), OPEN_API_PROPERTY_SCHEMA, PREDICATE_UNCLOSED_END],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME), OPEN_API_PROPERTY_SCHEMA, PREDICATE_UNCLOSED_END])\n];\nconst SPEC_TYPE_TO_VERSION = {\n  [SPEC_TYPE_OPEN_API_30]: \"3.0.0\",\n  [SPEC_TYPE_OPEN_API_31]: \"3.1.0\"\n};\nconst openApiJsonSchemaAnyFactory = (version) => (schema, schemaOrigins, opt) => {\n  const normalizedSpec = normalize({\n    openapi: SPEC_TYPE_TO_VERSION[version],\n    components: {\n      schemas: {\n        empty: schema,\n        [opt.originsFlag]: {\n          empty: schemaOrigins\n        }\n      },\n      [opt.originsFlag]: {\n        schemas: schemaOrigins\n      }\n    },\n    [opt.originsFlag]: {\n      components: schemaOrigins\n    }\n  }, {\n    ...opt,\n    // schema is already normalized, resolveRef is disabled and originsAlreadyDefined is true in order to prevent origins override\n    resolveRef: false,\n    originsAlreadyDefined: true,\n    validate: false,\n    allowNotValidSyntheticChanges: false\n  });\n  return normalizedSpec.components.schemas.empty;\n};\nconst openApiSchemaRules = (options) => {\n  const jsonSchemaVersion = options.version === SPEC_TYPE_OPEN_API_30 ? SPEC_TYPE_JSON_SCHEMA_04 : SPEC_TYPE_JSON_SCHEMA_07;\n  const schemaRules = jsonSchemaRules({\n    additionalRules: {\n      adapter: [\n        jsonSchemaAdapter(openApiJsonSchemaAnyFactory(options.version))\n      ],\n      descriptionParamCalculator: schemaParamsCalculator,\n      description: diffDescription(resolveSchemaDescriptionTemplates()),\n      // openapi extensions\n      \"/nullable\": {\n        $: [\n          nonBreaking,\n          breaking,\n          ({ after }) => breakingIf(!after.value),\n          breakingIfAfterTrue,\n          nonBreaking,\n          ({ after }) => breakingIf(!!after.value)\n        ],\n        description: diffDescription(resolveSchemaDescriptionTemplates(\"nullable status\"))\n      },\n      \"/discriminator\": { $: allUnclassified },\n      \"/example\": { $: allAnnotation, description: diffDescription(resolveSchemaDescriptionTemplates(\"example\")) },\n      \"/externalDocs\": {\n        $: allAnnotation,\n        description: diffDescription(resolveSchemaDescriptionTemplates(\"externalDocs\")),\n        \"/description\": {\n          $: allAnnotation,\n          description: diffDescription(resolveSchemaDescriptionTemplates(\"description of externalDocs\"))\n        },\n        \"/url\": {\n          $: allAnnotation,\n          description: diffDescription(resolveSchemaDescriptionTemplates(\"url of externalDocs\"))\n        },\n        \"/*\": {\n          $: allAnnotation,\n          description: diffDescription(resolveSchemaDescriptionTemplates(\"externalDocs\"))\n        }\n      },\n      \"/xml\": {}\n    },\n    version: jsonSchemaVersion\n  });\n  return options.response ? transformCompareRules(schemaRules, reverseClassifyRuleTransformer) : schemaRules;\n};\nconst apihubCaseInsensitiveKeyMappingResolver = (before, after) => {\n  const result = { added: [], removed: [], mapped: {} };\n  const afterKeys = [...new Set(Object.keys(after))];\n  for (const _key of Object.keys(before)) {\n    const key = _key.toLocaleLowerCase();\n    const afterKeyIndex = afterKeys.findIndex((value) => value.toLocaleLowerCase() === key);\n    if (afterKeyIndex !== -1) {\n      result.mapped[_key] = afterKeys[afterKeyIndex];\n      afterKeys.splice(afterKeyIndex, 1);\n    } else {\n      result.removed.push(key);\n    }\n  }\n  afterKeys.forEach((key) => result.added.push(key));\n  return result;\n};\nconst COMPARE_SCOPE_REQUEST = \"request\";\nconst COMPARE_SCOPE_RESPONSE = \"response\";\nconst COMPARE_SCOPE_COMPONENTS = \"components\";\nconst parameterParamsCalculator = (diff, ctx) => {\n  const result = {\n    action: DIFF_ACTION_TO_ACTION_MAP[diff.action],\n    preposition: DIFF_ACTION_TO_PREPOSITION_MAP[diff.action]\n  };\n  const calculateCommonParams = (matchResult2, parameterNode) => {\n    let parameterPath;\n    let parameterName;\n    const parameterLocation = checkPrimitiveType(parameterNode[\"in\"]);\n    if (startFromOpenApiComponents(matchResult2.path)) {\n      parameterPath = calculateComponentsPath(matchResult2);\n    } else {\n      parameterName = checkPrimitiveType(parameterNode[\"name\"]);\n    }\n    return { parameterLocation, parameterPath, parameterName };\n  };\n  const declarationPaths = resolveAllDeclarationPath(diff);\n  let matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_PARAMETER);\n  if (matchResult) {\n    const parameterNode = resolveCurrentNode(diff, ctx);\n    if (!parameterNode) {\n      return FAILED_PARAMS_CALCULATION;\n    }\n    const commonParams = calculateCommonParams(matchResult, parameterNode);\n    return {\n      ...result,\n      ...commonParams\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_PARAMETER);\n  if (matchResult) {\n    const parameterNode = resolveParentNode(diff, ctx);\n    if (!parameterNode) {\n      return FAILED_PARAMS_CALCULATION;\n    }\n    const commonParams = calculateCommonParams(matchResult, parameterNode);\n    return {\n      ...result,\n      ...commonParams\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_EXAMPLE_FIELD_IN_PARAMETER);\n  if (matchResult) {\n    const matchingDepth = calculateMatchingDepth(matchResult);\n    const propertyName = calculateChangedProperty(matchResult);\n    const parameterNode = resolveValueFromCompareContext(diff, ctx, ...calculateParentJumpDeep(matchResult.path.length - matchingDepth));\n    if (!parameterNode) {\n      return FAILED_PARAMS_CALCULATION;\n    }\n    const commonParams = calculateCommonParams(matchResult, parameterNode);\n    return {\n      ...result,\n      ...commonParams,\n      propertyName\n    };\n  }\n  return result;\n};\nconst PREDICATES_PATHS_FOR_CHANGED_PARAMETER = [\n  [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_PARAMETERS, PREDICATE_ANY_VALUE],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_PARAMETERS, PREDICATE_ANY_VALUE])\n];\nconst PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_PARAMETER = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_PARAMETERS, PREDICATE_ANY_VALUE, PREDICATE_ANY_VALUE],\n  [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_PARAMETERS, PREDICATE_ANY_VALUE, PREDICATE_ANY_VALUE],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_PARAMETERS, PREDICATE_ANY_VALUE, PREDICATE_ANY_VALUE])\n];\nconst PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_EXAMPLE_FIELD_IN_PARAMETER = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_PARAMETERS, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_EXAMPLE, PREDICATE_UNCLOSED_END],\n  [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_PARAMETERS, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_EXAMPLE, PREDICATE_UNCLOSED_END],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_PARAMETERS, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_EXAMPLE, PREDICATE_UNCLOSED_END])\n];\nconst requestParamsCalculator = (diff, _) => {\n  const result = {\n    action: DIFF_ACTION_TO_ACTION_MAP[diff.action],\n    preposition: DIFF_ACTION_TO_PREPOSITION_MAP[diff.action]\n  };\n  const declarationPaths = resolveAllDeclarationPath(diff);\n  let matchResult = matchPaths(declarationPaths, PREDICATES_PATH_FOR_CHANGED_REQUEST);\n  if (matchResult) {\n    return result;\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATH_FOR_CHANGED_FIELD_IN_REQUEST);\n  if (matchResult) {\n    let requestPath;\n    if (startFromOpenApiComponents(matchResult.path)) {\n      requestPath = calculateComponentsPath(matchResult);\n    }\n    return {\n      ...result,\n      requestPath\n    };\n  }\n  return result;\n};\nconst PREDICATES_PATH_FOR_CHANGED_REQUEST = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_REQUEST_BODIES, PREDICATE_ANY_VALUE],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_REQUEST_BODY])\n];\nconst PREDICATES_PATH_FOR_CHANGED_FIELD_IN_REQUEST = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_REQUEST_BODIES, PREDICATE_ANY_VALUE, PREDICATE_ANY_VALUE],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_REQUEST_BODY, PREDICATE_ANY_VALUE])\n];\nconst responseParamsCalculator = (diff, _) => {\n  const result = {\n    action: DIFF_ACTION_TO_ACTION_MAP[diff.action],\n    preposition: DIFF_ACTION_TO_PREPOSITION_MAP[diff.action]\n  };\n  const declarationPaths = resolveAllDeclarationPath(diff);\n  let matchResult = matchPaths(declarationPaths, PREDICATES_PATH_FOR_CHANGED_RESPONSE);\n  if (matchResult) {\n    const responseName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_RESPONSE_NAME]);\n    return {\n      ...result,\n      responseName\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATH_FOR_CHANGED_FIELD_IN__RESPONSE);\n  if (matchResult) {\n    let componentPath;\n    let responseName;\n    if (startFromOpenApiComponents(matchResult.path)) {\n      componentPath = calculateComponentsPath(matchResult);\n    } else {\n      responseName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_RESPONSE_NAME]);\n    }\n    return {\n      ...result,\n      componentPath,\n      responseName\n    };\n  }\n  return result;\n};\nconst PREDICATES_PATH_FOR_CHANGED_RESPONSE = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME)],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME)])\n];\nconst PREDICATES_PATH_FOR_CHANGED_FIELD_IN__RESPONSE = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), PREDICATE_ANY_VALUE],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), PREDICATE_ANY_VALUE])\n];\nconst contentParamsCalculator = (diff, _) => {\n  const result = {\n    action: DIFF_ACTION_TO_ACTION_MAP[diff.action],\n    preposition: DIFF_ACTION_TO_PREPOSITION_MAP[diff.action]\n  };\n  const calculateCommonParams = (matchResult2, place) => {\n    let componentPath;\n    let scope;\n    const mediaType = checkPrimitiveType(matchResult2.grepValues[GREP_TEMPLATE_PARAM_MEDIA_TYPE]);\n    if (startFromOpenApiComponents(matchResult2.path)) {\n      componentPath = calculateComponentsPath(matchResult2);\n    } else {\n      scope = place;\n    }\n    return { mediaType, componentPath, scope };\n  };\n  const declarationPaths = resolveAllDeclarationPath(diff);\n  let matchResult = matchPaths(declarationPaths, PREDICATES_PATH_FOR_CHANGED_CONTENT_IN_REQUEST);\n  if (matchResult) {\n    const commonParams = calculateCommonParams(matchResult, \"request body\");\n    return {\n      ...result,\n      ...commonParams\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATH_FOR_CHANGED_CONTENT_IN_RESPONSE);\n  if (matchResult) {\n    const responseName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_RESPONSE_NAME]);\n    const commonParams = calculateCommonParams(matchResult, \"response\");\n    return {\n      ...result,\n      ...commonParams,\n      responseName\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATH_FOR_CHANGED_EXAMPLE_IN_CONTENT_IN_REQUEST);\n  if (matchResult) {\n    const propertyName = calculateChangedProperty(matchResult);\n    const commonParams = calculateCommonParams(matchResult, \"request body\");\n    return {\n      ...result,\n      ...commonParams,\n      propertyName\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATH_FOR_CHANGED_EXAMPLE_IN_CONTENT_IN_RESPONSE);\n  if (matchResult) {\n    const propertyName = calculateChangedProperty(matchResult);\n    const responseName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_RESPONSE_NAME]);\n    const commonParams = calculateCommonParams(matchResult, \"response\");\n    return {\n      ...result,\n      ...commonParams,\n      propertyName,\n      responseName\n    };\n  }\n  return result;\n};\nconst PREDICATES_PATH_FOR_CHANGED_CONTENT_IN_REQUEST = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_REQUEST_BODIES, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE)],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_REQUEST_BODY, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE)])\n];\nconst PREDICATES_PATH_FOR_CHANGED_CONTENT_IN_RESPONSE = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE)],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE)])\n];\nconst PREDICATES_PATH_FOR_CHANGED_EXAMPLE_IN_CONTENT_IN_REQUEST = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_REQUEST_BODIES, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_EXAMPLE],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_REQUEST_BODY, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_EXAMPLE]),\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_REQUEST_BODIES, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_EXAMPLE, PREDICATE_UNCLOSED_END],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_REQUEST_BODY, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_EXAMPLE, PREDICATE_UNCLOSED_END])\n];\nconst PREDICATES_PATH_FOR_CHANGED_EXAMPLE_IN_CONTENT_IN_RESPONSE = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_RESPONSES, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_EXAMPLE],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_EXAMPLE]),\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_RESPONSES, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_EXAMPLE, PREDICATE_UNCLOSED_END],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_EXAMPLE, PREDICATE_UNCLOSED_END])\n];\nconst examplesParamsCalculator = (diff, ctx) => {\n  const result = {\n    action: DIFF_ACTION_TO_ACTION_MAP[diff.action],\n    preposition: DIFF_ACTION_TO_PREPOSITION_MAP[diff.action]\n  };\n  const declarationPaths = resolveAllDeclarationPath(diff);\n  let matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_EXAMPLES);\n  if (matchResult) {\n    const exampleName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_EXAMPLE_NAME]);\n    return {\n      ...result,\n      exampleName\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_EXAMPLES);\n  if (matchResult) {\n    const propertyName = calculateChangedProperty(matchResult, true);\n    const examplePath = calculateComponentsPath(matchResult);\n    return {\n      ...result,\n      propertyName,\n      examplePath\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_EXAMPLES_IN_PARAMETERS);\n  if (matchResult) {\n    const place = calculateParameterPlace(matchResult, diff, ctx);\n    const propertyName = calculateChangedProperty(matchResult, true);\n    const exampleName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_EXAMPLE_NAME]);\n    return {\n      ...result,\n      propertyName,\n      exampleName,\n      place\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_EXAMPLES_IN_REQUEST);\n  if (matchResult) {\n    const propertyName = calculateChangedProperty(matchResult, true);\n    const exampleName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_EXAMPLE_NAME]);\n    const place = calculateRequestPlace(matchResult);\n    return {\n      ...result,\n      propertyName,\n      exampleName,\n      place\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_EXAMPLES_IN_RESPONSE);\n  if (matchResult) {\n    const propertyName = calculateChangedProperty(matchResult, true);\n    const exampleName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_EXAMPLE_NAME]);\n    const place = calculateResponsePlace(matchResult);\n    return {\n      ...result,\n      propertyName,\n      exampleName,\n      place\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_EXAMPLES_IN_HEADER);\n  if (matchResult) {\n    const place = calculateHeaderPlace(matchResult);\n    const propertyName = calculateChangedProperty(matchResult, true);\n    const exampleName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_EXAMPLE_NAME]);\n    return {\n      ...result,\n      propertyName,\n      exampleName,\n      place\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_EXAMPLES_IN_HEADER_IN_RESPONSE);\n  if (matchResult) {\n    const propertyName = calculateChangedProperty(matchResult, true);\n    const exampleName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_EXAMPLE_NAME]);\n    const place = calculateHeaderPlace(matchResult);\n    return {\n      ...result,\n      propertyName,\n      exampleName,\n      place\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_EXAMPLES_IN_ENCODING_IN_HEADER_IN_RESPONSE);\n  if (matchResult) {\n    const propertyName = calculateChangedProperty(matchResult, true);\n    const exampleName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_EXAMPLE_NAME]);\n    const place = calculateEncodingPlaceInResponse(matchResult);\n    return {\n      ...result,\n      propertyName,\n      exampleName,\n      place\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_EXAMPLES_IN_ENCODING_IN_HEADER_IN_REQUEST);\n  if (matchResult) {\n    const propertyName = calculateChangedProperty(matchResult, true);\n    const exampleName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_EXAMPLE_NAME]);\n    const place = calculateEncodingPlaceInRequest(matchResult);\n    return {\n      ...result,\n      propertyName,\n      exampleName,\n      place\n    };\n  }\n  return result;\n};\nconst PREDICATES_PATHS_FOR_CHANGED_EXAMPLES = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME)],\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_PARAMETERS, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME)],\n  [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_PARAMETERS, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME)],\n  [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_PARAMETERS, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME)],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_PARAMETERS, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME)]),\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_REQUEST_BODIES, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_CONTENT, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME)],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_REQUEST_BODY, OPEN_API_PROPERTY_CONTENT, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME)]),\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_RESPONSES, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_CONTENT, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME)],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_RESPONSES, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_CONTENT, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME)]),\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_HEADERS, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME)],\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_RESPONSES, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_HEADERS, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME)],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_RESPONSES, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_HEADERS, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME)])\n];\nconst PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_EXAMPLES = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_EXAMPLES, PREDICATE_ANY_VALUE, PREDICATE_UNCLOSED_END]\n];\nconst PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_EXAMPLES_IN_PARAMETERS = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_PARAMETERS, grepValue(GREP_TEMPLATE_PARAM_PARAMETER_NAME), OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME), PREDICATE_UNCLOSED_END],\n  [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_PARAMETERS, grepValue(GREP_TEMPLATE_PARAM_PARAMETER_NAME), OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME), PREDICATE_UNCLOSED_END],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_PARAMETERS, grepValue(GREP_TEMPLATE_PARAM_PARAMETER_NAME), OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME), PREDICATE_UNCLOSED_END])\n];\nconst PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_EXAMPLES_IN_REQUEST = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_REQUEST_BODIES, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME), PREDICATE_UNCLOSED_END],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_REQUEST_BODY, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME), PREDICATE_UNCLOSED_END])\n];\nconst PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_EXAMPLES_IN_RESPONSE = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME)],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME)])\n];\nconst PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_EXAMPLES_IN_HEADER = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME), OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME)]\n];\nconst PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_EXAMPLES_IN_HEADER_IN_RESPONSE = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME), OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME)],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME), OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME)])\n];\nconst PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_EXAMPLES_IN_ENCODING_IN_HEADER_IN_RESPONSE = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME), OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME), OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME), PREDICATE_UNCLOSED_END],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME), OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME), OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME), PREDICATE_UNCLOSED_END])\n];\nconst PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_EXAMPLES_IN_ENCODING_IN_HEADER_IN_REQUEST = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_REQUEST_BODIES, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME), OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME), OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME), PREDICATE_UNCLOSED_END],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_REQUEST_BODY, OPEN_API_PROPERTY_CONTENT, grepValue(GREP_TEMPLATE_PARAM_MEDIA_TYPE), OPEN_API_PROPERTY_ENCODING, grepValue(GREP_TEMPLATE_PARAM_ENCODING_NAME), OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME), OPEN_API_PROPERTY_EXAMPLES, grepValue(GREP_TEMPLATE_PARAM_EXAMPLE_NAME), PREDICATE_UNCLOSED_END])\n];\nconst headerParamsCalculator = (diff, _) => {\n  const result = {\n    action: DIFF_ACTION_TO_ACTION_MAP[diff.action],\n    preposition: DIFF_ACTION_TO_PREPOSITION_MAP[diff.action]\n  };\n  const calculateResponseCaseParams = (matchResult2) => {\n    let responseName;\n    let responsePath;\n    const headerName = checkPrimitiveType(matchResult2.grepValues[GREP_TEMPLATE_PARAM_HEADER_NAME]);\n    if (startFromOpenApiComponents(matchResult2.path)) {\n      responsePath = calculateComponentsPath(matchResult2);\n    } else {\n      responseName = checkPrimitiveType(matchResult2.grepValues[GREP_TEMPLATE_PARAM_RESPONSE_NAME]);\n    }\n    return { headerName, responsePath, responseName };\n  };\n  const declarationPaths = resolveAllDeclarationPath(diff);\n  let matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_HEADER);\n  if (matchResult) {\n    const headerName = checkPrimitiveType(matchResult.grepValues[GREP_TEMPLATE_PARAM_HEADER_NAME]);\n    return {\n      ...result,\n      headerName\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_HEADER_IN_COMPONENTS);\n  if (matchResult) {\n    const headerPath = calculateComponentsPath(matchResult);\n    return {\n      ...result,\n      headerPath\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_HEADER_IN_RESPONSES);\n  if (matchResult) {\n    const responseParams = calculateResponseCaseParams(matchResult);\n    return {\n      ...result,\n      ...responseParams\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_EXAMPLE_IN_HEADER_IN_COMPONENTS);\n  if (matchResult) {\n    const propertyName = calculateChangedProperty(matchResult);\n    const headerPath = calculateComponentsPath(matchResult);\n    return {\n      ...result,\n      headerPath,\n      propertyName\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_EXAMPLE_IN_HEADER_IN_RESPONSES);\n  if (matchResult) {\n    const propertyName = calculateChangedProperty(matchResult);\n    const responseParams = calculateResponseCaseParams(matchResult);\n    return {\n      ...result,\n      ...responseParams,\n      propertyName\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_ENCODING_IN_HEADER_IN_RESPONSE);\n  if (matchResult) {\n    const propertyName = calculateChangedProperty(matchResult);\n    const place = calculateEncodingPlaceInResponse(matchResult);\n    return {\n      ...result,\n      propertyName,\n      place\n    };\n  }\n  matchResult = matchPaths(declarationPaths, PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_ENCODING_IN_HEADER_IN_REQUEST);\n  if (matchResult) {\n    const propertyName = calculateChangedProperty(matchResult);\n    const place = calculateEncodingPlaceInRequest(matchResult);\n    return {\n      ...result,\n      propertyName,\n      place\n    };\n  }\n  return result;\n};\nconst PREDICATES_PATHS_FOR_CHANGED_HEADER = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME)],\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_RESPONSES, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME)],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_RESPONSES, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME)])\n];\nconst PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_HEADER_IN_COMPONENTS = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_HEADERS, PREDICATE_ANY_VALUE, PREDICATE_ANY_VALUE]\n];\nconst PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_HEADER_IN_RESPONSES = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME), PREDICATE_ANY_VALUE],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME), PREDICATE_ANY_VALUE])\n];\nconst PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_EXAMPLE_IN_HEADER_IN_COMPONENTS = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_HEADERS, PREDICATE_ANY_VALUE, OPEN_API_PROPERTY_EXAMPLE, PREDICATE_UNCLOSED_END]\n];\nconst PREDICATES_PATHS_FOR_CHANGED_FIELD_IN_EXAMPLE_IN_HEADER_IN_RESPONSES = [\n  [OPEN_API_PROPERTY_COMPONENTS, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME), OPEN_API_PROPERTY_EXAMPLE, PREDICATE_UNCLOSED_END],\n  ...OPEN_API_HTTP_METHODS.map((httpMethod) => [OPEN_API_PROPERTY_PATHS, PREDICATE_ANY_VALUE, httpMethod, OPEN_API_PROPERTY_RESPONSES, grepValue(GREP_TEMPLATE_PARAM_RESPONSE_NAME), OPEN_API_PROPERTY_HEADERS, grepValue(GREP_TEMPLATE_PARAM_HEADER_NAME), PREDICATE_ANY_VALUE, PREDICATE_UNCLOSED_END])\n];\nconst documentAnnotationRule = { $: allAnnotation };\nconst operationAnnotationRule = { $: allAnnotation };\nconst openApi3Rules = (options) => {\n  const requestSchemaRules = openApiSchemaRules(options);\n  const responseSchemaRules = openApiSchemaRules({ ...options, response: true });\n  const serversRules = {\n    $: allAnnotation,\n    \"/*\": {\n      \"/variables\": {\n        \"/*\": {\n          \"/enum\": {\n            mapping: deepEqualsUniqueItemsArrayMappingResolver,\n            \"/*\": { ignoreKeyDifference: true }\n          }\n        }\n      }\n    },\n    \"/**\": {\n      $: allAnnotation\n    }\n  };\n  const examplesRules = {\n    $: allAnnotation,\n    \"/*\": {\n      $: allAnnotation,\n      description: diffDescription(`[{{${TEMPLATE_PARAM_ACTION}}}] example '{{${GREP_TEMPLATE_PARAM_EXAMPLE_NAME}}}'`),\n      descriptionParamCalculator: examplesParamsCalculator,\n      \"/description\": {\n        $: allAnnotation,\n        description: diffDescription(resolveExamplesDescriptionTemplates())\n      },\n      \"/externalValue\": {\n        $: allAnnotation,\n        description: diffDescription(resolveExamplesDescriptionTemplates())\n      },\n      \"/summary\": {\n        $: allAnnotation,\n        description: diffDescription(resolveExamplesDescriptionTemplates())\n      },\n      \"/value\": {\n        $: allAnnotation,\n        description: diffDescription(resolveExamplesDescriptionTemplates()),\n        \"/**\": {\n          $: allAnnotation,\n          description: diffDescription(resolveExamplesDescriptionTemplates())\n        }\n      }\n    },\n    \"/**\": { $: allAnnotation }\n  };\n  const parametersRules = {\n    \"/*\": {\n      $: paramClassifyRule,\n      description: diffDescription([`[{{${TEMPLATE_PARAM_ACTION}}}] {{${TEMPLATE_PARAM_PARAMETER_LOCATION}}} parameter '{{${GREP_TEMPLATE_PARAM_PARAMETER_NAME}}}'`]),\n      descriptionParamCalculator: parameterParamsCalculator,\n      [IGNORE_DIFFERENCE_IN_KEYS_RULE]: true,\n      [START_NEW_COMPARE_SCOPE_RULE]: COMPARE_SCOPE_REQUEST,\n      \"/allowEmptyValue\": {\n        $: apihubAllowEmptyValueParameterClassifyRule,\n        description: diffDescription(resolveParameterDescriptionTemplates(\"allowEmptyValue status\"))\n      },\n      \"/allowReserved\": {\n        $: parameterAllowReservedClassifyRule,\n        description: diffDescription(resolveParameterDescriptionTemplates(\"allowReserved status\"))\n      },\n      \"/deprecated\": {\n        $: allDeprecated,\n        description: diffDescription(resolveParameterDescriptionTemplates(\"deprecated status\"))\n      },\n      \"/description\": {\n        $: allAnnotation,\n        description: diffDescription(resolveParameterDescriptionTemplates(\"description\"))\n      },\n      \"/example\": {\n        $: allAnnotation,\n        description: diffDescription(resolveParameterDescriptionTemplates(\"example\")),\n        \"/**\": {\n          $: allAnnotation,\n          description: diffDescription(resolveParameterDescriptionTemplates())\n        }\n      },\n      \"/examples\": examplesRules,\n      \"/explode\": {\n        $: parameterExplodeClassifyRule,\n        description: diffDescription(resolveParameterDescriptionTemplates(\"explode status\"))\n      },\n      \"/in\": {\n        $: [nonBreaking, breaking, breaking],\n        description: diffDescription(`[{{${TEMPLATE_PARAM_ACTION}}}] {{${TEMPLATE_PARAM_PARAMETER_LOCATION}}} parameter '{{${GREP_TEMPLATE_PARAM_PARAMETER_NAME}}}'`)\n      },\n      \"/name\": {\n        $: parameterNameClassifyRule,\n        description: diffDescription(`[{{${TEMPLATE_PARAM_ACTION}}}] {{${TEMPLATE_PARAM_PARAMETER_LOCATION}}} parameter '{{${GREP_TEMPLATE_PARAM_PARAMETER_NAME}}}'`)\n      },\n      \"/required\": {\n        $: parameterRequiredClassifyRule,\n        description: diffDescription(resolveParameterDescriptionTemplates(\"required status\"))\n      },\n      \"/schema\": () => ({\n        $: allBreaking,\n        ...requestSchemaRules\n      }),\n      \"/style\": {\n        $: allBreaking,\n        description: diffDescription(resolveParameterDescriptionTemplates(\"delimited style\"))\n      }\n    }\n  };\n  const headersRules = {\n    $: [nonBreaking, breaking, breaking],\n    \"/*\": {\n      $: [nonBreaking, breaking, breaking],\n      description: diffDescription(`[{{${TEMPLATE_PARAM_ACTION}}}] header '{{${GREP_TEMPLATE_PARAM_HEADER_NAME}}}'`),\n      descriptionParamCalculator: headerParamsCalculator,\n      \"/allowEmptyValue\": {\n        $: allUnclassified,\n        description: diffDescription(resolveHeaderDescriptionTemplates(\"allowEmptyValue status\"))\n      },\n      \"/allowReserved\": {\n        $: allUnclassified,\n        description: diffDescription(resolveHeaderDescriptionTemplates(\"allowReserved status\"))\n      },\n      \"/deprecated\": {\n        $: allDeprecated,\n        description: diffDescription(resolveHeaderDescriptionTemplates(\"deprecated status\"))\n      },\n      \"/description\": {\n        $: allAnnotation,\n        description: diffDescription(resolveHeaderDescriptionTemplates(\"description\"))\n      },\n      \"/example\": {\n        $: allUnclassified,\n        description: diffDescription(resolveHeaderDescriptionTemplates(\"example\")),\n        \"/**\": {\n          $: allUnclassified,\n          description: diffDescription(resolveHeaderDescriptionTemplates())\n        }\n      },\n      \"/examples\": examplesRules,\n      \"/explode\": {\n        $: allUnclassified,\n        description: diffDescription(resolveHeaderDescriptionTemplates(\"explode status\"))\n      },\n      \"/required\": {\n        $: [breaking, nonBreaking, breakingIfAfterTrue],\n        description: diffDescription(resolveHeaderDescriptionTemplates(\"required status\"))\n      },\n      \"/schema\": ({ path }) => ({\n        $: allBreaking,\n        ...isResponseSchema(path) ? responseSchemaRules : requestSchemaRules\n      }),\n      \"/style\": {\n        $: allUnclassified,\n        description: diffDescription(resolveHeaderDescriptionTemplates(\"delimited style\"))\n      }\n    }\n  };\n  const encodingRules = {\n    $: [breaking, nonBreaking, breaking],\n    descriptionParamCalculator: encodingParamsCalculator,\n    \"/*\": {\n      description: diffDescription(resolveEncodingDescriptionTemplates()),\n      \"/allowReserved\": {\n        $: [nonBreaking, breaking, breaking],\n        description: diffDescription(resolveEncodingDescriptionTemplates())\n      },\n      \"/contentType\": {\n        $: [nonBreaking, breaking, breaking],\n        description: diffDescription(resolveEncodingDescriptionTemplates())\n      },\n      \"/explode\": {\n        $: [nonBreaking, breaking, breaking],\n        description: diffDescription(resolveEncodingDescriptionTemplates())\n      },\n      \"/headers\": headersRules,\n      \"/style\": {\n        $: [nonBreaking, breaking, breaking],\n        description: diffDescription(resolveEncodingDescriptionTemplates())\n      }\n    }\n  };\n  const contentRules = {\n    $: [nonBreaking, breaking, breaking],\n    mapping: contentMediaTypeMappingResolver,\n    \"/*\": {\n      $: [nonBreaking, breaking, nonBreaking],\n      description: diffDescription([\n        `[{{${TEMPLATE_PARAM_ACTION}}}] '{{${GREP_TEMPLATE_PARAM_MEDIA_TYPE}}}' media type {{${TEMPLATE_PARAM_PREPOSITION}}} {{${TEMPLATE_PARAM_SCOPE}}} '{{${GREP_TEMPLATE_PARAM_RESPONSE_NAME}}}'`,\n        `[{{${TEMPLATE_PARAM_ACTION}}}] '{{${GREP_TEMPLATE_PARAM_MEDIA_TYPE}}}' media type {{${TEMPLATE_PARAM_PREPOSITION}}} '{{${TEMPLATE_PARAM_COMPONENT_PATH}}}'`,\n        `[{{${TEMPLATE_PARAM_ACTION}}}] '{{${GREP_TEMPLATE_PARAM_MEDIA_TYPE}}}' media type {{${TEMPLATE_PARAM_PREPOSITION}}} {{${TEMPLATE_PARAM_SCOPE}}}`\n      ]),\n      descriptionParamCalculator: contentParamsCalculator,\n      \"/encoding\": encodingRules,\n      \"/example\": {\n        $: allAnnotation,\n        description: diffDescription([\n          `[{{${TEMPLATE_PARAM_ACTION}}}] {{${TEMPLATE_PARAM_PROPERTY_NAME}}} {{${TEMPLATE_PARAM_PREPOSITION}}} {{${TEMPLATE_PARAM_SCOPE}}} '{{${GREP_TEMPLATE_PARAM_RESPONSE_NAME}}}' ({{${GREP_TEMPLATE_PARAM_MEDIA_TYPE}}})`,\n          `[{{${TEMPLATE_PARAM_ACTION}}}] {{${TEMPLATE_PARAM_PROPERTY_NAME}}} {{${TEMPLATE_PARAM_PREPOSITION}}} '{{${TEMPLATE_PARAM_COMPONENT_PATH}}}' ({{${GREP_TEMPLATE_PARAM_MEDIA_TYPE}}})`,\n          `[{{${TEMPLATE_PARAM_ACTION}}}] {{${TEMPLATE_PARAM_PROPERTY_NAME}}} {{${TEMPLATE_PARAM_PREPOSITION}}} {{${TEMPLATE_PARAM_SCOPE}}} ({{${GREP_TEMPLATE_PARAM_MEDIA_TYPE}}})`\n        ]),\n        \"/**\": {\n          $: allAnnotation,\n          description: diffDescription([\n            `[{{${TEMPLATE_PARAM_ACTION}}}] {{${TEMPLATE_PARAM_PROPERTY_NAME}}} {{${TEMPLATE_PARAM_PREPOSITION}}} {{${TEMPLATE_PARAM_SCOPE}}} '{{${GREP_TEMPLATE_PARAM_RESPONSE_NAME}}}' ({{${GREP_TEMPLATE_PARAM_MEDIA_TYPE}}})`,\n            `[{{${TEMPLATE_PARAM_ACTION}}}] {{${TEMPLATE_PARAM_PROPERTY_NAME}}} {{${TEMPLATE_PARAM_PREPOSITION}}} '{{${TEMPLATE_PARAM_COMPONENT_PATH}}}' ({{${GREP_TEMPLATE_PARAM_MEDIA_TYPE}}})`,\n            `[{{${TEMPLATE_PARAM_ACTION}}}] {{${TEMPLATE_PARAM_PROPERTY_NAME}}} {{${TEMPLATE_PARAM_PREPOSITION}}} {{${TEMPLATE_PARAM_SCOPE}}} ({{${GREP_TEMPLATE_PARAM_MEDIA_TYPE}}})`\n          ])\n        }\n      },\n      \"/examples\": examplesRules,\n      \"/schema\": ({ path }) => ({\n        $: allBreaking,\n        ...isResponseSchema(path) ? responseSchemaRules : requestSchemaRules\n      })\n    }\n  };\n  const requestBodiesRules = {\n    $: [nonBreaking, breaking, breaking],\n    description: diffDescription(`[{{${TEMPLATE_PARAM_ACTION}}}] request body`),\n    descriptionParamCalculator: requestParamsCalculator,\n    [START_NEW_COMPARE_SCOPE_RULE]: COMPARE_SCOPE_REQUEST,\n    \"/content\": contentRules,\n    \"/description\": {\n      $: allAnnotation,\n      description: diffDescription(resolveRequestDescriptionTemplates(\"description\"))\n    },\n    \"/required\": {\n      $: [breaking, nonBreaking, breakingIfAfterTrue],\n      description: diffDescription(resolveRequestDescriptionTemplates(\"required status\"))\n    }\n  };\n  const responsesRules = {\n    $: [nonBreaking, breaking, breaking],\n    [START_NEW_COMPARE_SCOPE_RULE]: COMPARE_SCOPE_RESPONSE,\n    mapping: apihubCaseInsensitiveKeyMappingResolver,\n    \"/*\": {\n      $: [nonBreaking, breaking, (ctx) => nonBreakingIf(ctx.before.key.toString().toLocaleLowerCase() === ctx.after.key.toString().toLocaleLowerCase())],\n      description: diffDescription(`[{{${TEMPLATE_PARAM_ACTION}}}] response '{{${GREP_TEMPLATE_PARAM_RESPONSE_NAME}}}'`),\n      descriptionParamCalculator: responseParamsCalculator,\n      \"/content\": contentRules,\n      \"/description\": {\n        $: allAnnotation,\n        description: diffDescription([\n          `[{{${TEMPLATE_PARAM_ACTION}}}] description {{${TEMPLATE_PARAM_PREPOSITION}}} '{{${TEMPLATE_PARAM_COMPONENT_PATH}}}'`,\n          `[{{${TEMPLATE_PARAM_ACTION}}}] description {{${TEMPLATE_PARAM_PREPOSITION}}} response '{{${GREP_TEMPLATE_PARAM_RESPONSE_NAME}}}'`\n        ])\n      },\n      \"/headers\": headersRules\n    }\n  };\n  const operationRule = {\n    $: [nonBreaking, breaking, unclassified],\n    \"/callbacks\": {\n      \"/*\": {\n        //no support?\n      }\n    },\n    \"/externalDocs\": {\n      $: allAnnotation,\n      \"/*\": { $: allAnnotation }\n    },\n    \"/deprecated\": { $: allDeprecated },\n    \"/parameters\": {\n      $: [nonBreaking, apihubParametersRemovalClassifyRule, breaking],\n      mapping: paramMappingResolver(2),\n      ...parametersRules\n    },\n    \"/requestBody\": requestBodiesRules,\n    \"/responses\": responsesRules,\n    \"/security\": {\n      $: operationSecurityClassifyRule,\n      \"/*\": {\n        $: operationSecurityItemClassifyRule,\n        \"/*\": {\n          $: allBreaking,\n          mapping: deepEqualsUniqueItemsArrayMappingResolver,\n          \"/*\": {\n            $: [breaking, nonBreaking, breaking],\n            ignoreKeyDifference: true\n          }\n        }\n      }\n    },\n    \"/servers\": serversRules,\n    \"/tags\": {\n      ...operationAnnotationRule,\n      mapping: deepEqualsUniqueItemsArrayMappingResolver,\n      \"/*\": {\n        ...operationAnnotationRule,\n        [IGNORE_DIFFERENCE_IN_KEYS_RULE]: true\n      }\n    },\n    \"/*\": operationAnnotationRule\n  };\n  const pathItemObjectRules = (options2) => ({\n    $: pathChangeClassifyRule,\n    mapping: options2.mode === COMPARE_MODE_OPERATION ? singleOperationPathMappingResolver : pathMappingResolver,\n    \"/description\": { $: allAnnotation },\n    \"/parameters\": {\n      $: [nonBreaking, breaking, breaking],\n      mapping: paramMappingResolver(1),\n      ...parametersRules\n    },\n    \"/servers\": serversRules,\n    \"/summary\": { $: allAnnotation },\n    \"/*\": operationRule\n  });\n  const componentsRule = {\n    $: allNonBreaking,\n    [START_NEW_COMPARE_SCOPE_RULE]: COMPARE_SCOPE_COMPONENTS,\n    \"/examples\": examplesRules,\n    \"/headers\": headersRules,\n    \"/parameters\": {\n      $: [nonBreaking, breaking, breaking],\n      \"/*\": parametersRules\n    },\n    \"/requestBodies\": {\n      $: [nonBreaking, breaking, breaking],\n      \"/*\": requestBodiesRules\n    },\n    \"/responses\": {\n      $: [nonBreaking, breaking, breaking],\n      \"/*\": responsesRules\n    },\n    \"/schemas\": {\n      $: [nonBreaking, breaking, breaking],\n      \"/*\": () => ({\n        $: allUnclassified,\n        /*for mode One operation*/\n        ...requestSchemaRules\n      })\n    },\n    \"/pathItems\": {\n      $: [nonBreaking, breaking, breaking],\n      \"/*\": pathItemObjectRules(options)\n    },\n    \"/securitySchemes\": {\n      $: [breaking, nonBreaking, breaking],\n      \"/*\": {\n        $: [breaking, nonBreaking, breaking],\n        \"/bearerFormat\": { $: allAnnotation },\n        \"/description\": { $: allAnnotation },\n        \"/flows\": { $: [breaking, nonBreaking, breaking] },\n        \"/in\": { $: [breaking, nonBreaking, breaking] },\n        \"/name\": { $: [breaking, nonBreaking, breaking] },\n        \"/openIdConnectUrl\": { $: allAnnotation },\n        \"/scheme\": { $: [breaking, nonBreaking, breaking] },\n        \"/type\": { $: [breaking, nonBreaking, breaking] }\n      }\n    }\n  };\n  return {\n    \"/openapi\": documentAnnotationRule,\n    \"/info\": {\n      ...documentAnnotationRule,\n      \"/**\": documentAnnotationRule\n    },\n    \"/servers\": serversRules,\n    \"/paths\": {\n      $: allUnclassified,\n      mapping: options.mode === COMPARE_MODE_OPERATION ? singleOperationPathMappingResolver : pathMappingResolver,\n      \"/*\": pathItemObjectRules(options)\n    },\n    \"/components\": componentsRule,\n    \"/security\": {\n      $: globalSecurityClassifyRule,\n      \"/*\": { $: globalSecurityItemClassifyRule }\n    },\n    \"/tags\": { $: allAnnotation },\n    \"/externalDocs\": { $: allAnnotation }\n  };\n};\nconst resolveHeaderDescriptionTemplates = (details = `{{${TEMPLATE_PARAM_PROPERTY_NAME}}}`) => [\n  `[{{${TEMPLATE_PARAM_ACTION}}}] ${details} {{${TEMPLATE_PARAM_PREPOSITION}}} header '{{${GREP_TEMPLATE_PARAM_HEADER_NAME}}}'`,\n  `[{{${TEMPLATE_PARAM_ACTION}}}] ${details} {{${TEMPLATE_PARAM_PREPOSITION}}} header '{{${GREP_TEMPLATE_PARAM_HEADER_NAME}}}' in response '{{${GREP_TEMPLATE_PARAM_RESPONSE_NAME}}}'`,\n  `[{{${TEMPLATE_PARAM_ACTION}}}] ${details} {{${TEMPLATE_PARAM_PREPOSITION}}} header '{{${GREP_TEMPLATE_PARAM_HEADER_NAME}}}' in '{{${TEMPLATE_PARAM_RESPONSE_PATH}}}'`,\n  `[{{${TEMPLATE_PARAM_ACTION}}}] ${details} {{${TEMPLATE_PARAM_PREPOSITION}}} '{{${TEMPLATE_PARAM_HEADER_PATH}}}'`\n];\nconst resolveParameterDescriptionTemplates = (details = `{{${TEMPLATE_PARAM_PROPERTY_NAME}}}`) => [\n  `[{{${TEMPLATE_PARAM_ACTION}}}] ${details} {{${TEMPLATE_PARAM_PREPOSITION}}} {{${TEMPLATE_PARAM_PARAMETER_LOCATION}}} parameter '{{${TEMPLATE_PARAM_PARAMETER_PATH}}}'`,\n  `[{{${TEMPLATE_PARAM_ACTION}}}] ${details} {{${TEMPLATE_PARAM_PREPOSITION}}} {{${TEMPLATE_PARAM_PARAMETER_LOCATION}}} parameter '{{${GREP_TEMPLATE_PARAM_PARAMETER_NAME}}}'`\n];\nconst resolveRequestDescriptionTemplates = (details = `{{${TEMPLATE_PARAM_PROPERTY_NAME}}}`) => [\n  `[{{${TEMPLATE_PARAM_ACTION}}}] ${details} {{${TEMPLATE_PARAM_PREPOSITION}}} '{{${TEMPLATE_PARAM_REQUEST_PATH}}}'`,\n  `[{{${TEMPLATE_PARAM_ACTION}}}] ${details} {{${TEMPLATE_PARAM_PREPOSITION}}} request body`\n];\nconst resolveExamplesDescriptionTemplates = (details = `{{${TEMPLATE_PARAM_PROPERTY_NAME}}}`) => [\n  `[{{${TEMPLATE_PARAM_ACTION}}}] ${details} {{${TEMPLATE_PARAM_PREPOSITION}}} example '{{${TEMPLATE_PARAM_EXAMPLE_PATH}}}'`,\n  `[{{${TEMPLATE_PARAM_ACTION}}}] ${details} {{${TEMPLATE_PARAM_PREPOSITION}}} example '{{${GREP_TEMPLATE_PARAM_EXAMPLE_NAME}}}' {{${TEMPLATE_PARAM_PLACE}}}`\n];\nconst resolveEncodingDescriptionTemplates = () => [\n  `[{{${TEMPLATE_PARAM_ACTION}}}] Encoding details {{${TEMPLATE_PARAM_PREPOSITION}}} '{{${GREP_TEMPLATE_PARAM_ENCODING_NAME}}}' {{${TEMPLATE_PARAM_PLACE}}}`,\n  `[{{${TEMPLATE_PARAM_ACTION}}}] Encoding details ({{${TEMPLATE_PARAM_PROPERTY_NAME}}}) {{${TEMPLATE_PARAM_PREPOSITION}}} '{{${GREP_TEMPLATE_PARAM_ENCODING_NAME}}}' {{${TEMPLATE_PARAM_PLACE}}}`\n];\nconst compareOpenApi = (version) => (before, after, options) => {\n  return compare(\n    before,\n    after,\n    {\n      ...options,\n      rules: openApi3Rules({\n        mode: options.mode,\n        version\n      })\n    }\n  );\n};\nfunction isOpenApiSpecVersion(specType) {\n  return specType === SPEC_TYPE_OPEN_API_30 || specType === SPEC_TYPE_OPEN_API_31;\n}\nfunction areSpecTypesCompatible(beforeType, afterType) {\n  if (beforeType === afterType) {\n    return true;\n  }\n  return isOpenApiSpecVersion(beforeType) && isOpenApiSpecVersion(afterType);\n}\nconst COMPARE_ENGINES_MAP = {\n  [SPEC_TYPE_JSON_SCHEMA_04]: compareJsonSchema(SPEC_TYPE_JSON_SCHEMA_04),\n  [SPEC_TYPE_JSON_SCHEMA_06]: compareJsonSchema(SPEC_TYPE_JSON_SCHEMA_06),\n  [SPEC_TYPE_JSON_SCHEMA_07]: compareJsonSchema(SPEC_TYPE_JSON_SCHEMA_07),\n  [SPEC_TYPE_OPEN_API_30]: compareOpenApi(SPEC_TYPE_OPEN_API_30),\n  [SPEC_TYPE_OPEN_API_31]: compareOpenApi(SPEC_TYPE_OPEN_API_31),\n  [SPEC_TYPE_ASYNCAPI_2]: compareAsyncApi,\n  [SPEC_TYPE_GRAPH_API]: compareGraphApi\n};\nfunction apiDiff(before, after, options = {}) {\n  const beforeSpec = resolveSpec(before);\n  const afterSpec = resolveSpec(after);\n  if (!areSpecTypesCompatible(beforeSpec.type, afterSpec.type)) {\n    throw new Error(`Specification cannot be different. Got ${beforeSpec.type} and ${afterSpec.type}`);\n  }\n  const engine = COMPARE_ENGINES_MAP[beforeSpec.type];\n  return engine(before, after, {\n    mode: COMPARE_MODE_DEFAULT,\n    normalizedResult: DEFAULT_NORMALIZED_RESULT,\n    metaKey: DIFF_META_KEY,\n    defaultsFlag: DEFAULT_OPTION_DEFAULTS_META_KEY,\n    originsFlag: DEFAULT_OPTION_ORIGINS_META_KEY,\n    compareScope: COMPARE_SCOPE_ROOT,\n    mergedJsoCache: createEvaluationCacheService(),\n    diffUniquenessCache: createEvaluationCacheService(),\n    valueAdaptationCache: createEvaluationCacheService(),\n    createdMergedJso: /* @__PURE__ */ new Set(),\n    ...options\n  });\n}\nexport {\n  COMPARE_MODE_DEFAULT,\n  COMPARE_MODE_OPERATION,\n  ClassifierType,\n  DIFF_META_KEY,\n  DiffAction,\n  annotation,\n  apiDiff,\n  breaking,\n  deprecated,\n  isDiffAdd,\n  isDiffRemove,\n  isDiffRename,\n  isDiffReplace,\n  nonBreaking,\n  onlyExistedArrayIndexes,\n  risky,\n  unclassified\n};\n//# sourceMappingURL=index.es.js.map\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ChangeSummary, DiffTypeDto } from '@netcracker/qubership-apihub-api-processor'\nimport {\n  annotation,\n  breaking,\n  deprecated,\n  nonBreaking,\n  unclassified,\n  risky,\n} from '@netcracker/qubership-apihub-api-diff'\nimport type {\n  DiffType,\n} from '@netcracker/qubership-apihub-api-diff'\nimport type { Color } from '../utils/types'\n\nexport const ADD_ACTION_TYPE = 'add'\nexport const REMOVE_ACTION_TYPE = 'remove'\nexport const REPLACE_ACTION_TYPE = 'replace'\nexport const RENAME_ACTION_TYPE = 'rename'\n\n// TODO: Use from builder\nexport type ActionType =\n  | typeof ADD_ACTION_TYPE\n  | typeof REMOVE_ACTION_TYPE\n  | typeof REPLACE_ACTION_TYPE\n  | typeof RENAME_ACTION_TYPE\n\nexport const BREAKING_CHANGE_SEVERITY = breaking\nexport const NON_BREAKING_CHANGE_SEVERITY = nonBreaking\nexport const RISKY_CHANGE_SEVERITY = risky\nexport const DEPRECATED_CHANGE_SEVERITY = deprecated\nexport const ANNOTATION_CHANGE_SEVERITY = annotation\nexport const UNCLASSIFIED_CHANGE_SEVERITY = unclassified\n\nexport type ChangesSummary<T extends DiffType | DiffTypeDto = DiffType> = ChangeSummary<T>\n\nexport type ChangeSeverity<T = DiffType> = T\n\nexport const CHANGE_SEVERITY_COLOR_MAP: Record<ChangeSeverity, string> = {\n  [breaking]: '#ED4A54',\n  [risky]: '#E98554',\n  [deprecated]: '#FFB02E',\n  [nonBreaking]: '#6BCE70',\n  [unclassified]: '#61AAF2',\n  [annotation]: '#C55DCF',\n}\n\nexport const CHANGE_SEVERITY_NAME_MAP: Record<ChangeSeverity, string> = {\n  [breaking]: 'Breaking',\n  [risky]: 'Requires Attention',\n  [deprecated]: 'Deprecated',\n  [nonBreaking]: 'Non-breaking',\n  [unclassified]: 'Unclassified',\n  [annotation]: 'Annotation',\n}\n\nexport const CHANGE_SEVERITY_TOOLTIP_TITLE_MAP: Record<ChangeSeverity, string> = {\n  [breaking]: 'Breaking Changes',\n  [risky]: 'Changes Requiring Attention',\n  [deprecated]: 'Deprecated Changes',\n  [nonBreaking]: 'Non-breaking Changes',\n  [unclassified]: 'Unclassified Changes',\n  [annotation]: 'Annotation Changes',\n}\n\nexport const CHANGE_SEVERITY_DESCRIPTION_MAP: Record<ChangeSeverity, { text: string; options?: string[] }> = {\n  [breaking]: { text: 'Breaking change is a change that breaks backward compatibility with the previous version of API. For example, deleting an operation, adding a required parameter or changing type of a parameter are breaking changes.' },\n  [risky]: { text: 'A change requiring attention is a change that potentially may break backward compatibility with the previous version of API, depending on the particular implementation of a client code. This category also includes breaking changes in operations annotated as no-BWC.'},\n  [deprecated]: { text: 'Deprecating change is a change that annotates an operation, parameter or schema as deprecated. Removing a \"deprecated\" annotation is also considered a deprecating change.' },\n  [nonBreaking]: { text: 'Non-breaking change is change that does not break backward compatibility with the previous version of API. For example, adding new operation or optional parameter is non-breaking change.' },\n  [unclassified]: { text: 'An unclassified change is a change that cannot be classified as any of the other types.' },\n  [annotation]: { text: 'An annotation change is a change to enrich the API documentation with information that does not affect the functionality of the API. For example, adding/changing/deleting descriptions or examples is annotation change.' },\n}\n\nexport const CHANGE_SEVERITIES: ReadonlySet<ChangeSeverity> = new Set([\n    breaking,\n    risky,\n    deprecated,\n    nonBreaking,\n    unclassified,\n    annotation,\n  ],\n)\n\nexport const ACTION_TYPE_COLOR_MAP: Partial<Record<ActionType, Color>> = {\n  [ADD_ACTION_TYPE]: 'rgba(0,187,91,0.08)',\n  [REMOVE_ACTION_TYPE]: '#FFF1F2',\n  [REPLACE_ACTION_TYPE]: '#FFF9EE',\n}\n\nexport const DEFAULT_CHANGE_SEVERITY_MAP = {\n  [breaking]: 0,\n  [risky]: 0,\n  [deprecated]: 0,\n  [nonBreaking]: 0,\n  [unclassified]: 0,\n  [annotation]: 0,\n}\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC, PropsWithChildren } from 'react'\nimport { memo } from 'react'\nimport type { ChangeSeverity } from '../entities/change-severities'\nimport {\n  CHANGE_SEVERITY_COLOR_MAP,\n  CHANGE_SEVERITY_DESCRIPTION_MAP,\n  CHANGE_SEVERITY_TOOLTIP_TITLE_MAP,\n} from '../entities/change-severities'\nimport { Box, Divider, Tooltip } from '@mui/material'\nimport ListItem from '@mui/material/ListItem'\n\nexport type ChangesTooltipProps = PropsWithChildren<{\n  changeType: ChangeSeverity\n  disableHoverListener?: boolean\n  category?: ChangesTooltipCategory\n}>\n\nexport const ChangesTooltip: FC<ChangesTooltipProps> = memo<ChangesTooltipProps>(props => {\n  const {\n    children,\n    changeType,\n    disableHoverListener = false,\n    category,\n  } = props\n\n  return (\n    <Tooltip\n      title={\n        <ChangesTooltipContent\n          changeType={changeType}\n          category={category}\n        />\n      }\n      placement=\"bottom-end\"\n      disableHoverListener={disableHoverListener}\n    >\n      <Box>\n        {children}\n      </Box>\n    </Tooltip>\n  )\n})\n\ntype ChangesTooltipContentProps = {\n  changeType: ChangeSeverity\n  category?: ChangesTooltipCategory\n}\n\nconst ChangesTooltipContent: FC<ChangesTooltipContentProps> = memo<ChangesTooltipContentProps>(({\n  changeType,\n  category,\n}) => {\n  const tooltipContent = CHANGE_SEVERITY_DESCRIPTION_MAP[changeType]\n  const categoryTitle = `${category ? `${TOOLTIP_TITLE_BY_CATEGORY[category]} with ` : ''}${CHANGE_SEVERITY_TOOLTIP_TITLE_MAP[changeType]}`\n\n  return (\n    <Box sx={{ p: '4px 4px' }}>\n      <Box display=\"flex\" alignItems=\"center\">\n        <Box\n          component=\"span\"\n          sx={{\n            background: CHANGE_SEVERITY_COLOR_MAP[changeType],\n            width: 8,\n            height: 8,\n            borderRadius: '50%',\n            mr: 1,\n          }}\n        />\n        {categoryTitle}\n      </Box>\n      <Divider sx={{ mx: 0, mt: 1, mb: 1 }} orientation=\"horizontal\"/>\n      <Box>\n        {tooltipContent.text}\n        {tooltipContent.options && tooltipContent.options.map((item, index) => (\n          <ListItem sx={{ display: 'list-item', py: 0 }} key={index}>\n            {item}\n          </ListItem>\n        ))}\n      </Box>\n    </Box>\n  )\n})\n\nexport const CATEGORY_OPERATION = 'operation'\nexport const CATEGORY_PACKAGE = 'packages'\n\nconst TOOLTIP_TITLE_BY_CATEGORY = {\n  [CATEGORY_OPERATION]: 'Operations',\n  [CATEGORY_PACKAGE]: 'Packages',\n}\n\nexport type ChangesTooltipCategory = typeof CATEGORY_OPERATION | typeof CATEGORY_PACKAGE\n"],"names":["getNodeRules","rules","key","path","value","rulesKey","globalRules","localRules","node","matchedRules","isObject","isArray","PURE_ARRAY_KEYS","anyArrayKeys","ar","tryNumber","createDefaultIsNestedEqual","comparator","a","b","_indexOrKeyA","_indexOrKeyB","_parentA","_parentB","meta","createIsCircular","areItemsEqual","isEqual","cache","cachedA","cachedB","result","merge","merged","isPlainObject","isPromiseLike","sameValueZeroEqual","ARGUMENTS_TAG","BOOLEAN_TAG","DATE_TAG","REG_EXP_TAG","MAP_TAG","NUMBER_TAG","OBJECT_TAG","SET_TAG","STRING_TAG","toString","createComparator","_a","areArraysEqual","areDatesEqual","areMapsEqual","areObjectsEqual","areRegExpsEqual","areSetsEqual","createIsNestedEqual","aArray","bArray","aTag","index","areArraysEqualCircular","isValueEqual","matchedIndices","indexA","aValue","aKey","hasMatch","matchIndexB","bValue","bKey","areMapsEqualCircular","OWNER","hasOwnProperty","keysA","reactElementA","reactElementB","areObjectsEqualCircular","matchIndex","areSetsEqualCircular","DEFAULT_CONFIG","DEFAULT_CIRCULAR_CONFIG","isDeepEqual","deepEqual","createCustomEqual","getComparatorOptions","e","module","r","o","u","s","n","t","require","w","m","d","h","p","g","y","l","f","i","O","H","j","C","c","v","_","E","I","A","Y","B","F","L","U","D","x","T","M","k","N","S","RefErrorTypes","CURRENT_DATA_LEVEL","BEFORE_SECOND_DATA_LEVEL","DEFAULT_TYPE_FLAG_PURE","DEFAULT_TYPE_FLAG_SYNTHETIC","JSON_SCHEMA_NODE_TYPE_BOOLEAN","JSON_SCHEMA_NODE_TYPE_OBJECT","JSON_SCHEMA_NODE_TYPE_ARRAY","JSON_SCHEMA_NODE_TYPE_NUMBER","JSON_SCHEMA_NODE_TYPE_STRING","JSON_SCHEMA_NODE_TYPE_INTEGER","JSON_SCHEMA_NODE_TYPE_NULL","JSON_SCHEMA_NODE_SYNTHETIC_TYPE_NOTHING","JSON_SCHEMA_NODE_SYNTHETIC_TYPE_ANY","JSON_SCHEMA_NODE_TYPES","JSON_SCHEMA_NODE_SYNTHETIC_TYPES","JSON_SCHEMA_PROPERTY_TITLE","JSON_SCHEMA_PROPERTY_CONTENT_MEDIA_TYPE","JSON_SCHEMA_PROPERTY_CONST","JSON_SCHEMA_PROPERTY_PROPERTY_NAMES","JSON_SCHEMA_PROPERTY_CONTAINS","JSON_SCHEMA_PROPERTY_DEPENDENCIES","JSON_SCHEMA_PROPERTY_DEFS","JSON_SCHEMA_PROPERTY_TYPE","JSON_SCHEMA_PROPERTY_DESCRIPTION","JSON_SCHEMA_PROPERTY_FORMAT","JSON_SCHEMA_PROPERTY_DEFAULT","JSON_SCHEMA_PROPERTY_MULTIPLE_OF","JSON_SCHEMA_PROPERTY_MAXIMUM","JSON_SCHEMA_PROPERTY_EXCLUSIVE_MAXIMUM","JSON_SCHEMA_PROPERTY_MINIMUM","JSON_SCHEMA_PROPERTY_EXCLUSIVE_MINIMUM","JSON_SCHEMA_PROPERTY_MAX_LENGTH","JSON_SCHEMA_PROPERTY_MIN_LENGTH","JSON_SCHEMA_PROPERTY_PATTERN","JSON_SCHEMA_PROPERTY_MAX_ITEMS","JSON_SCHEMA_PROPERTY_MIN_ITEMS","JSON_SCHEMA_PROPERTY_UNIQUE_ITEMS","JSON_SCHEMA_PROPERTY_MAX_PROPERTIES","JSON_SCHEMA_PROPERTY_MIN_PROPERTIES","JSON_SCHEMA_PROPERTY_ITEMS","JSON_SCHEMA_PROPERTY_ADDITIONAL_ITEMS","JSON_SCHEMA_PROPERTY_REQUIRED","JSON_SCHEMA_PROPERTY_ENUM","JSON_SCHEMA_PROPERTY_PROPERTIES","JSON_SCHEMA_PROPERTY_ADDITIONAL_PROPERTIES","JSON_SCHEMA_PROPERTY_PATTERN_PROPERTIES","JSON_SCHEMA_PROPERTY_ALL_OF","JSON_SCHEMA_PROPERTY_ONE_OF","JSON_SCHEMA_PROPERTY_ANY_OF","JSON_SCHEMA_PROPERTY_NOT","JSON_SCHEMA_PROPERTY_NULLABLE","JSON_SCHEMA_PROPERTY_READ_ONLY","JSON_SCHEMA_PROPERTY_WRITE_ONLY","JSON_SCHEMA_PROPERTY_EXAMPLES","JSON_SCHEMA_PROPERTY_DEPRECATED","JSON_SCHEMA_PROPERTY_DEFINITIONS","JSON_SCHEMA_PROPERTY_REF","concatenateArraysInProperty","source","target","propertyKey","originsFlag","sourceArray","getJsoProperty","targetArray","copyOrigins","setJsoProperty","sourceKey","targetIndex","resolveOriginsMetaRecord","resolveOrigins","originsRecord","copyProperty","sourcePropertyKey","targetPropertyKey","sourceOriginsRecord","setOrigins","mergeOrigins","sources","newRecords","aggregator","jso","jsoOrigins","existingLeafs","origin","origins","newOriginsRecord","cleanSeveralOrigins","propertyKeys","cleanOrigins","setOriginsForArray","array","originsArray","item","copyOriginsForArray","MapArray","arr","isPossibleRawJsonSchema","type","resolveValueByPath","obj","isObject$1","findMultiplierForInteger","number","multiplier","calculateLCM","args","calculateGCD","uniqueItems","added","concatArrays$1","INSTRUCTION_AFTER","INSTRUCTION_BEFORE","INSTRUCTION_REPLACE","replaceValue","reference","insertIntoArrayByInstruction","instructions","items","instruction","singleOrArrayToArray","removeDuplicatesWithMergeOrigins","originFlag","equals","findItemWithOrigins","map","otherItem","itemOriginsMap","uniqueItems2","existedItemWithOrigins","existedItem","existedOrigins","itemOrigins","SPEC_TYPE_JSON_SCHEMA_04","SPEC_TYPE_JSON_SCHEMA_06","SPEC_TYPE_JSON_SCHEMA_07","SPEC_TYPE_OPEN_API_30","SPEC_TYPE_OPEN_API_31","SPEC_TYPE_ASYNCAPI_2","SPEC_TYPE_GRAPH_API","ErrorMessage","ref","sameValueOrigins","allOrigins","mergeResultWithSameValueOrigins","mergeResultWithAllOrigins","last","and","args2","or","minValue","maxValue","mergePattern","equal","one","others","mergeObjects","mergeValues","mergeCombination","ctx","findCombinations","allOf","allOfs","mergeNot","valueWithOrigins","mergeMultipleOf","concatString","concatArrays","mergeEnum","intersectArrays","mergeTypes","rawArrayTypes","syntheticArray","nothingTypes","typesWithOrigins","allTypes","types","arrayTypes","itemsOrigins","other","mergedTypes","vectors","firstItems","remainingVectors","combinationVectors","firstItemsOriginsRecord","firstItemsIndex","firstItem","firstItemOrigins","combinationItems","patch","mergeStringSets","arrayOrigins","str","stringOrigins","resolveOriginsOrNothing","nextArray","currentItemWithOrigins","currentItem","currentOrigins","sameItemIndex","foundItemOrigins","filteredItems","prepareTitleForMerge","itemWithOrigins","syntheticPropertyKey","options","richTitles","schemaWithOrigins","schema","groupValuesByProperty","records","key2","dependenciesMergeResolver","props","prop","itemsWithOrigins","itemWithOrigin","_items","jsonSchemaMergeResolver","groupedValues","preparePropertiesForMerge","preparePatternPropertiesForMerge","valuesWithOrigins","rule","mergeFunc","rich","uniqueRefs","unifyBooleanSchemas","objectOrBoolean","properties","thisItemWithOrigins","thisItem","schemaProperties","ownProperties","additionalPropertiesPerProperty","patterPropertyPerProperty","anotherItemWithContext","anotherItem","anyMath","pattern","patternSchema","schemaProperty","additionalPropertiesWithOrigins","patternPropertiesWithOrigins","propOrigins","overallConstraints","valueWithOrigin","allOfOrigins","patternProperties","thisPatterProperties","propertiesMergeResolver","singleton","additionalPropertiesMergeResolver","itemsMergeResolver","mergeItems","itemsLimit","maxItemsLength","additionalItemsSchema","objWithOrigins","len","additionalItemsMergeResolver","additionalItems","itemsSchema","itemWithContext","valueWithContext","COMBINER_KEYS","mergeProhibitLiftCombiners","ignoredKeys","ownKeys","foundCombinerKeys","findCombinerKeys","combiner","arrayCombiner","toTopLevel","collector","toNestedLevel","combinerItem","hasCommonProperties","allForMerge","another","oneKeys","isCombinerKey","keys","extractEmptyJsonSchema","jsoOrBoolean","combineJsonSchemaWithMetaJso","jsonSchema","metaJsonSchema","opt","mergedSchema","JSON_SCHEMA_TYPE_TO_DISCRIMINATOR_PROPS","JSON_SCHEMA_TYPE_TO_RESTRICTED_PROPS","allProperties","acc","inferTypes","allowedTypes","property","acc2","isPureCombiner","isBroken","isReadyToTypeInfer","excludeNotAllowedTypes","allowedTypesSet","existingAndAllowedTypes","jsonSchemaTypeInferWithRestriction","typesToOrigins","overallOrigins","jsonSchemaTypeInfer","splitJsonSchemaTypeArray","uniqueTypes","result2","typesOrigins","type2","schemaType","cleanJsonSchemaTypeSpecificProperties","notAllowedProperties","toCleanupProperties","shallowCopy","defaultMetaCopy","originsMetaCopy","TYPE_UNDEFINED","TYPE_OBJECT","TYPE_ARRAY","TYPE_BOOLEAN","TYPE_NUMBER","TYPE_STRING","checkType","expectedTypes","actualType","checkContains","allowedValues","allowed","TYPE_JSON_ANY","unifyJsonSchemaRequired","required","existing","newRequired","aggr","current","currentIndex","previousOrigins","unifyJsonSchemaEnums","cleanUpSyntheticJsonSchemaTypes","jsoCandidate","empty","invertedEmpty","emptySchema","originsMetaRecord","invertedEmptyJsonSchema","forwardOnlyCleanUpSyntheticJsonSchemaTypes","PLACE_HOLDER_JSO$1","resolveDefaultValue","defaultValueOrFunction","valueDefaults","shallowJso","defaultsMeta","overrideDefaultsKeys","hasDefaults","originsForDefaults","defaultValue","defaults","newOrigins","candidates","PLACE_HOLDER_JSO","deepEqualsMatcher","valueReplaces","replace","ignorePropertyKeys","replaceMappingValue","possibleValue","ANY_VALUE","deepCircularEqualsWithPropertyFilter","defaultOptions","aJso","bJso","propertyFilter","ignoreProperty","originalValue","aKeyIndex","guard","createEvaluationCacheService","instanceMap","instanceToFootprint","instanceId","id","uniqueInstancesFootprint","rawItems","instanceMap2","usedItems","currentValue","cacheEvaluationResultByFootprint","evaluate","cyclicGuardResult","mergeResultWithGuard","footprint","instance","PREDICATE_ANY_VALUE","PREDICATE_UNCLOSED_END","matchPath","predicates","predicateMap","state","state2","pathItem","predicate","predicateCopy","currentItemPredicate","name","matchPaths","paths","matchResult","OPEN_API_HTTP_METHOD_GET","OPEN_API_HTTP_METHOD_POST","OPEN_API_HTTP_METHOD_PUT","OPEN_API_HTTP_METHOD_DELETE","OPEN_API_HTTP_METHOD_PATCH","OPEN_API_HTTP_METHOD_OPTIONS","OPEN_API_HTTP_METHOD_HEAD","OPEN_API_HTTP_METHOD_TRACE","OPEN_API_HTTP_METHODS","OPEN_API_PROPERTY_PARAMETERS","OPEN_API_PROPERTY_TAGS","OPEN_API_PROPERTY_DEPRECATED","OPEN_API_PROPERTY_REQUIRED","OPEN_API_PROPERTY_ALLOW_EMPTY_VALUE","OPEN_API_PROPERTY_ALLOW_RESERVED","OPEN_API_PROPERTY_HEADERS","OPEN_API_PROPERTY_EXAMPLES","OPEN_API_PROPERTY_COMPONENTS","OPEN_API_PROPERTY_PATHS","OPEN_API_PROPERTY_RESPONSES","OPEN_API_PROPERTY_REQUEST_BODIES","OPEN_API_PROPERTY_SCHEMAS","OPEN_API_PROPERTY_LINKS","OPEN_API_PROPERTY_SECURITY_SCHEMAS","OPEN_API_PROPERTY_DESCRIPTION","OPEN_API_PROPERTY_SUMMARY","OPEN_API_PROPERTY_ENCODING","OPEN_API_PROPERTY_STYLE","OPEN_API_JSON_SCHEMA_PROPERTY_XML","OPEN_API_JSON_SCHEMA_PROPERTY_WRAPPED","OPEN_API_JSON_SCHEMA_PROPERTY_ATTRIBUTE","startFromOpenApiComponents","jsonPath","startFromOpenApiComponentsHeaders","jsonPaths","openApiComponentsHeadersMatchResult","startFromOpenApiPaths","startFromOpenApiComponentsResponses","openApiComponentsResponsesMatchResult","openApiComponentsMatchResult","calculateHeaderName","declarationPathsToRefName","calculateHeaderPlace","suffix","calculateParameterName","calculateSchemaName","nonEmptyString","OPEN_API_DEPRECATION_META_KEY","OPEN_API_DEPRECATION_WITHOUT_REASON","OPEN_API_DEPRECATION_RESOLVER","JSON_SCHEMA_DEPRECATION_RESOLVER","notAllowedReferenceHandler","safeKey","referenceObjectResolver","overrides","resolveDefaultReference","resolvedRef","originForObj","sibling","refValue","referenceValue","getOrReuseOrigin","childrenOrigins","referenceValueWithSibling","jsonSchemaReferenceResolver","richRefAllowed","syntheticTitleCache","wrap2","titleIndex","refIndex","siblingIndex","syntheticTitle","evaluateSyntheticTitle","EMPTY_MARKER$2","JSON_SCHEMA_DEFAULTS_COMMON","JSON_SCHEMA_DEFAULTS","JSON_SCHEMA_DEFAULTS_UNIFY_FUNCTION","IGNORED_IN_FUTURE_ORIGINS","deepEqualsWithEmptySchema","extraIgnoreProperties","opts","syntheticAny","nativeAny","compareConfig","deepEqualsWithInvertedEmptySchema","JSON_SCHEMA_REPLACES_COMMON","JSON_SCHEMA_REPLACES","JSON_SCHEMA_REPLACES_UNIFY_FUNCTION","referenceResolverRuleFunction","version","versionSpecific","self","common","jsonSchemaRules","dist","exports","OpenAPIV3","HttpMethods","OpenAPIV2","EXTENSION_PREFIX","pathItemsUnification","pathParameters","pathServers","pathSummary","pathDescription","restItems","symbols","extensionKeys","newPathItem","method","operation","extensionKey","OPEN_API_30_JSON_SCHEMA_NODE_TYPES","EMPTY_MARKER$1","TO_EMPTY_OBJECT_MAPPING$1","TO_EMPTY_ARRAY_MAPPING$1","OPEN_API_30_JSON_SCHEMA_DEFAULTS","OPEN_API_30_JSON_SCHEMA_REPLACES","OPEN_API_OPERATION_DEFAULTS","OPEN_API_OPERATION_REPLACES","OPEN_API_RESPONSE_DEFAULTS","OPEN_API_RESPONSE_REPLACES","OPEN_API_ENCODING_DEFAULTS","OPEN_API_ENCODING_REPLACES","getOperationParameterStyleDefault","parameter","getXmlWrappedDefault","OPEN_API_PARAMETER_DEFAULTS","OPEN_API_PARAMETER_REPLACES","OPEN_API_HEADER_DEFAULTS","OPEN_API_HEADER_REPLACES","OPEN_API_MEDIA_TYPE_DEFAULTS","OPEN_API_MEDIA_TYPE_REPLACES","OPEN_API_REQUEST_BODY_DEFAULTS","OPEN_API_XML_DEFAULTS","OPEN_API_ROOT_DEFAULTS","OPEN_API_ROOT_REPLACES","OPEN_API_COMPONENTS_DEFAULTS","OPEN_API_COMPONENTS_REPLACES","referenceObjectRuleFunction","allowedOverrides","openApiExtensionRulesFunction","elseRules","openApiExtensionRules","openApiExternalDocsRules","openApiExampleRules","openApiExamplesRules","openApiOAuthScopesRules","openApiServerRules","openApiServersRules","openApiSecurityRules","openApiLinksRules","openApiJsonSchemaExtensionRules","customFor30JsonSchemaRulesFactory","baseJsonSchemaVersion","core","customFor30JsonSchemaRules","extension","customFor31JsonSchemaRulesFactory","customFor31JsonSchemaRules","openApiJsonSchemaRules","openApiMediaTypesRules","openApiHeadersRules","openApiParametersRules","openApiRequestRules","openApiResponsesRules","openApiPathItemRules","openApiRules","devAssert","condition","message","isObjectLike","invariant","LineRegExp","getLocation","position","lastLineStart","line","match","printLocation","location","printSourceLocation","sourceLocation","firstLineColumnOffset","body","lineIndex","lineOffset","lineNum","columnOffset","columnNum","locationStr","lines","locationLine","subLineIndex","subLineColumnNum","subLines","printPrefixedLines","subLine","existingLines","padLen","prefix","toNormalizedOptions","firstArg","GraphQLError","rawArgs","_this$nodes","_nodeLocations$","_ref","nodes","positions","originalError","extensions","undefinedIfEmpty","nodeLocations","loc","pos","originalExtensions","output","formattedError","QueryDocumentKeys","kindValues","isNode","maybeNode","maybeKind","OperationTypeNode","OperationTypeNode2","DirectiveLocation","DirectiveLocation2","Kind","Kind2","isWhiteSpace","code","isDigit$1","isLetter","isNameStart","isNameContinue","printBlockString","escapedValue","isSingleLine","forceLeadingNewLine","hasTrailingTripleQuotes","hasTrailingQuote","hasTrailingSlash","forceTrailingNewline","printAsMultipleLines","skipLeadingNewLine","MAX_ARRAY_LENGTH","MAX_RECURSIVE_DEPTH","inspect","formatValue","seenValues","formatObjectValue","previouslySeenValues","isJSONable","jsonValue","formatArray","formatObject","object","entries","getObjectTag","remaining","tag","isProduction","instanceOf","constructor","_value$constructor","className","valueClassName","stringifiedValue","MAX_SUGGESTIONS","didYouMean","secondArg","subMessage","suggestionsArg","suggestions","selected","lastItem","identityFunc","keyMap","list","keyFn","keyValMap","valFn","mapValue","fn","naturalCompare","aStr","bStr","aIndex","bIndex","aChar","bChar","isDigit","aNum","DIGIT_0","bNum","DIGIT_9","suggestionList","input","optionsByDistance","lexicalDistance","LexicalDistance","threshold","option","distance","distanceDiff","LexicalDistance$1","stringToArray","optionLowerCase","tmp","aLength","bLength","rows","upRow","currentRow","smallestCell","cost","currentCell","doubleDiagonalCell","strLength","toObjMap","printString$1","escapedRegExp","escapedReplacer","escapeSequences","BREAK","visit","root","visitor","visitorKeys","enterLeaveMap","kind","getEnterLeaveForKind","stack","inArray","edits","parent","ancestors","isLeaving","isEdited","editOffset","editKey","editValue","arrayKey","_enterLeaveMap$get","_enterLeaveMap$get2","visitFn","_node$kind","kindVisitor","print","ast","printDocASTReducer","MAX_LINE_LENGTH","join","varDefs","wrap","variable","directives","selections","block","alias","selectionSet","argsLine","indent","typeCondition","variableDefinitions","isBlockString","values","fields","description","operationTypes","interfaces","hasMultilineItems","repeatable","locations","maybeArray","separator","_maybeArray$filter$jo","start","maybeString","end","_maybeArray$some","valueFromASTUntyped","valueNode","variables","field","assertName","assertEnumValueName","isType","isScalarType$1","isObjectType","isInterfaceType","isUnionType","isEnumType","isInputObjectType","isListType$1","isNonNullType$1","GraphQLScalarType","GraphQLObjectType","GraphQLInterfaceType","GraphQLUnionType","GraphQLEnumType","GraphQLInputObjectType","GraphQLList","GraphQLNonNull","GraphQLList$1","ofType","GraphQLNonNull$1","isNullableType","resolveReadonlyArrayThunk","thunk","resolveObjMapThunk","GraphQLScalarType$1","config","_config$parseValue","_config$serialize","_config$parseLiteral","_config$extensionASTN","parseValue","GraphQLObjectType$1","_config$extensionASTN2","defineFieldMap","defineInterfaces","fieldsToFieldsConfig","_config$interfaces","fieldMap","isPlainObj","fieldConfig","fieldName","_fieldConfig$args","argsConfig","defineArguments","argName","argConfig","argsToArgsConfig","arg","GraphQLInterfaceType$1","_config$extensionASTN3","GraphQLUnionType$1","_config$extensionASTN4","defineTypes","GraphQLEnumType$1","_config$extensionASTN5","defineEnumValues","outputValue","enumValue2","enumValue","inputValue","valueStr","didYouMeanEnumValue","_variables","enumType","unknownValueStr","allNames","suggestedValues","typeName2","valueMap","valueName","valueConfig","GraphQLInputObjectType$1","_config$extensionASTN6","_config$isOneOf","defineInputFieldMap","GRAPHQL_MAX_INT","GRAPHQL_MIN_INT","coercedValue","serializeObject","num","GraphQLString","GraphQLBoolean","valueOfResult","GraphQLDirective$1","_config$isRepeatable","_config$args","GraphQLDirective","DEFAULT_DEPRECATION_REASON","GRAPH_API_NODE_KIND_ID","GRAPH_API_NODE_KIND_STRING","GRAPH_API_NODE_KIND_INTEGER","GRAPH_API_NODE_KIND_FLOAT","GRAPH_API_NODE_KIND_BOOLEAN","GRAPH_API_NODE_KIND_ENUM","GRAPH_API_NODE_KIND_OBJECT","GRAPH_API_NODE_KIND_INTERFACE","GRAPH_API_NODE_KIND_SCALAR","GRAPH_API_NODE_KIND_LIST","GRAPH_API_NODE_KIND_UNION","GRAPH_API_NODE_KIND_INPUT_OBJECT","GRAPH_API_DIRECTIVE_LOCATIONS","BUILT_IN_DIRECTIVE_SPECIFIED_BY","BUILT_IN_DIRECTIVE_SKIP","BUILT_IN_DIRECTIVE_INCLUDE","BUILT_IN_DIRECTIVE_DEPRECATED","BUILT_IN_DIRECTIVE_ONE_OF","BUILT_IN_DIRECTIVES","maybeObject","isGraphApiDirective","isGraphApiDirectiveDefinition","isGraphApiDirectiveLocation","GRAPH_API_PROPERTY_TITLE","GRAPH_API_PROPERTY_TYPE","GRAPH_API_PROPERTY_KIND","GRAPH_API_PROPERTY_ONE_OF","GRAPH_API_PROPERTY_QUERIES","GRAPH_API_PROPERTY_MUTATIONS","GRAPH_API_PROPERTY_SUBSCRIPTIONS","GRAPH_API_PROPERTY_SCALARS","GRAPH_API_PROPERTY_OBJECTS","GRAPH_API_PROPERTY_INTERFACES","GRAPH_API_PROPERTY_INPUT_OBJECTS","GRAPH_API_PROPERTY_DIRECTIVES","GRAPH_API_PROPERTY_DEPRECATED_DIRECTIVE","GRAPH_API_PROPERTY_UNIONS","GRAPH_API_PROPERTY_ENUMS","GRAPH_API_PROPERTY_ARGS","GRAPH_API_PROPERTY_LOCATIONS","GRAPH_API_PROPERTY_META","GRAPH_API_PROPERTY_NULLABLE","GRAPH_API_PROPERTY_REPEATABLE","GRAPH_API_PROPERTY_DEFAULT","GRAPH_API_PROPERTY_VALUES","GRAPH_API_PROPERTY_PROPERTIES","GRAPH_API_PROPERTY_METHODS","GRAPH_API_PROPERTY_DEFINITION","GRAPH_API_PROPERTY_COMPONENTS","directiveMetaUnification","directive","definition","value2","newMeta","existingMeta","defaultsMap","col","GRAPH_API_DEPRECATION_PREDICATE","deprecatedDirectiveProperty","EMPTY_MARKER","GRAPH_API_DEFAULTS","COMPONENTS_DEFAULTS","METHOD_DEFAULTS","DIRECTIVE_DEFINITION_DEFAULTS","DIRECTIVE_USAGE_DEFAULTS","ENUM_VALUE_DEFAULTS","TYPE_USAGE_DEFAULTS","SCALAR_DEFINITION_DEFAULTS","ENUM_DEFINITION_DEFAULTS","INPUT_OBJECT_DEFINITION_DEFAULTS","INTERFACE_DEFINITION_DEFAULTS","UNION_DEFINITION_DEFAULTS","LIST_DEFINITION_DEFAULTS","DIRECTIVE_HOLDER_DEFAULTS","TO_EMPTY_ARRAY_MAPPING","TO_EMPTY_OBJECT_MAPPING","GRAPH_API_REPLACES","COMPONENTS_REPLACES","METHOD_REPLACES","DIRECTIVE_DEFINITION_REPLACES","DIRECTIVE_USAGE_REPLACES","ENUM_VALUE_REPLACES","TYPE_USAGE_REPLACES","SCALAR_DEFINITION_REPLACES","ENUM_DEFINITION_REPLACES","INPUT_OBJECT_DEFINITION_REPLACES","INTERFACE_DEFINITION_REPLACES","UNION_DEFINITION_REPLACES","LIST_DEFINITION_REPLACES","DIRECTIVE_HOLDER_REPLACES","directivesUsagesRules","directiveDefinitionRules","baseRules","selfNamedBaseRules","typeUsageRules","typeDefinitionRules","scalarDefinitionRules","interfaceDefinitionRules","enumDefinitionRules","inputObjectDefinitionRules","unionDefinitionRules","listDefinitionRules","methodRules","graphApiRules","syntheticTitleFlag","jsoInstance","originCache","afterReuse","getOrCustomCreateOrigin","originF","createNativeAnySchema","specType","any","anyAnyOf","schemaWithType","FAILED_PARAMS_CALCULATION","isEmptyArray","isString","isSymbol","isFunc","objectKeys","getKeyValue","onlyExistedArrayIndexes","DiffAction","ClassifierType","breaking","nonBreaking","risky","unclassified","annotation","deprecated","allBreaking","allUnclassified","allAnnotation","diffDescription","descriptionTemplate","diff","paramCalculator","resolveParamCalculator","params","createDescription","descriptionParamCalculator","calculateDefaultDiffDescription","declarationPaths","DIFF_ACTION_TO_ACTION_MAP","descriptionTemplates","applyTemplateParams","templates","template","findTemplate","applyTempleParams","suitableTemplate","templateParams","param","suitability","templateParam","placeholders","TEMPLATE_PARAM_ACTION","TEMPLATE_PARAM_PREPOSITION","TEMPLATE_PARAM_PROPERTY_NAME","TEMPLATE_PARAM_SCHEMA_PATH","TEMPLATE_PARAM_PLACE","TEMPLATE_PARAM_SCOPE","createDiff","_b","_c","_d","_e","_f","_g","classifierRule","mutableDiffCopy","classifier","changeType","error","diffFactory","PARENT_JUMP","strictResolveValueFromContext","resolveValueFromContext","optionalResolveValueFromContext","strict","fromObj","fromContext","countParentJump","customUniqueItemsArrayMappingResolver","equalityFn","before","after","beforeArrayIndexes","afterArrayIndexes","beforeMatchedArrayIndexes","afterMatchedArrayIndexes","beforeItem","afterItem","deepEqualsUniqueItemsArrayMappingResolver","breakingIf","resolveSchemaDescriptionTemplates","details","DirectiveLocation$1","COMPARE_SCOPE_OUTPUT","COMPARE_SCOPE_ARGS","COMPARE_SCOPE_DIRECTIVE_USAGES","RUNTIME_DIRECTIVE_LOCATIONS","wrapBySingletonUnion","combinerValues","isRuntimeDirectiveLocations","isArray$1","graphApiSchemaAdapter","newValue","valueContext","valueType","referenceType","valueKind","referenceKind","removeNotCorrectlySupportedInterfacesAdapter","complexTypeCompareResolver","beforeValue","afterValue","diffEntry2","diffEntry","titleBaseUniqueItemsArrayMappingResolver","nullableClassifier","scope","changedNullabilityValue","willHaveDefault","defaultClassifier","possibleDirectiveLocations","argumentWasOptional","directiveUsageClassifier","mergeKey","directiveMetaClassifier","directiveLocations","oldDirectiveLocations","newDirectiveLocations","directiveArgumentsClassifier","directiveLocationClassifier","wasRuntime","willRuntime","simpleRule","classify","BREAKING_CHANGE_SEVERITY","CHANGE_SEVERITY_COLOR_MAP","CHANGE_SEVERITY_TOOLTIP_TITLE_MAP","CHANGE_SEVERITY_DESCRIPTION_MAP","CHANGE_SEVERITIES","ChangesTooltip","memo","children","disableHoverListener","category","jsx","Tooltip","ChangesTooltipContent","Box","tooltipContent","categoryTitle","TOOLTIP_TITLE_BY_CATEGORY","jsxs","Divider","ListItem","CATEGORY_OPERATION","CATEGORY_PACKAGE"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}