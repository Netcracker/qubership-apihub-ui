{"version":3,"file":"WarningApiProcessorVersion-eba163e8.js","sources":["../../packages/shared/src/utils/responses.ts","../../packages/shared/src/types/system-configuration.ts","../../packages/shared/src/utils/search-params.ts","../../packages/shared/src/utils/redirects.ts","../../packages/shared/src/utils/threads.ts","../../packages/shared/src/utils/security.ts","../../packages/shared/src/utils/requests.ts","../../node_modules/@tanstack/query-core/build/lib/subscribable.mjs","../../node_modules/@tanstack/query-core/build/lib/utils.mjs","../../node_modules/@tanstack/query-core/build/lib/focusManager.mjs","../../node_modules/@tanstack/query-core/build/lib/onlineManager.mjs","../../node_modules/@tanstack/query-core/build/lib/retryer.mjs","../../node_modules/@tanstack/query-core/build/lib/notifyManager.mjs","../../node_modules/@tanstack/query-core/build/lib/queryObserver.mjs","../../node_modules/@tanstack/react-query/build/lib/useSyncExternalStore.mjs","../../node_modules/@tanstack/react-query/build/lib/QueryClientProvider.mjs","../../node_modules/@tanstack/react-query/build/lib/isRestoring.mjs","../../node_modules/@tanstack/react-query/build/lib/QueryErrorResetBoundary.mjs","../../node_modules/@tanstack/react-query/build/lib/utils.mjs","../../node_modules/@tanstack/react-query/build/lib/errorBoundaryUtils.mjs","../../node_modules/@tanstack/react-query/build/lib/suspense.mjs","../../node_modules/@tanstack/react-query/build/lib/useBaseQuery.mjs","../../node_modules/@tanstack/react-query/build/lib/useQuery.mjs","../../packages/shared/src/utils/version-info.ts","../../packages/shared/src/hooks/frontend-version/useVersionInfo.ts","../../packages/shared/src/utils/system-info.ts","../../packages/shared/src/features/system-info/api/useSystemInfo.ts","../../packages/shared/src/entities/versions.ts","../../packages/shared/src/hooks/package-version-content/usePackageVersionContent.ts","../../node_modules/compare-versions/lib/esm/utils.js","../../node_modules/compare-versions/lib/esm/compareVersions.js","../../packages/shared/src/components/WarningApiProcessorVersion.tsx"],"sourcesContent":["/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { ErrorStatus } from './requests'\n\nexport class HttpError extends Error {\n  code: string\n  status: ErrorStatus\n\n  constructor(message: string, code: string, status: ErrorStatus) {\n    super(message)\n    this.name = 'HttpError'\n    this.code = code\n    this.status = status\n  }\n}\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { Key } from '../entities/keys'\n\nexport const IdentityProviderTypes = {\n  INTERNAL: 'internal',\n  EXTERNAL: 'external',\n} as const\n\nexport type IdentityProviderType = (typeof IdentityProviderTypes)[keyof typeof IdentityProviderTypes]\n\nexport type IdentityProviderDto = Readonly<{\n  id: Key\n  type: IdentityProviderType\n  displayName: string\n  loginStartEndpoint?: string\n  imageSvg?: string\n}>\n\nexport type InternalIdentityProvider = Omit<IdentityProviderDto, 'type'> & { type: typeof IdentityProviderTypes.INTERNAL }\nexport type ExternalIdentityProvider = Omit<IdentityProviderDto, 'type'> & { type: typeof IdentityProviderTypes.EXTERNAL }\n\nexport type SystemExtension = Readonly<{\n  name: string\n  baseUrl: string\n  pathPrefix: string\n}>\n\nexport type SystemConfigurationDto = Readonly<{\n  defaultWorkspaceId: string\n  authConfig: {\n    identityProviders: ReadonlyArray<IdentityProviderDto>\n    autoLogin?: boolean\n  }\n  extensions: Array<SystemExtension>\n}>\n\nexport type SystemConfiguration = SystemConfigurationDto\n\nexport function isInternalIdentityProvider(idp: IdentityProviderDto): idp is InternalIdentityProvider {\n  return idp.type === IdentityProviderTypes.INTERNAL\n}\n\nexport function isExternalIdentityProvider(idp: IdentityProviderDto): idp is ExternalIdentityProvider {\n  return idp.type === IdentityProviderTypes.EXTERNAL\n}\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PACKAGE_SEARCH_PARAM = 'package'\nexport const VERSION_SEARCH_PARAM = 'version'\nexport const OPERATION_SEARCH_PARAM = 'operation'\nexport const GROUP_SEARCH_PARAM = 'group'\nexport const WORKSPACE_SEARCH_PARAM = 'workspace'\nexport const TAG_SEARCH_PARAM = 'tag'\nexport const FILTERS_SEARCH_PARAM = 'filters'\nexport const EXPAND_NAVIGATION_MENU_SEARCH_PARAM = 'expandNavigationMenu'\nexport const FILE_VIEW_MODE_PARAM_KEY = 'fileViewMode'\nexport const REF_SEARCH_PARAM = 'ref'\nexport const DOCUMENT_SEARCH_PARAM = 'document'\nexport const MODE_SEARCH_PARAM = 'mode'\nexport const PLAYGROUND_SIDEBAR_VIEW_MODE_SEARCH_PARAM = 'sidebar'\nexport const API_TYPE_SEARCH_PARAM = 'apiType'\nexport const BRANCH_SEARCH_PARAM = 'branch'\nexport const VIEW_SEARCH_PARAM = 'view'\nexport const SEARCH_TEXT_PARAM_KEY = 'text'\nexport const OPERATIONS_VIEW_MODE_PARAM = 'viewMode'\n\nexport interface SearchParam {\n  value: unknown\n  toStringValue?: (value: object | string | number) => string\n}\n\nexport function optionalSearchParams(\n  params: Record<string, {\n    value: unknown\n    toStringValue?: (value: object | string | number) => string\n  }>,\n): URLSearchParams {\n  const searchParams = new URLSearchParams()\n\n  Object.entries(params).forEach(([key, { value, toStringValue }]) => {\n    if (Array.isArray(value)) {\n      const [first] = value\n      if (!first) {\n        return\n      }\n    }\n\n    if (value || value === 0) {\n      searchParams.set(key, toStringValue?.(value) ?? `${value}`)\n    }\n  })\n\n  return searchParams\n}\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { PathMatch } from 'react-router'\nimport { matchPath } from 'react-router-dom'\nimport { SEARCH_PARAM_NO_AUTO_LOGIN, SEARCH_PARAM_REDIRECT_URI } from './constants'\nimport type { FetchRedirectDetails } from './requests'\nimport { API_BASE_PATH_PATTERN, FETCH_REDIRECT_TYPE_PACKAGE } from './requests'\nimport { optionalSearchParams } from './search-params'\n\nexport function redirectToGitlab(): void {\n  redirectTo('/login/gitlab')\n}\n\nexport function redirectToLogin(): void {\n  redirectTo('/login', optionalSearchParams({\n    [SEARCH_PARAM_NO_AUTO_LOGIN]: { value: true },\n    redirectUri: { value: location.href },\n  }))\n}\n\nexport function redirectTo(path: string, searchParams: URLSearchParams = new URLSearchParams()): void {\n  const redirectUri = searchParams.get('redirectUri') ?? location.href\n  searchParams.set('redirectUri', redirectUri)\n\n  let url = location.origin\n  if (path.includes('?')) {\n    url = `${url}${path}&${searchParams}`\n  } else {\n    url = `${url}${path}?${searchParams}`\n  }\n\n  (() => {\n    window.stop()\n    location.replace(url)\n  })()\n}\n\ntype PackagePathPattern = `/${string}/:packageId${'' | `/${string}`}`\n\n// Path Patterns should not include API_BASE_PATH\nexport function getPackageRedirectDetails<P extends PackagePathPattern>(\n  response: Response,\n  pathPattern: P,\n): FetchRedirectDetails | null {\n  const redirectedUrl = new URL(response.url)\n  const match = matchPath(`${API_BASE_PATH_PATTERN}${pathPattern}`, redirectedUrl.pathname) as PathMatch<'packageId'> | null\n  return match && match.params.packageId\n    ? {\n      redirectType: FETCH_REDIRECT_TYPE_PACKAGE,\n      id: match.params.packageId,\n    }\n    : null\n}\n\nexport function getRedirectUri(): string {\n  const url = new URL(location.href)\n  const redirectUri = url.searchParams.get(SEARCH_PARAM_REDIRECT_URI)\n  if (redirectUri) {\n    return redirectUri\n  }\n  if (location.pathname === '/login') {\n    return location.origin\n  }\n  return location.href\n}\n","export async function stopThread(message: string = 'Thread is stopped'): Promise<void> {\n  await pauseThread(0, message)\n}\n\nexport async function pauseThread(timeoutMs: number = 0, message: string = 'Thread is paused'): Promise<void> {\n  await new Promise(resolve => {\n    console.log(message)\n    if (timeoutMs > 0) {\n      setTimeout(() => {\n        resolve(undefined)\n      }, timeoutMs)\n    }\n  })\n}\n","import type { QueryObserverResult, RefetchOptions, RefetchQueryFilters, UseMutateFunction } from '@tanstack/react-query'\nimport type { IdentityProviderDto, SystemConfigurationDto } from '../types/system-configuration'\nimport { isInternalIdentityProvider } from '../types/system-configuration'\nimport { SEARCH_PARAM_NO_AUTO_LOGIN, SESSION_STORAGE_KEY_LAST_IDENTITY_PROVIDER_ID, SESSION_STORAGE_KEY_SYSTEM_CONFIGURATION } from './constants'\nimport { getRedirectUri, redirectTo, redirectToLogin } from './redirects'\nimport { optionalSearchParams } from './search-params'\nimport { stopThread } from './threads'\n\n// TODO 16.05.25 // Temporarily copy-pasted from ./requests.ts\n// Get rid of copy-pasting these constants\nconst API_V3 = '/api/v3'\n\nexport const TokenRefreshResults = {\n  NO_PROVIDER: 'no-provider',\n  NO_ENDPOINT: 'no-endpoint',\n  TOKEN_REFRESHED: 'token-refreshed',\n  UNKNOWN: 'unknown',\n} as const\nexport type TokenRefreshResult = (typeof TokenRefreshResults)[keyof typeof TokenRefreshResults]\nexport function isTokenRefreshed(maybeTokenRefreshResult: unknown): maybeTokenRefreshResult is typeof TokenRefreshResults.TOKEN_REFRESHED {\n  return maybeTokenRefreshResult === TokenRefreshResults.TOKEN_REFRESHED\n}\n\nexport class WorkerUnauthorizedError extends Error {\n  readonly responseStatus: number = 401\n\n  constructor() {\n    super('HTTP 401 Unauthorized')\n    this.name = 'WorkerUnauthorizedError'\n  }\n}\n\nexport async function handleAuthentication(responseStatus: number): Promise<TokenRefreshResult | undefined> {\n  const searchParams = new URLSearchParams(location.search)\n  // noAutoLogin = true in 2 cases:\n  // 1. user manually logged out just now\n  // 2. user logged in just now and automatically redirect to login page\n  const allowedAutoLogin = !searchParams.get(SEARCH_PARAM_NO_AUTO_LOGIN)\n\n  let tokenRefreshResult: TokenRefreshResult | undefined\n\n  if (responseStatus === 401 && allowedAutoLogin) {\n    // when we are in worker, we can't use algorithm below in direct way\n    // so we have to throw a specific error, catch it in main thread and handle with the same algorithm\n    if (typeof window === 'undefined') {\n      throw new WorkerUnauthorizedError()\n    }\n\n    const systemConfigurationFromStorage = sessionStorage.getItem(SESSION_STORAGE_KEY_SYSTEM_CONFIGURATION)\n    // must be always present,\n    // because protected API is not fetched until system configuration is loaded\n    const systemConfiguration: SystemConfigurationDto = JSON.parse(systemConfigurationFromStorage!) as SystemConfigurationDto\n\n    const { authConfig } = systemConfiguration\n\n    // trying to refresh token by auto-login provider\n    const { autoLogin } = authConfig\n    if (autoLogin) {\n      const [autoLoginProvider] = authConfig.identityProviders\n      tokenRefreshResult = await handleUnauthorizedByProvider(autoLoginProvider)\n      if (isTokenRefreshed(tokenRefreshResult)) {\n        return tokenRefreshResult\n      }\n    } else {\n      // trying to refresh token by last used provider\n      const lastProviderId = localStorage.getItem(SESSION_STORAGE_KEY_LAST_IDENTITY_PROVIDER_ID)\n      const lastProvider = lastProviderId\n        ? authConfig.identityProviders.find(idp => idp.id === lastProviderId)\n        : undefined\n\n      tokenRefreshResult = await handleUnauthorizedByProvider(lastProvider)\n      if (isTokenRefreshed(tokenRefreshResult)) {\n        return tokenRefreshResult\n      }\n    }\n\n    // the first login in clear browser\n    if (tokenRefreshResult === TokenRefreshResults.NO_PROVIDER) {\n      redirectToLogin()\n    }\n  }\n\n  return tokenRefreshResult\n}\n\nasync function handleUnauthorizedByProvider(identityProvider: IdentityProviderDto | undefined): Promise<TokenRefreshResult> {\n  if (!identityProvider) {\n    return TokenRefreshResults.NO_PROVIDER\n  }\n\n  let requestEndpoint = ''\n  if (isInternalIdentityProvider(identityProvider)) {\n    // Parameter \"redirectUri\" is used to redirect when the user is not authenticated and token can't be refreshed\n    // In that case we should redirect to the login page with its own \"redirectUri\"\n    // which will be used after logging in via internal identity provider to redirect to the original page.\n    const searchParamsLoginPage = optionalSearchParams({ noAutoLogin: { value: true }, redirectUri: { value: getRedirectUri() } })\n    const searchParamsAuthLocalRefresh = optionalSearchParams({ redirectUri: { value: `${location.origin}/login?${searchParamsLoginPage}` } })\n    requestEndpoint = `${API_V3}/auth/local/refresh?${searchParamsAuthLocalRefresh}`\n  } else if (identityProvider.loginStartEndpoint) {\n    // In case of external identity provider, we don't have control over the redirections and we provide\n    // just \"redirectUri\" with value of the current page OR main page (if current page is login page), \n    // because internal redirections will be managed by the backend and the provider.\n    const searchParamsAuthWithStartEndpoint = optionalSearchParams({ redirectUri: { value: getRedirectUri() } })\n    requestEndpoint = `${identityProvider.loginStartEndpoint}?${searchParamsAuthWithStartEndpoint}`\n  } else {\n    return TokenRefreshResults.NO_ENDPOINT\n  }\n  const response = await fetch(\n    requestEndpoint,\n    {\n      method: 'GET',\n      redirect: 'manual',\n    },\n  )\n  if (response.ok) {\n    return TokenRefreshResults.TOKEN_REFRESHED\n  }\n  if (response.type === 'opaqueredirect') {\n    const url = response.url.replace(location.origin, '')\n    redirectTo(url)\n    /**\n     * TL;DR: Redirections are asyncronous global tasks\n     * Details:\n     * - https://html.spec.whatwg.org/multipage/browsing-the-web.html#navigate\n     * - Some part of navigation algorithm is run synchronously until the point 8 from specs.\n     * - Since this moment, if surrounding (!) code is running, it will be finished first.\n     * - Surrounding code includes both synchronous and asynchronous code.\n     * - Continuing navigation will be planned as a global task.\n     * - After surrounding code is finished, navigation will be executed,\n     *   BUT:\n     *   If any microtask will never be resolved, navigation will be executed anyway\n     *   after the last reached surrounding code is executed.\n     * - So, as the result, we can stop thread to wait for the redirection with infinite promise.\n     */\n    await stopThread('Waiting for redirection...')\n  }\n  console.error('Can\\'t refresh token. Response:', response)\n  return TokenRefreshResults.UNKNOWN\n}\n\nfunction isWorkerUnauthorizedError(error: unknown): error is WorkerUnauthorizedError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    'name' in error &&\n    error.name === 'WorkerUnauthorizedError' &&\n    'responseStatus' in error &&\n    typeof error.responseStatus === 'number'\n  )\n}\n\ntype MutationUnauthorizedHandler<TError, TVariables, TContext>\n  = (error: TError, variables: TVariables, context: TContext) => Promise<TokenRefreshResult | undefined>\n\nexport function onMutationUnauthorized<TData = unknown, TError extends Error = Error, TVariables = void, TContext = unknown>(\n  mutate: UseMutateFunction<TData, TError, TVariables, TContext>,\n): MutationUnauthorizedHandler<TError, TVariables, TContext> {\n\n  return async (error, variables): Promise<TokenRefreshResult | undefined> => {\n    if (isWorkerUnauthorizedError(error)) {\n      const tokenRefreshResult = await handleAuthentication(error.responseStatus)\n      if (tokenRefreshResult === TokenRefreshResults.TOKEN_REFRESHED) {\n        mutate(variables)\n      }\n      return tokenRefreshResult\n    }\n  }\n}\n\ntype QueryUnauthorizedHandler<TError> = (error: TError) => Promise<TokenRefreshResult | undefined>\n\nexport function onQueryUnauthorized<TData = unknown, TError extends Error = Error>(\n  refetch: <TPageData>(options?: (RefetchOptions & RefetchQueryFilters<TPageData>) | undefined) => Promise<QueryObserverResult<TData, TError>>,\n): QueryUnauthorizedHandler<TError> {\n\n  return async (error): Promise<TokenRefreshResult | undefined> => {\n    if (isWorkerUnauthorizedError(error)) {\n      const tokenRefreshResult = await handleAuthentication(error.responseStatus)\n      if (tokenRefreshResult === TokenRefreshResults.TOKEN_REFRESHED) {\n        refetch()\n      }\n      return tokenRefreshResult\n    }\n  }\n}\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport fileDownload from 'js-file-download'\nimport type { ErrorMessage } from './packages-builder'\nimport { HttpError } from './responses'\nimport { handleAuthentication, isTokenRefreshed } from './security'\nimport type { Key } from './types'\n\nexport const API_V1 = '/api/v1'\nexport const API_V2 = '/api/v2'\nexport const API_V3 = '/api/v3'\nexport const API_V4 = '/api/v4'\n\nexport const API_BASE_PATH_PATTERN = '/api/:apiVersion'\n\nexport const STATUS_REFETCH_INTERVAL = 3 * 1000 // three seconds\nexport const DEFAULT_REFETCH_INTERVAL = 5 * (60 * 1000) // five minutes\n\nexport type CustomErrorHandler = (response: Response) => void\nexport type CustomRedirectHandler = (response: Response) => FetchRedirectDetails | null\n\nexport type RequestJsonExtraOptions = {\n  basePath?: string\n  customErrorHandler?: CustomErrorHandler\n  customRedirectHandler?: CustomRedirectHandler\n  ignoreNotFound?: boolean\n}\n\nexport async function requestJson<T extends object | null>(\n  input: RequestInfo | URL,\n  init?: RequestInit,\n  options: RequestJsonExtraOptions = {},\n  signal?: AbortSignal,\n): Promise<T> {\n  const { basePath = '', customErrorHandler, customRedirectHandler, ignoreNotFound = false } = options\n\n  const response = await fetch(`${basePath}${input}`, {\n    ...init,\n    signal: signal,\n    credentials: 'include',\n  })\n\n  if (!response.ok) {\n    const tokenRefreshResult = await handleAuthentication(response.status)\n    if (isTokenRefreshed(tokenRefreshResult)) {\n      return requestJson(input, init, options, signal)\n    }\n\n    await handleFetchError(response, { 401: true, 404: ignoreNotFound }, customErrorHandler)\n    return null as T\n  }\n\n  await handleFetchRedirect(response, customRedirectHandler)\n\n  return await response.json() as T\n}\n\nexport type RequestUnknownExtraOptions = {\n  basePath?: string\n  customErrorHandler?: CustomErrorHandler\n  customRedirectHandler?: CustomRedirectHandler\n  ignoreNotFound?: boolean\n  mediaTypes?: string[]\n}\n\nexport async function requestUnknown<T extends Record<PropertyKey, unknown> | null>(\n  input: RequestInfo | URL,\n  init?: RequestInit,\n  options: RequestUnknownExtraOptions = {},\n  signal?: AbortSignal,\n): Promise<T> {\n  const {\n    basePath = '',\n    customErrorHandler,\n    customRedirectHandler,\n    ignoreNotFound = false,\n    mediaTypes = [],\n  } = options\n\n  const response = await fetch(`${basePath}${input}`, {\n    headers: {\n      ...mediaTypes.length ? { 'Accept': mediaTypes.join(', ') } : {},\n    },\n    ...init,\n    signal: signal,\n    credentials: 'include',\n  })\n\n  if (!response.ok) {\n    const tokenRefreshResult = await handleAuthentication(response.status)\n    if (isTokenRefreshed(tokenRefreshResult)) {\n      return requestJson(input, init, options, signal)\n    }\n\n    await handleFetchError(response, { 401: true, 404: ignoreNotFound }, customErrorHandler)\n    return null as T\n  }\n\n  await handleFetchRedirect(response, customRedirectHandler)\n\n  // Handle unknown response\n  const contentType = response.headers.get('content-type')\n  if (contentType?.includes('application/json')) {\n    return await response.json()\n  }\n  if (contentType?.includes('application/octet-stream')) {\n    const getFilename = (): string => response.headers\n      .get('content-disposition')!\n      .split('filename=')[1]\n      .split(';')[0]\n    const data = await response.blob()\n    fileDownload(data, getFilename())\n    return null as T\n  }\n  return null as T\n}\n\nexport type RequestTextExtraOptions = {\n  basePath?: string\n  customErrorHandler?: CustomErrorHandler\n  customRedirectHandler?: CustomRedirectHandler\n}\n\nexport async function requestText(\n  input: RequestInfo | URL,\n  init?: RequestInit,\n  options: RequestTextExtraOptions = {},\n): Promise<string> {\n  const { basePath = '', customErrorHandler, customRedirectHandler } = options\n\n  const response = await fetch(`${basePath ?? ''}${input}`, {\n    ...init,\n    credentials: 'include',\n  })\n\n  if (!response.ok) {\n    const tokenRefreshResult = await handleAuthentication(response.status)\n    if (isTokenRefreshed(tokenRefreshResult)) {\n      return requestText(input, init, options)\n    }\n\n    await handleFetchError(response, { 401: true }, customErrorHandler)\n    return ''\n  }\n\n  await handleFetchRedirect(response, customRedirectHandler)\n  return await response.text()\n}\n\nexport type RequestBlobExtraOptions = {\n  basePath?: string\n  customErrorHandler?: CustomErrorHandler\n  customRedirectHandler?: CustomRedirectHandler\n}\n\nexport async function requestBlob(\n  input: RequestInfo | URL,\n  init?: RequestInit,\n  options: RequestBlobExtraOptions = {},\n): Promise<Response> {\n  const { basePath = '', customErrorHandler, customRedirectHandler } = options\n\n  const response = await fetch(`${basePath ?? ''}${input}`, {\n    ...init,\n    credentials: 'include',\n  })\n\n  if (!response.ok) {\n    const tokenRefreshResult = await handleAuthentication(response.status)\n    if (isTokenRefreshed(tokenRefreshResult)) {\n      return requestBlob(input, init, options)\n    }\n\n    if (customErrorHandler) {\n      customErrorHandler(response)\n    } else {\n      await handleError(response)\n    }\n  }\n\n  await handleFetchRedirect(response, customRedirectHandler)\n  return response\n}\n\nexport type RequestVoidExtraOptions = {\n  basePath?: string\n  ignoreNotFound?: boolean\n  customErrorHandler?: CustomErrorHandler\n  customRedirectHandler?: CustomRedirectHandler\n}\n\nexport async function requestVoid(\n  input: RequestInfo | URL,\n  init?: RequestInit,\n  options: RequestVoidExtraOptions = {},\n): Promise<void> {\n  const { basePath = '', ignoreNotFound = false, customErrorHandler, customRedirectHandler } = options\n\n  const response = await fetch(`${basePath}${input}`, {\n    ...init,\n    credentials: 'include',\n  })\n\n  if (!response.ok) {\n    const tokenRefreshResult = await handleAuthentication(response.status)\n    if (isTokenRefreshed(tokenRefreshResult)) {\n      return requestVoid(input, init, options)\n    }\n\n    await handleFetchError(response, { 401: true, 404: ignoreNotFound }, customErrorHandler)\n  }\n\n  await handleFetchRedirect(response, customRedirectHandler)\n  return\n}\n\nasync function handleFetchError(\n  response: Response,\n  ignoredStatuses: Record<number, boolean>,\n  customErrorHandler?: CustomErrorHandler,\n): Promise<void> {\n  if (ignoredStatuses[response.status]) {\n    return Promise.reject()\n  }\n\n  if (customErrorHandler) {\n    customErrorHandler(response)\n  } else {\n    await handleCustomError(response)\n  }\n}\n\nasync function handleFetchRedirect(response: Response, customRedirectHandler?: CustomRedirectHandler): Promise<void> {\n  if (response.redirected && customRedirectHandler) {\n    const redirectDetails = customRedirectHandler(response)\n    if (redirectDetails) {\n      await handleCustomRedirect(redirectDetails)\n    } else {\n      await handleCustomError(response)\n    }\n  }\n}\n\nasync function handleCustomError(response: Response): Promise<void> {\n  const [message, code, status] = await getResponseError(response)\n  const detail = { title: `Error ${response.status}`, message: message, code: code, status: status }\n  dispatchEvent(new CustomEvent<FetchErrorDetails>(FETCH_ERROR_EVENT, {\n    detail: detail,\n    bubbles: true,\n    composed: true,\n    cancelable: false,\n  }))\n  throw new HttpError(message, code, status)\n}\n\nasync function handleCustomRedirect(details: FetchRedirectDetails): Promise<void> {\n  dispatchEvent(new CustomEvent<FetchRedirectDetails>(FETCH_REDIRECT_EVENT, {\n    detail: details,\n    bubbles: true,\n    composed: true,\n    cancelable: false,\n  }))\n  window.stop()\n}\n\nexport type ErrorCode = string\nexport type ErrorStatus = number | null\n\nexport type ResponseError = Readonly<{\n  code: ErrorCode\n  message: ErrorMessage\n  params?: { [key: string]: string }\n  status: ErrorStatus\n}>\n\nexport async function getResponseError(response: Response): Promise<[ErrorMessage, ErrorCode, ErrorStatus]> {\n  const errorObject = await response.json() as ResponseError | null\n  const errorMessage = errorObject?.message ?? 'Something went wrong'\n  const errorCode = errorObject?.code ?? ''\n  const errorStatus = errorObject?.status ?? null\n  if (!errorObject?.params) {\n    return [errorMessage, errorCode, errorStatus]\n  }\n  return [\n    Object.entries(errorObject.params).reduce((message, [key, value]) => {\n      return message.replace(`$${key}`, value)\n    }, errorMessage),\n    errorCode,\n    errorStatus,\n  ]\n}\n\nexport class NotFoundError extends Error { }\n\nasync function handleError(response: Response): Promise<void> {\n  const [message] = await getResponseError(response)\n  if (response.status === 404) {\n    throw new NotFoundError(message)\n  }\n  throw new Error(message)\n}\n\nexport const FETCH_ERROR_EVENT = 'fetch-error'\nexport const FETCH_REDIRECT_EVENT = 'fetch-redirect'\n\nexport type FetchErrorDetails = {\n  title: string\n  message: ErrorMessage\n  code: ErrorCode\n  status: ErrorStatus\n}\n\nexport const FETCH_REDIRECT_TYPE_PACKAGE = 'package-redirect'\nexport type FetchRedirectType = typeof FETCH_REDIRECT_TYPE_PACKAGE\n\nexport type FetchRedirectDetails = {\n  redirectType: FetchRedirectType\n  id: Key\n}\n\nexport const ERROR_CODE_OPERATION_NOT_FOUND = '2301'\nexport const ERROR_CODE_IDP_URL_NOT_FOUND = '2902'\n","class Subscribable {\n  constructor() {\n    this.listeners = [];\n    this.subscribe = this.subscribe.bind(this);\n  }\n\n  subscribe(listener) {\n    this.listeners.push(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners = this.listeners.filter(x => x !== listener);\n      this.onUnsubscribe();\n    };\n  }\n\n  hasListeners() {\n    return this.listeners.length > 0;\n  }\n\n  onSubscribe() {// Do nothing\n  }\n\n  onUnsubscribe() {// Do nothing\n  }\n\n}\n\nexport { Subscribable };\n//# sourceMappingURL=subscribable.mjs.map\n","// TYPES\n// UTILS\nconst isServer = typeof window === 'undefined' || 'Deno' in window;\nfunction noop() {\n  return undefined;\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === 'function' ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === 'number' && value >= 0 && value !== Infinity;\n}\nfunction difference(array1, array2) {\n  return array1.filter(x => array2.indexOf(x) === -1);\n}\nfunction replaceAt(array, index, value) {\n  const copy = array.slice(0);\n  copy[index] = value;\n  return copy;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n\n  if (typeof arg2 === 'function') {\n    return { ...arg3,\n      queryKey: arg1,\n      queryFn: arg2\n    };\n  }\n\n  return { ...arg2,\n    queryKey: arg1\n  };\n}\nfunction parseMutationArgs(arg1, arg2, arg3) {\n  if (isQueryKey(arg1)) {\n    if (typeof arg2 === 'function') {\n      return { ...arg3,\n        mutationKey: arg1,\n        mutationFn: arg2\n      };\n    }\n\n    return { ...arg2,\n      mutationKey: arg1\n    };\n  }\n\n  if (typeof arg1 === 'function') {\n    return { ...arg2,\n      mutationFn: arg1\n    };\n  }\n\n  return { ...arg1\n  };\n}\nfunction parseFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [{ ...arg2,\n    queryKey: arg1\n  }, arg3] : [arg1 || {}, arg2];\n}\nfunction parseMutationFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [{ ...arg2,\n    mutationKey: arg1\n  }, arg3] : [arg1 || {}, arg2];\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = 'all',\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n\n  if (isQueryKey(queryKey)) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n\n  if (type !== 'all') {\n    const isActive = query.isActive();\n\n    if (type === 'active' && !isActive) {\n      return false;\n    }\n\n    if (type === 'inactive' && isActive) {\n      return false;\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false;\n  }\n\n  if (typeof fetchStatus !== 'undefined' && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const {\n    exact,\n    fetching,\n    predicate,\n    mutationKey\n  } = filters;\n\n  if (isQueryKey(mutationKey)) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n\n    if (exact) {\n      if (hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n\n  if (typeof fetching === 'boolean' && mutation.state.status === 'loading' !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = (options == null ? void 0 : options.queryKeyHashFn) || hashQueryKey;\n  return hashFn(queryKey);\n}\n/**\n * Default query keys hash function.\n * Hashes the value into a stable hash.\n */\n\nfunction hashQueryKey(queryKey) {\n  return JSON.stringify(queryKey, (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n    result[key] = val[key];\n    return result;\n  }, {}) : val);\n}\n/**\n * Checks if key `b` partially matches with key `a`.\n */\n\nfunction partialMatchKey(a, b) {\n  return partialDeepEqual(a, b);\n}\n/**\n * Checks if `b` partially matches with `a`.\n */\n\nfunction partialDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some(key => !partialDeepEqual(a[key], b[key]));\n  }\n\n  return false;\n}\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\n\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n\n  const array = isPlainArray(a) && isPlainArray(b);\n\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aSize = array ? a.length : Object.keys(a).length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      copy[key] = replaceEqualDeep(a[key], b[key]);\n\n      if (copy[key] === a[key]) {\n        equalItems++;\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n\n  return b;\n}\n/**\n * Shallow compare objects. Only works with objects that always have the same properties.\n */\n\nfunction shallowEqualObjects(a, b) {\n  if (a && !b || b && !a) {\n    return false;\n  }\n\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n} // Copied from: https://github.com/jonschlinkert/is-plain-object\n\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  } // If has modified constructor\n\n\n  const ctor = o.constructor;\n\n  if (typeof ctor === 'undefined') {\n    return true;\n  } // If has modified prototype\n\n\n  const prot = ctor.prototype;\n\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  } // If constructor does not have an Object-specific method\n\n\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}\n\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isQueryKey(value) {\n  return Array.isArray(value);\n}\nfunction isError(value) {\n  return value instanceof Error;\n}\nfunction sleep(timeout) {\n  return new Promise(resolve => {\n    setTimeout(resolve, timeout);\n  });\n}\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\n\nfunction scheduleMicrotask(callback) {\n  sleep(0).then(callback);\n}\nfunction getAbortController() {\n  if (typeof AbortController === 'function') {\n    return new AbortController();\n  }\n\n  return;\n}\nfunction replaceData(prevData, data, options) {\n  // Use prev data if an isDataEqual function is defined and returns `true`\n  if (options.isDataEqual != null && options.isDataEqual(prevData, data)) {\n    return prevData;\n  } else if (typeof options.structuralSharing === 'function') {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    // Structurally share data between prev and new data if needed\n    return replaceEqualDeep(prevData, data);\n  }\n\n  return data;\n}\n\nexport { difference, functionalUpdate, getAbortController, hashQueryKey, hashQueryKeyByOptions, isError, isPlainArray, isPlainObject, isQueryKey, isServer, isValidTimeout, matchMutation, matchQuery, noop, parseFilterArgs, parseMutationArgs, parseMutationFilterArgs, parseQueryArgs, partialDeepEqual, partialMatchKey, replaceAt, replaceData, replaceEqualDeep, scheduleMicrotask, shallowEqualObjects, sleep, timeUntilStale };\n//# sourceMappingURL=utils.mjs.map\n","import { Subscribable } from './subscribable.mjs';\nimport { isServer } from './utils.mjs';\n\nclass FocusManager extends Subscribable {\n  constructor() {\n    super();\n\n    this.setup = onFocus => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus(); // Listen to visibillitychange and focus\n\n\n        window.addEventListener('visibilitychange', listener, false);\n        window.addEventListener('focus', listener, false);\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener);\n          window.removeEventListener('focus', listener);\n        };\n      }\n\n      return;\n    };\n  }\n\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n\n  setEventListener(setup) {\n    var _this$cleanup2;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(focused => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n\n  setFocused(focused) {\n    this.focused = focused;\n\n    if (focused) {\n      this.onFocus();\n    }\n  }\n\n  onFocus() {\n    this.listeners.forEach(listener => {\n      listener();\n    });\n  }\n\n  isFocused() {\n    if (typeof this.focused === 'boolean') {\n      return this.focused;\n    } // document global can be unavailable in react native\n\n\n    if (typeof document === 'undefined') {\n      return true;\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n  }\n\n}\nconst focusManager = new FocusManager();\n\nexport { FocusManager, focusManager };\n//# sourceMappingURL=focusManager.mjs.map\n","import { Subscribable } from './subscribable.mjs';\nimport { isServer } from './utils.mjs';\n\nclass OnlineManager extends Subscribable {\n  constructor() {\n    super();\n\n    this.setup = onOnline => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onOnline(); // Listen to online\n\n\n        window.addEventListener('online', listener, false);\n        window.addEventListener('offline', listener, false);\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('online', listener);\n          window.removeEventListener('offline', listener);\n        };\n      }\n\n      return;\n    };\n  }\n\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n\n  setEventListener(setup) {\n    var _this$cleanup2;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(online => {\n      if (typeof online === 'boolean') {\n        this.setOnline(online);\n      } else {\n        this.onOnline();\n      }\n    });\n  }\n\n  setOnline(online) {\n    this.online = online;\n\n    if (online) {\n      this.onOnline();\n    }\n  }\n\n  onOnline() {\n    this.listeners.forEach(listener => {\n      listener();\n    });\n  }\n\n  isOnline() {\n    if (typeof this.online === 'boolean') {\n      return this.online;\n    }\n\n    if (typeof navigator === 'undefined' || typeof navigator.onLine === 'undefined') {\n      return true;\n    }\n\n    return navigator.onLine;\n  }\n\n}\nconst onlineManager = new OnlineManager();\n\nexport { OnlineManager, onlineManager };\n//# sourceMappingURL=onlineManager.mjs.map\n","import { focusManager } from './focusManager.mjs';\nimport { onlineManager } from './onlineManager.mjs';\nimport { sleep } from './utils.mjs';\n\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1000 * 2 ** failureCount, 30000);\n}\n\nfunction canFetch(networkMode) {\n  return (networkMode != null ? networkMode : 'online') === 'online' ? onlineManager.isOnline() : true;\n}\nclass CancelledError {\n  constructor(options) {\n    this.revert = options == null ? void 0 : options.revert;\n    this.silent = options == null ? void 0 : options.silent;\n  }\n\n}\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  let promiseResolve;\n  let promiseReject;\n  const promise = new Promise((outerResolve, outerReject) => {\n    promiseResolve = outerResolve;\n    promiseReject = outerReject;\n  });\n\n  const cancel = cancelOptions => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort == null ? void 0 : config.abort();\n    }\n  };\n\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n\n  const shouldPause = () => !focusManager.isFocused() || config.networkMode !== 'always' && !onlineManager.isOnline();\n\n  const resolve = value => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess == null ? void 0 : config.onSuccess(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseResolve(value);\n    }\n  };\n\n  const reject = value => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError == null ? void 0 : config.onError(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseReject(value);\n    }\n  };\n\n  const pause = () => {\n    return new Promise(continueResolve => {\n      continueFn = value => {\n        const canContinue = isResolved || !shouldPause();\n\n        if (canContinue) {\n          continueResolve(value);\n        }\n\n        return canContinue;\n      };\n\n      config.onPause == null ? void 0 : config.onPause();\n    }).then(() => {\n      continueFn = undefined;\n\n      if (!isResolved) {\n        config.onContinue == null ? void 0 : config.onContinue();\n      }\n    });\n  }; // Create loop function\n\n\n  const run = () => {\n    // Do nothing if already resolved\n    if (isResolved) {\n      return;\n    }\n\n    let promiseOrValue; // Execute query\n\n    try {\n      promiseOrValue = config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n\n    Promise.resolve(promiseOrValue).then(resolve).catch(error => {\n      var _config$retry, _config$retryDelay;\n\n      // Stop if the fetch is already resolved\n      if (isResolved) {\n        return;\n      } // Do we need to retry the request?\n\n\n      const retry = (_config$retry = config.retry) != null ? _config$retry : 3;\n      const retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : defaultRetryDelay;\n      const delay = typeof retryDelay === 'function' ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === 'number' && failureCount < retry || typeof retry === 'function' && retry(failureCount, error);\n\n      if (isRetryCancelled || !shouldRetry) {\n        // We are done if the query does not need to be retried\n        reject(error);\n        return;\n      }\n\n      failureCount++; // Notify on fail\n\n      config.onFail == null ? void 0 : config.onFail(failureCount, error); // Delay\n\n      sleep(delay) // Pause if the document is not visible or when the device is offline\n      .then(() => {\n        if (shouldPause()) {\n          return pause();\n        }\n\n        return;\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  }; // Start loop\n\n\n  if (canFetch(config.networkMode)) {\n    run();\n  } else {\n    pause().then(run);\n  }\n\n  return {\n    promise,\n    cancel,\n    continue: () => {\n      const didContinue = continueFn == null ? void 0 : continueFn();\n      return didContinue ? promise : Promise.resolve();\n    },\n    cancelRetry,\n    continueRetry\n  };\n}\n\nexport { CancelledError, canFetch, createRetryer, isCancelledError };\n//# sourceMappingURL=retryer.mjs.map\n","import { scheduleMicrotask } from './utils.mjs';\n\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n\n  let notifyFn = callback => {\n    callback();\n  };\n\n  let batchNotifyFn = callback => {\n    callback();\n  };\n\n  const batch = callback => {\n    let result;\n    transactions++;\n\n    try {\n      result = callback();\n    } finally {\n      transactions--;\n\n      if (!transactions) {\n        flush();\n      }\n    }\n\n    return result;\n  };\n\n  const schedule = callback => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleMicrotask(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  /**\n   * All calls to the wrapped function will be batched.\n   */\n\n\n  const batchCalls = callback => {\n    return (...args) => {\n      schedule(() => {\n        callback(...args);\n      });\n    };\n  };\n\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n\n    if (originalQueue.length) {\n      scheduleMicrotask(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach(callback => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  /**\n   * Use this method to set a custom notify function.\n   * This can be used to for example wrap notifications with `React.act` while running tests.\n   */\n\n\n  const setNotifyFunction = fn => {\n    notifyFn = fn;\n  };\n  /**\n   * Use this method to set a custom function to batch notifications together into a single tick.\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\n   */\n\n\n  const setBatchNotifyFunction = fn => {\n    batchNotifyFn = fn;\n  };\n\n  return {\n    batch,\n    batchCalls,\n    schedule,\n    setNotifyFunction,\n    setBatchNotifyFunction\n  };\n} // SINGLETON\n\nconst notifyManager = createNotifyManager();\n\nexport { createNotifyManager, notifyManager };\n//# sourceMappingURL=notifyManager.mjs.map\n","import { shallowEqualObjects, noop, isServer, isValidTimeout, timeUntilStale, replaceData } from './utils.mjs';\nimport { notifyManager } from './notifyManager.mjs';\nimport { focusManager } from './focusManager.mjs';\nimport { Subscribable } from './subscribable.mjs';\nimport { canFetch, isCancelledError } from './retryer.mjs';\n\nclass QueryObserver extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.client = client;\n    this.options = options;\n    this.trackedProps = new Set();\n    this.selectError = null;\n    this.bindMethods();\n    this.setOptions(options);\n  }\n\n  bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  }\n\n  onSubscribe() {\n    if (this.listeners.length === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  }\n\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnReconnect);\n  }\n\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnWindowFocus);\n  }\n\n  destroy() {\n    this.listeners = [];\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n    this.currentQuery.removeObserver(this);\n  }\n\n  setOptions(options, notifyOptions) {\n    const prevOptions = this.options;\n    const prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryOptions(options);\n\n    if (process.env.NODE_ENV !== 'production' && typeof (options == null ? void 0 : options.isDataEqual) !== 'undefined') {\n      this.client.getLogger().error(\"The isDataEqual option has been deprecated and will be removed in the next major version. You can achieve the same functionality by passing a function as the structuralSharing option\");\n    }\n\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getQueryCache().notify({\n        type: 'observerOptionsUpdated',\n        query: this.currentQuery,\n        observer: this\n      });\n    }\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    const mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    }\n\n    const nextRefetchInterval = this.computeRefetchInterval(); // Update refetch interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || nextRefetchInterval !== this.currentRefetchInterval)) {\n      this.updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n\n  getOptimisticResult(options) {\n    const query = this.client.getQueryCache().build(this.client, options);\n    return this.createResult(query, options);\n  }\n\n  getCurrentResult() {\n    return this.currentResult;\n  }\n\n  trackResult(result) {\n    const trackedResult = {};\n    Object.keys(result).forEach(key => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackedProps.add(key);\n          return result[key];\n        }\n      });\n    });\n    return trackedResult;\n  }\n\n  getCurrentQuery() {\n    return this.currentQuery;\n  }\n\n  remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  }\n\n  refetch({\n    refetchPage,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        refetchPage\n      }\n    });\n  }\n\n  fetchOptimistic(options) {\n    const defaultedOptions = this.client.defaultQueryOptions(options);\n    const query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    query.isFetchingOptimistic = true;\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n\n  fetch(fetchOptions) {\n    var _fetchOptions$cancelR;\n\n    return this.executeFetch({ ...fetchOptions,\n      cancelRefetch: (_fetchOptions$cancelR = fetchOptions.cancelRefetch) != null ? _fetchOptions$cancelR : true\n    }).then(() => {\n      this.updateResult();\n      return this.currentResult;\n    });\n  }\n\n  executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    let promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions != null && fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  }\n\n  updateStaleTimeout() {\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    const time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    const timeout = time + 1;\n    this.staleTimeoutId = setTimeout(() => {\n      if (!this.currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n\n  computeRefetchInterval() {\n    var _this$options$refetch;\n\n    return typeof this.options.refetchInterval === 'function' ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : (_this$options$refetch = this.options.refetchInterval) != null ? _this$options$refetch : false;\n  }\n\n  updateRefetchInterval(nextInterval) {\n    this.clearRefetchInterval();\n    this.currentRefetchInterval = nextInterval;\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.currentRefetchInterval) || this.currentRefetchInterval === 0) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.executeFetch();\n      }\n    }, this.currentRefetchInterval);\n  }\n\n  updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval(this.computeRefetchInterval());\n  }\n\n  clearStaleTimeout() {\n    if (this.staleTimeoutId) {\n      clearTimeout(this.staleTimeoutId);\n      this.staleTimeoutId = undefined;\n    }\n  }\n\n  clearRefetchInterval() {\n    if (this.refetchIntervalId) {\n      clearInterval(this.refetchIntervalId);\n      this.refetchIntervalId = undefined;\n    }\n  }\n\n  createResult(query, options) {\n    const prevQuery = this.currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.currentResult;\n    const prevResultState = this.currentResultState;\n    const prevResultOptions = this.currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    const prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    const {\n      state\n    } = query;\n    let {\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      fetchStatus,\n      status\n    } = state;\n    let isPreviousData = false;\n    let isPlaceholderData = false;\n    let data; // Optimistically set result in fetching state if needed\n\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        fetchStatus = canFetch(query.options.networkMode) ? 'fetching' : 'paused';\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n\n      if (options._optimisticResults === 'isRestoring') {\n        fetchStatus = 'idle';\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdatedAt && prevQueryResult != null && prevQueryResult.isSuccess && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n      // Memoize select result\n      if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === this.selectFn) {\n        data = this.selectResult;\n      } else {\n        try {\n          this.selectFn = options.select;\n          data = options.select(state.data);\n          data = replaceData(prevResult == null ? void 0 : prevResult.data, data, options);\n          this.selectResult = data;\n          this.selectError = null;\n        } catch (selectError) {\n          if (process.env.NODE_ENV !== 'production') {\n            this.client.getLogger().error(selectError);\n          }\n\n          this.selectError = selectError;\n        }\n      }\n    } // Use query data\n    else {\n      data = state.data;\n    } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      let placeholderData; // Memoize placeholder data\n\n      if (prevResult != null && prevResult.isPlaceholderData && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n            this.selectError = null;\n          } catch (selectError) {\n            if (process.env.NODE_ENV !== 'production') {\n              this.client.getLogger().error(selectError);\n            }\n\n            this.selectError = selectError;\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = replaceData(prevResult == null ? void 0 : prevResult.data, placeholderData, options);\n        isPlaceholderData = true;\n      }\n    }\n\n    if (this.selectError) {\n      error = this.selectError;\n      data = this.selectResult;\n      errorUpdatedAt = Date.now();\n      status = 'error';\n    }\n\n    const isFetching = fetchStatus === 'fetching';\n    const isLoading = status === 'loading';\n    const isError = status === 'error';\n    const result = {\n      status,\n      fetchStatus,\n      isLoading,\n      isSuccess: status === 'success',\n      isError,\n      isInitialLoading: isLoading && isFetching,\n      data,\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      failureReason: state.fetchFailureReason,\n      errorUpdateCount: state.errorUpdateCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isLoading,\n      isLoadingError: isError && state.dataUpdatedAt === 0,\n      isPaused: fetchStatus === 'paused',\n      isPlaceholderData,\n      isPreviousData,\n      isRefetchError: isError && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  }\n\n  updateResult(notifyOptions) {\n    const prevResult = this.currentResult;\n    const nextResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify and update result if something has changed\n\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n\n    this.currentResult = nextResult; // Determine which callbacks to trigger\n\n    const defaultNotifyOptions = {\n      cache: true\n    };\n\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n\n      const {\n        notifyOnChangeProps\n      } = this.options;\n\n      if (notifyOnChangeProps === 'all' || !notifyOnChangeProps && !this.trackedProps.size) {\n        return true;\n      }\n\n      const includedProps = new Set(notifyOnChangeProps != null ? notifyOnChangeProps : this.trackedProps);\n\n      if (this.options.useErrorBoundary) {\n        includedProps.add('error');\n      }\n\n      return Object.keys(this.currentResult).some(key => {\n        const typedKey = key;\n        const changed = this.currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && shouldNotifyListeners()) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify({ ...defaultNotifyOptions,\n      ...notifyOptions\n    });\n  }\n\n  updateQuery() {\n    const query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    const prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n\n  onQueryUpdate(action) {\n    const notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = !action.manual;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  }\n\n  notify(notifyOptions) {\n    notifyManager.batch(() => {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        var _this$options$onSucce, _this$options, _this$options$onSettl, _this$options2;\n\n        (_this$options$onSucce = (_this$options = this.options).onSuccess) == null ? void 0 : _this$options$onSucce.call(_this$options, this.currentResult.data);\n        (_this$options$onSettl = (_this$options2 = this.options).onSettled) == null ? void 0 : _this$options$onSettl.call(_this$options2, this.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        var _this$options$onError, _this$options3, _this$options$onSettl2, _this$options4;\n\n        (_this$options$onError = (_this$options3 = this.options).onError) == null ? void 0 : _this$options$onError.call(_this$options3, this.currentResult.error);\n        (_this$options$onSettl2 = (_this$options4 = this.options).onSettled) == null ? void 0 : _this$options$onSettl2.call(_this$options4, undefined, this.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        this.listeners.forEach(listener => {\n          listener(this.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        this.client.getQueryCache().notify({\n          query: this.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  }\n\n}\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.dataUpdatedAt > 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\n\nfunction shouldFetchOn(query, options, field) {\n  if (options.enabled !== false) {\n    const value = typeof field === 'function' ? field(query) : field;\n    return value === 'always' || value !== false && isStale(query, options);\n  }\n\n  return false;\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (!options.suspense || query.state.status !== 'error') && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n}\n\nexport { QueryObserver };\n//# sourceMappingURL=queryObserver.mjs.map\n","import { useSyncExternalStore as useSyncExternalStore$1 } from 'use-sync-external-store/shim/index.js';\n\n// Temporary workaround due to an issue with react-native uSES - https://github.com/TanStack/query/pull/3601\nconst useSyncExternalStore = useSyncExternalStore$1;\n\nexport { useSyncExternalStore };\n//# sourceMappingURL=useSyncExternalStore.mjs.map\n","import * as React from 'react';\n\nconst defaultContext = /*#__PURE__*/React.createContext(undefined);\nconst QueryClientSharingContext = /*#__PURE__*/React.createContext(false); // If we are given a context, we will use it.\n// Otherwise, if contextSharing is on, we share the first and at least one\n// instance of the context across the window\n// to ensure that if React Query is used across\n// different bundles or microfrontends they will\n// all use the same **instance** of context, regardless\n// of module scoping.\n\nfunction getQueryClientContext(context, contextSharing) {\n  if (context) {\n    return context;\n  }\n\n  if (contextSharing && typeof window !== 'undefined') {\n    if (!window.ReactQueryClientContext) {\n      window.ReactQueryClientContext = defaultContext;\n    }\n\n    return window.ReactQueryClientContext;\n  }\n\n  return defaultContext;\n}\n\nconst useQueryClient = ({\n  context\n} = {}) => {\n  const queryClient = React.useContext(getQueryClientContext(context, React.useContext(QueryClientSharingContext)));\n\n  if (!queryClient) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one');\n  }\n\n  return queryClient;\n};\nconst QueryClientProvider = ({\n  client,\n  children,\n  context,\n  contextSharing = false\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n\n  if (process.env.NODE_ENV !== 'production' && contextSharing) {\n    client.getLogger().error(\"The contextSharing option has been deprecated and will be removed in the next major version\");\n  }\n\n  const Context = getQueryClientContext(context, contextSharing);\n  return /*#__PURE__*/React.createElement(QueryClientSharingContext.Provider, {\n    value: !context && contextSharing\n  }, /*#__PURE__*/React.createElement(Context.Provider, {\n    value: client\n  }, children));\n};\n\nexport { QueryClientProvider, defaultContext, useQueryClient };\n//# sourceMappingURL=QueryClientProvider.mjs.map\n","import * as React from 'react';\n\nconst IsRestoringContext = /*#__PURE__*/React.createContext(false);\nconst useIsRestoring = () => React.useContext(IsRestoringContext);\nconst IsRestoringProvider = IsRestoringContext.Provider;\n\nexport { IsRestoringProvider, useIsRestoring };\n//# sourceMappingURL=isRestoring.mjs.map\n","import * as React from 'react';\n\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\n\nconst QueryErrorResetBoundaryContext = /*#__PURE__*/React.createContext(createValue()); // HOOK\n\nconst useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext); // COMPONENT\n\nconst QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};\n\nexport { QueryErrorResetBoundary, useQueryErrorResetBoundary };\n//# sourceMappingURL=QueryErrorResetBoundary.mjs.map\n","function shouldThrowError(_useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params);\n  }\n\n  return !!_useErrorBoundary;\n}\n\nexport { shouldThrowError };\n//# sourceMappingURL=utils.mjs.map\n","import * as React from 'react';\nimport { shouldThrowError } from './utils.mjs';\n\nconst ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nconst useClearResetErrorBoundary = errorResetBoundary => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nconst getHasError = ({\n  result,\n  errorResetBoundary,\n  useErrorBoundary,\n  query\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(useErrorBoundary, [result.error, query]);\n};\n\nexport { ensurePreventErrorBoundaryRetry, getHasError, useClearResetErrorBoundary };\n//# sourceMappingURL=errorBoundaryUtils.mjs.map\n","const ensureStaleTime = defaultedOptions => {\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n};\nconst willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nconst shouldSuspend = (defaultedOptions, result, isRestoring) => (defaultedOptions == null ? void 0 : defaultedOptions.suspense) && willFetch(result, isRestoring);\nconst fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).then(({\n  data\n}) => {\n  defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n  defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n}).catch(error => {\n  errorResetBoundary.clearReset();\n  defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n  defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n});\n\nexport { ensureStaleTime, fetchOptimistic, shouldSuspend, willFetch };\n//# sourceMappingURL=suspense.mjs.map\n","import * as React from 'react';\nimport { useSyncExternalStore } from './useSyncExternalStore.mjs';\nimport { notifyManager } from '@tanstack/query-core';\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary.mjs';\nimport { useQueryClient } from './QueryClientProvider.mjs';\nimport { useIsRestoring } from './isRestoring.mjs';\nimport { ensurePreventErrorBoundaryRetry, useClearResetErrorBoundary, getHasError } from './errorBoundaryUtils.mjs';\nimport { ensureStaleTime, shouldSuspend, fetchOptimistic } from './suspense.mjs';\n\nfunction useBaseQuery(options, Observer) {\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedOptions = queryClient.defaultQueryOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions._optimisticResults = isRestoring ? 'isRestoring' : 'optimistic'; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  ensureStaleTime(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const [observer] = React.useState(() => new Observer(queryClient, defaultedOptions));\n  const result = observer.getOptimisticResult(defaultedOptions);\n  useSyncExternalStore(React.useCallback(onStoreChange => isRestoring ? () => undefined : observer.subscribe(notifyManager.batchCalls(onStoreChange)), [observer, isRestoring]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (shouldSuspend(defaultedOptions, result, isRestoring)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  } // Handle error boundary\n\n\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    useErrorBoundary: defaultedOptions.useErrorBoundary,\n    query: observer.getCurrentQuery()\n  })) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\n\nexport { useBaseQuery };\n//# sourceMappingURL=useBaseQuery.mjs.map\n","import { parseQueryArgs, QueryObserver } from '@tanstack/query-core';\nimport { useBaseQuery } from './useBaseQuery.mjs';\n\nfunction useQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}\n\nexport { useQuery };\n//# sourceMappingURL=useQuery.mjs.map\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_REFETCH_INTERVAL, requestJson } from './requests'\nimport type { UseQueryOptions } from '@tanstack/react-query'\n\nconst VERSION_INFO_QUERY_KEY = 'version-info'\n\nexport type VersionInfoDto = {\n  frontendVersion: string\n  apiProcessorVersion: string\n}\nexport type VersionInfo = VersionInfoDto\n\nexport const Apps = {\n  portal: 'portal',\n  agent: 'agents',\n} as const\n\nexport const { portal, agent } = Apps\nexport type AppTypeApiHub = typeof Apps[keyof typeof Apps]\n\nexport function getVersionInfoOptions(appType: AppTypeApiHub): UseQueryOptions<VersionInfoDto, Error, VersionInfo> {\n  return {\n    queryKey: [VERSION_INFO_QUERY_KEY],\n    queryFn: () => getVersionInfo(appType),\n    enabled: true,\n    refetchInterval: DEFAULT_REFETCH_INTERVAL,\n    refetchOnWindowFocus: false,\n    refetchOnReconnect: false,\n    refetchOnMount: false,\n  }\n}\n\nexport async function getVersionInfo(appType: AppTypeApiHub): Promise<VersionInfoDto> {\n  return await requestJson<VersionInfoDto>(`/${appType}/version.json`, {\n    method: 'get',\n  })\n}\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useQuery } from '@tanstack/react-query'\nimport type { AppTypeApiHub, VersionInfo, VersionInfoDto } from '../../utils/version-info'\nimport { portal } from '../../utils/version-info'\nimport { getVersionInfoOptions } from '../../utils/version-info'\nimport * as packageJson from '../../../../portal/package.json'\n\nconst emptyVersion: VersionInfo = { frontendVersion: packageJson.version, apiProcessorVersion: '0.0.0-unknown' }\n\nexport function useVersionInfo(appType: AppTypeApiHub = portal): VersionInfo {\n  const { data } = useQuery<VersionInfoDto, Error, VersionInfo>(\n    getVersionInfoOptions(appType),\n  )\n\n  return data ?? emptyVersion\n}\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { UseQueryOptions } from '@tanstack/react-query'\nimport { API_V1, DEFAULT_REFETCH_INTERVAL, requestJson } from './requests'\nimport type { Key } from './types'\n\nconst SYSTEM_INFO_QUERY_KEY = 'system-info'\n\nexport type Link = {\n  title: string\n  url: string\n}\n\nexport type SystemInfo = {\n  backendVersionKey: Key\n  frontendVersionKey: Key\n  productionMode: boolean\n  externalLinks: Link[]\n  notification?: string\n  migrationInProgress: boolean\n}\n\nexport type SystemInfoDto = {\n  backendVersion: string\n  frontendVersion: string\n  productionMode: boolean\n  externalLinks: string[]\n  notification?: string\n  migrationInProgress: boolean\n}\n\nexport const EMPTY_SYSTEM_INFO: SystemInfo = {\n  backendVersionKey: '0.0.0',\n  frontendVersionKey: '0.0.0',\n  productionMode: false,\n  externalLinks: [],\n  migrationInProgress: false,\n}\n\nexport function toSystemInfo(value: SystemInfoDto): SystemInfo {\n  const externalLinks = value.externalLinks.reduce<Link[]>((filteredLinks, externalLink) => {\n    const verticalBarIndex = externalLink.indexOf('|')\n    if (verticalBarIndex === -1) {\n      return filteredLinks\n    }\n    filteredLinks.push({\n      title: externalLink.slice(0, verticalBarIndex),\n      url: externalLink.slice(verticalBarIndex + 1),\n    })\n    return filteredLinks\n  }, [])\n\n  return {\n    backendVersionKey: value.backendVersion,\n    frontendVersionKey: value.frontendVersion,\n    productionMode: value.productionMode,\n    externalLinks: externalLinks,\n    notification: value.notification,\n    migrationInProgress: value.migrationInProgress,\n  }\n}\n\nexport function getSystemInfoOptions(enabled = true): UseQueryOptions<SystemInfoDto, Error, SystemInfo> {\n  return {\n    queryKey: [SYSTEM_INFO_QUERY_KEY],\n    queryFn: getSystemInfo,\n    select: toSystemInfo,\n    enabled: enabled,\n    refetchInterval: DEFAULT_REFETCH_INTERVAL,\n    refetchOnWindowFocus: false,\n    refetchOnReconnect: false,\n    refetchOnMount: false,\n  }\n}\n\nexport async function getSystemInfo(): Promise<SystemInfoDto> {\n  return await requestJson<SystemInfoDto>(\n    '/system/info',\n    { method: 'get' },\n    { basePath: API_V1 },\n  )\n}\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useQuery } from '@tanstack/react-query'\nimport type { SystemInfo, SystemInfoDto } from '../../../utils/system-info'\nimport { EMPTY_SYSTEM_INFO, getSystemInfoOptions } from '../../../utils/system-info'\n\nexport function useSystemInfo(enabled = true): SystemInfo {\n  const { data } = useQuery<SystemInfoDto, Error, SystemInfo>(\n    getSystemInfoOptions(enabled),\n  )\n\n  // TODO: WA for OT\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  window.apihubProductionMode = data?.productionMode ?? false\n\n  return data ?? EMPTY_SYSTEM_INFO\n}\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { VersionStatus } from './version-status'\nimport type { Key } from './keys'\nimport type { Principal } from './principals'\n\nexport type PagedPackageVersions = Readonly<PackageVersions[]>\n\nexport type PackageVersions = Readonly<PackageVersion[]>\n\nexport type PackageVersion = Readonly<{\n  key: Key\n  status: VersionStatus\n  createdBy: Principal\n  createdAt?: string\n  versionLabels: string[]\n  previousVersion?: string\n  latestRevision: boolean\n}>\n\nexport type PackageVersionDto = Readonly<{\n  version: Key\n  status: VersionStatus\n  createdBy: Principal\n  createdAt?: string\n  versionLabels?: string[]\n  previousVersion?: string\n  notLatestRevision?: boolean\n}>\n\nexport type PackageVersionsDto = Readonly<{\n  versions: ReadonlyArray<PackageVersionDto>\n}>\n\nexport const SPECIAL_VERSION_KEY = '@'\nexport const REVISION_DELIMITER = '@'\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useQuery } from '@tanstack/react-query'\nimport { generatePath } from 'react-router-dom'\nimport type { Key } from '../../utils/types'\nimport type {\n  OperationTypeSummary,\n  OperationTypeSummaryDto,\n  PackageVersionContent,\n  PackageVersionContentDto,\n} from '../../entities/version-contents'\nimport { getPackageRedirectDetails } from '../../utils/redirects'\nimport { API_V3, requestJson } from '../../utils/requests'\nimport { optionalSearchParams } from '../../utils/search-params'\nimport { SPECIAL_VERSION_KEY } from '../../entities/versions'\nimport { toApiTypeMap } from '../../entities/api-types'\nimport { replacePropertyInChangesSummary } from '@netcracker/qubership-apihub-api-processor'\nimport type { VersionKey } from '../../entities/keys'\n\nexport const PACKAGE_VERSION_CONTENT_QUERY_KEY = 'package-version-content-query-key'\n\nexport function useApiProcessorVersion(options: {\n  packageKey: Key | undefined\n  versionKey: VersionKey | undefined\n}): Key | undefined {\n  const { packageKey, versionKey } = options\n  const {\n    data: { apiProcessorVersion } = {},\n  } = useQuery<PackageVersionContentDto, Error, PackageVersionContent>({\n    queryKey: [PACKAGE_VERSION_CONTENT_QUERY_KEY, packageKey, versionKey],\n    queryFn: ({ signal }) => getPackageVersionContent(packageKey!, versionKey!, signal),\n    enabled: !!packageKey && !!versionKey && versionKey !== SPECIAL_VERSION_KEY,\n    select: toPackageVersionContent,\n  })\n  return apiProcessorVersion\n}\n\nexport async function getPackageVersionContent(\n  packageKey: Key,\n  versionKey: Key,\n  signal?: AbortSignal,\n  includeSummary: boolean = false,\n  includeOperations: boolean = false,\n  includeGroups: boolean = false,\n): Promise<PackageVersionContentDto> {\n  const packageId = encodeURIComponent(packageKey)\n  const versionId = encodeURIComponent(versionKey)\n\n  const queryParams = optionalSearchParams({\n    includeSummary: { value: includeSummary },\n    includeOperations: { value: includeOperations },\n    includeGroups: { value: includeGroups },\n  })\n\n  const pathPattern = '/packages/:packageId/versions/:versionId'\n  return await requestJson<PackageVersionContentDto>(\n    `${generatePath(pathPattern, { packageId, versionId })}?${queryParams}`,\n    {\n      method: 'get',\n    },\n    {\n      customRedirectHandler: (response) => getPackageRedirectDetails(response, pathPattern),\n      basePath: API_V3,\n    },\n    signal,\n  )\n}\n\nexport function toPackageVersionContent(value: PackageVersionContentDto): PackageVersionContent {\n  return {\n    ...value,\n    packageKey: value.packageId,\n    createdAt: new Date(value.createdAt).toDateString(),\n    operationTypes: toApiTypeMap(convertDtoFieldOperationTypesWithApiType(value.operationTypes)),\n    latestRevision: !value?.notLatestRevision,\n    revisionsCount: value.revisionsCount ?? 0,\n    operationGroups: value.operationGroups?.map(groupDto => ({\n      ...groupDto,\n      description: groupDto?.description ?? '',\n      operationsCount: groupDto?.operationsCount ?? 0,\n    })) ?? [],\n  }\n}\n\nexport function convertDtoFieldOperationTypesWithApiType(operationTypes: ReadonlyArray<OperationTypeSummaryDto> | undefined): ReadonlyArray<OperationTypeSummary> {\n  return operationTypes?.map((type) => {\n    const { changesSummary, numberOfImpactedOperations } = type\n    return {\n      ...type,\n      changesSummary:\n        changesSummary &&\n        replacePropertyInChangesSummary(changesSummary),\n      numberOfImpactedOperations:\n        numberOfImpactedOperations &&\n        replacePropertyInChangesSummary(numberOfImpactedOperations),\n    }\n  }) ?? []\n}\n","export const semver = /^[v^~<>=]*?(\\d+)(?:\\.([x*]|\\d+)(?:\\.([x*]|\\d+)(?:\\.([x*]|\\d+))?(?:-([\\da-z\\-]+(?:\\.[\\da-z\\-]+)*))?(?:\\+[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?)?)?$/i;\nexport const validateAndParse = (version) => {\n    if (typeof version !== 'string') {\n        throw new TypeError('Invalid argument expected string');\n    }\n    const match = version.match(semver);\n    if (!match) {\n        throw new Error(`Invalid argument not valid semver ('${version}' received)`);\n    }\n    match.shift();\n    return match;\n};\nconst isWildcard = (s) => s === '*' || s === 'x' || s === 'X';\nconst tryParse = (v) => {\n    const n = parseInt(v, 10);\n    return isNaN(n) ? v : n;\n};\nconst forceType = (a, b) => typeof a !== typeof b ? [String(a), String(b)] : [a, b];\nconst compareStrings = (a, b) => {\n    if (isWildcard(a) || isWildcard(b))\n        return 0;\n    const [ap, bp] = forceType(tryParse(a), tryParse(b));\n    if (ap > bp)\n        return 1;\n    if (ap < bp)\n        return -1;\n    return 0;\n};\nexport const compareSegments = (a, b) => {\n    for (let i = 0; i < Math.max(a.length, b.length); i++) {\n        const r = compareStrings(a[i] || '0', b[i] || '0');\n        if (r !== 0)\n            return r;\n    }\n    return 0;\n};\n//# sourceMappingURL=utils.js.map","import { compareSegments, validateAndParse } from './utils.js';\n/**\n * Compare [semver](https://semver.org/) version strings to find greater, equal or lesser.\n * This library supports the full semver specification, including comparing versions with different number of digits like `1.0.0`, `1.0`, `1`, and pre-release versions like `1.0.0-alpha`.\n * @param v1 - First version to compare\n * @param v2 - Second version to compare\n * @returns Numeric value compatible with the [Array.sort(fn) interface](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort#Parameters).\n */\nexport const compareVersions = (v1, v2) => {\n    // validate input and split into segments\n    const n1 = validateAndParse(v1);\n    const n2 = validateAndParse(v2);\n    // pop off the patch\n    const p1 = n1.pop();\n    const p2 = n2.pop();\n    // validate numbers\n    const r = compareSegments(n1, n2);\n    if (r !== 0)\n        return r;\n    // validate pre-release\n    if (p1 && p2) {\n        return compareSegments(p1.split('.'), p2.split('.'));\n    }\n    else if (p1 || p2) {\n        return p1 ? -1 : 1;\n    }\n    return 0;\n};\n//# sourceMappingURL=compareVersions.js.map","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC} from 'react'\nimport { useCallback } from 'react'\nimport { memo, useEffect, useState } from 'react'\nimport { useVersionInfo } from '../hooks/frontend-version/useVersionInfo'\nimport { useSystemInfo } from '../features/system-info'\nimport { useApiProcessorVersion } from '../hooks/package-version-content/usePackageVersionContent'\nimport { compareVersions } from 'compare-versions'\nimport { ButtonWithHint } from './Buttons/ButtonWithHint'\nimport { RedWarningIcon } from '../icons/WarningIcon'\nimport { Box, Typography } from '@mui/material'\n\nexport const WARNING_API_PROCESSOR_TOOLTIP = 'TooltipWarning'\nexport const WARNING_API_PROCESSOR_TEXT = 'TextWarning'\n\nexport type WARNING_API_PROCESSOR_TOOLTIP_TYPE = 'TooltipWarning'\nexport type WARNING_API_PROCESSOR_TEXT_TYPE = 'TextWarning'\nexport type WarningApiProcessorVersionProps = {\n  packageKey?: string | undefined\n  versionKey?: string | undefined\n  type?: WARNING_API_PROCESSOR_TOOLTIP_TYPE | WARNING_API_PROCESSOR_TEXT_TYPE\n  onWarningTextChange?: (text: string) => void\n  hidden?: boolean\n}\n\nexport const WarningApiProcessorVersion: FC<WarningApiProcessorVersionProps> = memo<WarningApiProcessorVersionProps>(({\n    versionKey,\n    packageKey,\n    type = WARNING_API_PROCESSOR_TOOLTIP,\n    onWarningTextChange,\n    hidden = false,\n  }) => {\n    const { apiProcessorVersion: apiProcessorVersionApp } = useVersionInfo()\n    const { migrationInProgress } = useSystemInfo()\n    const apiProcessorVersion = useApiProcessorVersion({\n      versionKey: versionKey,\n      packageKey: packageKey,\n    })\n\n    const [textHintState, setTextHintState] = useState('')\n\n    const createTextHint = useCallback(() => {\n      if (migrationInProgress) {\n        setTextHintState('')\n        return\n      }\n      if (apiProcessorVersion && apiProcessorVersionApp) {\n        const calculateMatchVersion: number = compareVersions(apiProcessorVersion, apiProcessorVersionApp)\n        if (calculateMatchVersion > 0) {\n          setTextHintState(`The data in the version '${versionKey}' may be incorrect, please contact the system administrators`)\n        } else if (calculateMatchVersion < 0) {\n          setTextHintState(`The data in the version '${versionKey}' may be incorrect, as the data has not been processed according to the latest system rules. Please republish the version and if this does not help, contact the system administrators.`)\n        }\n      }\n    }, [apiProcessorVersion, apiProcessorVersionApp, migrationInProgress, versionKey])\n\n    useEffect(() => {\n      createTextHint()\n      return () => {\n        setTextHintState('')\n      }\n    }, [createTextHint])\n\n    useEffect(() => {\n      if (onWarningTextChange) {\n        onWarningTextChange(textHintState)\n      }\n    }, [textHintState, onWarningTextChange])\n\n    if (hidden || migrationInProgress) {\n      return null\n    }\n\n    if (apiProcessorVersion && (apiProcessorVersion !== apiProcessorVersionApp)) {\n      switch (type) {\n        case WARNING_API_PROCESSOR_TOOLTIP:\n          return <ButtonWithHint\n            hint={textHintState}\n            color=\"inherit\"\n            size=\"small\"\n            disabled={true}\n            tooltipMaxWidth={668}\n            startIcon={<RedWarningIcon/>}\n            data-testid=\"WarningApiProcessorVersion\"\n          />\n        case WARNING_API_PROCESSOR_TEXT:\n          return <Box display=\"flex\">\n            <RedWarningIcon/>\n            <Typography marginLeft=\"4px\"\n                        data-testid=\"WarningApiProcessorTypography\"\n                        variant=\"body2\">\n              {textHintState}\n            </Typography>\n          </Box>\n        default:\n          return null\n      }\n    }\n    return null\n  },\n)\n"],"names":["HttpError","message","code","status","__publicField","IdentityProviderTypes","isInternalIdentityProvider","idp","PACKAGE_SEARCH_PARAM","optionalSearchParams","params","searchParams","key","value","toStringValue","first","redirectToLogin","redirectTo","SEARCH_PARAM_NO_AUTO_LOGIN","path","redirectUri","url","getPackageRedirectDetails","response","pathPattern","redirectedUrl","match","matchPath","API_BASE_PATH_PATTERN","FETCH_REDIRECT_TYPE_PACKAGE","getRedirectUri","SEARCH_PARAM_REDIRECT_URI","stopThread","pauseThread","timeoutMs","resolve","API_V3","TokenRefreshResults","isTokenRefreshed","maybeTokenRefreshResult","WorkerUnauthorizedError","handleAuthentication","responseStatus","allowedAutoLogin","tokenRefreshResult","systemConfigurationFromStorage","SESSION_STORAGE_KEY_SYSTEM_CONFIGURATION","systemConfiguration","authConfig","autoLogin","autoLoginProvider","handleUnauthorizedByProvider","lastProviderId","SESSION_STORAGE_KEY_LAST_IDENTITY_PROVIDER_ID","lastProvider","identityProvider","requestEndpoint","searchParamsLoginPage","searchParamsAuthLocalRefresh","searchParamsAuthWithStartEndpoint","API_V1","DEFAULT_REFETCH_INTERVAL","requestJson","input","init","options","signal","basePath","customErrorHandler","customRedirectHandler","ignoreNotFound","handleFetchError","handleFetchRedirect","ignoredStatuses","handleCustomError","redirectDetails","handleCustomRedirect","getResponseError","detail","FETCH_ERROR_EVENT","details","FETCH_REDIRECT_EVENT","errorObject","errorMessage","errorCode","errorStatus","Subscribable","listener","x","isServer","noop","isValidTimeout","timeUntilStale","updatedAt","staleTime","parseQueryArgs","arg1","arg2","arg3","isQueryKey","replaceEqualDeep","a","b","array","isPlainArray","isPlainObject","aSize","bItems","bSize","copy","equalItems","i","shallowEqualObjects","o","hasObjectPrototype","ctor","prot","sleep","timeout","scheduleMicrotask","callback","replaceData","prevData","data","FocusManager","onFocus","_this$cleanup","setup","_this$cleanup2","focused","focusManager","OnlineManager","onOnline","online","onlineManager","canFetch","networkMode","CancelledError","isCancelledError","createNotifyManager","queue","transactions","notifyFn","batchNotifyFn","batch","result","flush","schedule","batchCalls","args","originalQueue","fn","notifyManager","QueryObserver","client","shouldFetchOnMount","shouldFetchOn","notifyOptions","prevOptions","prevQuery","mounted","shouldFetchOptionally","nextRefetchInterval","query","trackedResult","refetchPage","defaultedOptions","fetchOptions","_fetchOptions$cancelR","promise","_this$options$refetch","nextInterval","prevResult","prevResultState","prevResultOptions","queryChange","queryInitialState","prevQueryResult","state","dataUpdatedAt","error","errorUpdatedAt","fetchStatus","isPreviousData","isPlaceholderData","fetchOnMount","fetchOptionally","selectError","placeholderData","isFetching","isLoading","isError","isStale","nextResult","defaultNotifyOptions","shouldNotifyListeners","notifyOnChangeProps","includedProps","typedKey","action","_this$options$onSucce","_this$options","_this$options$onSettl","_this$options2","_this$options$onError","_this$options3","_this$options$onSettl2","_this$options4","shouldLoadOnMount","field","useSyncExternalStore","useSyncExternalStore$1","defaultContext","React.createContext","QueryClientSharingContext","getQueryClientContext","context","contextSharing","useQueryClient","queryClient","React.useContext","IsRestoringContext","useIsRestoring","createValue","isReset","QueryErrorResetBoundaryContext","useQueryErrorResetBoundary","shouldThrowError","_useErrorBoundary","ensurePreventErrorBoundaryRetry","errorResetBoundary","useClearResetErrorBoundary","React.useEffect","getHasError","useErrorBoundary","ensureStaleTime","willFetch","isRestoring","shouldSuspend","fetchOptimistic","observer","useBaseQuery","Observer","React.useState","React.useCallback","onStoreChange","useQuery","parsedOptions","VERSION_INFO_QUERY_KEY","Apps","portal","agent","getVersionInfoOptions","appType","getVersionInfo","emptyVersion","packageJson.version","useVersionInfo","SYSTEM_INFO_QUERY_KEY","EMPTY_SYSTEM_INFO","toSystemInfo","externalLinks","filteredLinks","externalLink","verticalBarIndex","getSystemInfoOptions","enabled","getSystemInfo","useSystemInfo","SPECIAL_VERSION_KEY","REVISION_DELIMITER","PACKAGE_VERSION_CONTENT_QUERY_KEY","useApiProcessorVersion","packageKey","versionKey","apiProcessorVersion","getPackageVersionContent","toPackageVersionContent","includeSummary","includeOperations","includeGroups","packageId","versionId","queryParams","generatePath","toApiTypeMap","convertDtoFieldOperationTypesWithApiType","_a","groupDto","operationTypes","type","changesSummary","numberOfImpactedOperations","replacePropertyInChangesSummary","semver","validateAndParse","version","isWildcard","s","tryParse","v","n","forceType","compareStrings","ap","bp","compareSegments","r","compareVersions","v1","v2","n1","n2","p1","p2","WARNING_API_PROCESSOR_TOOLTIP","WARNING_API_PROCESSOR_TEXT","WarningApiProcessorVersion","memo","onWarningTextChange","hidden","apiProcessorVersionApp","migrationInProgress","textHintState","setTextHintState","useState","createTextHint","useCallback","calculateMatchVersion","useEffect","jsx","ButtonWithHint","RedWarningIcon","jsxs","Box","Typography"],"mappings":"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","x_google_ignoreList":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,29,30]}