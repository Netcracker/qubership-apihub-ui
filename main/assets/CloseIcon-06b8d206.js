import{j as e}from"./createTheme-d4c6d141.js";import{c as n}from"./createSvgIcon-473ccb66.js";const t=n(e("svg",{width:"24",height:"24",viewBox:"0 0 19 20",xmlns:"http://www.w3.org/2000/svg",children:e("path",{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M4.71967 4.71979C5.01256 4.4269 5.48744 4.4269 5.78033 4.71979L10 8.93946L14.2197 4.71979C14.5126 4.4269 14.9874 4.4269 15.2803 4.71979C15.5732 5.01269 15.5732 5.48756 15.2803 5.78045L11.0607 10.0001L15.2803 14.2198C15.5732 14.5127 15.5732 14.9876 15.2803 15.2805C14.9874 15.5733 14.5126 15.5733 14.2197 15.2805L10 11.0608L5.78033 15.2805C5.48744 15.5733 5.01256 15.5733 4.71967 15.2805C4.42678 14.9876 4.42678 14.5127 4.71967 14.2198L8.93934 10.0001L4.71967 5.78045C4.42678 5.48756 4.42678 5.01269 4.71967 4.71979Z"})}),"Close");try{t.displayName="CloseIcon",t.__docgenInfo={description:"",displayName:"CloseIcon",props:{component:{defaultValue:null,description:`The component used for the root node.
Either a string to use a HTML element or a component.`,name:"component",required:!0,type:{name:"ElementType<any>"}},children:{defaultValue:null,description:"Node passed into the SVG element.",name:"children",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"(Partial<SvgIconClasses> & Partial<ClassNameMap<never>>)"}},color:{defaultValue:{value:"'inherit'"},description:`The color of the component.
It supports both default and custom theme colors, which can be added as shown in the
[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).
You can use the \`htmlColor\` prop to apply a color attribute to the SVG element.`,name:"color",required:!1,type:{name:"enum",value:[{value:'"action"'},{value:'"disabled"'},{value:'"inherit"'},{value:'"primary"'},{value:'"secondary"'},{value:'"success"'},{value:'"error"'},{value:'"info"'},{value:'"warning"'}]}},fontSize:{defaultValue:{value:"'medium'"},description:"The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.",name:"fontSize",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"inherit"'},{value:'"medium"'},{value:'"large"'}]}},htmlColor:{defaultValue:null,description:"Applies a color attribute to the SVG element.",name:"htmlColor",required:!1,type:{name:"string"}},inheritViewBox:{defaultValue:{value:"false"},description:"If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`\nprop will be ignored.\nUseful when you want to reference a custom `component` and have `SvgIcon` pass that\n`component`'s viewBox to the root node.",name:"inheritViewBox",required:!1,type:{name:"boolean"}},shapeRendering:{defaultValue:null,description:`The shape-rendering attribute. The behavior of the different options is described on the
[MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).
If you are having issues with blurry icons you should investigate this prop.`,name:"shapeRendering",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},titleAccess:{defaultValue:null,description:`Provides a human-readable title for the element that contains it.
https://www.w3.org/TR/SVG-access/#Equivalent`,name:"titleAccess",required:!1,type:{name:"string"}},viewBox:{defaultValue:{value:"'0 0 24 24'"},description:`Allows you to redefine what the coordinates without units mean inside an SVG element.
For example, if the SVG element is 500 (width) by 200 (height),
and you pass viewBox="0 0 50 20",
this means that the coordinates inside the SVG will go from the top left corner (0,0)
to bottom right (50,20) and each unit will be worth 10px.`,name:"viewBox",required:!1,type:{name:"string"}}}}}catch{}export{t as C};
//# sourceMappingURL=CloseIcon-06b8d206.js.map
