{"version":3,"file":"GlobalStyles-4ceeac40.js","sources":["../../node_modules/@mui/styled-engine/GlobalStyles/GlobalStyles.js","../../node_modules/@mui/system/esm/GlobalStyles/GlobalStyles.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Global } from '@emotion/react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0;\n}\nexport default function GlobalStyles(props) {\n  const {\n    styles,\n    defaultTheme = {}\n  } = props;\n  const globalStyles = typeof styles === 'function' ? themeInput => styles(isEmpty(themeInput) ? defaultTheme : themeInput) : styles;\n  return /*#__PURE__*/_jsx(Global, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes = {\n  defaultTheme: PropTypes.object,\n  styles: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.object, PropTypes.func])\n} : void 0;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as MuiGlobalStyles, internal_serializeStyles as serializeStyles } from '@mui/styled-engine';\nimport useTheme from '../useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction wrapGlobalLayer(styles) {\n  const serialized = serializeStyles(styles);\n  if (styles !== serialized && serialized.styles) {\n    if (!serialized.styles.match(/^@layer\\s+[^{]*$/)) {\n      // If the styles are not already wrapped in a layer, wrap them in a global layer.\n      serialized.styles = `@layer global{${serialized.styles}}`;\n    }\n    return serialized;\n  }\n  return styles;\n}\nfunction GlobalStyles({\n  styles,\n  themeId,\n  defaultTheme = {}\n}) {\n  const upperTheme = useTheme(defaultTheme);\n  const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n  let globalStyles = typeof styles === 'function' ? styles(resolvedTheme) : styles;\n  if (resolvedTheme.modularCssLayers) {\n    if (Array.isArray(globalStyles)) {\n      globalStyles = globalStyles.map(styleArg => {\n        if (typeof styleArg === 'function') {\n          return wrapGlobalLayer(styleArg(resolvedTheme));\n        }\n        return wrapGlobalLayer(styleArg);\n      });\n    } else {\n      globalStyles = wrapGlobalLayer(globalStyles);\n    }\n  }\n  return /*#__PURE__*/_jsx(MuiGlobalStyles, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  defaultTheme: PropTypes.object,\n  /**\n   * @ignore\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool]),\n  /**\n   * @ignore\n   */\n  themeId: PropTypes.string\n} : void 0;\nexport default GlobalStyles;"],"names":["isEmpty","obj","GlobalStyles","props","styles","defaultTheme","_jsx","Global","themeInput","wrapGlobalLayer","serialized","serializeStyles","themeId","upperTheme","useTheme","resolvedTheme","globalStyles","styleArg","MuiGlobalStyles"],"mappings":"+IAMA,SAASA,EAAQC,EAAK,CACpB,OAA4BA,GAAQ,MAAQ,OAAO,KAAKA,CAAG,EAAE,SAAW,CAC1E,CACe,SAASC,EAAaC,EAAO,CAC1C,KAAM,CACJ,OAAAC,EACA,aAAAC,EAAe,CAAE,CAClB,EAAGF,EAEJ,OAAoBG,EAAKC,EAAQ,CAC/B,OAFmB,OAAOH,GAAW,WAAaI,GAAcJ,EAAOJ,EAAQQ,CAAU,EAAIH,EAAeG,CAAU,EAAIJ,CAG9H,CAAG,CACH,CCXA,SAASK,EAAgBL,EAAQ,CAC/B,MAAMM,EAAaC,EAAgBP,CAAM,EACzC,OAAIA,IAAWM,GAAcA,EAAW,QACjCA,EAAW,OAAO,MAAM,kBAAkB,IAE7CA,EAAW,OAAS,iBAAiBA,EAAW,MAAM,KAEjDA,GAEFN,CACT,CACA,SAASF,EAAa,CACpB,OAAAE,EACA,QAAAQ,EACA,aAAAP,EAAe,CAAE,CACnB,EAAG,CACD,MAAMQ,EAAaC,EAAST,CAAY,EAClCU,EAAgBH,GAAUC,EAAWD,CAAO,GAAKC,EACvD,IAAIG,EAAe,OAAOZ,GAAW,WAAaA,EAAOW,CAAa,EAAIX,EAC1E,OAAIW,EAAc,mBACZ,MAAM,QAAQC,CAAY,EAC5BA,EAAeA,EAAa,IAAIC,GAErBR,EADL,OAAOQ,GAAa,WACCA,EAASF,CAAa,EAExBE,CAFyB,CAGjD,EAEDD,EAAeP,EAAgBO,CAAY,GAG3BV,EAAKY,EAAiB,CACxC,OAAQF,CACZ,CAAG,CACH","x_google_ignoreList":[0,1]}