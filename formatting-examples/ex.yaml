# YAML Formatting Example
# This file demonstrates formatting rules for YAML applied by dprint's pretty_yaml plugin

# ==========================================
# 1. Indentation and Alignment
# ==========================================
# Rule: indentWidth (default: 2)
# Description: Controls the number of spaces for indentation

# Inconsistent indentation
indentation:
  level1:
    level2:
      level3:
        level4: value
  misaligned-properties:
    property1: value1
    property2: value2
    property3: value3

# ==========================================
# 2. Sequence Style
# ==========================================
# Rule: sequenceStyle (default: "block")
# Description: Controls how sequences (arrays) are formatted

# Mixed sequence styles
sequence-styles:
  block-style:
    - item1
    - item2
    - item3
  flow-style: [item1, item2, item3]
  mixed-style:
    - item1
    - [nested1, nested2]
    - - deeply-nested1
      - deeply-nested2

# ==========================================
# 3. Mapping Style
# ==========================================
# Rule: mappingStyle (default: "block")
# Description: Controls how mappings (objects) are formatted

# Mixed mapping styles
mapping-styles:
  block-style:
    key1: value1
    key2: value2
  flow-style: { key1: value1, key2: value2 }
  mixed-style:
    key1: value1
    nested: { key1: nestedValue1, key2: nestedValue2 }
    another:
      key1: value1
      key2: { deeplyNested: value }

# ==========================================
# 4. Line Width
# ==========================================
# Rule: lineWidth (default: 80)
# Description: Controls the maximum line length

# Long lines
long-lines:
  single-line-array: [
    item1,
    item2,
    item3,
    item4,
    item5,
    item6,
    item7,
    item8,
    item9,
    item10,
    item11,
    item12,
    item13,
    item14,
    item15,
  ]
  single-line-object: {
    key1: value1,
    key2: value2,
    key3: value3,
    key4: value4,
    key5: value5,
    key6: value6,
    key7: value7,
    key8: value8,
    key9: value9,
  }
  long-string: "This is a very long string that exceeds the default line width and should be wrapped or formatted differently by the pretty_yaml formatter to improve readability"

# ==========================================
# 5. Quote Style
# ==========================================
# Rule: quoteStyle (default: "double")
# Description: Controls the style of quotes for strings

# Inconsistent quote styles
quote-styles:
  double-quotes: "This string uses double quotes"
  single-quotes: "This string uses single quotes"
  no-quotes: This string has no quotes
  mixed-quotes: "This string has mixed quote styles"
  quotes-needed: "String: with special characters, needs quotes"

# ==========================================
# 6. Scalar Style
# ==========================================
# Rule: preferredScalarStyle (default: "any")
# Description: Controls how scalar values are formatted

# Different scalar styles
scalar-styles:
  plain: A plain scalar without quotes
  single-quoted: "A single-quoted scalar"
  double-quoted: "A double-quoted scalar"
  literal-block: |
    This is a literal block scalar.
    Line breaks are preserved.
      Indentation is preserved.
  folded-block: >
    This is a folded block scalar.
    Line breaks are folded into spaces.

    Blank lines denote paragraph breaks.

# ==========================================
# 7. Sequence Indentation
# ==========================================
# Rule: sequenceIndentation (default: "indent")
# Description: Controls how sequences are indented

# Inconsistent sequence indentation
sequence-indentation:
  - first item
  - second item with extra space
  - third item with more extra space
  - nested sequence:
      - nested item 1
      - nested item 2
      - nested item 3

# ==========================================
# 8. Mapping Indentation
# ==========================================
# Rule: mappingIndentation (default: "indent")
# Description: Controls how mappings are indented

# Inconsistent mapping indentation
mapping-indentation:
  first:
    nested: value
    wrongly-indented: value
  another:
    over-indented: value
    mixed-indentation:
      very-indented: value
      less-indented: value

# ==========================================
# 9. Comments
# ==========================================
# Description: Formatting of comments

# Inconsistent comment formatting
comments:
  #No space after hash
  #  Extra spaces after hash
  key1: value1 #Inline comment without space
  key2: value2 # Inline comment with space
  key3: value3#Attached comment

# ==========================================
# 10. Flow Style Spacing
# ==========================================
# Description: Spacing in flow style collections

# Inconsistent spacing in flow style
flow-spacing:
  tight-array: [1, 2, 3, 4, 5]
  spaced-array: [1, 2, 3, 4, 5]
  inconsistent-array: [1, 2, 3, 4, 5]
  tight-object: { key1:value1, key2:value2 }
  spaced-object: { key1: value1, key2: value2 }
  inconsistent-object: { key1: value1, key2:value2, key3 :value3 }

# ==========================================
# 11. Document Markers
# ==========================================
# Description: Formatting of YAML document markers

# Inconsistent document markers
---
first-document: content
...
---
second-document: content
...

# ==========================================
# 12. Anchors and Aliases
# ==========================================
# Description: Formatting of anchors and aliases

# Inconsistent anchor and alias formatting
anchors:
  base: &base
    key1: value1
    key2: value2
  derived1:
    <<: *base
    key3: value3
  derived2:
    <<: *base
    key3: override
    key4: new value

# ==========================================
# 13. Complex Nested Structures
# ==========================================
# Description: Formatting of complex nested structures

# Poorly formatted complex structure
complex:
  arrays:
    - [1, 2, 3]
    - [{ key: value }, { key: value }]
    - - - deeply
        - nested
      - array
  objects:
    first: { nested: { deeply: { value: 1 } } }
    second:
      nested: { deeply: { value: 2 } }
    third:
      nested:
        deeply: { value: 3 }
  mixed:
    - key: value
      array: [1, 2, 3]
    - { key: value, array: [1, 2, 3] }
    - - item
      - { key: value }

# ==========================================
# 14. Key Order
# ==========================================
# Description: Ordering of keys in mappings

# Unordered keys
unordered-keys:
  z: value
  a: value
  m: value
  j: value
  nested:
    z: value
    a: value
    m: value
    j: value
