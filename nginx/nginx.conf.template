worker_processes auto;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Global headers for all responses
    add_header X-Content-Type-Options "nosniff"          always;
    add_header X-XSS-Protection       "0"                always;
    add_header Referrer-Policy        "strict-origin-when-cross-origin" always;

    sendfile              on;
    keepalive_timeout     1200;
    send_timeout          3600;
    client_body_timeout   3600;
    client_header_timeout 3600;
    client_max_body_size  0;

    log_format main '$remote_addr - $remote_user [$time_local] '
                    '($request_time) $http_x_request_id "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    gzip on;
    gzip_http_version 1.0;
    gzip_comp_level 5;
    gzip_types *;
    gzip_min_length 860;
    gzip_proxied any;

    resolver ${DNS_RESOLVERS} valid=10s ipv6=off;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen 8080;
        listen [::]:8080;
        error_log /var/log/nginx/error.log warn;

        server_tokens off;
        large_client_header_buffers 4 8k;
        proxy_buffer_size            128k;
        proxy_buffers                4 256k;
        proxy_busy_buffers_size      256k;

        proxy_http_version 1.1;
        proxy_set_header Upgrade     $http_upgrade;
        proxy_set_header Connection  $connection_upgrade;
        proxy_redirect off;
        port_in_redirect off;
        absolute_redirect  off;

        proxy_connect_timeout 3600;
        proxy_read_timeout    3600;
        proxy_send_timeout    3600;

        # Decline suspicious URL-encodings
        if ($request_uri ~* "%[0-1][0-9A-Fa-f]") {
            return 400;
        }

        # ----- Temporarty section for backward compatiblity to handle the following endpoint move to agents-backend:
        #- API that was migrated from qubership-apihub-backend to qubership-apihub-agents-backend
        #GET  /api/v2/agents
        #POST /api/v2/agents
        #GET  /api/v2/agents/{agentId}/namespaces
        #GET  /api/v2/agents/{agentId}/namespaces/{namespace}/serviceNames
        #GET  /api/v2/agents/{id}
        #     /agents/{agentId}/namespaces/{namespace}/services/{serviceId}/proxy/
        #
        #- API that was migrated from custom service(/apihub-nc prefix) to qubership-apihub-agents-backend
        #GET  /api/v1/agents/{agentId}/namespaces
        #POST /api/v2/agents/{agentId}/namespaces/{name}/workspaces/{workspaceId}/discover
        #GET  /api/v2/agents/{agentId}/namespaces/{name}/workspaces/{workspaceId}/services
        #POST /api/v2/agents/{agentId}/namespaces/{name}/workspaces/{workspaceId}/snapshots
        #GET  /api/v2/agents/{agentId}/namespaces/{name}/workspaces/{workspaceId}/snapshots
        #GET  /api/v2/agents/{agentId}/namespaces/{name}/workspaces/{workspaceId}/snapshots/{version}
        #GET  /api/v2/agents/{agentId}/namespaces/{name}/workspaces/{workspaceId}/services/{serviceId}/specs/{fileId}
        #POST /api/v2/security/authCheck
        #GET  /api/v3/security/authCheck
        #GET  /api/v2/security/authCheck/{processId}/status
        #GET  /api/v2/security/authCheck/{processId}/report
        #     /agents/{agentId}/namespaces/{namespace}/services/{serviceId}/proxy/ - agent proxy functionality
        #
        #- Remains in nc-service
        #GET  /api/v1/agents/{agentId}/namespaces/{name}/services (DEPRECATED) (actual GET  /api/v2/agents/{agentId}/namespaces/{namespace}/workspaces/{workspaceId}/services has been moved to the agents-backend)
        #POST /api/v1/agents/{agentId}/namespaces/{name}/discover (DEPRECATED) (actual POST /api/v2/agents/{agentId}/namespaces/{name}/workspaces/{workspaceId}/discover has been moved to the agents-backend)
        #POST /api/v1/agents/{agentId}/namespaces/{name}/cip/services
        #GET  /api/v1/agents/{agentId}/namespaces/{name}/cip/services
        #POST /api/v1/agents/{agentId}/namespaces/{name}/cip/publish
        #POST /api/v1/deployment/validations/release/{release}/exclusion
        #GET  /api/v1/deployment/validations/release/{release}/exclusion
        #DEL  /api/v1/deployment/validations/release/{release}/exclusion/{exclusion}
        #POST /api/v1/deployment/validations (DEPRECATED)
        #POST /api/v2/deployment/validations (DEPRECATED)
        #GET  /api/v1/deployment/validations/{validationId} (DEPRECATED)
        #POST /api/v3/qualityGate/validations
        #GET  /api/v3/qualityGate/validations/{validationId}
        #POST /email/send
        #POST /api/v1/agents/{agentId}/namespaces/{name}/settings (DEPRECATED)
        #GET  /api/v1/agents/{agentId}/namespaces/{name}/settings (DEPRECATED)
        #POST /api/v2/agents/{agentId}/namespaces/{name}/workspaces/{workspaceId}/settings
        #GET  /api/v2/agents/{agentId}/namespaces/{name}/workspaces/{workspaceId}/settings
        #GET  /api/v1/agents/{agentId}/namespaces/{name}/snapshots (DEPRECATED) (actual GET  /api/v2/agents/{agentId}/namespaces/{namespace}/workspaces/{workspaceId}/snapshots has been moved to the agents-backend)
        #POST /api/v1/agents/{agentId}/namespaces/{name}/snapshots (DEPRECATED) (actual POST /api/v2/agents/{agentId}/namespaces/{namespace}/workspaces/{workspaceId}/snapshots has been moved to the agents-backend)
        #GET  /api/v1/agents/{agentId}/namespaces/{name}/snapshots/{version} (DEPRECATED) (actual GET  /api/v2/agents/{agentId}/namespaces/{namespace}/workspaces/{workspaceId}/snapshots/{version} has been moved to agents-backend)
        #GET  /api/v1/agents/{agentId}/namespaces/{name}/services/{serviceId}/specs/{fileId} (DEPRECATED) (actual GET  /api/v2/agents/{agentId}/namespaces/{namespace}/workspaces/{workspaceId}/services/{serviceId}/specs/{fileId} has been moved to agents-backend)
        #POST /api/v1/agents/{agentId}/namespaces/{name}/security/authCheck (DEPRECATED) (actual POST /api/v2/security/authCheck has been moved to the agents-backend)
        #GET  /api/v1/agents/{agentId}/namespaces/{name}/security/authCheck (DEPRECATED) (actual GET  /api/v3/security/authCheck has been moved to the agents-backend)
        #GET  /api/v1/agents/{agentId}/namespaces/{name}/security/authCheck/{processId}/report (DEPRECATED) (actual GET  /api/v2/security/authCheck/{processId}/report has been moved to the agents-backend)
        #GET  /api/v1/agents/{agentId}/namespaces/{name}/security/authCheck/{processId}/status (DEPRECATED) (actual GET  /api/v2/security/authCheck/{processId}/status has been moved to the agents-backend)
        #GET  /api/v2/security/authCheck (DEPRECATED) (actual GET  /api/v3/security/authCheck has been moved to the agents-backend)
        #GET  /api/v1/reports/{reportType}/latest
        #GET  /api/v1/reports/{reportType}/{reportId}/chain
        #POST /api/v1/reports/bwc
        #GET  /api/v1/reports/bwc
        #GET  /api/v1/reports/bwc/{reportId}
        #GET  /api/v1/reports/bwc/{reportId}/status
        #GET  /api/v1/agents/{agentId}/namespaces/{name}/idp
        #POST /api/v1/agents/{agentId}/namespaces/{name}/idp/token
        #POST /api/v1/agents/{agentId}/namespaces/{name}/security/exposure (DEPRECATED)
        #GET  /api/v1/agents/{agentId}/namespaces/{name}/security/exposure (DEPRECATED)
        #GET  /api/v1/agents/{agentId}/namespaces/{name}/security/exposure/{processId}/report (DEPRECATED)
        #GET  /api/v1/agents/{agentId}/namespaces/{name}/security/exposure/{processId}/status (DEPRECATED)
        #GET  /api/v1/agents/{agentId}/namespaces/{name}/security/exposure/{processId}/source (DEPRECATED)
        #POST /api/v2/agents/{agentId}/namespaces/{name}/security/gatewayRouting (DEPRECATED)
        #GET  /api/v2/agents/{agentId}/namespaces/{name}/security/gatewayRouting (DEPRECATED)
        #GET  /api/v2/agents/{agentId}/namespaces/{name}/security/gatewayRouting/{processId}/report (DEPRECATED)
        #GET  /api/v2/agents/{agentId}/namespaces/{name}/security/gatewayRouting/{processId}/status (DEPRECATED)
        #GET  /api/v2/agents/{agentId}/namespaces/{name}/security/gatewayRouting/{processId}/source (DEPRECATED)
        #POST /api/v3/security/gatewayRouting
        #GET  /api/v3/security/gatewayRouting (DEPRECATED)
        #GET  /api/v4/security/gatewayRouting
        #GET  /api/v3/security/gatewayRouting/{processId}/report
        #GET  /api/v3/security/gatewayRouting/{processId}/status
        #GET  /api/v3/security/gatewayRouting/{processId}/source
        #POST /api/v1/reports/apiUploads
        #GET  /api/v1/reports/apiUploads
        #GET  /api/v1/reports/apiUploads/{reportId}
        #GET  /api/v1/reports/apiUploads/{reportId}/status
        #POST /api/v1/reports/consolidated
        #GET  /api/v1/reports/consolidated
        #GET  /api/v1/reports/consolidated/{reportId}
        #GET  /api/v1/reports/consolidated/{reportId}/status
        #POST /api/v1/nc/domains
        #GET  /api/v1/nc/domains
        #DEL  /api/v1/nc/domains
        #GET  /api/v1/nc/domains/{domainName}
        #PUT  /api/v1/nc/domains/{domainName}
        #POST /api/v1/sd/imports
        #GET  /api/v1/sd/imports
        #GET  /api/v2/sd/imports
        #GET  /api/v1/sd/imports/{importId}/status
        #GET  /api/v2/sd/imports/{importId}/status
        #GET  /api/v1/sd/imports/{importId}/report
        #POST /api/v1/publishValidation
        #GET  /api/v1/reports/publishValidation
        #GET  /api/v1/system/info
        #GET  /v3/api-docs
        # ----- Can be removed after UI adaptation

        # /api/v2/agents ... -> agents-backend
        location ~ ^/api/v2/agents(?:/.*)?$ {
            add_header Cache-Control "no-store" always;
            set $agents_backend_upstream http://${APIHUB_AGENTS_BACKEND_ADDRESS};
            proxy_pass $agents_backend_upstream;

            proxy_connect_timeout 1s;
            proxy_next_upstream off;
            proxy_intercept_errors off;
        }

        # /agents/{agentId}/namespaces/{namespace}/services/{serviceId}/proxy/ -> agents-backend
        location ~ ^/agents/[^/]+/namespaces/[^/]+/services/[^/]+/proxy/(?:.*)?$ {
            add_header Cache-Control "no-store" always;
            set $agents_backend_upstream http://${APIHUB_AGENTS_BACKEND_ADDRESS};
            proxy_pass $agents_backend_upstream;

            proxy_connect_timeout 1s;
            proxy_next_upstream off;
            proxy_intercept_errors off;
        }

        # /apihub-nc/api/v1/agents/{agentId}/namespaces
        location ~ ^/apihub-nc/api/v1/agents/[^/]+/namespaces/?$ {
            add_header Cache-Control "no-store" always;
            set $agents_backend_upstream http://${APIHUB_AGENTS_BACKEND_ADDRESS};
            rewrite ^/apihub-nc/(.*)$ /$1 break;
            proxy_pass $agents_backend_upstream;

            proxy_connect_timeout 1s;
            proxy_next_upstream off;
            proxy_intercept_errors off;
        }

        # /apihub-nc/api/v2/agents/{agentId}/namespaces/{name}/workspaces/{workspaceId}/(discover|services|snapshots)
        location ~ ^/apihub-nc/api/v2/agents/[^/]+/namespaces/[^/]+/workspaces/[^/]+/(?:discover|services(?:/.*)?|snapshots(?:/.*)?)$ {
            add_header Cache-Control "no-store" always;
            set $agents_backend_upstream http://${APIHUB_AGENTS_BACKEND_ADDRESS};
            rewrite ^/apihub-nc/(.*)$ /$1 break;
            proxy_pass $agents_backend_upstream;

            proxy_connect_timeout 1s;
            proxy_next_upstream off;
            proxy_intercept_errors off;
        }

        # /apihub-nc/api/v2|v3/security/authCheck (including /status and /report)
        location ~ ^/apihub-nc/api/v(2|3)/security/authCheck(?:/.*)?$ {
            add_header Cache-Control "no-store" always;
            set $agents_backend_upstream http://${APIHUB_AGENTS_BACKEND_ADDRESS};
            rewrite ^/apihub-nc/(.*)$ /$1 break;
            proxy_pass $agents_backend_upstream;

            proxy_connect_timeout 1s;
            proxy_next_upstream off;
            proxy_intercept_errors off;
        }
        # ----- END of temporary section -----


        # API endpoints proxifying to backend. Static upstream resolution
        location ~ ^/(?:api|ws|saml|login/gitlab|login/sso|debug|playground)(?:/.*)?$ {
            add_header Cache-Control "no-store" always;
            proxy_pass http://${APIHUB_BACKEND_ADDRESS};
        }

        # Special section for apihub-nc (rewrite required). Dynamic upstream resolution
        location /apihub-nc {
            set $apihub_nc_upstream http://${APIHUB_NC_SERVICE_ADDRESS};

            add_header Cache-Control "no-store" always;
            rewrite ^/apihub-nc/(.*)$ /$1 break;

            proxy_pass $apihub_nc_upstream;

            proxy_connect_timeout 1s;
            proxy_next_upstream off;
            proxy_intercept_errors off;
        }

        # Special section for api-linter (rewrite required). Dynamic upstream resolution
        location ^~ /api-linter {
            set $api_linter_upstream http://${API_LINTER_SERVICE_ADDRESS};

            add_header Cache-Control "no-store" always;
            rewrite ^/api-linter/(.*)$ /$1 break;

            proxy_pass $api_linter_upstream;

            proxy_connect_timeout 1s;
            proxy_next_upstream off;
            proxy_intercept_errors off;
        }

        # Special section for agents-backend (rewrite required). Dynamic upstream resolution
        location ^~ /agents-backend {
            set $agents_backend_upstream http://${APIHUB_AGENTS_BACKEND_ADDRESS};

            add_header Cache-Control "no-store" always;
            rewrite ^/agents-backend/(.*)$ /$1 break;

            proxy_pass $agents_backend_upstream;

            proxy_connect_timeout 1s;
            proxy_next_upstream off;
            proxy_intercept_errors off;
        }

        location ~ ^/(portal|agents)/version\.json$ {
            root /usr/share/nginx/html;
            add_header Cache-Control "no-store" always;
            try_files $uri =404;
        }

        location ~ ^/(portal|agents)/index\.html$ {
            root /usr/share/nginx/html;
            add_header Cache-Control             "no-store" always;
            add_header Strict-Transport-Security "max-age=15768000; includeSubdomains; preload;" always;
            add_header X-Frame-Options           "DENY" always;
            add_header Content-Security-Policy   "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; connect-src 'self'" always;
        }

        location ~* ^/agents/.*\.(?:js|css|woff2?|ttf|svg|png)$ {
            add_header Cache-Control "public, max-age=604800, immutable";
            root /usr/share/nginx/html;
        }

        location /agents {
            root /usr/share/nginx/html;
            index /agents/index.html;
            try_files $uri $uri/ /agents/index.html;

            proxy_cookie_path / "/; secure; HttpOnly";
            add_header Cache-Control             "no-cache"                                      always;
            add_header Strict-Transport-Security "max-age=15768000; includeSubdomains; preload;" always;
            add_header X-Frame-Options           "DENY"                                          always;
            add_header Content-Security-Policy   "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; connect-src 'self'" always;
        }

        location ~* ^/portal/.*\.(?:js|css|woff2?|ttf|svg|png)$ {
            add_header Cache-Control "public, max-age=604800, immutable";
            root /usr/share/nginx/html/portal;
        }

        location /portal {
            root /usr/share/nginx/html;
            index /portal/index.html;
            try_files $uri $uri/ /portal/index.html;
            proxy_cookie_path / "/; secure; HttpOnly";

            add_header Cache-Control             "no-cache"                                      always;
            add_header Strict-Transport-Security "max-age=15768000; includeSubdomains; preload;" always;
            add_header X-Frame-Options           "DENY"                                          always;
            add_header Content-Security-Policy   "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; connect-src 'self'" always;
        }

        location ~* \.(?:js|css|woff2?|ttf|svg|png)$ {
            add_header Cache-Control "public, max-age=604800, immutable";
            root /usr/share/nginx/html/portal;
        }

        location / {
            root /usr/share/nginx/html/portal;
            index /index.html;
            try_files $uri $uri/ /index.html;
            proxy_cookie_path / "/; secure; HttpOnly";

            add_header Cache-Control             "no-cache"                                      always;
            add_header Strict-Transport-Security "max-age=15768000; includeSubdomains; preload;" always;
            add_header X-Frame-Options           "DENY"                                          always;
            add_header Content-Security-Policy   "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; connect-src 'self'" always;
        }

        # Health-checks
        location /health             { default_type application/json; return 200 '{"status":"UP"}'; }
        location /probes/live        { default_type application/json; return 200 '{"status":"UP"}'; }
        location /probes/ready       { default_type application/json; return 200 '{"status":"UP"}'; }

        error_page 404 /404.html;
        location = /404.html {
            root /var/www/error;
            internal;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /var/www/error;
            internal;
        }

        error_page 400 401 402 403 405 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 501 505 506 507 508 510 511 /default_error.html;
        location = /default_error.html {
            ssi on;
            root /var/www/error;
            internal;
        }
    }
}
