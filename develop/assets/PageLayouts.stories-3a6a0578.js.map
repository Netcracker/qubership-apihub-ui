{"version":3,"file":"PageLayouts.stories-3a6a0578.js","sources":["../../node_modules/@mui/material/Card/cardClasses.js","../../node_modules/@mui/material/Card/Card.js","../../packages/shared/src/components/PageLayouts/LayoutWithToolbar.tsx","../../packages/shared/src/components/Toolbar.tsx","../../packages/shared/src/components/PageLayouts/LayoutWithTabs.tsx","../../packages/shared/src/components/PageLayouts/LayoutWithSidebar.tsx","../../packages/shared/src/components/SelectorWithIcons.tsx","../../packages/shared/src/components/PageLayouts/RichFiltersLayout.tsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC, ReactNode } from 'react'\nimport { memo } from 'react'\nimport Box from '@mui/material/Box'\nimport { BODY_GRID_AREA, createGridAreas, DEFAULT_PAGE_LAYOUT_GAP, TOOLBAR_GRID_AREA } from '../../utils/page-layouts'\nimport { DEFAULT_PAPER_SHADOW } from '../../themes/palette'\n\nexport type LayoutWithToolbarProps = {\n  toolbar: ReactNode\n  body: ReactNode\n}\nexport const LayoutWithToolbar: FC<LayoutWithToolbarProps> = memo<LayoutWithToolbarProps>(({ toolbar, body }) => {\n  return (\n    <Box\n      sx={{\n        px: DEFAULT_PAGE_LAYOUT_GAP,\n        height: '100%',\n        display: 'grid',\n        gridTemplateRows: 'max-content 1fr',\n        gridTemplateColumns: 'auto 1fr',\n        gridTemplateAreas: `${createGridAreas({ toolbar })}`,\n      }}\n    >\n      <Box sx={{\n        gridArea: TOOLBAR_GRID_AREA,\n        overflow: 'hidden',\n        mb: DEFAULT_PAGE_LAYOUT_GAP,\n        backgroundColor: '#FFFFFF',\n        borderRadius: '0 0 10px 10px',\n        boxShadow: DEFAULT_PAPER_SHADOW,\n      }}>\n        {toolbar}\n      </Box>\n\n      <Box sx={{\n        gridArea: BODY_GRID_AREA,\n        overflow: 'hidden',\n        backgroundColor: '#FFFFFF',\n        borderRadius: '10px 10px 0 0',\n        boxShadow: 'rgb(4 10 21 / 4%) 0px 1px 1px, rgb(4 12 29 / 9%) 0px 3px 14px, rgb(7 13 26 / 27%) 0px 0px 1px',\n      }}>\n        {body}\n      </Box>\n    </Box>\n  )\n})\n\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC, ReactNode } from 'react'\nimport { memo } from 'react'\nimport Box from '@mui/material/Box'\nimport Card from '@mui/material/Card'\nimport CardHeader from '@mui/material/CardHeader'\nimport type { TestableProps } from './Testable'\n\nexport type ToolbarProps = {\n  breadcrumbs?: ReactNode\n  header?: ReactNode\n  action?: ReactNode\n  size?: ToolbarSize\n} & TestableProps\n\nexport const Toolbar: FC<ToolbarProps> = memo<ToolbarProps>(({\n  breadcrumbs,\n  header,\n  action,\n  size = SMALL_TOOLBAR_SIZE,\n  testId,\n}) => {\n  return (\n    <Card>\n      <CardHeader\n        sx={{ height: TOOLBAR_HEIGHT[breadcrumbs ? LARGE_TOOLBAR_SIZE : size], px: 4 }}\n        title={breadcrumbs}\n        subheader={\n          <Box\n            display=\"flex\"\n            maxWidth=\"55vw\"\n            gap={1}\n            alignItems=\"baseline\"\n            height={28}\n          >\n            {header}\n          </Box>\n        }\n        subheaderTypographyProps={{ variant: 'h5', color: '#000000' }}\n        action={\n          <Box display=\"flex\" gap={1}>\n            {action}\n          </Box>\n        }\n        data-testid={testId}\n      />\n    </Card>\n  )\n})\n\nexport const SMALL_TOOLBAR_SIZE = 'small'\nexport const MEDIUM_TOOLBAR_SIZE = 'medium'\nexport const LARGE_TOOLBAR_SIZE = 'large'\ntype ToolbarSize =\n  | typeof SMALL_TOOLBAR_SIZE\n  | typeof MEDIUM_TOOLBAR_SIZE\n  | typeof LARGE_TOOLBAR_SIZE\n\nconst TOOLBAR_HEIGHT: Record<ToolbarSize, string> = {\n  [SMALL_TOOLBAR_SIZE]: '36px',\n  [MEDIUM_TOOLBAR_SIZE]: '64px',\n  [LARGE_TOOLBAR_SIZE]: '72px',\n}\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC, ReactNode } from 'react'\nimport { memo } from 'react'\nimport Box from '@mui/material/Box'\nimport { BODY_GRID_AREA, createGridAreas, TABS_GRID_AREA } from '../../utils/page-layouts'\n\nexport type LayoutWithTabsProps = {\n  tabs: ReactNode\n  body: ReactNode\n}\nexport const LayoutWithTabs: FC<LayoutWithTabsProps> = memo<LayoutWithTabsProps>(({ tabs, body }) => {\n  return (\n    <Box\n      sx={{\n        height: '100%',\n        display: 'grid',\n        gridTemplateRows: 'max-content 1fr',\n        gridTemplateColumns: 'auto 1fr',\n        gridTemplateAreas: `${createGridAreas({ tabs })}`,\n      }}\n    >\n      <Box\n        sx={{\n          gridArea: TABS_GRID_AREA,\n          borderRight: '1px solid #D5DCE3',\n          borderRadius: '10px 0 0 0',\n          boxShadow: 'rgb(4 12 29 / 9%) 0px 0px 5px 0px',\n        }}\n      >\n        {tabs}\n      </Box>\n\n      <Box sx={{\n        gridArea: BODY_GRID_AREA,\n        overflow: 'hidden',\n      }}>\n        {body}\n      </Box>\n    </Box>\n  )\n})\n\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC, ReactNode } from 'react'\nimport * as React from 'react'\nimport { memo } from 'react'\nimport Box from '@mui/material/Box'\nimport { Resizable } from 're-resizable'\nimport { Divider } from '@mui/material'\nimport { MEDIUM_TOOLBAR_SIZE, Toolbar } from '../Toolbar'\nimport type { TestableProps } from '../Testable'\nimport {\n  BODY_GRID_AREA,\n  createGridAreas,\n  NAVIGATION_DEFAULT_WIDTH,\n  NAVIGATION_MAX_WIDTH,\n  NAVIGATION_MIN_WIDTH,\n  SIDEBAR_GRID_AREA,\n  TOOLBAR_GRID_AREA,\n} from '../../utils/page-layouts'\n\nexport type LayoutWithSidebarProps = {\n  header: ReactNode\n  action?: ReactNode\n  sidebar?: ReactNode\n  body: ReactNode\n} & TestableProps\nexport const LayoutWithSidebar: FC<LayoutWithSidebarProps> = memo<LayoutWithSidebarProps>(({\n  header,\n  action,\n  sidebar,\n  body,\n  testId,\n}) => {\n  return (\n    <Box\n      sx={{\n        height: '100%',\n        display: 'grid',\n        gridTemplateRows: 'max-content 1fr',\n        gridTemplateColumns: 'auto 1fr',\n        gridTemplateAreas: `${createGridAreas({ toolbar: header, sidebar: sidebar })}`,\n      }}\n      data-testid={testId}\n    >\n      <Box sx={{\n        gridArea: TOOLBAR_GRID_AREA,\n        overflow: 'hidden',\n        backgroundColor: '#FFFFFF',\n      }}>\n        <Box>\n          <Toolbar\n            size={MEDIUM_TOOLBAR_SIZE}\n            header={header}\n            action={action}\n          />\n          <Divider orientation=\"horizontal\" variant=\"fullWidth\"/>\n        </Box>\n      </Box>\n\n      {sidebar && (\n        <Resizable\n          style={{\n            gridArea: SIDEBAR_GRID_AREA,\n            overflow: 'hidden',\n            position: 'relative',\n            borderRight: '1px solid #D5DCE3',\n            clipPath: 'inset(-10px 0px -10px -10px)',\n            paddingBottom: '24px',\n          }}\n          handleStyles={{ right: { cursor: 'ew-resize' } }}\n          defaultSize={{ width: NAVIGATION_DEFAULT_WIDTH, height: '100%' }}\n          maxWidth={NAVIGATION_MAX_WIDTH}\n          minWidth={NAVIGATION_MIN_WIDTH}\n          enable={{\n            top: false,\n            right: true,\n            bottom: false,\n            left: false,\n            topRight: false,\n            bottomRight: false,\n            bottomLeft: false,\n            topLeft: false,\n          }}\n        >\n          {sidebar}\n        </Resizable>\n      )}\n\n      <Box sx={{\n        gridArea: BODY_GRID_AREA,\n        overflow: 'hidden',\n      }}>\n        {body}\n      </Box>\n    </Box>\n  )\n})\n\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Paper, ToggleButton, ToggleButtonGroup } from '@mui/material'\nimport type { ReactNode } from 'react'\nimport React from 'react'\nimport Tooltip from '@mui/material/Tooltip'\nimport Box from '@mui/material/Box'\nimport { genericMemo } from '../utils/components'\n\nexport type SelectorWithIconsProps<T extends string> = {\n  mode: T\n  onChange?: (event: React.MouseEvent<HTMLElement>, value: T) => void\n  firstIcon: ReactNode\n  firstValue: T\n  firstTooltip: string\n  firstTestId?: string\n  secondIcon: ReactNode\n  secondValue: T\n  secondTooltip: string\n  secondTestId?: string\n}\n\nfunction renderSelector<T extends string>(props: SelectorWithIconsProps<T>): JSX.Element {\n  const {\n    mode, onChange,\n    firstIcon, firstValue, firstTooltip, firstTestId,\n    secondIcon, secondValue, secondTooltip, secondTestId,\n  } = props\n\n  return (\n    <Paper\n      sx={{\n        backgroundColor: '#F2F3F5',\n        borderRadius: 2,\n        display: 'flex',\n        flexWrap: 'wrap',\n      }}\n    >\n      <ToggleButtonGroup\n        sx={{ height: 32 }}\n        size=\"small\"\n        value={mode}\n        exclusive\n        onChange={onChange}\n      >\n\n        <ToggleButton value={firstValue} data-testid={firstTestId}>\n          <Tooltip title={firstTooltip}>\n            <Box>{firstIcon}</Box>\n          </Tooltip>\n        </ToggleButton>\n\n        <ToggleButton value={secondValue} data-testid={secondTestId}>\n          <Tooltip title={secondTooltip}>\n            <Box>{secondIcon}</Box>\n          </Tooltip>\n        </ToggleButton>\n      </ToggleButtonGroup>\n    </Paper>\n  )\n}\n\nexport const SelectorWithIcons = genericMemo(renderSelector)\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LayoutWithSidebar } from './LayoutWithSidebar'\nimport type { FC, MutableRefObject, ReactNode } from 'react'\nimport { memo, useMemo } from 'react'\nimport { Box } from '@mui/material'\nimport { SearchBar } from '../SearchBar'\nimport { SelectorWithIcons } from '../SelectorWithIcons'\nimport type { TestableProps } from '../Testable'\nimport { useStateWithExternal } from '../../hooks/common/useStateWithExternal'\nimport type { Key } from '../../entities/keys'\nimport { FilterButton } from '../Buttons/FilterButton'\nimport { SidebarPanel } from '../Panels/SidebarPanel'\n\nexport type ViewSelectorOptions = ReadonlyArray<{\n  icon: ReactNode\n  value: Key\n  tooltip: string\n}>\n\nexport type VersionOperationsLayoutProps = {\n  body: ReactNode\n  title: ReactNode\n  viewMode?: Key\n  viewOptions?: ViewSelectorOptions\n  additionalActions?: ReactNode\n  hideFiltersPanel?: boolean\n  filtersApplied?: boolean\n  exportButton?: ReactNode\n  bodyRef?: MutableRefObject<HTMLDivElement | null>\n  searchPlaceholder?: string\n  setSearchValue?: (value: string) => void\n  onOperationsViewChange?: (newViewMode: Key | undefined) => void\n  onClickFilterButton?: (value: boolean) => void\n  filters: ReactNode\n} & TestableProps\n\n// First Order Component //\nexport const RichFiltersLayout: FC<VersionOperationsLayoutProps> = memo<VersionOperationsLayoutProps>(({\n  body,\n  title,\n  viewMode,\n  viewOptions = [],\n  onOperationsViewChange,\n  hideFiltersPanel = false,\n  filtersApplied = false,\n  exportButton,\n  additionalActions,\n  bodyRef,\n  onClickFilterButton,\n  searchPlaceholder = 'Search',\n  setSearchValue,\n  filters,\n  testId,\n}) => {\n\n  const [hiddenFiltersPanel, setHiddenFiltersPanel] = useStateWithExternal<boolean>(hideFiltersPanel, hideFiltersPanel, onClickFilterButton)\n  const [selectedViewMode, setSelectedViewMode] = useStateWithExternal<Key | undefined>(viewMode, viewMode, onOperationsViewChange)\n\n  const viewSelector = useMemo(() => {\n    if (viewOptions.length <= 1) {\n      return null\n    }\n    const [firstView, secondView] = viewOptions\n\n    return (\n      <SelectorWithIcons<Key>\n        mode={selectedViewMode ?? firstView.value}\n        firstIcon={firstView.icon}\n        firstValue={firstView.value}\n        firstTooltip={firstView.tooltip}\n        secondIcon={secondView.icon}\n        secondValue={secondView.value}\n        secondTooltip={secondView.tooltip}\n        onChange={(_, value) => setSelectedViewMode(value)}\n      />\n    )\n  }, [selectedViewMode, setSelectedViewMode, viewOptions])\n\n  const actions = useMemo(() => (\n    <Box display=\"flex\" alignItems=\"center\" gap={2} ml=\"auto\">\n      {additionalActions}\n\n      <SearchBar\n        placeholder={searchPlaceholder}\n        onValueChange={setSearchValue}\n        data-testid=\"SearchOperations\"\n      />\n\n      <FilterButton\n        selected={hiddenFiltersPanel}\n        onSelect={() => setHiddenFiltersPanel(!hiddenFiltersPanel)}\n        showBadge={filtersApplied}\n      />\n\n      {viewSelector}\n\n      {exportButton}\n    </Box>\n  ), [additionalActions, exportButton, filtersApplied, hiddenFiltersPanel, searchPlaceholder, setHiddenFiltersPanel, setSearchValue, viewSelector])\n\n  return (\n    <LayoutWithSidebar\n      header={title}\n      action={actions}\n      sidebar={!hiddenFiltersPanel && (\n        <SidebarPanel\n          body={filters}\n          withDivider\n        />\n      )}\n      body={\n        <Box height=\"100%\" ref={bodyRef}>\n          {body}\n        </Box>\n      }\n      testId={testId}\n    />\n  )\n})\n"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","useUtilityClasses","ownerState","classes","composeClasses","CardRoot","styled","Paper","props","styles","Card","React.forwardRef","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","_extends","_jsx","clsx","Card$1","LayoutWithToolbar","memo","toolbar","body","jsxs","Box","DEFAULT_PAGE_LAYOUT_GAP","createGridAreas","jsx","TOOLBAR_GRID_AREA","DEFAULT_PAPER_SHADOW","BODY_GRID_AREA","Toolbar","breadcrumbs","header","action","size","SMALL_TOOLBAR_SIZE","testId","CardHeader","TOOLBAR_HEIGHT","LARGE_TOOLBAR_SIZE","MEDIUM_TOOLBAR_SIZE","LayoutWithTabs","tabs","TABS_GRID_AREA","LayoutWithSidebar","sidebar","Divider","Resizable","SIDEBAR_GRID_AREA","NAVIGATION_DEFAULT_WIDTH","NAVIGATION_MAX_WIDTH","NAVIGATION_MIN_WIDTH","renderSelector","mode","onChange","firstIcon","firstValue","firstTooltip","firstTestId","secondIcon","secondValue","secondTooltip","secondTestId","ToggleButtonGroup","ToggleButton","Tooltip","SelectorWithIcons","genericMemo","RichFiltersLayout","title","viewMode","viewOptions","onOperationsViewChange","hideFiltersPanel","filtersApplied","exportButton","additionalActions","bodyRef","onClickFilterButton","searchPlaceholder","setSearchValue","filters","hiddenFiltersPanel","setHiddenFiltersPanel","useStateWithExternal","selectedViewMode","setSelectedViewMode","viewSelector","useMemo","firstView","secondView","_","value","actions","SearchBar","FilterButton","SidebarPanel"],"mappings":"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","x_google_ignoreList":[0,1]}