{"version":3,"file":"CompareRestGroupsDialogForm.stories-cde3d8be.js","sources":["../../packages/shared/src/components/CompareRestGroupsDialogForm.tsx","../../packages/shared/src/stories/samples/operation-groups-samples.ts"],"sourcesContent":["/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { FC, SyntheticEvent } from 'react'\nimport * as React from 'react'\nimport { memo } from 'react'\nimport {\n  Autocomplete,\n  Box,\n  Button,\n  debounce,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport type { Control } from 'react-hook-form'\nimport { Controller } from 'react-hook-form'\nimport { DEFAULT_DEBOUNCE } from '../utils/constants'\nimport { disableAutocompleteSearch } from '../utils/mui'\nimport { OptionItem } from './OptionItem'\nimport type { OperationGroup } from '../entities/operation-groups'\nimport { DialogForm } from './DialogForm'\nimport { Swapper } from './Swapper'\n\nexport type CompareRestGroupsDialogFormData = {\n  originalGroup: OperationGroup | null\n  changedGroup: OperationGroup | null\n}\n\nexport type CompareRestGroupsDialogData = {\n  control: Control<CompareRestGroupsDialogFormData>\n  originalGroupOptions: ReadonlyArray<OperationGroup>\n  changedGroupOptions: ReadonlyArray<OperationGroup>\n  onSwap: () => void\n  onSubmit: () => void\n  isLoadingOriginalGroup: boolean\n  isLoadingChangedGroup: boolean\n}\n\nexport type CompareRestGroupsDialogFormProps = CompareRestGroupsDialogData & {\n  open: boolean\n  setOpen: (value: boolean) => void\n  onOriginalInputChange: (event: SyntheticEvent, value: string) => void\n  onChangedInputChange: (event: SyntheticEvent, value: string) => void\n}\n\n// First Order Component //\nexport const CompareRestGroupsDialogForm: FC<CompareRestGroupsDialogFormProps> = memo(({\n  open,\n  setOpen,\n  control,\n  onSubmit,\n  onSwap,\n  originalGroupOptions,\n  changedGroupOptions,\n  isLoadingOriginalGroup,\n  isLoadingChangedGroup,\n  onOriginalInputChange,\n  onChangedInputChange,\n}) => {\n  return (\n    <DialogForm\n      open={open}\n      onClose={() => setOpen(false)}\n      onSubmit={onSubmit}\n      maxWidth=\"md\"\n    >\n      <DialogTitle>\n        Select REST Groups to Compare\n      </DialogTitle>\n      <DialogContent sx={DIALOG_CONTENT_STYLES}>\n        <Typography variant=\"button\" sx={{ gridArea: 'originalTitle' }}>\n          Previous\n        </Typography>\n        <Controller\n          name=\"originalGroup\"\n          control={control}\n          render={({ field: { value, onChange } }) => {\n            return (\n              <Autocomplete<OperationGroup>\n                autoSelect\n                filterOptions={disableAutocompleteSearch}\n                onInputChange={debounce(onOriginalInputChange, DEFAULT_DEBOUNCE)}\n                sx={{ gridArea: 'originalGroup' }}\n                loading={isLoadingOriginalGroup}\n                value={value}\n                options={originalGroupOptions}\n                getOptionLabel={({ groupName }) => groupName}\n                renderOption={(props, { groupName }) =>\n                  <OptionItem\n                    key={groupName}\n                    props={props}\n                    title={groupName}\n                  />\n                }\n                renderInput={(params) => <TextField {...params} required label=\"Group\"/>}\n                onChange={(_, value) => onChange(value)}\n                data-testid=\"OriginalGroupAutocomplete\"\n              />\n            )\n          }}\n        />\n\n        <Box sx={{ gridArea: 'swapper', alignSelf: 'center' }}>\n          <Swapper onSwap={onSwap}/>\n        </Box>\n\n        <Typography variant=\"button\" sx={{ gridArea: 'changedTitle' }}>\n          Current\n        </Typography>\n        <Controller\n          name=\"changedGroup\"\n          control={control}\n          render={({ field: { value, onChange } }) => (\n            <Autocomplete<OperationGroup>\n              autoSelect\n              filterOptions={disableAutocompleteSearch}\n              onInputChange={debounce(onChangedInputChange, DEFAULT_DEBOUNCE)}\n              sx={{ gridArea: 'changedGroup' }}\n              loading={isLoadingChangedGroup}\n              value={value}\n              options={changedGroupOptions}\n              getOptionLabel={({ groupName }) => groupName}\n              renderOption={(props, { groupName }) =>\n                <OptionItem\n                  key={groupName}\n                  props={props}\n                  title={groupName}\n                />\n              }\n              renderInput={(params) => <TextField {...params} required label=\"Group\"/>}\n              onChange={(_, value) => onChange(value)}\n              data-testid=\"ChangedGroupAutocomplete\"\n            />\n          )}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"contained\" type=\"submit\" data-testid=\"CompareButton\">\n          Compare\n        </Button>\n        <Button variant=\"outlined\" onClick={() => setOpen(false)} data-testid=\"CancelButton\">\n          Cancel\n        </Button>\n      </DialogActions>\n    </DialogForm>\n  )\n})\n\nconst DIALOG_CONTENT_STYLES = {\n  display: 'grid',\n  columnGap: 1,\n  gridTemplateRows: 'repeat(2, max-content)',\n  gridTemplateColumns: '400px max-content 400px',\n  gridTemplateAreas: `\n    'originalTitle        originalTitle     changedTitle'\n    'originalGroup        swapper           changedGroup'\n  `,\n}\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { OperationGroup } from '../../entities/operation-groups'\n\nexport const operationGroups: OperationGroup[] = [\n  {\n    groupName: 'Group1',\n    isPrefixGroup: true,\n    description: 'Group contains operations that are used in x-x integration',\n    operationsCount: 7,\n  },\n  {\n    groupName: 'Group2',\n    isPrefixGroup: false,\n    description: 'Manual Group contains operations that user adds self',\n    operationsCount: 13,\n  },\n  {\n    groupName: 'Group3',\n    isPrefixGroup: false,\n    description: 'GraphQL Manual Group',\n    operationsCount: 45,\n  },\n  {\n    groupName: 'Group4',\n    isPrefixGroup: true,\n    description: '',\n    operationsCount: 200,\n  },\n  {\n    groupName: 'Group4',\n    isPrefixGroup: false,\n    description: 'Empty group',\n    operationsCount: 2,\n  },\n]\n"],"names":["CompareRestGroupsDialogForm","memo","open","setOpen","control","onSubmit","onSwap","originalGroupOptions","changedGroupOptions","isLoadingOriginalGroup","isLoadingChangedGroup","onOriginalInputChange","onChangedInputChange","jsxs","DialogForm","jsx","DialogTitle","DialogContent","DIALOG_CONTENT_STYLES","Typography","Controller","value","onChange","Autocomplete","disableAutocompleteSearch","debounce","DEFAULT_DEBOUNCE","groupName","props","OptionItem","params","TextField","_","value2","Box","Swapper","DialogActions","Button","operationGroups"],"mappings":"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"}