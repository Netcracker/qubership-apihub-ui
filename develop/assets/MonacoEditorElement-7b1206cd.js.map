{"version":3,"file":"MonacoEditorElement-7b1206cd.js","sources":["../../packages/shared/src/components/MonacoEditor/useAddMarkers.ts","../../packages/shared/src/components/MonacoEditor/useAddSearchNavigation.ts","../../packages/shared/src/components/MonacoEditor/utils.ts","../../packages/shared/src/components/MonacoEditor/useAddSelectedUriNavigation.ts","../../packages/shared/src/components/MonacoEditor/useAddSelectionDecorator.ts","../../packages/shared/src/components/MonacoEditor/useInitializeEditor.ts","../../packages/shared/src/components/MonacoEditor/useSetEditorModel.ts","../../packages/shared/src/components/MonacoEditor/useMonacoEditorElement.ts","../../packages/shared/src/components/MonacoEditor/MonacoEditorElement.tsx"],"sourcesContent":["import { editor as Editor } from 'monaco-editor'\nimport type { MutableRefObject } from 'react'\nimport { useEffect } from 'react'\n\nexport function useAddMarkers(\n  editor: MutableRefObject<Editor.IStandaloneCodeEditor | undefined>,\n  markers: Editor.IMarkerData[] = [],\n): void {\n  useEffect(() => {\n    if (markers.length === 0) {\n      return\n    }\n\n    const currentEditor = editor.current\n    if (!currentEditor) {\n      return\n    }\n\n    const model = currentEditor.getModel()\n    if (!model) {\n      return\n    }\n\n    Editor.setModelMarkers(model, 'owner', markers)\n  }, [editor, markers])\n}\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { editor as Editor, IEvent } from 'monaco-editor'\nimport type { MutableRefObject } from 'react'\nimport { useEffect, useState } from 'react'\nimport { useDebounce, useEffectOnce } from 'react-use'\n\nexport function useAddSearchNavigation(\n  editor: MutableRefObject<Editor.IStandaloneCodeEditor | undefined>,\n  searchPhrase?: string,\n  onSearchPhraseChange?: (value: string | undefined) => void,\n): void {\n  const [searchString, setSearchString] = useState<string>('')\n\n  useDebounce(() => onSearchPhraseChange?.(searchString), 500, [searchString])\n\n  useEffect(() => {\n    const state = getFindControllerState(editor)\n    const listener = state?.onFindReplaceStateChange(({ searchString }) => {\n      if (searchString) {\n        setSearchString(state._searchString)\n      }\n    })\n    return listener?.dispose\n  }, [editor])\n\n  useEffectOnce(() => {\n    const currentEditor = editor.current\n    if (!searchPhrase || !currentEditor) {\n      return\n    }\n\n    setSearchString(searchPhrase)\n\n    const range = currentEditor.getModel()?.findMatches(searchPhrase, false, false, false, null, true)[0]?.range\n    range && currentEditor.setSelection(range)\n    currentEditor.getAction('actions.find')?.run().then()\n  })\n}\n\nfunction getFindControllerState(\n  editor: MutableRefObject<Editor.IStandaloneCodeEditor | undefined>,\n): FindControllerState {\n  return (editor.current\n    ?.getContribution('editor.contrib.findController') as unknown as FindController)\n    ?.getState()\n}\n\ntype FindController = {\n  getState: () => FindControllerState\n}\n\ntype FindControllerState = {\n  _searchString: string\n  readonly onFindReplaceStateChange: IEvent<FindReplaceStateChangedEvent>\n}\n\ntype FindReplaceStateChangedEvent = {\n  moveCursor: boolean\n  updateHistory: boolean\n\n  searchString: boolean\n  replaceString: boolean\n  isRevealed: boolean\n  isReplaceRevealed: boolean\n  isRegex: boolean\n  wholeWord: boolean\n  matchCase: boolean\n  preserveCase: boolean\n  searchScope: boolean\n  matchesPosition: boolean\n  matchesCount: boolean\n  currentMatch: boolean\n  loop: boolean\n  isSearching: boolean\n  filters: boolean\n}\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { editor as Editor } from 'monaco-editor'\n\nexport function navigateTo(\n  editor: Editor.IStandaloneCodeEditor,\n  lineNumber: number,\n): void {\n  editor.revealLineNearTop(lineNumber, Editor.ScrollType.Smooth)\n  editor.setPosition({ lineNumber: lineNumber, column: 0 })\n  editor.focus()\n}\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { editor as Editor } from 'monaco-editor'\nimport type { MutableRefObject } from 'react'\nimport { useEffect } from 'react'\nimport { navigateTo } from './utils'\nimport type { SpecItemUri } from '../../utils/specifications'\nimport { findPathLocation } from '../../utils/specifications'\n\nexport function useAddSelectedUriNavigation(\n  editor: MutableRefObject<Editor.IStandaloneCodeEditor | undefined>,\n  selectedUri?: SpecItemUri,\n): void {\n  useEffect(() => {\n    const currentEditor = editor.current\n    if (!currentEditor) {\n      return\n    }\n\n    const content = currentEditor.getModel()?.getValue()\n    if (selectedUri && content) {\n      const location = findPathLocation(content, selectedUri)\n      const startLine = location?.range.start.line ?? 0\n      navigateTo(currentEditor, startLine + 1)\n    }\n  }, [editor, selectedUri])\n}\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { editor as Editor } from 'monaco-editor'\nimport { editor, Range } from 'monaco-editor'\nimport type { MutableRefObject } from 'react'\nimport { useEffect, useState } from 'react'\nimport { navigateTo } from './utils'\nimport type { SpecItemUri } from '../../utils/specifications'\nimport { findPathLocation } from '../../utils/specifications'\nimport IEditorDecorationsCollection = editor.IEditorDecorationsCollection\nimport IModelDeltaDecoration = editor.IModelDeltaDecoration\n\nexport function useAddSelectionDecorator(\n  editor?: MutableRefObject<Editor.IStandaloneCodeEditor | undefined>,\n  selectedUri?: SpecItemUri,\n): void {\n  const [selectionDecorations, setSelectionDecorations] = useState<IEditorDecorationsCollection | undefined>(undefined)\n\n  useEffect(() => {\n    const currentEditor = editor?.current\n\n    if (!currentEditor || !selectedUri) {\n      return\n    }\n\n    if (!selectionDecorations) {\n      setSelectionDecorations(currentEditor.createDecorationsCollection())\n    }\n\n    const location = findPathLocation(currentEditor.getValue(), selectedUri)\n\n    if (location) {\n      const startLine = location?.range.start.line\n      const endLine = location?.range.end.line\n\n      const decorations: IModelDeltaDecoration[] = [{\n        range: new Range(startLine + 1, 0, endLine + 1, 0),\n        options: {\n          isWholeLine: false,\n          marginClassName: 'MonacoSelectedDecorator',\n        },\n      }]\n\n      selectionDecorations?.set(decorations)\n\n      navigateTo(currentEditor, startLine + 1)\n    }\n\n    return () => {\n      selectionDecorations?.clear()\n    }\n  }, [selectionDecorations, editor, selectedUri])\n}\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { editor as Editor } from 'monaco-editor'\nimport type { MutableRefObject, RefObject } from 'react'\nimport { useEffectOnce } from 'react-use'\nimport type { LanguageType } from '../../types/languages'\n\nexport function useInitializeEditor(\n  ref: RefObject<HTMLDivElement>,\n  editor: MutableRefObject<Editor.IStandaloneCodeEditor | undefined>,\n  value: string,\n  language?: LanguageType,\n): void {\n  useEffectOnce(() => {\n    const model = Editor.createModel(value, language)\n\n    Editor.defineTheme('custom', {\n      base: 'vs',\n      inherit: true,\n      rules: [],\n      colors: {\n        'editor.background': '#FFFFFF',\n      },\n    })\n\n    editor.current = Editor.create(ref.current!, {\n      minimap: { enabled: true },\n      hover: { above: false },\n      automaticLayout: true,\n      readOnly: true,\n      renderValidationDecorations: 'on',\n      wordWrap: 'on',\n      tabSize: 2,\n      model: model,\n      glyphMargin: true,\n      theme: 'custom',\n    })\n\n    return () => {\n      editor.current?.getModel()?.dispose()\n      editor.current?.dispose()\n    }\n  })\n}\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { editor as Editor, Uri } from 'monaco-editor'\nimport type { MutableRefObject } from 'react'\nimport { useEffect } from 'react'\nimport type { LanguageType } from '../../types/languages'\nimport type { SpecType } from '../../utils/specs'\n\nexport function useSetEditorModel(\n  editor: MutableRefObject<Editor.IStandaloneCodeEditor | undefined>,\n  value: string,\n  type: SpecType,\n  language?: LanguageType,\n): void {\n  const filename = `${type}/*.${language}`\n\n  useEffect(() => {\n    const currentEditor = editor.current\n    if (!currentEditor) {\n      return\n    }\n\n    currentEditor.setModel(Editor.createModel(value, language, Uri.parse(filename)))\n\n    return () => {\n      currentEditor.getModel()?.dispose()\n    }\n  }, [editor, value, language, filename])\n}\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { editor as Editor } from 'monaco-editor'\nimport type { RefObject } from 'react'\nimport { useRef } from 'react'\nimport type { LanguageType } from '../../types/languages'\nimport type { SpecItemUri } from '../../utils/specifications'\nimport type { SpecType } from '../../utils/specs'\nimport { useAddMarkers } from './useAddMarkers'\nimport { useAddSearchNavigation } from './useAddSearchNavigation'\nimport { useAddSelectedUriNavigation } from './useAddSelectedUriNavigation'\nimport { useAddSelectionDecorator } from './useAddSelectionDecorator'\nimport { useInitializeEditor } from './useInitializeEditor'\nimport { useSetEditorModel } from './useSetEditorModel'\n\nexport function useMonacoEditorElement(options: {\n  value: string\n  type: SpecType\n  language?: LanguageType\n  selectedUri?: SpecItemUri // Example: '#/foo/bar/baz/qux/1'\n  searchPhrase?: string\n  onSearchPhraseChange?: (value: string | undefined) => void\n  markers?: Editor.IMarkerData[]\n}): RefObject<HTMLDivElement> {\n  const { value, type, language, selectedUri, searchPhrase, onSearchPhraseChange, markers } = options\n\n  const ref = useRef<HTMLDivElement>(null)\n  const editor = useRef<Editor.IStandaloneCodeEditor>()\n\n  useInitializeEditor(ref, editor, value, language)\n  useSetEditorModel(editor, value, type, language)\n\n  useAddSelectionDecorator(editor, selectedUri)\n  useAddSelectedUriNavigation(editor, selectedUri)\n  useAddSearchNavigation(editor, searchPhrase, onSearchPhraseChange)\n  useAddMarkers(editor, markers)\n\n  return ref\n}\n","/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport 'monaco-editor/esm/vs/editor/editor.all.js'\nimport 'monaco-editor/esm/vs/language/json/monaco.contribution'\nimport 'monaco-editor/esm/vs/basic-languages/yaml/yaml.contribution'\nimport 'monaco-editor/esm/vs/basic-languages/markdown/markdown.contribution'\nimport './index.css'\n\nimport type { FC } from 'react'\nimport { memo } from 'react'\nimport { useMonacoEditorElement } from './useMonacoEditorElement'\nimport type { SpecType } from '../../utils/specs'\nimport type { SpecItemUri } from '../../utils/specifications'\nimport type { LanguageType } from '../../types/languages'\nimport type { editor as Editor } from 'monaco-editor'\n\nexport type MonacoEditorElementProps = {\n  value: string\n  type: SpecType\n  language?: LanguageType\n  selectedUri?: SpecItemUri // Example: '#/foo/bar/baz/qux/1'\n  searchPhrase?: string\n  onSearchPhraseChange?: (value: string | undefined) => void\n  markers?: Editor.IMarkerData[]\n}\n\nconst MonacoEditorElement: FC<MonacoEditorElementProps> = /* @__PURE__ */ memo<MonacoEditorElementProps>((\n  {\n    value,\n    type,\n    language,\n    selectedUri,\n    searchPhrase,\n    onSearchPhraseChange,\n    markers,\n  },\n) => {\n  const element = useMonacoEditorElement({ value, type, language, selectedUri, searchPhrase, onSearchPhraseChange, markers })\n\n  return (\n    <div\n      ref={element}\n      style={{ height: '100%' }}\n    />\n  )\n})\n\nexport default MonacoEditorElement\n"],"names":["useAddMarkers","editor","markers","useEffect","currentEditor","model","Editor","useAddSearchNavigation","searchPhrase","onSearchPhraseChange","searchString","setSearchString","useState","useDebounce","state","getFindControllerState","listener","useEffectOnce","range","_b","_a","_c","navigateTo","lineNumber","useAddSelectedUriNavigation","selectedUri","content","location","findPathLocation","startLine","useAddSelectionDecorator","selectionDecorations","setSelectionDecorations","endLine","decorations","Range","useInitializeEditor","ref","value","language","useSetEditorModel","type","filename","Uri","useMonacoEditorElement","options","useRef","MonacoEditorElement","memo","element","jsx"],"mappings":"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"}