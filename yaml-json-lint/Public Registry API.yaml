openapi: 3.0.3
info:
  title: APIHUB registry public API
  description: |
    The API contract for APIHUB direct call
  license:
    name: qubership
    url: https://qubership.org
  version: "2024.2"
  x-api-audience: BWC
externalDocs:
  description: Find out more about package
  url: https://qubership.org/APIHUB
servers:
  - url: https://{apihub}.qubership.org
    description: APIHUB server
    variables:
      apihub:
        description: Name of the APIHUB server.
        enum:
          - apihub
          - dev.apihub
          - staging.apihub
        default: apihub
security:
  - BearerAuth: []
tags:
  - name: Auth
    description: APIs for auth integrations.
  - name: Packages
    description: APIs for the package management.
  - name: Publish
    description: Publish version API
  - name: Versions
    description: Published package versions API.
  - name: Export
    description: Export API documentation.
  - name: Users
    description: APIs for the user operations.
  - name: Search
    description: Search functions.
  - name: Admin
    description: APIs for technical administration.
  - name: Agent
    description: APIHUB Agent API documentation.
  - name: Integrations
    description: APIs for git integrations.
  - name: Roles
    description: APIs for role management.
  - name: Operations
    description: Operations APIs.
  - name: Documents
    description: Documents APIs.
  - name: Changes
    description: Changes APIs.
  - name: TryIt
    description: API for 'try it' functionality
  - name: Operation groups
    description: Operation groups
paths:
  "/api/v1/system/configuration":
    get:
      tags:
        - Auth
      summary: System configuration
      description: Global parameters of system configuration.
      operationId: getSystemConfiguration
      security:
        - {}
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - autoRedirect
                properties:
                  ssoIntegrationEnabled:
                    type: boolean
                  autoRedirect:
                    type: boolean
                  defaultWorkspaceId:
                    description: Id of the workspace, which is used by default while working with the system.
                    type: string
                    example: WSPACE1
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/auth/saml":
    post:
      x-api-audience: noBWC
      tags:
        - Auth
      summary: SAML authentication
      description: |
        Starts the SAML authentication process in APIHUB.

        In case of successful authentication, the request will be redirected to the **redirectUri** and 
        the response will contain cookie with access token for future API calls.
        All subsequent APIHUB calls must use this token in a **BearerAuth** authentication.
      operationId: postAuthSAML
      security: [{}]
      parameters:
        - name: redirectUri
          in: query
          description: URI, where user must be redirected in case of successful APIHUB authentication.
          required: true
          schema:
            type: string
            format: uri
            example: "https://apihub.qubership.org/portal"
      responses:
        "302":
          description: Moved Temporarily
          headers:
            Set-Cookie:
              description: A base64 encoded userView cookie, containing the user data and access token.
              schema:
                type: string
                example: "userView=eyJ0b2tlbiI6ImV5SmhiR2NpT2lKSVV6STFOaUlzSW10cFpDSTZJbk5sWTNKbGRDMXBaQ0lzSW5SNWNDSTZJa3BYVkNKOS5leUpGZUhSbGJuTnBiMjV6SWpwN2ZTd2lSM0p2ZFhCeklqcGJYU3dpU1VRaU9pSmxkbVZzTURJeE9TSXNJazVoYldVaU9pSmxkbVZzTURJeE9TSXNJbUYxWkNJNld5SWlYU3dpWlhod0lqb3hOamMwTURZNU1UVTRMQ0pwWVhRaU9qRTJOelF3TWpVNU5UZ3NJbTVpWmlJNk1UWTNOREF5TlRrMU9Dd2ljM1ZpSWpvaVpYWmxiREF5TVRraWZRLk45d2poeGhLRkoyTlEzNXpCaGw0VEs4VFBOS3RoeDE5czNQQnNheTNkclEiLCJyZW5ld1Rva2VuIjoiZXlKaGJHY2lPaUpJVXpJMU5pSXNJbXRwWkNJNkluTmxZM0psZEMxcFpDSXNJblI1Y0NJNklrcFhWQ0o5LmV5SkZlSFJsYm5OcGIyNXpJanA3ZlN3aVIzSnZkWEJ6SWpwYlhTd2lTVVFpT2lKbGRtVnNNREl4T1NJc0lrNWhiV1VpT2lKbGRtVnNNREl4T1NJc0ltRjFaQ0k2V3lJaVhTd2laWGh3SWpveE5qYzJOakUzT1RVNExDSnBZWFFpT2pFMk56UXdNalU1TlRnc0ltNWlaaUk2TVRZM05EQXlOVGsxT0N3aWMzVmlJam9pWlhabGJEQXlNVGtpZlEuUnRyZEEwNkJrN2lIQnA1bVRYUE1PSnVJdmhtQ0FudHRnVlBqNGZicXN6WSIsInVzZXIiOnsiaWQiOiJldmVsMDIxOSIsImVtYWlsIjoiZXZnZW5paS5lbGl6YXJvdkBuZXRjcmFja2VyLmNvbSIsIm5hbWUiOiJFdmdlbmlpIEVsaXphcm92IiwiYXZhdGFyVXJsIjoiL2FwaS92Mi91c2Vycy9ldmVsMDIxOS9wcm9maWxlL2F2YXRhciJ9fQ==;"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  /api/v2/activity:
    get:
      tags:
        - Packages
      deprecated: true
      x-deprecation-reason: New version of API is created - GET /api/v3/activity
      summary: Get activity history
      description: |
        Get activity history. Return the last N events in descending date order.
      operationId: getActivity
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - name: onlyFavorite
          description: |
            * If true, then only events from packages that are favorites for the current user shall be returned (including all child groups/packages/dashboards for favorite groups/workspaces)
            * If false, events for all packages shall be returned.
          in: query
          schema:
            type: boolean
            default: false
        - name: onlyShared
          in: query
          description: filter only shared packages
          schema:
            type: boolean
            default: false
        - name: kind
          in: query
          description: |
            Filter by package kind.
            The list of values is acceptable. In this case, the following pattern will be used: ```?kind=group,package,dashboard```.
          schema:
            type: array
            items:
              type: string
              enum:
                - workspace
                - group
                - package
                - dashboard
            example: [ group, package, dashboard ]
        - name: types
          description: |
            Filter for events by group types:
            * package_members - grant_role, update_role, delete_role.
            * package_security - generate_api_key, revoke_api_key.
            * new_version - publish_new_version.
            * package_version - patch_version_meta, delete_version, publish_new_revision.
            * package_management - create_package, delete_package, patch_package_meta.
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - package_members
                - package_security
                - new_version
                - package_version
                - package_management
        - name: textFilter
          in: query
          description: Filter by userName/packageName
          schema:
            type: string
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      type: object
                      required:
                        - date
                        - userName
                        - userId
                        - packageId
                        - packageName
                        - kind
                        - params
                      properties:
                        date:
                          description: Date when event was generated
                          type: string
                          format: date-time
                        userName:
                          description: Name of the user who generated an event
                          type: string
                          example: "Name Surname"
                        userId:
                          description: Login of the user who generated an event
                          type: string
                          example: user1221
                        packageId:
                          description: Package unique string identifier (full alias)
                          type: string
                        packageName:
                          description: Package name
                          type: string
                        kind:
                          description: Package kind
                          type: string
                          enum:
                            - workspace
                            - group
                            - package
                            - dashboard
                        eventType:
                          description: Activity event type
                          type: string
                          enum:
                            - generate_api_key
                            - revoke_api_key
                            - create_package
                            - delete_package
                            - grant_role
                            - delete_role
                            - update_role
                            - publish_new_version
                            - delete_version
                            - publish_new_revision
                            - patch_version_meta
                            - patch_package_meta
                        params:
                          type: object
                          description: Events specific params
                          oneOf:
                            - type: object
                              title: ParamsForGrantAndDeleteRole
                              description: params for grant_role and delete_role events
                              required:
                                - memberId
                                - memberName
                                - roles
                              properties:
                                memberId:
                                  description: Login of the member
                                  type: string
                                  example: user1221
                                memberName:
                                  description: User which was added/deleted to/from package with some role(s)
                                  type: string
                                  example: Name Surname
                                roles:
                                  type: array
                                  items:
                                    $ref: "#/components/schemas/Role"
                            - type: object
                              title: ParamsForUpdateRole
                              description: params for update_role event
                              required:
                                - memberId
                                - memberName
                              properties:
                                memberId:
                                  description: Login of the member
                                  type: string
                                  example: user1221
                                memberName:
                                  description: User which was added/deleted to/from package with some role(s)
                                  type: string
                                  example: Name Surname
                            - type: object
                              title: ParamsForPublishAndDeleteVersion
                              description: params for publish_new_version and delete_version events
                              required:
                                - version
                                - status
                              properties:
                                version:
                                  description: Package version name.
                                  type: string
                                  example: "22.3"
                                status:
                                  $ref: "#/components/schemas/VersionStatusEnum"
                            - type: object
                              title: ParamsForPublishNewRevision
                              description: params for publish_new_revision event
                              required:
                                - version
                                - revision
                                - status
                              properties:
                                version:
                                  description: Package version name.
                                  type: string
                                  example: "22.3"
                                revision:
                                  description: Number of the revision.
                                  type: integer
                                  format: int32
                                  example: 3
                                status:
                                  $ref: "#/components/schemas/VersionStatusEnum"
                            - type: object
                              title: ParamsForUpdateVersionMeta
                              description: params for patch_version_meta event
                              required:
                                - version
                                - versionMeta
                              properties:
                                version:
                                  description: Package version name.
                                  type: string
                                  example: "22.3"
                                versionMeta:
                                  description: List of parameters that was updated in version
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - status
                                      - label
                            - type: object
                              title: ParamsForPatchPackageMeta
                              description: params for patch_package_meta event
                              required:
                                - packageMeta
                              properties:
                                packageMeta:
                                  description: List of parameters that was updated in package
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - name
                                      - description
                                      - serviceName
                                      - imageUrl
                                      - defaultRole
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  /api/v3/activity:
    get:
      deprecated: true
      x-deprecation-reason: New version of API is created - GET /api/v4/activity
      tags:
        - Packages
      summary: Get activity history
      description: |
        Get activity history. Return the last N events in descending date order.
      operationId: getActivityV3
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - name: onlyFavorite
          description: |
            * If true, then only events from packages that are favorites for the current user shall be returned (including all child groups/packages/dashboards for favorite groups/workspaces)
            * If false, events for all packages shall be returned.
          in: query
          schema:
            type: boolean
            default: false
        - name: onlyShared
          in: query
          description: filter only shared packages
          schema:
            type: boolean
            default: false
        - name: kind
          in: query
          description: |
            Filter by package kind.
            The list of values is acceptable. In this case, the following pattern will be used: ```?kind=group,package,dashboard```.
          schema:
            type: array
            items:
              type: string
              enum:
                - workspace
                - group
                - package
                - dashboard
            example: [ group, package, dashboard ]
        - name: types
          description: |
            Filter for events by group types:
            * package_members - grant_role, update_role, delete_role.
            * package_security - generate_api_key, revoke_api_key.
            * new_version - publish_new_version.
            * package_version - patch_version_meta, delete_version, publish_new_revision.
            * package_management - create_package, delete_package, patch_package_meta.
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - package_members
                - package_security
                - new_version
                - package_version
                - package_management
        - name: textFilter
          in: query
          description: Filter by userName/packageName
          schema:
            type: string
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      type: object
                      required:
                        - date
                        - userName
                        - packageId
                        - packageName
                        - kind
                        - params
                      properties:
                        date:
                          description: Date when event was generated
                          type: string
                          format: date-time
                        principal:
                          $ref: "#/components/schemas/Principal"
                        packageId:
                          description: Package unique string identifier (full alias)
                          type: string
                        packageName:
                          description: Package name
                          type: string
                        kind:
                          description: Package kind
                          type: string
                          enum:
                            - workspace
                            - group
                            - package
                            - dashboard
                        eventType:
                          description: Activity event type
                          type: string
                          enum:
                            - generate_api_key
                            - revoke_api_key
                            - create_package
                            - delete_package
                            - grant_role
                            - delete_role
                            - update_role
                            - publish_new_version
                            - delete_version
                            - publish_new_revision
                            - patch_version_meta
                            - patch_package_meta
                        params:
                          type: object
                          description: Events specific params
                          oneOf:
                            - type: object
                              title: ParamsForGrantAndDeleteRole
                              description: params for grant_role and delete_role events
                              required:
                                - memberId
                                - memberName
                                - roles
                              properties:
                                memberId:
                                  description: Login of the member
                                  type: string
                                  example: user1221
                                memberName:
                                  description: User which was added/deleted to/from package with some role(s)
                                  type: string
                                  example: Name Surname
                                roles:
                                  type: array
                                  items:
                                    $ref: "#/components/schemas/Role"
                            - type: object
                              title: ParamsForUpdateRole
                              description: params for update_role event
                              required:
                                - memberId
                                - memberName
                              properties:
                                memberId:
                                  description: Login of the member
                                  type: string
                                  example: user1221
                                memberName:
                                  description: User which was added/deleted to/from package with some role(s)
                                  type: string
                                  example: Name Surname
                            - type: object
                              title: ParamsForPublishAndDeleteVersion
                              description: params for publish_new_version and delete_version events
                              required:
                                - version
                                - status
                              properties:
                                version:
                                  description: Package version name.
                                  type: string
                                  example: "22.3"
                                status:
                                  $ref: "#/components/schemas/VersionStatusEnum"
                            - type: object
                              title: ParamsForPublishNewRevision
                              description: params for publish_new_revision event
                              required:
                                - version
                                - revision
                                - status
                              properties:
                                version:
                                  description: Package version name.
                                  type: string
                                  example: "22.3"
                                revision:
                                  description: Number of the revision.
                                  type: integer
                                  format: int32
                                  example: 3
                                status:
                                  $ref: "#/components/schemas/VersionStatusEnum"
                            - type: object
                              title: ParamsForUpdateVersionMeta
                              description: params for patch_version_meta event
                              required:
                                - version
                                - versionMeta
                              properties:
                                version:
                                  description: Package version name.
                                  type: string
                                  example: "22.3"
                                versionMeta:
                                  description: List of parameters that was updated in version
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - status
                                      - label
                            - type: object
                              title: ParamsForPatchPackageMeta
                              description: params for patch_package_meta event
                              required:
                                - packageMeta
                              properties:
                                packageMeta:
                                  description: List of parameters that was updated in package
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - name
                                      - description
                                      - serviceName
                                      - imageUrl
                                      - defaultRole
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  /api/v4/activity:
    get:
      tags:
        - Packages
      summary: Get activity history
      description: |
        Get activity history. Return the last N events in descending date order.
      operationId: getActivityV4
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - name: onlyFavorite
          description: |
            * If true, then only events from packages that are favorites for the current user shall be returned (including all child groups/packages/dashboards for favorite groups/workspaces)
            * If false, events for all packages shall be returned.
          in: query
          schema:
            type: boolean
            default: false
        - name: onlyShared
          in: query
          description: filter only shared packages
          schema:
            type: boolean
            default: false
        - name: kind
          in: query
          description: |
            Filter by package kind.
            The list of values is acceptable. In this case, the following pattern will be used: ```?kind=group,package,dashboard```.
          schema:
            type: array
            items:
              type: string
              enum:
                - workspace
                - group
                - package
                - dashboard
            example: [ group, package, dashboard ]
        - name: types
          description: |
            Filter for events by group types:
            * package_members - grant_role, update_role, delete_role.
            * package_security - generate_api_key, revoke_api_key.
            * new_version - publish_new_version.
            * package_version - patch_version_meta, delete_version, publish_new_revision.
            * package_management - create_package, delete_package, patch_package_meta.
            * operations_group - create_manual_group, delete_manual_group, update_operations_group_parameters
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - package_members
                - package_security
                - new_version
                - package_version
                - package_management
                - operations_group
        - name: textFilter
          in: query
          description: Filter by userName/packageName
          schema:
            type: string
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      type: object
                      required:
                        - date
                        - userName
                        - packageId
                        - packageName
                        - kind
                        - params
                      properties:
                        date:
                          description: Date when event was generated
                          type: string
                          format: date-time
                        principal:
                          $ref: "#/components/schemas/Principal"
                        packageId:
                          description: Package unique string identifier (full alias)
                          type: string
                        packageName:
                          description: Package name
                          type: string
                        kind:
                          description: Package kind
                          type: string
                          enum:
                            - workspace
                            - group
                            - package
                            - dashboard
                        eventType:
                          description: Activity event type
                          type: string
                          enum:
                            - generate_api_key
                            - revoke_api_key
                            - create_package
                            - delete_package
                            - grant_role
                            - delete_role
                            - update_role
                            - publish_new_version
                            - delete_version
                            - publish_new_revision
                            - patch_version_meta
                            - patch_package_meta
                            - create_manual_group
                            - delete_manual_group
                            - update_operations_group_parameters
                        params:
                          type: object
                          description: Events specific params
                          oneOf:
                            - type: object
                              title: ParamsForGrantAndDeleteRole
                              description: params for grant_role and delete_role events
                              required:
                                - memberId
                                - memberName
                                - roles
                              properties:
                                memberId:
                                  description: Login of the member
                                  type: string
                                  example: user1221
                                memberName:
                                  description: User which was added/deleted to/from package with some role(s)
                                  type: string
                                  example: Name Surname
                                roles:
                                  type: array
                                  items:
                                    $ref: "#/components/schemas/Role"
                            - type: object
                              title: ParamsForUpdateRole
                              description: params for update_role event
                              required:
                                - memberId
                                - memberName
                              properties:
                                memberId:
                                  description: Login of the member
                                  type: string
                                  example: user1221
                                memberName:
                                  description: User which was added/deleted to/from package with some role(s)
                                  type: string
                                  example: Name Surname
                            - type: object
                              title: ParamsForPublishAndDeleteVersion
                              description: params for publish_new_version and delete_version events
                              required:
                                - version
                                - status
                              properties:
                                version:
                                  description: Package version name.
                                  type: string
                                  example: "22.3"
                                status:
                                  $ref: "#/components/schemas/VersionStatusEnum"
                            - type: object
                              title: ParamsForPublishNewRevision
                              description: params for publish_new_revision event
                              required:
                                - version
                                - revision
                                - status
                              properties:
                                version:
                                  description: Package version name.
                                  type: string
                                  example: "22.3"
                                revision:
                                  description: Number of the revision.
                                  type: integer
                                  format: int32
                                  example: 3
                                status:
                                  $ref: "#/components/schemas/VersionStatusEnum"
                            - type: object
                              title: ParamsForUpdateVersionMeta
                              description: params for patch_version_meta event
                              required:
                                - version
                                - versionMeta
                              properties:
                                version:
                                  description: Package version name.
                                  type: string
                                  example: "22.3"
                                versionMeta:
                                  description: List of parameters that was updated in version
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - status
                                      - label
                            - type: object
                              title: ParamsForPatchPackageMeta
                              description: params for patch_package_meta event
                              required:
                                - packageMeta
                              properties:
                                packageMeta:
                                  description: List of parameters that was updated in package
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - name
                                      - description
                                      - serviceName
                                      - imageUrl
                                      - defaultRole
                            - type: object
                              title: ParamsForPostDeleteManualGroups
                              description: |
                                params for the following events:
                                * create_manual_group
                                * deleted_manual_group
                              required:
                                - version
                                - groupName
                                - apiType
                              properties:
                                version:
                                  description: Package version name. The <version>@<revision> mask is used to return the revision number.
                                  type: string
                                  example: "22.3@2"
                                notLatestRevision:
                                  type: boolean
                                  default: false
                                  description: If parameter is not returned, then it is latest revision.
                                groupName:
                                  description: Manual group name
                                  type: string
                                apiType:
                                  type: string
                                  enum:
                                    - rest
                                    - graphql
                            - type: object
                              title: ParamsForPatchOperationsGroup
                              description: |
                                params for the update_operations_group_parameters event
                              required:
                                - version
                                - groupName
                                - groupsParams
                                - isPrefixGroup
                                - apiType
                              properties:
                                version:
                                  description: Package version name. The <version>@<revision> mask is used to return the revision number.
                                  type: string
                                  example: "22.3@2"
                                apiType:
                                  type: string
                                  enum:
                                    - rest
                                    - graphql
                                notLatestRevision:
                                  description: If parameter is not returned, then it is latest revision.
                                  type: boolean
                                  default: false
                                groupName:
                                  description: Manual group name
                                  type: string
                                groupsParams:
                                  description: List of parameters that was updated in group
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - name
                                      - description
                                      - template
                                      - operations
                                isPrefixGroup:
                                  type: boolean
                                  description: true - if the group created automatically via restGroupingPrefix.
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages":
    post:
      tags:
        - Packages
        - Admin
      summary: Create a new package
      description: Create a new package in APIHUB registry.
      operationId: postPackages
      requestBody:
        description: Package for creation
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PackageCreate"
            examples: {}
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Package"
                  - type: object
                    properties:
                      parents:
                        description: List of all parent packages
                        type: array
                        items:
                          $ref: "#/components/schemas/PackageList"
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
    get:
      tags:
        - Packages
      summary: Get packages list
      description: Retrieve the packages list.
      operationId: getPackages
      parameters:
        - name: parentId
          in: query
          description: Filter by the parent package Id.
          schema:
            type: string
            example: QS.CQSS.CPQ
        - name: kind
          in: query
          description: |
            Filter the packages by kind.

            The list of values is acceptable. In this case, the following pattern will be used: ```?kind=group,package,dashboard```.

            If not transmitted, the default value will be used.
          schema:
            type: array
            items:
              type: string
              enum:
                - workspace
                - group
                - package
                - dashboard
            default: [workspace]
            example: [group, package, dashboard]
        - name: showAllDescendants
          in: query
          description: |
            Show all the descendants to the parent workspace or group.

            * If ```true```, return the list of all child groups/packages/dashboards to the parentId (take into account all other filter parameters).
            * If the parentId is not transmitted???
            * If the parent is transmitted, but kind not - and parentId = package???
          schema:
            type: boolean
            default: false
        - name: textFilter
          in: query
          description: filter by name/alias/label.
          schema:
            type: string
        - name: onlyFavorite
          in: query
          description: filter only favorite packages
          schema:
            type: boolean
            default: false
        - name: onlyShared
          in: query
          description: filter only shared packages
          schema:
            type: boolean
            default: false
        - name: lastReleaseVersionDetails
          in: query
          description: |
            Show/hide the detailed info about the last release version and it's changes, comparing with the previous one.
          schema:
            type: boolean
            default: false
        - name: serviceName
          description: Service name that package belongs to. Should be equal to service deployment name in kubernetes.
          in: query
          schema:
            type: string
            example: "quote-tmf-service"
        - $ref: "#/components/parameters/showParents"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: Whole packages list with paging.
                type: object
                properties:
                  packages:
                    type: array
                    title: Detailed package
                    items:
                      required:
                        - packageId
                        - alias
                        - name
                      allOf:
                        - $ref: "#/components/schemas/Package"
                        - type: object
                          properties:
                            parents:
                              description: List of all parent packages
                              type: array
                              items:
                                $ref: "#/components/schemas/PackageList"
                            lastReleaseVersionDetails:
                              type: object
                              description: |
                                Details about the last release version and it's changes with previous version.
                                * Returns only if the lastReleaseVersionDetails:true and the lastReleaseVersion is explicitly filled in on a package.
                                * Otherwise - will be omitted in the answer.
                              properties:
                                version:
                                  description: |
                                    Last release version specified on the package.The <version>@<revision> mask is used to return the revision number.
                                  type: string
                                  example: "2022.4@2"
                                notLatestRevision:
                                  type: boolean
                                  default: false
                                summary:
                                  $ref: "#/components/schemas/ChangeSummary"
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}":
    parameters:
      - $ref: "#/components/parameters/packageId"
    get:
      tags:
        - Packages
      summary: Get package by Id
      description: Common information about the selected package without files and references.
      operationId: getPackagesId
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - $ref: "#/components/parameters/showParents"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Package"
                  - type: object
                    properties:
                      parents:
                        description: List of all parent packages
                        type: array
                        items:
                          allOf:
                            - $ref: "#/components/schemas/PackageList"
                            - type: object
                              properties:
                                hasReadPermission:
                                  type: boolean
                                  description: true - if current user has read permission fot this package
                      defaultReleaseVersion:
                        description: |
                          Default release version for the package.
                          Only `release` version may be placed as default. Return the error otherwise.
                          The <version>@<revision> mask is used to return the revision number.
                        type: string
                        example: "2023.1@5"
                      defaultVersion:
                        description: |
                          Default release version for the package.
                          It is calculable by the algorithm:
                          * If defaultReleaseVersion is filled in on the package explicitly, return it.
                          * If not - return the last published version (by name) with "release" status.
                          * If there were no published release versions, return the last published "draft" version (by date).
                          * Otherwise - return "".
                          The <version>@<revision> mask is used to return the revision number.
                        type: string
                        example: "2023.1@5"
              examples:
                Package:
                  $ref: "#/components/examples/Package"
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
    patch:
      tags:
        - Packages
        - Admin
      summary: Change the package's parameters
      description: |
        Change the package's parameters.
        * If the parameter is not transmitted in request - its value stays unchanged.
        * The empty parameter value in request sets the empty value in database.
      operationId: patchPackagesId
      security:
        - BearerAuth: []
        - api-key: []
      requestBody:
        description: Package update parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PackageUpdate"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Package"
                  - type: object
                    properties:
                      parents:
                        description: List of all parent packages
                        type: array
                        items:
                          $ref: "#/components/schemas/PackageList"
                      defaultReleaseVersion:
                        description: |
                          Default release version for the package.
                          Only `release` version may be placed as default. Return the error otherwise.
                        type: string
                        example: "2023.1"
              examples: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
    delete:
      tags:
        - Packages
        - Admin
      summary: Delete package
      description: Delete the package and all included published versions.
      operationId: deletePackagesId
      security:
        - BearerAuth: []
        - api-key: []
      responses:
        "204":
          description: No content
          content: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  /api/v2/packages/{packageId}/activity:
    get:
      tags:
        - Packages
      deprecated: true
      x-deprecation-reason: New API version is created - GET /api/v3/packages/{packageId}/activity
      summary: Get activity history for the package
      description: |
        Get activity history for specific package. Return the last N events in descending date order.
      operationId: getPackageIdActivity
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - name: packageId
          description: Package unique string identifier (full alias).
          in: path
          required: true
          schema:
            type: string
        - name: types
          description: |
            Filter for events by group types:
            * package_members - grant_role, update_role, delete_role.
            * package_security - generate_api_key, revoke_api_key.
            * new_version - publish_new_version.
            * package_version - patch_version_meta, delete_version, publish_new_revision.
            * package_management - create_package, delete_package, patch_package_meta.
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - package_members
                - package_security
                - new_version
                - package_version
                - package_management
        - name: includeRefs
          in: query
          description: If true, then events for specified package and all its referenced packages (on any level of hierarchy) shall be returned
          schema:
            type: boolean
            default: false
        - name: textFilter
          in: query
          description: Filter by userName/packageName
          schema:
            type: string
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      type: object
                      required:
                        - date
                        - userName
                        - userId
                        - packageId
                        - packageName
                        - kind
                        - params
                      properties:
                        date:
                          description: Date when event was generated
                          type: string
                          format: date-time
                        userName:
                          description: Name of the user who generated an event
                          type: string
                          example: "Name Surname"
                        userId:
                          description: Login of the user who generated an event
                          type: string
                          example: user1221
                        packageId:
                          description: Package unique string identifier (full alias)
                          type: string
                        packageName:
                          description: Package name
                          type: string
                        kind:
                          description: Package kind
                          type: string
                          enum:
                            - workspace
                            - group
                            - package
                            - dashboard
                        eventType:
                          description: Activity event type
                          type: string
                          enum:
                            - generate_api_key
                            - revoke_api_key
                            - create_package
                            - delete_package
                            - grant_role
                            - delete_role
                            - update_role
                            - publish_new_version
                            - delete_version
                            - publish_new_revision
                            - patch_version_meta
                            - patch_package_meta
                        params:
                          type: object
                          description: Events specific params
                          oneOf:
                            - type: object
                              title: ParamsForGrantAndDeleteRole
                              description: params for grant_role and delete_role events
                              required:
                                - memberId
                                - memberName
                                - roles
                              properties:
                                memberId:
                                  description: Login of the member
                                  type: string
                                  example: user1221
                                memberName:
                                  description: User which was added/deleted to/from package with some role(s)
                                  type: string
                                  example: Name Surname
                                roles:
                                  type: array
                                  items:
                                    $ref: "#/components/schemas/Role"
                            - type: object
                              title: ParamsForUpdateRole
                              description: params for update_role event
                              required:
                                - memberId
                                - memberName
                              properties:
                                memberId:
                                  description: Login of the member
                                  type: string
                                  example: user1221
                                memberName:
                                  description: User which was added/deleted to/from package with some role(s)
                                  type: string
                                  example: Name Surname
                            - type: object
                              title: ParamsForPublishAndDeleteVersion
                              description: params for publish_new_version and delete_version events
                              required:
                                - version
                                - status
                              properties:
                                version:
                                  description: Package version name.The <version>@<revision> mask is used to return the revision number.
                                  type: string
                                  example: "22.3@1"
                                notLatestRevision:
                                  type: boolean
                                  default: false
                                status:
                                  $ref: "#/components/schemas/VersionStatusEnum"
                            - type: object
                              title: ParamsForPublishNewRevision
                              description: params for publish_new_revision event
                              required:
                                - version
                                - status
                              properties:
                                version:
                                  description: Package version name.The <version>@<revision> mask is used to return the revision number.
                                  type: string
                                  example: "22.3@2"
                                notLatestRevision:
                                  type: boolean
                                  default: false
                                status:
                                  $ref: "#/components/schemas/VersionStatusEnum"
                            - type: object
                              title: ParamsForUpdateVersionMeta
                              description: params for patch_version_meta event
                              required:
                                - version
                                - versionMeta
                              properties:
                                version:
                                  description: Package version name.The <version>@<revision> mask is used to return the revision number.
                                  type: string
                                  example: "22.3@2"
                                notLatestRevision:
                                  type: boolean
                                  default: false
                                versionMeta:
                                  description: List of parameters that was updated in version
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - status
                                      - label
                            - type: object
                              title: ParamsForPatchPackageMeta
                              description: params for patch_package_meta event
                              required:
                                - packageMeta
                              properties:
                                packageMeta:
                                  description: List of parameters that was updated in package
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - name
                                      - description
                                      - serviceName
                                      - imageUrl
                                      - defaultRole
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  /api/v3/packages/{packageId}/activity:
    get:
      deprecated: true
      x-deprecation-reason: New version of API is created - GET /api/v4/packages/{packageId}/activity
      tags:
        - Packages
      summary: Get activity history for the package
      description: |
        Get activity history for specific package. Return the last N events in descending date order.
      operationId: getPackageIdActivityV3
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - name: packageId
          description: Package unique string identifier (full alias).
          in: path
          required: true
          schema:
            type: string
        - name: types
          description: |
            Filter for events by group types:
            * package_members - grant_role, update_role, delete_role.
            * package_security - generate_api_key, revoke_api_key.
            * new_version - publish_new_version.
            * package_version - patch_version_meta, delete_version, publish_new_revision.
            * package_management - create_package, delete_package, patch_package_meta.
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - package_members
                - package_security
                - new_version
                - package_version
                - package_management
        - name: includeRefs
          in: query
          description: If true, then events for specified package and all its referenced packages (on any level of hierarchy) shall be returned
          schema:
            type: boolean
            default: false
        - name: textFilter
          in: query
          description: Filter by userName/packageName
          schema:
            type: string
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      type: object
                      required:
                        - date
                        - userName
                        - packageId
                        - packageName
                        - kind
                        - params
                      properties:
                        date:
                          description: Date when event was generated
                          type: string
                          format: date-time
                        userName:
                          $ref: "#/components/schemas/Principal"
                        packageId:
                          description: Package unique string identifier (full alias)
                          type: string
                        packageName:
                          description: Package name
                          type: string
                        kind:
                          description: Package kind
                          type: string
                          enum:
                            - workspace
                            - group
                            - package
                            - dashboard
                        eventType:
                          description: Activity event type
                          type: string
                          enum:
                            - generate_api_key
                            - revoke_api_key
                            - create_package
                            - delete_package
                            - grant_role
                            - delete_role
                            - update_role
                            - publish_new_version
                            - delete_version
                            - publish_new_revision
                            - patch_version_meta
                            - patch_package_meta
                        params:
                          type: object
                          description: Events specific params
                          oneOf:
                            - type: object
                              title: ParamsForGrantAndDeleteRole
                              description: params for grant_role and delete_role events
                              required:
                                - memberId
                                - memberName
                                - roles
                              properties:
                                memberId:
                                  description: Login of the member
                                  type: string
                                  example: user1221
                                memberName:
                                  description: User which was added/deleted to/from package with some role(s)
                                  type: string
                                  example: Name Surname
                                roles:
                                  type: array
                                  items:
                                    $ref: "#/components/schemas/Role"
                            - type: object
                              title: ParamsForUpdateRole
                              description: params for update_role event
                              required:
                                - memberId
                                - memberName
                              properties:
                                memberId:
                                  description: Login of the member
                                  type: string
                                  example: user1221
                                memberName:
                                  description: User which was added/deleted to/from package with some role(s)
                                  type: string
                                  example: Name Surname
                            - type: object
                              title: ParamsForPublishAndDeleteVersion
                              description: params for publish_new_version and delete_version events
                              required:
                                - version
                                - status
                              properties:
                                version:
                                  description: Package version name.The <version>@<revision> mask is used to return the revision number.
                                  type: string
                                  example: "22.3@1"
                                notLatestRevision:
                                  type: boolean
                                  default: false
                                status:
                                  $ref: "#/components/schemas/VersionStatusEnum"
                            - type: object
                              title: ParamsForPublishNewRevision
                              description: params for publish_new_revision event
                              required:
                                - version
                                - status
                              properties:
                                version:
                                  description: Package version name.The <version>@<revision> mask is used to return the revision number.
                                  type: string
                                  example: "22.3@2"
                                notLatestRevision:
                                  type: boolean
                                  default: false
                                status:
                                  $ref: "#/components/schemas/VersionStatusEnum"
                            - type: object
                              title: ParamsForUpdateVersionMeta
                              description: params for patch_version_meta event
                              required:
                                - version
                                - versionMeta
                              properties:
                                version:
                                  description: Package version name.The <version>@<revision> mask is used to return the revision number.
                                  type: string
                                  example: "22.3@2"
                                notLatestRevision:
                                  type: boolean
                                  default: false
                                versionMeta:
                                  description: List of parameters that was updated in version
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - status
                                      - label
                            - type: object
                              title: ParamsForPatchPackageMeta
                              description: params for patch_package_meta event
                              required:
                                - packageMeta
                              properties:
                                packageMeta:
                                  description: List of parameters that was updated in package
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - name
                                      - description
                                      - serviceName
                                      - imageUrl
                                      - defaultRole
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  /api/v4/packages/{packageId}/activity:
    get:
      tags:
        - Packages
      summary: Get activity history for the package
      description: |
        Get activity history for specific package. Return the last N events in descending date order.
      operationId: getPackageIdActivityV4
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - name: packageId
          description: Package unique string identifier (full alias).
          in: path
          required: true
          schema:
            type: string
        - name: types
          description: |
            Filter for events by group types:
            * package_members - grant_role, update_role, delete_role.
            * package_security - generate_api_key, revoke_api_key.
            * new_version - publish_new_version.
            * package_version - patch_version_meta, delete_version, publish_new_revision.
            * package_management - create_package, delete_package, patch_package_meta.
            * operations_group - create_manual_group, delete_manual_group, 
            update_operations_group_parameters
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - package_members
                - package_security
                - new_version
                - package_version
                - package_management
                - operations_group
        - name: includeRefs
          in: query
          description: If true, then events for specified package and all its referenced packages (on any level of hierarchy) shall be returned
          schema:
            type: boolean
            default: false
        - name: textFilter
          in: query
          description: Filter by userName/packageName
          schema:
            type: string
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      type: object
                      required:
                        - date
                        - userName
                        - packageId
                        - packageName
                        - kind
                        - params
                      properties:
                        date:
                          description: Date when event was generated
                          type: string
                          format: date-time
                        userName:
                          $ref: "#/components/schemas/Principal"
                        packageId:
                          description: Package unique string identifier (full alias)
                          type: string
                        packageName:
                          description: Package name
                          type: string
                        kind:
                          description: Package kind
                          type: string
                          enum:
                            - workspace
                            - group
                            - package
                            - dashboard
                        eventType:
                          description: Activity event type
                          type: string
                          enum:
                            - generate_api_key
                            - revoke_api_key
                            - create_package
                            - delete_package
                            - grant_role
                            - delete_role
                            - update_role
                            - publish_new_version
                            - delete_version
                            - publish_new_revision
                            - patch_version_meta
                            - patch_package_meta
                            - create_manual_group
                            - delete_manual_group
                            - update_operations_group_parameters
                        params:
                          type: object
                          description: Events specific params
                          oneOf:
                            - type: object
                              title: ParamsForGrantAndDeleteRole
                              description: params for grant_role and delete_role events
                              required:
                                - memberId
                                - memberName
                                - roles
                              properties:
                                memberId:
                                  description: Login of the member
                                  type: string
                                  example: user1221
                                memberName:
                                  description: User which was added/deleted to/from package with some role(s)
                                  type: string
                                  example: Name Surname
                                roles:
                                  type: array
                                  items:
                                    $ref: "#/components/schemas/Role"
                            - type: object
                              title: ParamsForUpdateRole
                              description: params for update_role event
                              required:
                                - memberId
                                - memberName
                              properties:
                                memberId:
                                  description: Login of the member
                                  type: string
                                  example: user1221
                                memberName:
                                  description: User which was added/deleted to/from package with some role(s)
                                  type: string
                                  example: Name Surname
                            - type: object
                              title: ParamsForPublishAndDeleteVersion
                              description: params for publish_new_version and delete_version events
                              required:
                                - version
                                - status
                              properties:
                                version:
                                  description: Package version name. The <version>@<revision> mask is used to return the revision number.
                                  type: string
                                  example: "22.3@1"
                                notLatestRevision:
                                  type: boolean
                                  default: false
                                status:
                                  $ref: "#/components/schemas/VersionStatusEnum"
                            - type: object
                              title: ParamsForPublishNewRevision
                              description: params for publish_new_revision event
                              required:
                                - version
                                - status
                              properties:
                                version:
                                  description: Package version name. The <version>@<revision> mask is used to return the revision number.
                                  type: string
                                  example: "22.3@2"
                                notLatestRevision:
                                  type: boolean
                                  default: false
                                status:
                                  $ref: "#/components/schemas/VersionStatusEnum"
                            - type: object
                              title: ParamsForUpdateVersionMeta
                              description: params for patch_version_meta event
                              required:
                                - version
                                - versionMeta
                              properties:
                                version:
                                  description: Package version name. The <version>@<revision> mask is used to return the revision number.
                                  type: string
                                  example: "22.3@2"
                                notLatestRevision:
                                  type: boolean
                                  default: false
                                versionMeta:
                                  description: List of parameters that was updated in version
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - status
                                      - label
                            - type: object
                              title: ParamsForPatchPackageMeta
                              description: params for patch_package_meta event
                              required:
                                - packageMeta
                              properties:
                                packageMeta:
                                  description: List of parameters that was updated in package
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - name
                                      - description
                                      - serviceName
                                      - imageUrl
                                      - defaultRole
                            - type: object
                              title: ParamsForPostDeleteManualGroups
                              description: |
                                params for the following events:
                                * create_manual_group
                                * deleted_manual_group
                              required:
                                - version
                                - groupName
                                - apiType
                              properties:
                                version:
                                  description: Package version name. The <version>@<revision> mask is used to return the revision number.
                                  type: string
                                  example: "22.3@2"
                                notLatestRevision:
                                  type: boolean
                                  default: false
                                  description: If parameter is not returned, then it is latest revision.
                                groupName:
                                  description: Manual group name
                                  type: string
                                apiType:
                                  type: string
                                  enum:
                                    - rest
                                    - graphql
                            - type: object
                              title: ParamsForPatchOperationsGroup
                              description: |
                                params for the update_operations_group_parameters event
                              required:
                                - version
                                - groupName
                                - groupsParams
                                - isPrefixGroup
                                - apiType
                              properties:
                                version:
                                  description: Package version name. The <version>@<revision> mask is used to return the revision number.
                                  type: string
                                  example: "22.3@2"
                                notLatestRevision:
                                  description: If parameter is not returned, then it is latest revision.
                                  type: boolean
                                  default: false
                                groupName:
                                  description: Manual group name
                                  type: string
                                groupsParams:
                                  description: List of parameters that was updated in group
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - name
                                      - description
                                      - template
                                      - operations
                                isPrefixGroup:
                                  type: boolean
                                  description: true - if the group created automatically via restGroupingPrefix.
                                apiType:
                                  type: string
                                  enum:
                                    - rest
                                    - graphql
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/status":
    parameters:
      - $ref: "#/components/parameters/packageId"
    get:
      x-api-audience: noBWC
      tags:
        - Packages
        - Admin
      summary: Get package status
      description: Get package status.
      operationId: getPackagesIdStatus
      security:
        - BearerAuth: []
        - api-key: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PackageStatus"
              examples: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/apiKeys":
    parameters:
      - $ref: "#/components/parameters/packageId"
    post:
      deprecated: true
      tags:
        - Admin
      summary: Create a package API Key
      description: |
        Create a package API Key.
        The Api Key for package with kind:group is acceptable for all child groups and packages.
      operationId: postPackagesIdApiKeys
      security:
        - BearerAuth: []
      requestBody:
        description: Create API key parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: API key name
                roles:
                  description: List of roles for api key. Limited by user's available roles, i.e. only available roles could be set. List of available roles could be retrieved via "/packages/{packageId}/availableRoles" endpoint.
                  type: array
                  items:
                    type: string
              required:
                - name
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: ApiKey details for the package
                    title: PackageApiKey
                    properties:
                      id:
                        description: ApiKey unique identifier
                        type: string
                      packageId:
                        description: Internal unique package ID (full alias)
                        type: string
                      name:
                        description: ApiKey name
                        type: string
                      createdBy:
                        type: string
                      createdAt:
                        description: Date and time of ApiKey creation
                        type: string
                        format: datetime
                      roles:
                        description: List of roles.
                        type: array
                        items:
                          type: string
                  - type: object
                    properties:
                      apiKey:
                        description: |
                          Generated ApiKey. It shows only once. Need to copy to your credentials storage.
                        type: string
              examples: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
    get:
      deprecated: true
      tags:
        - Admin
      summary: Package API Keys list retrieve
      description: |
        Get a package API Keys list.
      operationId: getPackagesIdApiKeys
      security:
        - BearerAuth: []
        - api-key: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  apiKeys:
                    description: List of apikeys for package.
                    type: array
                    items:
                      type: object
                      description: ApiKey details for the package
                      title: PackageApiKey
                      properties:
                        id:
                          description: ApiKey unique identifier
                          type: string
                        packageId:
                          description: Internal unique package ID (full alias)
                          type: string
                        name:
                          description: ApiKey name
                          type: string
                        createdBy:
                          type: string
                        createdAt:
                          description: Date and time of ApiKey creation
                          type: string
                          format: datetime
                        roles:
                          description: List of roles.
                          type: array
                          items:
                            type: string
              examples: {}
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v3/packages/{packageId}/apiKeys":
    parameters:
      - $ref: "#/components/parameters/packageId"
    post:
      tags:
        - Admin
      deprecated: true
      x-deprecation-reason: New version of API is created - POST /api/v4/packages/{packageId}/apiKeys.
      summary: Create a package API Key
      description: |
        Create a package API Key.
        The Api Key for package with kind:group is acceptable for all child groups and packages.\
        If packageId = '\*', then system tokens shall be created. Only system administrator can specify packageId = '\*'.
      operationId: postPackagesIdApiKeysV3
      security:
        - BearerAuth: []
      requestBody:
        description: Create API key parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: API key name
                roles:
                  description: List of roles for api key. Limited by user's available roles, i.e. only available roles could be set. List of available roles could be retrieved via "/packages/{packageId}/availableRoles" endpoint.
                  type: array
                  items:
                    type: string
              required:
                - name
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    description: ApiKey details for the package
                    title: PackageApiKey
                    properties:
                      id:
                        description: ApiKey unique identifier
                        type: string
                      packageId:
                        description: Internal unique package ID (full alias)
                        type: string
                      name:
                        description: ApiKey name
                        type: string
                      createdBy:
                        $ref: "#/components/schemas/User"
                      createdAt:
                        description: Date and time of ApiKey creation
                        type: string
                        format: datetime
                      roles:
                        description: List of roles.
                        type: array
                        items:
                          type: string
                  - type: object
                    properties:
                      apiKey:
                        description: |
                          Generated ApiKey. It shows only once. Need to copy to your credentials storage.
                        type: string
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
    get:
      tags:
        - Admin
      deprecated: true
      x-deprecation-reason: New version of API is created - GET /api/v4/packages/{packageId}/apiKeys.
      summary: Package API Keys list retrieve
      description: |
        Get a package API Keys list.\
        If packageId = '\*', then system tokens shall be returned. Only system administrator can specify packageId = '\*'.
      operationId: getPackagesIdApiKeysV3
      security:
        - BearerAuth: []
        - api-key: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  apiKeys:
                    description: List of apikeys for package.
                    type: array
                    items:
                      type: object
                      description: ApiKey details for the package
                      title: PackageApiKey
                      properties:
                        id:
                          description: ApiKey unique identifier
                          type: string
                        packageId:
                          description: Internal unique package ID (full alias)
                          type: string
                        name:
                          description: ApiKey name
                          type: string
                        createdBy:
                          $ref: "#/components/schemas/User"
                        createdAt:
                          description: Date and time of ApiKey creation
                          type: string
                          format: datetime
                        roles:
                          description: List of roles.
                          type: array
                          items:
                            type: string
              examples: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v4/packages/{packageId}/apiKeys":
    parameters:
      - $ref: "#/components/parameters/packageId"
    post:
      tags:
        - Admin
      summary: Create a package API Key
      description: |
        Create a package API Key.
        The Api Key for package with kind:group is acceptable for all child groups and packages.\
        If packageId = '\*', then system tokens shall be created. Only system administrator can specify packageId = '\*'.
      operationId: postPackagesIdApiKeysV4
      security:
        - BearerAuth: []
      requestBody:
        description: Create API key parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: API key name. Name must be unique.
                roles:
                  description: List of roles for api key. Limited by user's available roles, i.e. only available roles could be set. List of available roles could be retrieved via "/packages/{packageId}/availableRoles" endpoint.
                  type: array
                  items:
                    type: string
                createdFor:
                  type: string
                  description: id of the user for whom the API key shall be created.
                  example: user1221
              required:
                - name
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PackageApiKey"
                  - type: object
                    properties:
                      apiKey:
                        description: |
                          Generated ApiKey. It shows only once. Need to copy to your credentials storage.
                        type: string
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
    get:
      tags:
        - Admin
      summary: Package API Keys list retrieve
      description: |
        Get a package API Keys list.\
        If packageId = '\*', then system tokens shall be returned. Only system administrator can specify packageId = '\*'.
      operationId: getPackagesIdApiKeysV4
      security:
        - BearerAuth: []
        - api-key: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  apiKeys:
                    description: List of apikeys for package.
                    type: array
                    items:
                      $ref: "#/components/schemas/PackageApiKey"
              examples: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/apiKeys/{id}":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - name: id
        description: Package API key Id
        in: path
        required: true
        schema:
          type: string
    delete:
      tags:
        - Admin
      summary: Delete package API Key
      description: |
        Delete package API Key.\
        If packageId = '\*', then system token with specified id shall be deleted. Only system administrator can specify packageId = '\*'.
      operationId: deletePackagesIdApiKeysId
      security:
        - BearerAuth: []
        - api-key: []
      responses:
        "204":
          description: No content
          content: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/favor":
    parameters:
      - $ref: "#/components/parameters/packageId"
    post:
      tags:
        - Packages
        - Users
      summary: Favor package
      description: Add the package to favorite list for the user. The user is taken from the token info.
      operationId: postPackagesIdFavor
      responses:
        "204":
          description: No content
          content: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/disfavor":
    parameters:
      - $ref: "#/components/parameters/packageId"
    post:
      tags:
        - Packages
        - Users
      summary: Disfavor package
      description: Remove the package from favorite list for the user. The user is taken from the token info.
      operationId: postPackagesIdDisfavor
      responses:
        "204":
          description: No content
          content: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/publish":
    parameters:
      - $ref: "#/components/parameters/packageId"
    post:
      tags:
        - Publish
        - Admin
      summary: Publish package version via upload
      description: |
        Publish package version via upload. Possible options:
        * **Client-side building** - client application marks, that the validation and build of the final specification will be outside the APIHUB backend. 
        The final specifications will be stored using the POST /packages/{packageId}/publish/{publishId}/status API.
        The 202 response and the publish process Id will be returned in success.
        In case of the client session close, the build will be continued on the server-sde.
        * **Server-side building** - client application send all raw files-sources and starts the validation and build of the final specification in APIHUB backend.
        The 202 response and the publish process Id will be returned in success.
        * **No building** - only references publication. Files array in config and sources are empty. In this case the build process won't be started.
        The 204 response will be returned in success.
      operationId: postPackagesIdPublish
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - name: clientBuild
          in: query
          description: Client-side package build will be used. Should be used only for browser-based build process.
          required: false
          schema:
            type: boolean
            default: false
        - name: resolveRefs
          in: query
          required: false
          description: With resolveRefs=true all references will be resolved into a flat list. With resolveRefs=false it's expected that all references are already resolved.
          schema:
            type: boolean
            default: true
        - name: resolveConflicts
          in: query
          required: false
          description: "In case when resolved refs list contains multiple versions of the same package:
            
            - if resolveConflicts=false - status 400 (Bad request). Conflicts should be resolved manually.
            
            - if resolveConflicts=true - conflicts will be resolved automatically, some refs will be marked as excluded"
          schema:
            type: boolean
            default: true
      requestBody:
        description: Publish params
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - config
              properties:
                sources:
                  type: string
                  description: |
                    Files for publish in one zip archive.
                    **Required**, if the files array is filled in the config.
                  format: binary
                config:
                  $ref: "#/components/schemas/BuildConfig"
                builderId:
                  type: string
                  description: Builder identifier. **Required** only if clientBuild=true. Used to bind the build to specific executor.
      responses:
        "202":
          description: Publish process started
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: serverBuild
                    properties:
                      publishId:
                        type: string
                        description: Publish process Id
                        format: uuid
                        example: 9c8e9045-dd9c-4946-b9e4-e05e3f41c4cc
                  - type: object
                    title: clientBuild
                    description: Returns final build config when clientBuild=true
                    properties:
                      publishId:
                        type: string
                        description: Publish process Id
                        format: uuid
                        example: 9c8e9045-dd9c-4946-b9e4-e05e3f41c4cc
                      config:
                        $ref: "#/components/schemas/BuildConfig"
        "204":
          description: No content
          content: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden. Editor or admin rights for the package are required to publish version.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/publish/{publishId}/status":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - name: publishId
        description: Publish Id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          example: 9c8e9045-dd9c-4946-b9e4-e05e3f41c4cc
    post:
      deprecated: true
      x-deprecation-reason: New version of API is created - POST /api/v3/packages/{packageId}/publish/{publishId}/status
      x-api-audience: noBWC
      tags:
        - Publish
        - Admin
      summary: Store publish status
      description: Store publish status and result.
      operationId: postPackagesIdPublishIdStatus
      security:
        - BearerAuth: []
        - api-key: []
      requestBody:
        description: |
          Store build result, depending on the process status.
          * **running** - build in progress, data object is not transmitted.
          * **error** - build process will send a the list of errors.
          * **complete** - build process will send a result in a ZIP archive.
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - status
                - builderId
              properties:
                data:
                  oneOf:
                    - $ref: "#/components/schemas/BuildResultV2"
                    - $ref: "#/components/schemas/BuildErrors"
                status:
                  description: Build process result status.
                  type: string
                  enum:
                    - running
                    - error
                    - complete
                builderId:
                  description: Builder identifier.
                  type: string
      responses:
        "204":
          description: No content
          content: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
    get:
      tags:
        - Publish
        - Admin
      summary: Get publish process status
      description: Get publish process status.
      operationId: getPackagesIdPublishIdStatus
      security:
        - BearerAuth: []
        - api-key: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    description: Publish process status.
                    type: string
                    enum:
                      - running
                      - error
                      - complete
                      - none
                  message:
                    description: The message for **error** status.
                    type: string
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v3/packages/{packageId}/publish/{publishId}/status":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - name: publishId
        description: Publish Id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          example: 9c8e9045-dd9c-4946-b9e4-e05e3f41c4cc
    post:
      x-api-audience: noBWC
      tags:
        - Publish
        - Admin
      summary: Store publish status
      description: Store publish status and result.
      operationId: postPackagesIdPublishIdStatusV3
      security:
        - BearerAuth: []
        - api-key: []
      requestBody:
        description: |
          Store build result, depending on the process status.
          * **running** - build in progress, data object is not transmitted.
          * **error** - build process will send a the list of errors.
          * **complete** - build process will send a result in a ZIP archive.
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - status
                - builderId
              properties:
                data:
                  oneOf:
                    - $ref: "#/components/schemas/BuildResult"
                    - $ref: "#/components/schemas/BuildErrors"
                status:
                  description: Build process result status.
                  type: string
                  enum:
                    - running
                    - error
                    - complete
                builderId:
                  description: Builder identifier.
                  type: string
      responses:
        "204":
          description: No content
          content: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions":
    parameters:
      - $ref: "#/components/parameters/packageId"
    get:
      tags:
        - Versions
      deprecated: true
      x-deprecation-reason: New verions of API is created - GET /api/v3/packages/{packageId}/versions
      summary: Get package versions list
      description: Get the published package's versions list.
      operationId: getPackagesIdVersions
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
        - name: textFilter
          in: query
          description: Filter by version name|labels.
          schema:
            type: string
        - name: status
          in: query
          description: Filter versions by status (start with match)
          required: false
          schema:
            type: string
            enum:
              - draft
              - release
              - archived
        - name: checkRevisions
          in: query
          description: |
            Flag, if to search in the previous versions revisions. 
            * if several revisions were found, return only the maximum found value.
            * if false - return the last published revision.
          schema:
            type: boolean
            default: false
        - name: versionLabel
          in: query
          description: |
            Filter the package versions by label, exact match.
            * if the checkRevisions: false - search in the last published revision.
            * if the checkRevisions: true - search in all revisions (backward order).
          schema:
            type: string
            example: "app.kubernetes.io/version:release-2022.4-20230228.094427-171"
        - name: sortBy
          in: query
          description: Sort versions by version name or creation date
          schema:
            type: string
            enum:
              - version
              - createdAt
            default: version
        - name: sortOrder
          in: query
          description: Sorting order
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: Whole package versions list with paging.
                type: object
                properties:
                  versions:
                    type: array
                    items:
                      description: Base parameters of published version (without content)
                      type: object
                      title: PackageVersion
                      required:
                        - version
                        - status
                        - createdAt
                        - createdBy
                      properties:
                        version:
                          description: Package version name.The <version>@<revision> mask is used to return the revision number.
                          type: string
                          example: "2022.3@5"
                        status:
                          $ref: "#/components/schemas/VersionStatusEnum"
                        createdBy:
                          type: string
                          description: User, who created a package.
                          format: datetime
                        createdAt:
                          type: string
                          description: Date of package creation.
                          format: datetime
                        versionLabels:
                          description: List of version labels.
                          type: array
                          items:
                            type: string
                          example: ["part-of:CloudQSS-CPQBE"]
                        previousVersion:
                          description: previous package version name.The <version>@<revision> mask is used to return the revision number.
                          type: string
                          example: "2022.2@5"
                        previousVersionPackageId:
                          description: Package id of the previous version. Can be empty if the value is equal to the package id.
                          type: string
                          example: "QS.GRP.SOMEPKG"
                        notLatestRevision:
                          type: boolean
                          default: false
              examples: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v3/packages/{packageId}/versions":
    parameters:
      - $ref: "#/components/parameters/packageId"
    get:
      tags:
        - Versions
      summary: Get package versions list
      description: Get the published package's versions list.
      operationId: getPackagesIdVersionsV3
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
        - name: textFilter
          in: query
          description: Filter by version name|labels.
          schema:
            type: string
        - name: status
          in: query
          description: Filter versions by status (start with match)
          required: false
          schema:
            type: string
            enum:
              - draft
              - release
              - archived
        - name: checkRevisions
          in: query
          description: |
            Flag, if to search in the previous versions revisions. 
            * if several revisions were found, return only the maximum found value.
            * if false - return the last published revision.
          schema:
            type: boolean
            default: false
        - name: versionLabel
          in: query
          description: |
            Filter the package versions by label, exact match.
            * if the checkRevisions: false - search in the last published revision.
            * if the checkRevisions: true - search in all revisions (backward order).
          schema:
            type: string
            example: "app.kubernetes.io/version:release-2022.4-20230228.094427-171"
        - name: sortBy
          in: query
          description: Sort versions by version name or creation date
          schema:
            type: string
            enum:
              - version
              - createdAt
            default: version
        - name: sortOrder
          in: query
          description: Sorting order
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: Whole package versions list with paging.
                type: object
                properties:
                  versions:
                    type: array
                    items:
                      $ref: "#/components/schemas/PackageVersion"
              examples: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}":
    parameters:
      - $ref: "#/components/parameters/packageId"
    get:
      tags:
        - Versions
      deprecated: true
      x-deprecation-reason: New version of API is created - GET /api/v3/packages/{packageId}/versions/{version}
      summary: Get package version content
      description: Get the published package's version content. Returns all content objects and folders.
      operationId: getPackagesIdVersionsId
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - name: version
          in: path
          description: |
            Package version. 
            The mask <version>@<revision> may be used for search in a specific revision.
          required: true
          schema:
            type: string
            example: 22.3@3
        - name: includeSummary
          in: query
          description: Show/hide the summary info about changes and operations.
          schema:
            type: boolean
            default: false
        - name: includeOperations
          in: query
          description: Show/hide the version's operations list.
          schema:
            type: boolean
            default: false
        - name: includeGroups
          in: query
          description: Flag to define whether to return list of groups of current version or not.
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PackageVersionContentV2"
                  - type: object
                    properties:
                      operationTypes:
                        type: array
                        items:
                          type: object
                          properties:
                            apiType:
                              type: string
                              enum:
                                - rest
                                - graphql
                            changesSummary:
                              $ref: '#/components/schemas/ChangeSummary'
                            operationsCount:
                              type: number
                            deprecatedCount:
                              type: number
                            operations:
                              type: object
                              description: Hash map of 'operationId:dataHash value'.
                              additionalProperties:
                                description: Operation hash.
                                type: string
                                example: lkfsdkff112
                  - type: object
                    properties:
                      operationGroups:
                        type: array
                        description: |
                          List of groups.
                        items:
                          allOf:
                          - description: Version group.
                            type: object
                            required:
                              - groupName
                              - apiType
                              - isPrefixGroup
                            properties:
                              groupName:
                                type: string
                                description: Unique group name.
                                example: New_operation_group
                              apiType:
                                type: string
                                description: Type of the API.
                                example: rest
                              description:
                                type: string
                                description: Description of group.
                              isPrefixGroup:
                                type: boolean
                                description: true - if the group created automatically via restGroupingPrefix.
                                example: false
                              exportTemplateFileName:
                                type: string
                                description: The name of the export template file, if there is one.
                                example: template123.json
                          - type: object
                            required:
                              - operationsCount
                            properties:
                              operationsCount:
                                type: number
                                description: Number of operations in operation group
                              ghostOperationsCount:
                                type: number
                                description: Number of ghost operations in operation group
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
    patch:
      tags:
        - Versions
        - Admin
      summary: Update package version
      description: |
        Update package version. 
        * If the parameter is not transmitted in request - its value stays unchanged.
        * The empty parameter value in request sets the empty value in database. 
        * The array of labels will be fully replaced as-it-send, no JSON-Patch approach for arrays is applicable.
      operationId: patchPackagesIdVersionsIdV2
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - $ref: "#/components/parameters/version"
      requestBody:
        description: Version update params
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: "#/components/schemas/VersionStatusEnum"
                versionLabels:
                  description: List of version labels.
                  type: array
                  items:
                    type: string
                  example: ["app.kubernetes.io/part-of:CloudQSS-CPQBE", "app.kubernetes.io/version:release-candidate-20230410.152115-2782"]
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PackageVersionContent"
              examples: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
    delete:
      tags:
        - Versions
        - Admin
      summary: Delete package version
      description: |
        Delete the package's version.
        If the version was placed as a "defaultReleaseVersion" on a package, it will be cleared on this package (without the previous version restore).
      operationId: deletePackagesIdVersionsId
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - $ref: "#/components/parameters/version"
      responses:
        "204":
          description: No content
          content: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v3/packages/{packageId}/versions/{version}":
    parameters:
      - $ref: "#/components/parameters/packageId"
    get:
      tags:
        - Versions
      summary: Get package version content
      description: Get the published package's version content. Returns all content objects and folders.
      operationId: getPackagesIdVersionsIdV4
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - name: version
          in: path
          description: |
            Package version. 
            The mask <version>@<revision> may be used for search in a specific revision.
          required: true
          schema:
            type: string
            example: 22.3@3
        - name: includeSummary
          in: query
          description: Show/hide the summary info about changes and operations.
          schema:
            type: boolean
            default: false
        - name: includeOperations
          in: query
          description: Show/hide the version's operations list.
          schema:
            type: boolean
            default: false
        - name: includeGroups
          in: query
          description: Flag to define whether to return list of groups of current version or not.
          schema:
            type: boolean
            default: false
        - name: sortBy
          in: query
          description: Sort versions by version name or creation date
          schema:
            type: string
            enum:
              - version
              - createdAt
            default: version
        - name: sortOrder
          in: query
          description: Sorting order
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PackageVersionContent"
                  - type: object
                    properties:
                      operationTypes:
                        type: array
                        items:
                          type: object
                          properties:
                            apiType:
                              $ref: "#/components/schemas/ApiType"
                            changesSummary:
                              allOf:
                                - $ref: '#/components/schemas/ChangeSummary'
                                - type: object
                                  description: Number of declarative changes in the version.
                            numberOfImpactedOperations:
                              allOf:
                                - $ref: '#/components/schemas/ChangeSummary'
                                - type: object
                                  description: Number of operations impacted by each severety type.
                            operationsCount:
                              type: number
                            deprecatedCount:
                              type: number
                            noBwcOperationsCount:
                              type: number
                              description: Number of no-BWC operations.
                            internalAudienceOperationsCount:
                              type: number
                              description: Number of operations with apiAudience = internal
                            unknownAudienceOperationsCount:
                              type: number
                              description: Number of operations with apiAudience = unknown
                            apiAudienceTransitions:
                              type: array
                              description: Shows transitions of operations' apiAudience value (compared to the previous release version) and number of operations in which this transition occurred. The array contains only records of transitions that actually occurred in operations.
                              items:
                                type: object
                                properties:
                                  currentAudience:
                                    type: string
                                    description: Current apiAudience value (currentAudience must not be equal to previousAudience)
                                    enum:
                                      - internal
                                      - external
                                      - unknown
                                  previousAudience:
                                    type: string
                                    description: Previous apiAudience value
                                    enum:
                                      - internal
                                      - external
                                      - unknown
                                  operationsCount:
                                    type: number
                                    description: Number of operations in which the apiAudience was changed from previousAudience to currentAudience
                            operations:
                              type: object
                              description: Hash map of 'operationId:dataHash value'.
                              additionalProperties:
                                description: Operation hash.
                                type: string
                                example: lkfsdkff112
                  - type: object
                    properties:
                      operationGroups:
                        type: array
                        description: |
                          List of groups.
                        items:
                          allOf:
                          - $ref: "#/components/schemas/CreateOperationGroup"
                          - type: object
                            required:
                              - operationsCount
                            properties:
                              operationsCount:
                                type: number
                                description: Number of operations in operation group
                              ghostOperationsCount:
                                type: number
                                description: Number of ghost operations in operation group
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/changes/summary":
    get:
      tags:
        - Changes
      summary: Get changes summary
      description: |
        Get summary of changes between two packages versions.
      operationId: getPackageIdVersionChangesSummary
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/version"
        - name: previousVersion
          in: query
          description: |
            Package previous version.\
            If both previousVersion and previousVersionPackageId are not specified, then previous **release** version will be used
          schema:
            type: string
            example: "2022.3"
        - name: previousVersionPackageId
          in: query
          description: |
            Package unique identifier for previous version.\
            If both previousVersion and previousVersionPackageId are not specified, then previous **release** version will be used
          schema:
            type: string
            example: "QS.RUNENV.K8S-SERVER.CJM-QSS-DEV-2.Q-TMF"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: packageComparison
                    description: List of changes data.
                    required:
                      - operationTypes
                    properties:
                      operationTypes:
                        type: array
                        items:
                          type: object
                          properties:
                            apiType:
                              $ref: "#/components/schemas/ApiType"
                            numberOfImpactedOperations:
                              allOf:
                                - $ref: '#/components/schemas/ChangeSummary'
                                - type: object
                                  description: Number of operations impacted by each severety type.
                            changesSummary:
                              allOf:
                                - $ref: '#/components/schemas/ChangeSummary'
                                - type: object
                                  description: Number of declarative changes of each severety type.
                            tags:
                              type: array
                              items:
                                type: string
                              example: ["tag1", "tag2"]
                      noContent:
                        type: boolean
                        description: true - operation comparison cache is not stored in database
                        default: false
                  - type: object
                    title: dashboardComparison
                    required:
                      - refs
                      - packages
                    properties:
                      refs:
                        description: |
                          Refs shows which packages in compared dashboards were added/deleted/changed and changes summary for each package:
                            * added package - packageRef is returned
                            * deleted package - previousPackageRef is returned returned
                            * changed package - both packageRef and previousPackageRef are returned
                        type: array
                        items:
                          type: object
                          properties:
                            packageRef:
                              description: |
                                Parent package and version link.
                                Created by the concatenation of the packageId and version name with At sign.
                              type: string
                              example: "QS.CloudQSS.CPQ.Q-TMF@2023.2"
                            previousPackageRef:
                              description: |
                                Parent package and version link.
                                Created by the concatenation of the packageId and version name with At sign.
                              type: string
                              example: "QS.CloudQSS.CPQ.Q-TMF@2023.2"
                            operationTypes:
                              type: array
                              items:
                                type: object
                                properties:
                                  apiType:
                                    $ref: "#/components/schemas/ApiType"
                                  numberOfImpactedOperations:
                                    allOf:
                                      - $ref: '#/components/schemas/ChangeSummary'
                                      - type: object
                                        description: Number of operations impacted by each severety type.
                                  changesSummary:
                                    allOf:
                                      - $ref: '#/components/schemas/ChangeSummary'
                                      - type: object
                                        description: Number of declarative changes of each severety type.
                                  tags:
                                    type: array
                                    items:
                                      type: string
                                    example: ["tag1", "tag2"]
                            noContent:
                              type: boolean
                              description: true - operation comparison cache is not stored in database
                              default: false
                      packages:
                        description: |
                          A mapped list of the packageId and version name concatenation with At sign to the package objects.
                        type: object
                        additionalProperties:
                          allOf:
                            - $ref: "#/components/schemas/ReferencedPackage"
                            - type: object
                        example:
                          QS.CloudQSS.CPQ.Q-TMF@2023.2:
                            refId: QS.CloudQSS.CPQ.Q-TMF
                            kind: package
                            name: Quote Management TMF648
                            version: "2022.2@5"
                            status: release
                            parentPackages: ["qubership", "Qubership JSS", "Sample Management"]
                            deletedAt: "2023-05-30T17:17:11.755146Z"
                            deletedBy: "user1221"
                            notLatestRevision: true
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/{apiType}/changes":
    get:
      deprecated: true
      x-deprecation-reason: New version of API is created - GET /api/v3/packages/{packageId}/versions/{version}/{apiType}/changes
      tags:
        - Changes
        - Versions
      summary: Get list of changed operations
      description: |
        Get changes between two compared package versions with details by operations.\
        The result list depends on the API type.
      operationId: getPackagesIdVersionsIdApiTypeChanges
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - $ref: "#/components/parameters/apiType"
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/severity"
        - name: previousVersion
          in: query
          description: |
            Package previous version.\
            If both previousVersion and previousVersionPackageId are not specified, then previous **release** version will be used
          schema:
            type: string
            example: "2022.3"
        - name: previousVersionPackageId
          in: query
          description: |
            Package unique identifier for previous version.\
            If both previousVersion and previousVersionPackageId are not specified, then previous **release** version will be used
          schema:
            type: string
            example: "QS.RUNENV.K8S-SERVER.CJM-QSS-DEV-2.Q-TMF"
        - name: version
          in: path
          description: |
            Package version. 
            The mask <version>@<revision> may be used for search in a specific revision.
          required: true
          schema:
            type: string
            example: "2022.3@3"
        - name: refPackageId
          description: Filter by package id of ref package and previous ref package.
          in: query
          schema:
            type: string
        - name: apiKind
          description: Filter by api kind
          in: query
          schema:
            type: string
            enum:
              - bwc
              - no-bwc
              - experimental
        - name: documentSlug
          in: query
          description: Document unique string identifier
          schema:
            type: string
            pattern: "^[a-z0-9-]"
            example: "qitmf-v5-11-json"
        - name: tag
          in: query
          schema:
            type: string
          description: |
            A full match is required.\
            Multiple tags separated by comma can be specified.
        - name: emptyTag
          in: query
          description: |
            Flag, filtering the operations without tags at all.
            In response will be returned the list of operations, on what the tag is not filled in.
            This attribute has a higher priority than the **tag**. In case, then **emptyTag: true**, it will override the **tag** filter.
          schema:
            type: boolean
            default: false
        - name: group
          in: query
          description: |
            Name of the group for filtering.\
            The filter is applied only to the groups of current version. Groups from previous version will be ignored.\
            Either "group" or "emptyGroup" (= true) can be sent in the request, if both of them are specified then 400 will be returned in the response.
          schema:
            type: string
            example: v1
        - name: emptyGroup
          in: query
          description: |
            Flag for filtering operations without a group.\
            The filter is applied only to the groups of current version. Groups from previous version will be ignored.\
            Either "group" or "emptyGroup" (= true) can be sent in the request, if both of them are specified then 400 will be returned in the response.
          schema:
            type: boolean
            default: false
        - name: textFilter
          in: query
          description: Filter by operation's title/path/method.
          schema:
            type: string
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - operations
                properties:
                  previousVersion:
                    description: Name of the previous published version. The <version>@<revision> mask is used to return the revision number.
                    type: string
                    example: "2022.2@5"
                  previousVersionPackageId:
                    description: Previous release version package id.
                    type: string
                    example: "QS.CloudQSS.CPQ.Q-TMF"
                  operations:
                    type: array
                    items:
                      allOf:
                        - oneOf:
                            - $ref: "#/components/schemas/RestOperationMeta"
                            - $ref: "#/components/schemas/GraphQLOperationMeta"
                        - type: object
                          required:
                            - operationId
                            - changeSummary
                          properties:
                            packageRef:
                              description: >
                                Parent package and version link. Created by the concatenation of the packageId and version name with At sign.
                              type: string
                              example: QS.CloudQSS.CPQ.Q-TMF@2023.2
                            previousVersionPackageRef:
                              description: |
                                Parent package and version link.
                                Created by the concatenation of the packageId and version name with At sign.
                              type: string
                              example: "QS.CloudQSS.CPQ.Q-TMF@2023.2"
                            operationId:
                              description: >-
                                Operation unique identifier (slug). Not the same as
                                operationId tag from the OpenAPI file.
                              type: string
                              example: get-quoteManagement-v5-quote
                            apiKind:
                              type: string
                              enum:
                                - bwc
                                - no-bwc
                                - experimental
                            dataHash:
                              description: Operation hash.
                              type: string
                              example: sdfsdfsf242
                            previousDataHash:
                              description: Hash of the previous published version operation.
                              type: string
                              example: sdfsdfsf24dds2
                            changeSummary:
                              $ref: "#/components/schemas/ChangeSummary"
                  packages:
                    description: >
                      A mapped list of the packageId and version name
                      concatenation with At sign to the package objects.
                        type: object
                    additionalProperties:
                      allOf:
                        - $ref: "#/components/schemas/ReferencedPackage"
                        - type: object
                    example:
                      QS.CloudQSS.CPQ.Q-TMF@2023.2:
                        refId: QS.CloudQSS.CPQ.Q-TMF
                        kind: package
                        name: Quote Management TMF648
                        version: "2022.2@5"
                        status: release
                        parentPackages: ["qubership", "Qubership JSS", "Sample Management"]
                        deletedAt: "2023-05-30T17:17:11.755146Z"
                        deletedBy: "user1221"
                        notLatestRevision: true
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v3/packages/{packageId}/versions/{version}/{apiType}/changes":
    get:
      tags:
        - Changes
        - Versions
      summary: Get list of changed operations
      description: |
        Get changes between two compared package versions with details by operations.\
        The result list depends on the API type.
      operationId: getPackagesIdVersionsIdApiTypeChangesV3
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - $ref: "#/components/parameters/apiType"
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/apiAudience"
        - $ref: "#/components/parameters/severity"
        - name: previousVersion
          in: query
          description: |
            Package previous version.\
            If both previousVersion and previousVersionPackageId are not specified, then previous **release** version will be used
          schema:
            type: string
            example: "2022.3"
        - name: previousVersionPackageId
          in: query
          description: |
            Package unique identifier for previous version.\
            If both previousVersion and previousVersionPackageId are not specified, then previous **release** version will be used
          schema:
            type: string
            example: "QS.RUNENV.K8S-SERVER.CJM-QSS-DEV-2.Q-TMF"
        - name: version
          in: path
          description: |
            Package version. 
            The mask <version>@<revision> may be used for search in a specific revision.
          required: true
          schema:
            type: string
            example: "2022.3@3"
        - name: refPackageId
          description: Filter by package id of ref package and previous ref package.
          in: query
          schema:
            type: string
        - name: apiKind
          description: Filter by api kind
          in: query
          schema:
            type: string
            enum:
              - bwc
              - no-bwc
              - experimental
        - name: documentSlug
          in: query
          description: Document unique string identifier
          schema:
            type: string
            pattern: "^[a-z0-9-]"
            example: "qitmf-v5-11-json"
        - name: tag
          in: query
          schema:
            type: string
          description: |
            A full match is required.\
            Multiple tags separated by comma can be specified.
        - name: emptyTag
          in: query
          description: |
            Flag, filtering the operations without tags at all.
            In response will be returned the list of operations, on what the tag is not filled in.
            This attribute has a higher priority than the **tag**. In case, then **emptyTag: true**, it will override the **tag** filter.
          schema:
            type: boolean
            default: false
        - name: group
          in: query
          description: |
            Name of the group for filtering.\
            The filter is applied only to the groups of current version. Groups from previous version will be ignored.\
            Either "group" or "emptyGroup" (= true) can be sent in the request, if both of them are specified then 400 will be returned in the response.
          schema:
            type: string
            example: v1
        - name: emptyGroup
          in: query
          description: |
            Flag for filtering operations without a group.\
            The filter is applied only to the groups of current version. Groups from previous version will be ignored.\
            Either "group" or "emptyGroup" (= true) can be sent in the request, if both of them are specified then 400 will be returned in the response.
          schema:
            type: boolean
            default: false
        - name: textFilter
          in: query
          description: Filter by operation's title/path/method.
          schema:
            type: string
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - operations
                properties:
                  previousVersion:
                    description: Name of the previous published version. The <version>@<revision> mask is used to return the revision number.
                    type: string
                    example: "2022.2@5"
                  previousVersionPackageId:
                    description: Previous release version package id.
                    type: string
                    example: "QS.CloudQSS.CPQ.Q-TMF"
                  operations:
                    type: array
                    items:
                      allOf:
                        - oneOf:
                          - title: RestOperation
                            type: object
                            required:
                                - path
                                - method
                            properties:
                              path:
                                description: Operation endpoint path.
                                type: string
                                example: "/quoteManagement/v5/quote"
                              method:
                                description: Operation method.
                                type: string
                                enum:
                                  - post
                                  - get
                                  - put
                                  - patch
                                  - delete
                                  - head
                                  - options
                                  - connect
                                  - trace
                          - title: GraphQLOperation
                            type: object
                            required:
                              - type
                              - method
                            properties:
                              type:
                                description: Operation type
                                type: string
                                enum:
                                  - query
                                  - mutation
                                  - subscription
                              method:
                                description: GraphQL operation method.
                                type: string
                                example: getPaymentMethodSpecificationCore
                        - type: object
                          required:
                            - operationId
                            - changeSummary
                          properties:
                            operationId:
                              description: >-
                                Operation unique identifier (slug). Not the same as
                                operationId tag from the OpenAPI file.
                              type: string
                              example: get-quoteManagement-v5-quote
                            previousOperation:
                              $ref: "#/components/schemas/OperationInfoFromDifferentVersions"
                            currentOperation:
                              $ref: "#/components/schemas/OperationInfoFromDifferentVersions"
                            changeSummary:
                              allOf:
                                - $ref: "#/components/schemas/ChangeSummary"
                                - type: object
                                  description: Number of declarative changes in one specific operation.
                  packages:
                    description: >
                      A mapped list of the packageId and version name
                      concatenation with At sign to the package objects.
                        type: object
                    additionalProperties:
                      allOf:
                        - $ref: "#/components/schemas/ReferencedPackage"
                        - type: object
                    example:
                      QS.CloudQSS.CPQ.Q-TMF@2023.2:
                        refId: QS.CloudQSS.CPQ.Q-TMF
                        kind: package
                        name: Quote Management TMF648
                        version: "2022.2@5"
                        status: release
                        parentPackages: ["qubership", "Qubership JSS", "Sample Management"]
                        deletedAt: "2023-05-30T17:17:11.755146Z"
                        deletedBy: "user1221"
                        notLatestRevision: true
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  /api/v3/packages/{packageId}/versions/{version}/{apiType}/export/changes:
    parameters:
      - $ref: "#/components/parameters/packageId"
      - $ref: "#/components/parameters/version"
      - $ref: "#/components/parameters/apiType"
      - $ref: "#/components/parameters/apiAudience"
      - $ref: "#/components/parameters/severity"
      - name: previousVersion
        in: query
        description: |
          Package previous version.\
          If both previousVersion and previousVersionPackageId are not specified, then comparison with previous **release** version shall be returned.
        schema:
          type: string
          example: "2022.3"
      - name: previousVersionPackageId
        in: query
        description: |
          Package unique identifier for previous version.\
          If both previousVersion and previousVersionPackageId are not specified, then comparison with previous **release** version shall be returned.
        schema:
          type: string
          example: "QS.RUNENV.K8S-SERVER.CJM-QSS-DEV-2.Q-TMF"
      - name: refPackageId
        description: Filter by package id of ref package and previous ref package.
        in: query
        schema:
          type: string
      - name: apiKind
        description: Filter by api kind
        in: query
        schema:
          type: string
          enum:
            - bwc
            - no-bwc
            - experimental
      - name: tag
        in: query
        schema:
          type: string
        description: |
          A full match is required.\
          Multiple tags separated by comma can be specified.
      - name: emptyTag
        in: query
        description: |
          Flag, filtering the operations without tags at all.
          In response will be returned the list of operations, on what the tag is not filled in.
          This attribute has a higher priority than the **tag**. In case, then **emptyTag: true**, it will override the **tag** filter.
        schema:
          type: boolean
          default: false
      - name: group
        in: query
        description: |
          Name of the group for filtering.\
          The filter is applied only to the groups of current version. Groups from previous version will be ignored.\
          Either "group" or "emptyGroup" (= true) can be sent in the request, if both of them are specified then 400 will be returned in the response.
        schema:
          type: string
          example: v1
      - name: emptyGroup
        in: query
        description: |
          Flag for filtering operations without a group.\
          The filter is applied only to the groups of current version. Groups from previous version will be ignored.\
          Either "group" or "emptyGroup" (= true) can be sent in the request, if both of them are specified then 400 will be returned in the response.
        schema:
          type: boolean
          default: false
      - name: textFilter
        in: query
        description: Filter by operation's title/path/method.
        schema:
          type: string
    get:
      tags:
        - Changes
      summary: Export API changes to xlsx file
      description: Export API changes to xlsx file
      operationId: getPackageIdVersionIdChangesExport
      security:
        - BearerAuth: []
        - api-key: []
      responses:
        "200":
          description: Success
          content:
            application/xlsx:
              schema:
                type: string
                format: binary
                description: xlsx file to download
          headers:
            Content-Disposition:
              schema:
                type: string
                description: xlsx file name
                example: attachment; filename="APIChanges_package.id_version.xlsx"
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
                VersionNotFound:
                  $ref: "#/components/examples/VersionNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  /api/v2/packages/{packageId}/versions/{version}/changes/export:
    parameters:
      - $ref: "#/components/parameters/packageId"
      - $ref: "#/components/parameters/version"
      - name: previousVersion
        in: query
        description: |
          Package previous version.\
          If both previousVersion and previousVersionPackageId are not specified, then comparison with previous **release** version shall be returned.
        schema:
          type: string
          example: "2022.3"
      - name: previousVersionPackageId
        in: query
        description: |
          Package unique identifier for previous version.\
          If both previousVersion and previousVersionPackageId are not specified, then comparison with previous **release** version shall be returned.
        schema:
          type: string
          example: "QS.RUNENV.K8S-SERVER.CJM-QSS-DEV-2.Q-TMF"
      - name: format
        in: query
        description: File format for export
        schema:
          type: string
          enum:
            - xlsx
          default: xlsx
    get:
      tags:
        - Changes
      summary: Export API changes to xlsx file
      description: Export API changes to xlsx file
      operationId: getPackageIdVersionIdChangesExport
      security:
        - BearerAuth: [ ]
        - api-key: [ ]
      responses:
        "200":
          description: Success
          content:
            application/xlsx:
              schema:
                type: string
                format: binary
                description: xlsx file to download
          headers:
            Content-Disposition:
              schema:
                type: string
                description: xlsx file name
                example: attachment; filename="APIChanges_package.id_version.xlsx"
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: { }
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
                VersionNotFound:
                  $ref: "#/components/examples/VersionNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/sources":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - name: version
        in: path
        description: Package version. The mask <version>@<revision> may be used to get resouces of the specific revision. If the @revision is not provided, the latest version's revision will be used.
        required: true
        schema:
          type: string
          example: "2022.3"
    get:
      tags:
        - Export
        - Versions
      summary: Export sources of package version
      description: |
        Export sources of package version as a zip archive.
      operationId: getPackagesIdVersionsIdSources
      security:
        - BearerAuth: []
        - api-key: []
      responses:
        "200":
          description: Success
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                description: ZIP file with pacakge version sources to download
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
                VersionNotFound:
                  $ref: "#/components/examples/VersionNotFound"
                FileNotFound:
                  $ref: "#/components/examples/FileNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/config":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - name: version
        in: path
        description: Package version. The mask <version>@<revision> may be used to get resouces of the specific revision. If the @revision is not provided, the latest version's revision will be used.
        required: true
        schema:
          type: string
          example: "2022.3"
    get:
      tags:
        - Versions
      summary: Get package version config
      description: |
        Get content of package version config
      operationId: getPackagesIdVersionsIdConfig
      security:
        - BearerAuth: []
        - api-key: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuildConfig"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
                VersionNotFound:
                  $ref: "#/components/examples/VersionNotFound"
                FileNotFound:
                  $ref: "#/components/examples/FileNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/copy":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - $ref: "#/components/parameters/version"
    post:
      tags:
        - Publish
        - Admin
      summary: Copy package version to another package
      description: |
        Publish package version in target package using sources of source package (server-side building only).\
        The final specifications will be stored using the POST /packages/{packageId}/publish/{publishId}/status. 202 response and the publish process Id will be returned in success.
      operationId: getPackageIdVersionIdCopy
      security:
        - BearerAuth: []
        - api-key: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - targetPackageId
                - targetVersion
                - targetStatus
              properties:
                targetPackageId:
                  description: Target package unique identifier (full alias).
                  type: string
                  example: QS.CQSS.CPQ.TMF
                targetVersion:
                  description: Version name for publication in target package.
                  type: string
                  example: "2022.3"
                targetPreviousVersion:
                  description: Name of the previous published version in target package.
                  type: string
                  example: "2022.2"
                targetPreviousVersionPackageId:
                  description: Package id of the previous version. The parameter may be empty if the value is equal to the targetPackageId.
                  type: string
                  example: "QS.CloudQSS.CPQ.Q-TMF"
                targetStatus:
                  $ref: "#/components/schemas/VersionStatusEnum"
                targetVersionLabels:
                  description: List of version labels in target package.
                  type: array
                  items:
                    type: string
                  example: ["part-of:CloudQSS-CPQBE"]
      responses:
        "202":
          description: Publish process started
          content:
            application/json:
              schema:
                type: object
                title: serverBuild
                properties:
                  publishId:
                    type: string
                    description: Publish process Id
                    format: uuid
                    example: 9c8e9045-dd9c-4946-b9e4-e05e3f41c4cc
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden. No permission to publish version in current status in target package.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/compare":
    post:
      tags:
        - Changes
      summary: Version changelog async calculation
      description: |
        Calculate changes between any two packages/versions/revisions for any type of API.

        * **200 Comparison calculated successfully** if there is such comparison.

        * **202 Accepted** will be returned after starting of the async changelog calculation.
      operationId: postCompare
      security:
        - BearerAuth: []
      parameters:
        - name: clientBuild
          in: query
          description: Client-side package build will be used.
          required: false
          schema:
            type: boolean
            default: false
        - name: builderId
          in: query
          required: false
          description: Builder identifier. **Required** if clientBuild=true.
          schema:
            type: string
        - name: reCalculate
          in: query
          description: |
            Flag for the force changelog re-calculation.
            May be used after the previous API call with **error** status.
          schema:
            type: boolean
            default: false
      requestBody:
        description: Changelog calculation parameters.
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - packageId
                - version
                - previousVersionPackageId
                - previousVersion
              properties:
                packageId:
                  description: Package unique identifier (full alias).
                  type: string
                  example: QS.CQSS.CPQ.TMF
                version:
                  description: |
                    Package version. 
                    The mask <version>@<revision> may be used for search in a specific revision.
                    
                    If the @revision is not provided, the latest version's revision will be used.
                  type: string
                  example: "2022.3@3"
                previousVersionPackageId:
                  description: Package id of the previous version to compare with.
                  type: string
                  example: "QS.CloudQSS.CPQ.Q-TMF"
                previousVersion:
                  description: |
                    Name of the previous published version to compare with.
                    The mask <version>@<revision> may be used for search in a specific revision.
                    
                    If the @revision is not provided, the latest version's revision will be used.
                  type: string
                  example: "2022.2@4"
      responses:
        "200":
          description: Comparison calculated successfully
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                description: build config
                properties:
                  packageId:
                    description: Package unique identifier (full alias).
                    type: string
                    example: QS.CQSS.CPQ.TMF
                  version:
                    description: |
                      Package version. 
                      The mask <version>@<revision> will be used for return in a specific revision.
                      
                      If the @<revision> was not transmitted in the request - it won't be returned in response. Consider the version as the latest one.
                    type: string
                    example: "2022.3@3"
                  previousVersionPackageId:
                    description: Previous release version package id.
                    type: string
                    example: "QS.CloudQSS.CPQ.Q-TMF"
                  previousVersion:
                    description: |
                      Name of the previous published version.
                      The mask <version>@<revision> will be used for return a specific revision.
                      
                      If the @<revision> was not transmitted in the request - it won't be returned in response. Consider the version as the latest one.
                    type: string
                    example: "2022.2@4"
                  buildType:
                    description: |
                      Type of the build process. Available options are:
                      **changelog** - Only the changelog calculation, no API contracts version will be created.
                    type: string
                    enum:
                      - changelog
                  createdBy:
                    description: User, created the changelog build.
                    type: string
                  buildId:
                    description: Id of the created build.
                    type: string
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    description: Calculation process status.
                    type: string
                    enum:
                      - running
                      - error
                  message:
                    description: The message for **error** status.
                    type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/{apiType}/groups/{groupName}/transform":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - $ref: "#/components/parameters/version"
      - $ref: "#/components/parameters/apiType"
      - name: groupName
        in: path
        required: true
        description: Name of the operation group
        schema:
          type: string
    post:
      deprecated: true
      x-deprecation-reason: New version of API is created - POST /api/v3/packages/{packageId}/versions/{version}/{apiType}/build/groups/{groupName}/buildType/{buildType}
      tags:
        - Versions
        - Operation groups
      summary: Async document transformation
      description: |
        Async task for document transformation. Document transformation is required for exporting operations group.
        * **200 Documents transformation completed successfully** if documents were already transformed.

        * **202 Accepted** will be returned after starting process for documents transformation.
      operationId: postGenerateDocument
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
      - name: clientBuild
        in: query
        description: Client-side package build will be used.
        required: false
        schema:
          type: boolean
          default: false
      - name: builderId
        in: query
        required: false
        description: Builder identifier. **Required** if clientBuild=true.
        schema:
          type: string
      - name: reCalculate
        in: query
        description: |
          Flag for the force document re-calculation.
          May be used after the previous API call with **error** status.
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: Documents transformation completed successfully
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                description: build config
                properties:
                  packageId:
                    description: Package unique identifier (full alias).
                    type: string
                    example: QS.CQSS.CPQ.TMF
                  version:
                    description: |
                      Package version. 
                      The mask <version>@<revision> will be used for return in a specific revision.
                      
                      If the @<revision> was not transmitted in the request - it won't be returned in response. Consider the version as the latest one.
                    type: string
                    example: "2022.3@3"
                  apiType:
                    description: Type of the API
                    type: string
                    enum:
                      - rest
                      - graphql
                  groupName:
                    description: Name of the group
                    type: string
                    example: v1
                  buildType:
                    description: |
                      Type of the build process. Available options are:
                      **documentGroup** - Only the document generation, no API contracts version will be created.
                    type: string
                    enum:
                      - documentGroup
                  createdBy:
                    description: User, created the transform build.
                    type: string
                  buildId:
                    description: Id of the created build.
                    type: string
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    description: Calculation process status.
                    type: string
                    enum:
                      - running
                      - error
                  message:
                    description: The message for **error** status.
                    type: string
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v3/packages/{packageId}/versions/{version}/{apiType}/build/groups/{groupName}/buildType/{buildType}":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - $ref: "#/components/parameters/version"
      - name: apiType
        description: Type of the API.
        in: path
        required: true
        schema:
          type: string
          enum:
            - rest
      - name: buildType
        description: |
          Type of the build process for OpeanAPI specification tranformation. Available options are:
          - **reducedSourceSpecifications** - proccess that finds source specifications for all operations from operation group and removes from these specifications operations other than those that are included into operation group.
          - **mergedSpecification** - process the merges all operations from an operation group into one specification.
        in: path
        required: true
        schema:
          type: string
          enum:
            - reducedSourceSpecifications
            - mergedSpecification
      - name: groupName
        in: path
        required: true
        description: Name of the operation group
        schema:
          type: string
    post:
      tags:
        - Versions
        - Operation groups
      summary: Async document transformation
      description: |
        Async task for document transformation. Document transformation is required for exporting operations group.
        * **200 Documents transformation completed successfully** if documents were already transformed.

        * **202 Accepted** will be returned after starting process for documents transformation.
      operationId: postGenerateDocumentV3
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
      - name: clientBuild
        in: query
        description: Client-side package build will be used.
        required: false
        schema:
          type: boolean
          default: false
      - name: builderId
        in: query
        required: false
        description: Builder identifier. **Required** if clientBuild=true.
        schema:
          type: string
      - name: reCalculate
        in: query
        description: |
          Flag for the force document re-calculation.
          May be used after the previous API call with **error** status.
        schema:
          type: boolean
          default: false
      - name: format
        in: query
        description: | 
          Format of the exported file.\
          If buidType = reducedSourceSpecifications, then format can be yaml, json or html.\
          If buidType = mergedspecification, then format can be yaml or json; html is not supported for this buildType.
        schema:
          type: string
          enum:
            - yaml
            - json
            - html
          default: json
      responses:
        "200":
          description: Documents transformation completed successfully
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                description: build config
                properties:
                  packageId:
                    description: Package unique identifier (full alias).
                    type: string
                    example: QS.CQSS.CPQ.TMF
                  version:
                    description: |
                      Package version. 
                      The mask <version>@<revision> will be used for return in a specific revision.
                      If the @<revision> was not transmitted in the request - it won't be returned in response. Consider the version as the latest one.
                    type: string
                    example: "2022.3@3"
                  apiType:
                    description: Document transformation is available only for apiType = REST
                    type: string
                    enum:
                      - rest
                  groupName:
                    description: Name of the group
                    type: string
                    example: v1
                  buildType:
                    description: |
                      Type of the build process for OpeanAPI specification tranformation. Available options are:
                      - **reducedSourceSpecifications** - proccess that finds source specifications for all operations from operation group and removes from these specifications operations other than those that are included into operation group.
                      - **mergedSpecification** - process the merges all operations from an operation group into one specification.
                    type: string
                    enum:
                      - reducedSourceSpecifications
                      - mergedSpecification
                  format:
                    type: string
                    enum:
                      - yaml
                      - json
                      - html
                  createdBy:
                    description: The user who created the object
                    type: string
                  buildId:
                    description: Id of the created build.
                    type: string
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    description: Calculation process status.
                    type: string
                    enum:
                      - running
                      - error
                  message:
                    description: The message for **error** status.
                    type: string
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/{apiType}/export/groups/{groupName}":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - $ref: "#/components/parameters/version"
      - $ref: "#/components/parameters/apiType"
      - name: groupName
        in: path
        required: true
        description: Name of the operation group
        schema:
          type: string
    get:
      deprecated: true
      x-deprecation-reason: New version of API is created - GET /api/v3/packages/{packageId}/versions/{version}/{apiType}/export/groups/{groupName}/buildType/{buildType}
      tags:
        - Export
        - Operation groups
      summary: Export operations group as OpenaAPI documents
      description: Export operation group as OpenaAPI documents
      operationId: getPackagesIdVersionsIdExportGroupName
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - name: format
          in: query
          schema:
            type: string
            description: |
              format of documents:
                - json
                - html
            enum:
              - json
              - html
            default: html
      responses:
        "200":
          description: Success
          content:
            application/zip:
              schema:
                type: string
                format: binary
                description: zip file to download
          headers:
            Content-Disposition:
              schema:
                type: string
                description: zip file name
                example: attachment; filename="groupName_package.id_version.zip"
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: { }
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v3/packages/{packageId}/versions/{version}/{apiType}/export/groups/{groupName}/buildType/{buildType}":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - $ref: "#/components/parameters/version"
      - name: apiType
        description: Type of the API.
        in: path
        required: true
        schema:
          type: string
          enum:
            - rest
      - name: buildType
        description: |
          Type of the build process for OpeanAPI specification tranformation. Available options are:
          - **reducedSourceSpecifications** - proccess that finds source specifications for all operations from operation group and removes from these specifications operations other than those that are included into operation group.
          - **mergedSpecification** - process the merges all operations from an operation group into one specification.
        in: path
        required: true
        schema:
          type: string
          enum:
            - reducedSourceSpecifications
            - mergedSpecification
      - name: groupName
        in: path
        required: true
        description: Name of the operation group
        schema:
          type: string
    get:
      tags:
        - Export
        - Operation groups
      summary: Export operations group as OpenAPI documents
      description: |
        Export all operations from an operations group (with apiType = REST API) as OpenAPI specification(s).
      operationId: getPackagesIdVersionsIdExportGroupNameV3
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - name: format
          in: query
          required: true
          description: | 
            Format of the exported file.\
            If buidType = reducedSourceSpecifications, then format can be yaml, json or html.\
            If buidType = mergedspecification, then format can be yaml or json; html is not supported for this buildType.
          schema:
            type: string
            enum:
              - yaml
              - json
              - html
            default: json
      responses:
        "200":
          description: Success
          content:
            application/zip:
              schema:
                type: string
                format: binary
                description: ZIP file to download. ZIP will be returned if buildType = reducedSourceSpecifications
            application/json:
              schema:
                type: string
                format: binary
                description: JSON file to download. JSON will be returned if buidType = mergedspecification and format = json
            application/yaml:
              schema:
                type: string
                format: binary
                description: YAML file to download. YAML will be returned if buidType = mergedspecification and format = yaml
          headers:
            Content-Disposition:
              schema:
                type: string
                description: File name
                example: attachment; filename="<groupName>_<package.id>_<version>.zip"
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: { }
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/files/{slug}/raw":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - $ref: "#/components/parameters/version"
      - $ref: "#/components/parameters/slug"
    get:
      tags:
        - Versions
      summary: Get file data (published)
      description: Get the published content object in a RAW format
      operationId: getPackagesIdVersionsIdFilesSlugRaw
      security:
        - BearerAuth: []
        - api-key: []
      responses:
        "200":
          description: Success
          content:
            plain/text:
              schema:
                description: TXT file content (JSON, YAML, MD, TXT).
                type: string
            application/octet-stream:
              schema:
                description: Binary content for unsupported file types (doc, xls, jpg, png, etc.).
                type: string
                format: binary
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/files/{slug}/doc":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - $ref: "#/components/parameters/version"
      - $ref: "#/components/parameters/slug"
    get:
      tags:
        - Export
      summary: Export offline API documentation by selected file
      description: |
        Export of offline API documentation by selected file as a zip archive. 
        Type of the documentation file is provided as input parameters:
        - interactive - html document
        - raw - yaml/json document.
      operationId: getPackagesIdVersionsIdFilesSlugDoc
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - name: docType
          in: query
          description: Type of the exported documentation.
          required: false
          schema:
            type: string
            enum:
              - interactive
              - raw
            default: interactive
      responses:
        "200":
          description: Success
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                description: Documentation ZIP file (if docType = interactive) or yaml/json (if docType = raw) to download
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
                VersionNotFound:
                  $ref: "#/components/examples/VersionNotFound"
                FileNotFound:
                  $ref: "#/components/examples/FileNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/sourceData":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - $ref: "#/components/parameters/version"
    get:
      tags:
        - Export
        - Versions
      summary: Export sources of package version with build config
      description: |
        Export sources of package version as a zip archive and build configuration that was used for this version.
      operationId: getPackageVersionSourcesWithBuildConfig
      security:
          - BearerAuth: [ ]
          - api-key: [ ]
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                description: Build configuration and ZIP file with package version sources to download
                properties:
                  sources:
                    type: string
                    description: ZIP file with package version sources to download
                  config:
                    $ref: "#/components/schemas/BuildConfig"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: { }
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: { }
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
                VersionNotFound:
                  $ref: "#/components/examples/VersionNotFound"
                FileNotFound:
                  $ref: "#/components/examples/FileNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/doc":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - $ref: "#/components/parameters/version"
    get:
      tags:
        - Export
      summary: Export offline API documentation by selected versions
      description: |
        Export of offline API documentation by selected version (all files) as a zip archive. 
        Type of the documentation file is provided as input parameters:
        * interactive - html document.
      operationId: getPackagesIdVersionsIdDoc
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - name: docType
          in: query
          description: Type of the exported documentation.
          required: false
          schema:
            type: string
            enum:
              - interactive
            default: interactive
      responses:
        "200":
          description: Success
          content:
            application/zip:
              schema:
                type: string
                format: binary
                description: Documentation ZIP file to download
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
                VersionNotFound:
                  $ref: "#/components/examples/VersionNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/roles":
    post:
      tags:
        - Roles
      summary: Create a new role
      description: |
        Create a new role with the set of available permissions for this role. 

        The role may be assigned to the user for the specific package.

        The "read content of public packages" permissions is applied for all roles by default (except the private packages with default role = **none**).
      operationId: postRoles
      requestBody:
        description: Role creation parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoleCreate"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Role"
                  - type: object
                    properties:
                      permissions:
                        type: array
                        description: List of permissions applicable to the role.
                        items:
                          $ref: "#/components/schemas/Permission"
                        example: ["read", "create_and_update_package", "delete_package"]
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      tags:
        - Roles
      summary: Get list of existing roles
      description: List of all roles and their permissions.
      operationId: getRoles
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    description: List of existing roles.
                    type: array
                    items:
                      allOf:
                        - $ref: "#/components/schemas/Role"
                        - type: object
                          properties:
                            readOnly:
                              description: |
                                A flag that indicates an immutability of a role. readOnly roles cannot be changed or deleted.
                              type: boolean
                              default: false
                            permissions:
                              type: array
                              description: List of permissions applicable to the role.
                              items:
                                $ref: "#/components/schemas/Permission"
                              example: ["read", "create_and_update_package", "delete_package"]
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/api/v2/roles/{roleId}":
    parameters:
      - name: roleId
        in: path
        required: true
        description: Role identifier.
        schema:
          type: string
          pattern: "^[a-z0-9-]"
          example: editor
    patch:
      tags:
        - Roles
      summary: Update role
      description: |
        Change role parameters. 

        If the parameter is not transmitted in the request, its value remains unchanged.

        Read only roles can't be updated.
      operationId: patchRolesId
      requestBody:
        description: Role update parameters.
        content:
          application/json:
            schema:
              type: object
              required:
                - permissions
              properties:
                permissions:
                  description: |
                    List of role permissions.
                    Current role permissions will be replaced by the transmitted list.
                  type: array
                  items:
                    $ref: "#/components/schemas/Permission"
                  example: ["read", "create_and_update_package", "delete_package"]
      responses:
        "204":
          description: No content
          content: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
    delete:
      tags:
        - Roles
      summary: Delete role
      description: |
        Delete a role with its permissions. 

        When the role is deleted, all users with that role shall be removed from packages.

        Roles with **readOnly:true** flag can't be deleted.
      operationId: deleteRolesId
      responses:
        "204":
          description: No content
          content: {}
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/roles/changeOrder":
    post:
      tags:
        - Roles
      summary: Update the roles order
      description: |
        Update the roles order. 

        The list of roles will be replaced, all existing roles are required in request (return an error otherwise).
      operationId: postRolesChangeOrder
      requestBody:
        description: Roles list
        content:
          application/json:
            schema:
              type: object
              description: List of roles.
              required:
                - roles
              properties:
                roles:
                  type: array
                  items:
                    type: string
                  example: [admin, owner, release-manager, editor, viewer, none]
      responses:
        "204":
          description: No content
          content: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/api/v2/permissions":
    get:
      tags:
        - Roles
      summary: Get list of permissions
      description: List of all permissions.
      operationId: getPermissions
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  permissions:
                    description: List of available permissions.
                    type: array
                    items:
                      type: object
                      properties:
                        permission:
                          $ref: "#/components/schemas/Permission"
                        name:
                          type: string
                          description: Name of the permission
                          example: Read content of public package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/api/v2/packages/{packageId}/availableRoles":
    parameters:
      - $ref: "#/components/parameters/packageId"
    get:
      tags:
        - Roles
      summary: Get list of available roles for package
      description: |
        List of available roles to change for package and current user (by access token).
      operationId: getPackagesIdAvailableRoles
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - name: id
          in: query
          description: Login of the user
          required: false
          schema:
            type: string
            example: user1221
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                description: List of available roles.
                properties:
                  roles:
                    description: List of available roles.
                    type: array
                    items:
                      allOf:
                        - $ref: "#/components/schemas/Role"
                        - type: object
                          properties:
                            readOnly:
                              description: |
                                A flag that indicates an immutability of a role. readOnly roles cannot be changed or deleted.
                              type: boolean
                              default: false
                            permissions:
                              type: array
                              description: List of permissions applicable to the role.
                              items:
                                $ref: "#/components/schemas/Permission"
                              example: ["read", "create_and_update_package", "delete_package"]
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/members":
    parameters:
      - $ref: "#/components/parameters/packageId"
    post:
      tags:
        - Roles
        - Users
      summary: Add members to the package
      description: |
        Add new user (one user or multiple users) with a role to the package.
        A member may be added to the package if the assigned role is greater than the existing one.
      operationId: postPackagesIdMembers
      security:
        - BearerAuth: []
        - api-key: []
      requestBody:
        description: Package members assignment parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MemberCreate"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  members:
                    description: List of the package's users with roles
                    type: array
                    items:
                      $ref: "#/components/schemas/Member"
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
    get:
      tags:
        - Roles
        - Users
      summary: Get the package's members list
      description: List of all users and their roles, assigned to the particular package
      operationId: getPackagesIdMembers
      security:
        - BearerAuth: []
        - api-key: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  members:
                    description: List of the package's users with roles
                    type: array
                    items:
                      $ref: "#/components/schemas/Member"
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/members/{userId}":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - name: userId
        in: path
        required: true
        description: Login of the user
        schema:
          type: string
          example: user1221
    patch:
      tags:
        - Roles
        - Users
      summary: Package member update
      description: |
        Change the member parameters on the package
      operationId: patchPackagesIdMembersId
      security:
        - BearerAuth: []
        - api-key: []
      requestBody:
        description: Package member update parameters
        content:
          application/json:
            schema:
              type: object
              required:
                - roleId
                - action
              properties:
                roleId:
                  type: string
                  description: Unique role identifier. The value is the slug of role name.
                  example: editor
                action:
                  type: string
                  description: Name of the action with user role.
                  enum:
                    - add
                    - remove
      responses:
        "204":
          description: No content
          content: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
    delete:
      tags:
        - Roles
        - Users
      summary: Package member delete
      description: |
        Delete (unassign) the member from the package. Response variants logic:
        * 200 - if the user has direct role assigned to the current package AND assignment to the parent package, will be returned his inherited role.
        * 204 - if the user has only direct role assigned to the current package, this assignment will be deleted.
      operationId: deletePackagesIdMembersId
      security:
        - BearerAuth: []
        - api-key: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  member:
                    $ref: "#/components/schemas/Member"
        "204":
          description: No content
          content: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/admins":
    post:
      x-api-audience: noBWC
      tags:
        - Roles
      summary: Add a system administrator
      description: |
        Add an existing user as a system administrator.
      operationId: postAdmins
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  description: Login of the user.
                  type: string
                  example: user1221
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  admins:
                    description: List of system administrators.
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
    get:
      x-api-audience: noBWC
      tags:
        - Roles
      summary: Get list of system administrators
      description: Get list of system administrators.
      operationId: getAdmins
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  admins:
                    description: List of system administrators.
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/admins/{userId}":
    delete:
      x-api-audience: noBWC
      tags:
        - Roles
      summary: Delete system administrator
      description: Delete a user from the system administrators group.
      operationId: deleteAdminsId
      parameters:
        - name: userId
          description: Login of the user.
          in: path
          required: true
          schema:
            type: string
            example: user1221
      responses:
        "204":
          description: No content
          content: {}
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/sharedFiles":
    post:
      tags:
        - Versions
      summary: Share a published file
      description:
        Create public link for file that can be used to retrieve the file without security restrictions.
        The link could be used to embed file content.
      operationId: postSharedFiles
      requestBody:
        description: Parameters of package file sharing
        content:
          application/json:
            schema:
              type: object
              required:
                - packageId
                - version
                - slug
              properties:
                packageId:
                  description: Package unique identifier (full alias)
                  type: string
                  example: "QS.CloudQSS.CPQ.Q-TMF"
                version:
                  description: Package version
                  type: string
                  example: "2022.3"
                slug:
                  description: File unique string identifier
                  type: string
                  pattern: "^[a-z0-9-]"
                  example: "qitmf-v5-11-json"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  sharedFileId:
                    type: string
                    description: Shared file id
                    pattern: "^[a-z0-9]"
                    example: ebbcce45
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/sharedFiles/{sharedFileId}":
    get:
      tags:
        - Versions
      summary: Get shared file data
      description: Get shared file data by public shared link
      operationId: getSharedFilesId
      security: [{}]
      parameters:
        - name: sharedFileId
          in: path
          description: Shared file id
          required: true
          schema:
            type: string
            maxLength: 8
            pattern: "^[a-z0-9]"
          example: ebbcce45
      responses:
        "200":
          description: Success
          content:
            plain/text:
              schema:
                description: TXT file content (JSON, YAML, MD, TXT).
                type: string
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/builders/{builderId}/tasks":
    parameters:
      - $ref: "#/components/parameters/builderId"
    post:
      tags:
        - Publish
        - Admin
      summary: Assign build task to Builder
      description: |
        Returns empty response 204 (in case of no free build task to assign) or multipart form (src+config, matching current start build payload)
      operationId: postBuilderIdTasks
      security:
        - BearerAuth: []
        - api-key: []
      responses:
        "200":
          description: Build task assigned
          content:
            application/zip:
              schema:
                type: object
                properties:
                  sources/:
                    type: string
                    description: |
                      Folder with source files for publish
                      **Required**, if the files array is filled in config.
                    format: binary
                  config.json:
                    type: object
                    description: |
                      Configuration of the source files.
                      Files or/and Refs are **required**.
                    required:
                      - version
                      - status
                    properties:
                      version:
                        description: Version name for publication.
                        type: string
                        example: "2022.3"
                      previousVersion:
                        description: Name of the previous published version.
                        type: string
                        example: "2022.2"
                        default: ""
                      previousVersionPackageId:
                        description: Previous release version package id.
                        type: string
                        example: "QS.CQSS.CPQ.TMF"
                      status:
                        $ref: "#/components/schemas/VersionStatusEnum"
                      versionLabels:
                        description: List of version labels.
                        type: array
                        items:
                          type: string
                        example: ["part-of:CloudQSS-CPQBE"]
                      files:
                        description: |
                          Detailed data about files in sources archive.
                          Required in no Refs are provided.
                        type: array
                        items:
                          type: object
                          required:
                            - fileId
                          properties:
                            fileId:
                              type: string
                              description: File name.
                              example: "qitmf-v5.11.json"
                            publish:
                              description: Flag, publish the source file or not.
                              type: boolean
                              default: true
                            labels:
                              description: List of file labels.
                              type: array
                              items:
                                type: string
                              example: ["TMF"]
                            blobId:
                              description: Git blob ID of the file.
                              type: string
                              example: a5d45af7
                            xApiKind:
                              description: Custom x-api-kind parameter.
                              type: string
                              example: "no-BWC"
                      refs:
                        description: |
                          Detailed data about referenced versions for current package version.
                          Required in no Files are provided.
                        type: array
                        items:
                          type: object
                          required:
                            - refId
                            - version
                            - type
                          properties:
                            refId:
                              description: Referenced package Id.
                              type: string
                              example: "QS.CloudQSS.CPQ.CORE"
                            version:
                              description: Referenced package version number.
                              type: string
                              example: "2022.2@5"
        "204":
          description: No content
          content: {}
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v3/search/{searchLevel}":
    parameters:
      - name: searchLevel
        in: path
        required: true
        description: |
          Level of object for search.
        schema:
          type: string
          enum:
            - operations
            - documents
            - packages
    post:
      x-api-audience: noBWC
      tags:
        - Search
      summary: "Global search"
      description: Global search by text or custom parameters
      operationId: postSearch
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      requestBody:
        description: Filters for search
        content:
          application/json:
            schema:
              type: object
              required:
                - searchString
              title: searchCommonParams
              description: Common parameters for Global search
              properties:
                searchString:
                  description: Search by common text fields (summary, description, title, etc.).
                  type: string
                  example: "Billing account"
                packageIds:
                  description: |
                    List of Package Id(s). 
                    * If user specified Workspace(s), then Workspace Id(s) must be transmitted.
                    * If user specified Workspace(s) and Group(s), then Group Id(s) must be transmitted.
                    * If user specified Workspace(s), Group(s) and Package(s) or Workspace(s) and Package(s), then Package Id(s) must be transmitted.
                  type: array
                  items:
                    type: string
                  example: ["QS.CloudQSS.CPQ.Q-TMF", "QS.CloudQSS.CPQ.CORE"]
                versions:
                  description: Package version names.
                  type: array
                  items:
                    type: string
                  example: ["2022.2", "2022.3"]
                statuses:
                  description: List of package version statuses
                  type: array
                  items:
                    $ref: "#/components/schemas/VersionStatusEnum"
                creationDateInterval:
                  description: |
                    Search interval for the package version publication date.
                    Both dates are included.
                  type: object
                  properties:
                    startDate:
                      description: Start date of the search.
                      type: string
                      format: date
                      default: "1970-01-01"
                    endDate:
                      description: End date of the search.
                      type: string
                      format: date
                      default: "2050-12-31"
                operationParams:
                  type: object
                  title: ApiSpecificParams
                  description: Search parameters specific for particular API type.
                  required:
                    - apiType
                  oneOf:
                    - type: object
                      description: |
                        Search parameters specific for REST API.
                        These params shall be used only if apiType in search request equals to REST API.
                      title: SearchRestParams
                      properties:
                        apiType:
                          description: Type of the API
                          type: string
                          enum:
                            - rest
                        scope:
                          description: Search scope for operation
                          type: array
                          items:
                            type: string
                            enum:
                              - request
                              - response
                        detailedScope:
                          description: Detailed search scope for operation
                          type: array
                          items:
                            type: string
                            enum:
                              - properties
                              - annotation
                              - examples
                        methods:
                          description: Operation method
                          type: array
                          items:
                            type: string
                            enum:
                              - post
                              - get
                              - put
                              - patch
                              - delete
                              - head
                              - options
                              - connect
                              - trace
                          example: ["post", "get"]
                    - type: object
                      description: |
                        Search parameters specific for GraphQL.
                        These params shall be used only if apiType in search request equals to GraphQL.
                      title: SearchGQLParams
                      properties:
                        apiType:
                          description: Type of the API
                          type: string
                          enum:
                            - graphql
                        scope:
                          type: array
                          items:
                            type: string
                            enum:
                              - argument
                              - property
                              - annotation
                        operationTypes:
                          type: array
                          items:
                            type: string
                            enum:
                              - query
                              - mutation
                              - subscription
            examples: {}
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: Results of the global search list
                type: object
                properties:
                  operations:
                    type: array
                    items:
                      $ref: "#/components/schemas/SearchResultOperation"
                  documents:
                    type: array
                    items:
                      $ref: "#/components/schemas/SearchResultDocument"
                  packages:
                    type: array
                    items:
                      $ref: "#/components/schemas/SearchResultPackage"
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/search/{searchLevel}":
    parameters:
      - name: searchLevel
        in: path
        required: true
        description: |
          Level of object for search.
        schema:
          type: string
          enum:
            - operations
            - documents
            - packages
    post:
      deprecated: true
      x-api-audience: noBWC
      tags:
        - Search
      summary: "Global search"
      description: Global search by text or custom parameters
      operationId: postSearchV2
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      requestBody:
        description: Filters for search
        content:
          application/json:
            schema:
              type: object
              required:
                - searchString
              title: searchCommonParams
              description: Common parameters for Global search
              properties:
                searchString:
                  description: Search by common text fields (summary, description, title, etc.).
                  type: string
                  example: "Billing account"
                packageIds:
                  description: |
                    List of Package Id(s). 
                    * If user specified Workspace(s), then Workspace Id(s) must be transmitted.
                    * If user specified Workspace(s) and Group(s), then Group Id(s) must be transmitted.
                    * If user specified Workspace(s), Group(s) and Package(s) or Workspace(s) and Package(s), then Package Id(s) must be transmitted.
                  type: array
                  items:
                    type: string
                  example: ["QS.CloudQSS.CPQ.Q-TMF", "QS.CloudQSS.CPQ.CORE"]
                versions:
                  description: Package version names.
                  type: array
                  items:
                    type: string
                  example: ["2022.2", "2022.3"]
                statuses:
                  description: List of package version statuses
                  type: array
                  items:
                    description: Package version status
                    type: string
                    enum:
                      - draft
                      - release
                      - archived
                creationDateInterval:
                  description: |
                    Search interval for the package version publication date.
                    Both dates are included.
                  type: object
                  properties:
                    startDate:
                      description: Start date of the search.
                      type: string
                      format: date
                      default: "1970-01-01"
                    endDate:
                      description: End date of the search.
                      type: string
                      format: date
                      default: "2050-12-31"
                operationParams:
                  type: object
                  title: ApiSpecificParams
                  description: Search parameters specific for particular API type.
                  required:
                    - apiType
                  oneOf:
                    - type: object
                      description: |
                        Search parameters specific for REST API.
                        These params shall be used only if apiType in search request equals to REST API.
                      title: SearchRestParams
                      properties:
                        apiType:
                          description: Type of the API
                          type: string
                          enum:
                            - rest
                        scope:
                          description: Search scope for operation
                          type: array
                          items:
                            type: string
                            enum:
                              - request
                              - response
                        detailedScope:
                          description: Detailed search scope for operation
                          type: array
                          items:
                            type: string
                            enum:
                              - properties
                              - annotation
                              - examples
                        methods:
                          description: Operation method
                          type: array
                          items:
                            type: string
                            enum:
                              - post
                              - get
                              - put
                              - patch
                              - delete
                              - head
                              - options
                              - connect
                              - trace
                          example: ["post", "get"]
                    - type: object
                      description: |
                        Search parameters specific for REST API.
                        These params shall be used only if apiType in search request equals to GraphQL.
                      title: SearchGQLParams
                      properties:
                        apiType:
                          description: Type of the API
                          type: string
                          enum:
                            - graphql
                        scope:
                          type: array
                          items:
                            type: string
                            enum:
                              - argument
                              - property
                              - annotation
            examples: {}
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: Results of the global search list
                type: object
                properties:
                  operations:
                    type: array
                    items:
                      $ref: "#/components/schemas/SearchResultOperationV2"
                  documents:
                    type: array
                    items:
                      description: Global search result for documents; must be returned when searchLevel = document
                      title: SearchResultDocument
                      type: object
                      required:
                        - packageId
                        - name
                        - parentPackages
                        - version
                        - status
                        - files
                        - slug
                        - type
                        - title
                      properties:
                        packageId:
                          description: Package unique string identifier (full alias)
                          type: string
                          example: "QS.CloudQSS.CPQ.Q-TMF"
                        name:
                          description: Package name
                          type: string
                          example: "Quote TMF Service"
                        parentPackages:
                          description: Array of parent package names
                          type: array
                          items:
                            type: string
                        version:
                          description: Package version name.
                          type: string
                          example: "2022.2@5"
                        status:
                          description: Package version status
                          type: string
                          enum:
                            - draft
                            - release
                            - archived
                        slug:
                          description: Published document slug
                          type: string
                          pattern: "^[a-z0-9-]"
                          example: "qitmf-v5-11-json"
                        type:
                          description: Type of the specification notation.
                          type: string
                          enum:
                            - openapi-3-1
                            - openapi-3-0
                            - openapi-2-0
                            - asyncapi-2
                            - json-schema
                            - markdown
                            - unknown
                        title:
                          description: Name/title of the document.
                          type: string
                          example: "Quote Integration TMForum Service"
                        labels:
                          description: List of documents labels.
                          type: array
                          items:
                            type: string
                          example: ["TMF"]
                        createdAt:
                          description: Date of the package version publication
                          type: string
                          format: date-time
                        content:
                          type: string
                          description: |
                            String with search term occurrences in the document.
                            If document content does not contain search term, then return N first characters.
                            If document is empty, then this property will be empty.
                  packages:
                    type: array
                    items:
                      title: SearchResultPackage
                      description: |
                        Global search result for packages with kind = package; must be returned when searchLevel = package
                        * If search term matches the package id/name/description/service name, return the latest published version only. 
                        * If search term matches the version name/label, return that version.
                      type: object
                      required:
                        - packageId
                        - name
                        - parentPackages
                        - createdAt
                        - version
                        - revision
                        - status
                      properties:
                        packageId:
                          description: Package unique string identifier (full alias)
                          type: string
                          example: "QS.CloudQSS.CPQ.Q-TMF"
                        name:
                          description: Package name
                          type: string
                          example: "Quote TMF Service"
                        description:
                          description: Package description
                          type: string
                        serviceName:
                          description: Service name that package belongs to. Should be equal to service deployment name in kubernetes.
                          type: string
                        parentPackages:
                          description: Array of parent package names
                          type: array
                          items:
                            type: string
                        version:
                          description: Package version name.
                          type: string
                          example: "2022.2@5"
                        latestRevision:
                          description: |
                            true if revision is the latest one.
                          type: boolean
                          default: false
                        status:
                          description: Package version status
                          type: string
                          enum:
                            - draft
                            - release
                            - archived
                        createdAt:
                          description: Date of the package version publication
                          type: string
                          format: date-time
                        labels:
                          description: List of package version labels
                          type: array
                          items:
                            type: string
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/agents":
    get:
      tags:
        - Agent
      summary: Get list of all Agent instances
      description: Get a list of clouds on which Agent instances are installed that have registered themselves in APIHUB Registry
      operationId: getAgents
      parameters:
        - name: onlyActive
          in: query
          description: Defines whether return all Agent instances or only active instances
          required: true
          schema:
            type: boolean
            default: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                description: Array of Agent instances
                items:
                  type: object
                  properties:
                    agentId:
                      type: string
                      description: Id of Agent instance
                    cloud:
                      type: string
                      description: Cloud name where Agent is deployed
                    namespace:
                      type: string
                      description: Cloud namespace where Agent is deployed
                    url:
                      type: string
                      description: The URL to the Agent
                    lastActive:
                      type: string
                      format: date-time
                      description: the last time when Agent register itself in registry
                    status:
                      type: string
                      description: status of Agent instance
                    backendVersion:
                      type: string
                      description: Backend version of Agent instance
                    agentVersion:
                      type: string
                      description: Version of Agent instance
                    compatibilityError:
                      type: object
                      properties:
                        severity:
                          type: string
                          enum:
                            - error
                            - warning
                          description: Severity of compatibility error
                        message:
                          type: string
                          description: Description of compatibility error
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
    post:
      x-api-audience: noBWC
      tags:
        - Agent
      summary: Agent registration
      description: Agent registration in APIHUB registry
      operationId: postAgentRegistration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - cloud
                - namespace
                - url
                - backendVersion
              properties:
                cloud:
                  type: string
                  description: Cloud name where Agent is deployed
                namespace:
                  type: string
                  description: Cloud namespace where Agent is deployed
                url:
                  type: string
                  description: The URL to the Agent
                backendVersion:
                  type: string
                  description: Backend version of Agent instance
                agentVersion:
                  type: string
                  description: Version of Agent instance
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    description: Expected version of Agents
          description: Success
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  '/api/v2/agents/{agentId}/namespaces/{name}/serviceNames':
    get:
      summary: Get list of service names
      description: |
        Synchronously get list of service names in selected namespace without discovery.
      operationId: getNamespaceServicesNames
      tags:
        - Agent
      parameters:
        - $ref: "#/components/parameters/AgentId"
        - $ref: "#/components/parameters/Namespace"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - serviceNames
                properties:
                  serviceNames:
                    description: List of the service names in namespace
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: service id
                        name:
                          type: string
                          description: service name
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "424":
          description: Failed dependency
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  /agents/{agentId}/namespaces/{name}/services/{serviceId}/proxy/{path}:
    get:
      summary: Proxy endpoint to service
      description: Proxy endpoint to service
      operationId: getAgentsIdNamespacesIdServicesProxy
      security:
        - {}
      tags:
        - Agent
        - TryIt
      parameters:
        - $ref: "#/components/parameters/AgentId"
        - $ref: "#/components/parameters/Namespace"
        - $ref: "#/components/parameters/ServiceId"
        - name: path
          in: path
          required: true
          schema:
            type: string
          description: String that includes paths and query params
          example: api/v2/escaped/te%20xt/text/text123?escaped=te%20xt
        - name: X-Apihub-Authorization
          in: header
          schema:
            type: string
          description: |
            nc-service authorization:
              * if system env INSECURE_PROXY is empty or false, then X-Apihub-Authorization is **required**
              * if system env INSECURE_PROXY = true, then then X-Apihub-Authorization is optional
      responses:
        1XX:
          description: Information responses
          content:
            "*/*":
              schema:
                description: Schema of any type
        2XX:
          description: Successful responses
          content:
            "*/*":
              schema:
                description: Schema of any type
        3XX:
          description: Redirection messages
          content:
            "*/*":
              schema:
                description: Schema of any type
        4XX:
          description: Client error responses
          content:
            "*/*":
              schema:
                description: Schema of any type
        5XX:
          description: Server error responses
          content:
            "*/*":
              schema:
                description: Schema of any type
  "/api/v2/agents/{agentId}/namespaces":
    get:
      summary: Get Namespace list
      description: Get Namespace list from current Cloud.
      operationId: getAgentsIdNamespaces
      tags:
        - Agent
      parameters:
        - $ref: "#/components/parameters/AgentId"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  namespaces:
                    description: List of cloud Namespaces
                    type: array
                    items:
                      type: string
                      description: Namespace name
                  cloudName:
                    type: string
                    description: Cloud name
        "424":
          description: Failed dependency
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/api/internal/users":
    post:
      x-api-audience: noBWC
      tags:
        - Users
        - Admin
      summary: Create internal user
      description: |
        Creation of the internal user, not connected to LDAP or GitLab.
        * If the userId already exists, return an error. 
        * One email may be connected to several users at one time, no unique constraint.
        * The password will be stored in an encrypted form locally.
      operationId: postUsers
      security: [{}]
      requestBody:
        description: User for creation
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  description: Email address of the user
                  type: string
                  format: email
                  example: "name.surname@qubership.org"
                name:
                  description: Name of the user
                  type: string
                  example: "Name Surname"
                password:
                  type: string
                  description: User password.
                  format: password
                privateWorkspaceId:
                  type: string
                  description: PackageId for personal private workspace
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/users":
    get:
      tags:
        - Users
      summary: Get users list
      description: List of all users with detailed info
      operationId: getUsers
      security:
        - BearerAuth: []
      parameters:
        - name: textFilter
          in: query
          description: Filter by userId (login)/name/email address.
          schema:
            type: string
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    description: List of all available users
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
              examples: {}
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/users/{userId}":
    get:
      tags:
        - Users
      summary: Get user by id
      description: User's detailed info
      operationId: getUser
      parameters:
        - name: userId
          description: Login of the user
          in: path
          required: true
          schema:
            type: string
            example: user1221
      security:
        - BearerAuth: [ ]
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              examples: { }
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: { }
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: { }
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/users/{userId}/profile/avatar":
    get:
      x-api-audience: noBWC
      tags:
        - Users
        - Admin
      summary: Get the user avatar
      description: |
        Get the user avatar.
        API returns the data of photo file in a png format.
      operationId: getUsersIdProfileAvatar
      security: [{}]
      parameters:
        - name: userId
          description: Login of the user
          in: path
          required: true
          schema:
            type: string
            example: user1221
      responses:
        "200":
          description: Success
          content:
            image/png:
              schema:
                type: string
                format: binary
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/{apiType}/groups/{groupName}/ghosts":
    get:
      tags:
        - Versions
      summary: Get list of ghost operations for operation group
      description: |
        Operation is considered a ghost operation if it was included in this group for previous version revision and was deleted in the current version revision
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - $ref: "#/components/parameters/apiType"
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/groupName"
        - $ref: "#/components/parameters/apiAudience"
        - name: textFilter
          in: query
          description: Filter by title/path/method.
          schema:
            type: string
        - name: documentSlug
          in: query
          description: Filter by document
          schema:
            type: string
            example: "billing-rating-catalog-integration-service1-json"
        - name: tag
          in: query
          description: |
            Name of the tag for filtering/grouping.
            A full match is required. To get the list of available tags use GET /tags API.
          schema:
            type: string
            example: RestControllerV5
        - name: emptyTag
          in: query
          description: |
            Flag, filtering the operations without tags at all.

            In response will be returned the list of operations, on what the tag is not filled in.
            
            This attribute has a higher priority than the **tag**. In case, then **emptyTag: true**, it will override the **tag** filter.
          schema:
            type: boolean
            default: false
        - name: kind
          description: |
            Operation kind.
            * bwc - API with backward compatibility support (a.k.a. public).
            * no-bwc - API without backward compatibility support (a.k.a. internal).
            * experimental - APIs for feature testing. Usage is not recommended.
          in: query
          schema:
            type: string
            enum:
              - all
              - bwc
              - no-bwc
              - experimental
            default: all
        - name: deprecated
          description: Filter operations by 'deprecated' status.
          in: query
          schema:
            type: string
            enum:
              - "all"
              - "true"
              - "false"
            default: all
        - name: refPackageId
          description: Filter by package id of ref package, shall be used in case of dashboard.
          in: query
          schema:
            type: string
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: List of group ghost operations.
                type: object
                properties:
                  ghostOperations:
                    type: array
                    description: |
                      List of grouped operations that were present in the previous revision and are deleted in the current revision.
                    items:
                      allOf:
                        - oneOf:
                            - $ref: "#/components/schemas/RestOperation"
                            - $ref: "#/components/schemas/GraphQLOperation"
                            - $ref: "#/components/schemas/ProtobufOperation"
                        - type: object
                          properties:
                            packageRef:
                              description: |
                                Parent package and version link.
                                Created by the concatenation of the packageId and version name with At sign.
                              type: string
                              example: "QS.CloudQSS.CPQ.Q-TMF@2023.2"
                  packages:
                    description: |
                      A mapped list of the packageId and version name concatenation with At sign to the package objects.
                    type: object
                    additionalProperties:
                      allOf:
                        - $ref: "#/components/schemas/ReferencedPackage"
                        - type: object
                      example:
                        QS.CloudQSS.CPQ.Q-TMF@2023.2:
                          refId: QS.CloudQSS.CPQ.Q-TMF
                          kind: package
                          name: Quote Management TMF648
                          version: "2022.2@5"
                          status: release
                          parentPackages: ["qubership", "Qubership JSS", "Sample Management"]
                          deletedAt: "2023-05-30T17:17:11.755146Z"
                          deletedBy: "user1221"
                          notLatestRevision: true
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/{apiType}/operations":
    get:
      tags:
        - Operations
      summary: Get list of operations
      description: |
        Full list of operations without grouping by parent specification document.
        The result list depends on the API type.
      operationId: getPackagesIdVersionsIdApiTypeOperations
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - $ref: "#/components/parameters/apiType"
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/apiAudience"
        - name: skipRefs
          in: query
          description: |
            If false and package has references, then package references (including references to the deleted package versions) shall be resolved.
          schema:
            type: boolean
            default: false
        - name: textFilter
          in: query
          description: "Filter by title/path/method. Custom tag format in search is  key: value. Search works as a complete match"
          schema:
            type: string
        - name: documentSlug
          in: query
          description: Filter by document
          schema:
            type: string
            example: "billing-rating-catalog-integration-service1-json"
        - name: tag
          in: query
          description: |
            Name of the tag for filtering/grouping.
            A full match is required. To get the list of available tags use GET /tags API.
          schema:
            type: string
            example: RestControllerV5
        - name: emptyTag
          in: query
          description: |
            Flag, filtering the operations without tags at all.

            In response will be returned the list of operations, on what the tag is not filled in.
            
            This attribute has a higher priority than the **tag**. In case, then **emptyTag: true**, it will override the **tag** filter.
          schema:
            type: boolean
            default: false
        - name: group
          in: query
          description: |
            Name of the group for filtering.\
            Either "group" or "emptyGroup" (= true) can be sent in the request, if both of them are specified then 400 will be returned in the response.
          schema:
            type: string
            example: v1
        - name: emptyGroup
          in: query
          description: |
            Flag for filtering operations without a group.\
            Either "group" or "emptyGroup" (= true) can be sent in the request, if both of them are specified then 400 will be returned in the response.
          schema:
            type: boolean
            default: false
        - name: kind
          description: |
            Operation kind.
            * bwc - API with backward compatibility support (a.k.a. public).
            * no-bwc - API without backward compatibility support (a.k.a. internal).
            * experimental - APIs for feature testing. Usage is not recommended.
          in: query
          schema:
            type: string
            enum:
              - all
              - bwc
              - no-bwc
              - experimental
            default: all
        - name: deprecated
          description: Filter operations by 'deprecated' status.
          in: query
          schema:
            type: string
            enum:
              - "all"
              - "true"
              - "false"
            default: all
        - name: includeData
          in: query
          description: Include the operation's content data.
          schema:
            type: boolean
            default: false
        - name: ids
          in: query
          description: List of the operationId to filter.
          schema:
            type: array
            items:
              type: string
            example: ["get-quoteManagement-v5-quote", "post-quoteManagement-v5-quote"]
        - name: hashList
          in: query
          description: List of the hash to filter.
          schema:
            type: array
            items:
              type: string
            example: ["sdfsdfsf242", "fhjfjfhjfhj3212"]
        - name: refPackageId
          description: Filter by package id of ref package, shall be used in case of dashboard.
          in: query
          schema:
            type: string
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: List of operations.
                type: object
                properties:
                  operations:
                    type: array
                    items:
                      allOf:
                        - oneOf:
                            - $ref: "#/components/schemas/RestOperation"
                            - $ref: "#/components/schemas/GraphQLOperation"
                            - $ref: "#/components/schemas/ProtobufOperation"
                        - type: object
                          properties:
                            data:
                              description: |
                                Content of the operation as a JSON object.
                                Required, if includeData: true.
                              type: object
                            customTags:
                              description: |
                                Custom tags.
                              type: object
                            packageRef:
                              description: |
                                Parent package and version link.
                                Created by the concatenation of the packageId and version name with At sign.
                              type: string
                              example: "QS.CloudQSS.CPQ.Q-TMF@2023.2"
                  packages:
                    description: |
                      A mapped list of the packageId and version name concatenation with At sign to the package objects.
                    type: object
                    additionalProperties:
                      allOf:
                        - $ref: "#/components/schemas/ReferencedPackage"
                        - type: object
                    example:
                      QS.CloudQSS.CPQ.Q-TMF@2023.2:
                        refId: QS.CloudQSS.CPQ.Q-TMF
                        kind: package
                        name: Quote Management TMF648
                        version: "2022.2@5"
                        status: release
                        parentPackages: ["qubership", "Qubership JSS", "Sample Management"]
                        deletedAt: "2023-05-30T17:17:11.755146Z"
                        deletedBy: "user1221"
                        notLatestRevision: true
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/deprecated/summary":
    get:
      tags:
        - Versions
      summary: Get deprecated operations summary
      description: |
        Get summary of deprecated operations in the version
      operationId: getPackageIdVersionDeprecatedSummaryV3
      security:
        - BearerAuth: [ ]
      parameters:
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/version"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    title: package
                    description: List of changes data.
                    required:
                      - operationTypes
                    properties:
                      operationTypes:
                        type: array
                        items:
                          type: object
                          properties:
                            apiType:
                              $ref: "#/components/schemas/ApiType"
                            deprecatedCount:
                              description: Total number of deprecated operations in the version
                              type: string
                            tags:
                              type: array
                              items:
                                type: string
                              example: [ "tag1", "tag2" ]
                  - type: object
                    title: dashboard
                    required:
                      - refs
                      - packages
                    properties:
                      refs:
                        description: |
                          Refs to packages, which contains deprecated operations/items
                        type: array
                        items:
                          type: object
                          properties:
                            packageRef:
                              description: |
                                Parent package and version link.
                                Created by the concatenation of the packageId and version name with At sign.
                              type: string
                              example: "QS.CloudQSS.CPQ.Q-TMF@2023.2"
                            operationTypes:
                              type: array
                              items:
                                type: object
                                properties:
                                  apiType:
                                    $ref: "#/components/schemas/ApiType"
                                  deprecatedCount:
                                    description: Total number of deprecated operations in the version
                                    type: string
                                  tags:
                                    type: array
                                    items:
                                      type: string
                                    example: [ "tag1", "tag2" ]
                      packages:
                        description: |
                          A mapped list of the packageId and version name concatenation with At sign to the package objects.
                        type: object
                        additionalProperties:
                          allOf:
                            - $ref: "#/components/schemas/ReferencedPackage"
                            - type: object
                        example:
                          QS.CloudQSS.CPQ.Q-TMF@2023.2:
                            refId: QS.CloudQSS.CPQ.Q-TMF
                            kind: package
                            name: Quote Management TMF648
                            version: "2022.2@5"
                            status: release
                            parentPackages: ["qubership", "Qubership JSS", "Sample Management"]
                            deletedAt: "2023-05-30T17:17:11.755146Z"
                            deletedBy: "user1221"
                            notLatestRevision: true
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/{apiType}/deprecated":
    get:
      tags:
        - Versions
      summary: Get list of deprecated operations
      description: |
        List of deprecated operations in the current version
      operationId: getPackagesIdVersionsIdApiTypeDeprecations
      security:
        - BearerAuth: [ ]
        - api-key: [ ]
      parameters:
        - $ref: "#/components/parameters/apiType"
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/apiAudience"
        - name: includeDeprecatedItems
          in: query
          description: Include deprecated items inside operation.
          schema:
            type: boolean
            default: false
        - name: ids
          in: query
          description: List of the operationId to filter.
          schema:
            type: array
            items:
              type: string
            example: [ "get-quoteManagement-v5-quote", "post-quoteManagement-v5-quote" ]
        - name: version
          in: path
          description: |
            Package version. 
            The mask <version>@<revision> may be used for search in a specific revision.
          required: true
          schema:
            type: string
            example: "2022.3@3"
        - name: refPackageId
          description: Filter by package id of ref package, shall be used in case of dashboard.
          in: query
          schema:
            type: string
        - name: textFilter
          in: query
          description: Filter operation by operation title/path/method.
          schema:
            type: string
        - name: apiKind
          description: Filter by API kind
          in: query
          schema:
            type: string
            enum:
              - bwc
              - no-bwc
              - experimental
        - name: documentSlug
          in: query
          description: Document unique string identifier
          schema:
            type: string
            pattern: "^[a-z0-9-]"
            example: "qitmf-v5-11-json"
        - name: tag
          in: query
          description: |
            A full match is required.\
            Multiple tags separated by comma can be specified.
          schema:
            type: string
            example: "tag1, tag2"
        - name: emptyTag
          in: query
          description: |
            Flag, filtering the operations without tags at all.
            In response will be returned the list of operations, on what the tag is not filled in.
            This attribute has a higher priority than the **tag**. In case, then **emptyTag: true**, it will override the **tag** filter.
          schema:
            type: boolean
            default: false
        - name: group
          in: query
          description: |
            Name of the group for filtering.\
            Either "group" or "emptyGroup" (= true) can be sent in the request, if both of them are specified then 400 will be returned in the response.
          schema:
            type: string
            example: v1
        - name: emptyGroup
          in: query
          description: |
            Flag for filtering operations without a group.\
            Either "group" or "emptyGroup" (= true) can be sent in the request, if both of them are specified then 400 will be returned in the response.
          schema:
            type: boolean
            default: false
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  operations:
                    description: |
                      List of discrepancies data of operations in a published version.
                      The resulted list depends on the API type.
                    type: array
                    items:
                      allOf:
                        - type: object
                          properties:
                            packageRef:
                              description: >
                                Parent package and version link. Created by the concatenation of the packageId and version name with At sign.
                              type: string
                              example: QS.CloudQSS.CPQ.Q-TMF@2023.2
                            operationId:
                              description: Operation generated unique identifier (slug).
                              type: string
                              example: get-quoteManagement-v5-quote
                            title:
                              description: Operation summary/title.
                              type: string
                            apiKind:
                              description: Operation API kind
                              type: string
                              enum:
                                - bwc
                                - no-bwc
                                - experimental
                            deprecated:
                              description: True if the operation itself is deprecated.
                              type: boolean
                            deprecatedInPreviousVersions:
                              description: List of previous release versions where operation was also deprecated
                              type: array
                              items:
                                type: string
                              example: [ "2022.2", "2022,1", "2021.4" ]
                            deprecatedCount:
                              type: string
                              description: number of deprecated items in the operation
                            deprecatedInfo:
                              description: |
                                Additional information about deprecated operation:
                                * for REST API it is value of 'x-deprecated-meta' extension (value of extension must be string), which is defined for deprecated operation. 
                                * for GraphQL API it is value of 'reason' argument of @deprecated directive, which is defined for deprecated operation.
                              type: string
                            deprecatedItems:
                              allOf:
                                - $ref: "#/components/schemas/DeprecatedItems"
                                - type: object
                                  description: List of deprecated items in the operation. deprecatedItems is required only if includeDeprecatedItems = true
                            externalMetadata:
                              description: External operation metadata.
                              type: object
                        - oneOf:
                            - $ref: "#/components/schemas/RestOperationMeta"
                            - $ref: "#/components/schemas/GraphQLOperationMeta"
                            - $ref: "#/components/schemas/ProtobufOperationMeta"
                  packages:
                    description: >
                      A mapped list of the packageId and version name
                      concatenation with At sign to the package objects.
                    type: object
                    additionalProperties:
                      allOf:
                        - $ref: "#/components/schemas/ReferencedPackage"
                        - type: object
                    example:
                      QS.CloudQSS.CPQ.Q-TMF@2023.2:
                        refId: QS.CloudQSS.CPQ.Q-TMF
                        kind: package
                        name: Quote Management TMF648
                        version: "2022.2@5"
                        status: release
                        parentPackages: ["qubership", "Qubership JSS", "Sample Management"]
                        deletedAt: "2023-05-30T17:17:11.755146Z"
                        deletedBy: "user1221"
                        notLatestRevision: true
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/{apiType}/operations/{operationId}/deprecatedItems":
    get:
      tags:
        - Operations
      summary: Deprecated items of single operation
      description: |
        Get list of all deprecated items inside of the single operation.\
        Deprecated item is entity that is deprecated inside of API operation. For example for REST API it can be parameter or schema, for GraphQL API - field or enum value.
      operationId: getPackagesIdVersionsApiTypeOperationsIddeprecatedItems
      security:
        - BearerAuth: [ ]
        - api-key: [ ]
      parameters:
        - $ref: "#/components/parameters/apiType"
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/operationId"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  deprecatedItems:
                    $ref: "#/components/schemas/DeprecatedItems"
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/{apiType}/operations/{operationId}/models/{modelName}/usages":
    get:
      tags:
        - Operations
      summary: List of operations with the same model
      description: |
        Get list of operations that have the same model
      operationId: getPackagesIdVersionsApiTypeOperationsIdModelsModelName
      security:
        - BearerAuth: [ ]
        - api-key: [ ]
      parameters:
        - $ref: "#/components/parameters/apiType"
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/operationId"
        - $ref: "#/components/parameters/modelName"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  modelUsages:
                    description: List of operationIds and model names
                    type: array
                    items:
                      type: object
                      properties:
                        operationId:
                          description: Operation unique identifier (slug). Not the same as operationId tag from the OpenAPI file.
                          type: string
                          example: get-quoteManagement-v5-quote
                        modelNames:
                          description: List of models with the same hash.
                          type: array
                          items:
                            type: string
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/{apiType}/export/operations":
    get:
      tags:
        - Operations
      summary: Export operations to xlsx file
      description: |
        Export operations of specific API type.
      operationId: getPackagesIdVersionsIdApiTypeOperationsExport
      security:
        - BearerAuth: [ ]
        - api-key: [ ]
      parameters:
        - $ref: "#/components/parameters/apiType"
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/apiAudience"
        - name: textFilter
          in: query
          description: Filter by title/path/method.
          schema:
            type: string
        - name: tag
          in: query
          description: |
            Name of the tag for filtering/grouping.
            A full match is required. To get the list of available tags use GET /tags API.
          schema:
            type: string
            example: RestControllerV5
        - name: emptyTag
          in: query
          description: |
            Flag, filtering the operations without tags at all.
            In response will be returned the list of operations, on what the tag is not filled in.
            This attribute has a higher priority than the **tag**. In case, then **emptyTag: true**, it will override the **tag** filter.
          schema:
            type: boolean
            default: false
        - name: kind
          description: |
            Operation kind.
            * bwc - API with backward compatibility support (a.k.a. public).
            * no-bwc - API without backward compatibility support (a.k.a. internal).
            * experimental - APIs for feature testing. Usage is not recommended.
          in: query
          schema:
            type: string
            enum:
              - all
              - bwc
              - no-bwc
              - experimental
            default: all
        - name: group
          in: query
          description: |
            Name of the group for filtering.\
            The filter is applied only to the groups of current version. Groups from previous version will be ignored.\
            Either "group" or "emptyGroup" (= true) can be sent in the request, if both of them are specified then 400 will be returned in the response.
          schema:
            type: string
            example: v1
        - name: emptyGroup
          in: query
          description: |
            Flag for filtering operations without a group.\
            The filter is applied only to the groups of current version. Groups from previous version will be ignored.\
            Either "group" or "emptyGroup" (= true) can be sent in the request, if both of them are specified then 400 will be returned in the response.
          schema:
            type: boolean
            default: false
        - name: refPackageId
          description: Filter by package id of ref package, shall be used in case of dashboard.
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/xlsx:
              schema:
                type: string
                format: binary
                description: xlsx file to download
          headers:
            Content-Disposition:
              schema:
                type: string
                description: xlsx file name
                example: attachment; filename="APIOperations_package.id_version.xlsx"
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: { }
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/{apiType}/export/operations/deprecated":
    get:
      tags:
        - Operations
      summary: Export deprecated operations to xlsx file
      description: |
        Export operations of specific API type.
      operationId: getPackagesIdVersionsIdApiTypeOperationsExport
      security:
        - BearerAuth: [ ]
        - api-key: [ ]
      parameters:
        - $ref: "#/components/parameters/apiType"
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/apiAudience"
        - name: textFilter
          in: query
          description: Filter by title/path/method.
          schema:
            type: string
        - name: tag
          in: query
          description: |
            A full match is required.\
            Multiple tags separated by comma can be specified.
          schema:
            type: string
            example: "tag1, tag2"
        - name: kind
          description: |
            Operation kind.
            * bwc - API with backward compatibility support (a.k.a. public).
            * no-bwc - API without backward compatibility support (a.k.a. internal).
            * experimental - APIs for feature testing. Usage is not recommended.
          in: query
          schema:
            type: string
            enum:
              - all
              - bwc
              - no-bwc
              - experimental
            default: all
        - name: emptyTag
          in: query
          description: |
            Flag, filtering the operations without tags at all.
            In response will be returned the list of operations, on what the tag is not filled in.
            This attribute has a higher priority than the **tag**. In case, then **emptyTag: true**, it will override the **tag** filter.
          schema:
            type: boolean
            default: false
        - name: group
          in: query
          description: |
            Name of the group for filtering.\
            Either "group" or "emptyGroup" (= true) can be sent in the request, if both of them are specified then 400 will be returned in the response.
          schema:
            type: string
            example: v1
        - name: emptyGroup
          in: query
          description: |
            Flag for filtering operations without a group.\
            Either "group" or "emptyGroup" (= true) can be sent in the request, if both of them are specified then 400 will be returned in the response.
          schema:
            type: boolean
            default: false
        - name: refPackageId
          description: Filter by package id of ref package, shall be used in case of dashboard.
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/xlsx:
              schema:
                type: string
                format: binary
                description: xlsx file to download
          headers:
            Content-Disposition:
              schema:
                type: string
                description: xlsx file name
                example: attachment; filename="APIOperations_package.id_version.xlsx"
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: { }
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/{apiType}/operations/{operationId}":
    get:
      tags:
        - Operations
      summary: Get operation details
      description: |
        Operation's parameters and data.
        The result depends on the API type.
      operationId: getPackagesIdVersionsIdApiTypeOperationsId
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - $ref: "#/components/parameters/apiType"
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/operationId"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - oneOf:
                      - $ref: "#/components/schemas/RestOperation"
                      - $ref: "#/components/schemas/GraphQLOperation"
                      - $ref: "#/components/schemas/ProtobufOperation"
                  - type: object
                    required:
                      - data
                    properties:
                      data:
                        description: Content of the operation as a JSON object.
                        type: object
                      customTags:
                        description: |
                          Custom tags.
                        type: object
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/{apiType}/operations/{operationId}/changes":
    get:
      tags:
        - Changes
        - Operations
      summary: Single operation change log
      description: |
        Get changes of one operation between current and previous published package version.
        The result depends on the API type.
      operationId: getPackagesIdVersionsApiTypeOperationsIdChanges
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - $ref: "#/components/parameters/apiType"
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/operationId"
        - $ref: "#/components/parameters/severity"
        - in: query
          name: previousVersion
          schema:
            type: string
          description: If both previousVersion and previousVersionPackageId are not specified, then previous **release** version will be used.
          example: "2022.2"
        - in: query
          name: previousVersionPackageId
          schema:
            type: string
          description: If both previousVersion and previousVersionPackageId are not specified, then previous **release** version will be used.
          example: QS.RUNENV.K8S-SERVER.CJM-QSS-DEV-2.Q-TMF
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  changes:
                    description: List of discrepancies data in the operation.
                    type: array
                    items:
                      $ref: "#/components/schemas/SingleOperationChange"
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/{apiType}/tags":
    get:
      tags:
        - Operations
      summary: Get list of operations tags
      description: |
        Get list of operations tags in one published version.
        The result list depends on the API type.
      operationId: getPackagesIdVersionsIdApiTypeTags
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - $ref: "#/components/parameters/apiType"
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/apiAudience"
        - name: textFilter
          in: query
          description: |
            Filter by tag.
            Partial name is applicable.
          schema:
            type: string
        - name: skipRefs
          in: query
          description: |
            If false and package has references, then package references (including references to the deleted package versions) shall be resolved.
          schema:
            type: boolean
            default: false
        - name: kind
          description: |
            Operation kind.
            * bwc - API with backward compatibility support (a.k.a. public).
            * no-bwc - API without backward compatibility support (a.k.a. internal).
            * experimental - APIs for feature testing. Usage is not recommended.
          in: query
          schema:
            type: string
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
        - name: group
          in: query
          description: |
            Name of the group for filtering.\
            Either "group" or "emptyGroup" (= true) can be sent in the request, if both of them are specified then 400 will be returned in the response.
          schema:
            type: string
            example: v1
        - name: emptyGroup
          in: query
          description: |
            Flag for filtering operations without a group.\
            Either "group" or "emptyGroup" (= true) can be sent in the request, if both of them are specified then 400 will be returned in the response.
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: List of tags.
                type: object
                properties:
                  tags:
                    type: array
                    items:
                      type: string
                    example: ["TMF"]
              examples: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/{apiType}/groups":
    post:
      deprecated: true
      x-deprecation-reason: New version of API is created - POST /api/v3/packages/{packageId}/versions/{version}/{apiType}/groups
      tags:
        - Versions
        - Operation groups
      summary: Create operation group
      description: |
        Create operation group.\
        It is needed to be able to distinguish between groups created manually and groups created automatically via restPrefixGrouping.
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/apiType"
      requestBody:
        description: New version group
        content:
          application/json:
            schema:
              type: object
              required:
                - groupName
                - apiType
              properties:
                groupName:
                  description: Name of new group. Name must be unique within one API type.
                  type: string
                description:
                  description: Description of created group.
                  type: string
      responses:
        "201":
          description: Created
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v3/packages/{packageId}/versions/{version}/{apiType}/groups":
    post:
      tags:
        - Versions
        - Operation groups
      summary: Create manual operation group
      description: |
        Create manual operation group.\
        Manual groups can be created for both packages and dashboards. One group can contain operations of one API type only.
      operationId: PostPackageIdVersionApiTypeGroupsV3
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/apiType"
      requestBody:
        description: New version group
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - groupName
              properties:
                groupName:
                  description: Name of new group. Name must be unique within one API type.
                  type: string
                description:
                  description: Description of created group.
                  type: string
                template:
                  description: |
                    OpenAPI specification template that will be used to export operations from an operation group with buildType = mergedSpecification.\
                    Template can only be specified for the group with apiType = rest.\
                    Both YAML and JSON file formats are supported.
                  type: string
                  format: binary
      responses:
        "201":
          description: Created
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/{apiType}/groups/{groupName}":
    get:
        tags:
          - Versions
          - Operation groups
        summary: Get list of operations for operation group
        description: |
          Get list of operations from operation group. The result list depends on the API type.
        security:
          - BearerAuth: []
          - api-key: []
        parameters:
          - $ref: "#/components/parameters/apiType"
          - $ref: "#/components/parameters/packageId"
          - $ref: "#/components/parameters/version"
          - $ref: "#/components/parameters/groupName"
          - $ref: "#/components/parameters/apiAudience"
          - name: textFilter
            in: query
            description: Filter by title/path/method.
            schema:
              type: string
          - name: documentSlug
            in: query
            description: Filter by document
            schema:
              type: string
              example: "billing-rating-catalog-integration-service1-json"
          - name: tag
            in: query
            description: |
              Name of the tag for filtering/grouping.
              A full match is required. To get the list of available tags use GET /tags API.
            schema:
              type: string
              example: RestControllerV5
          - name: emptyTag
            in: query
            description: |
              Flag, filtering the operations without tags at all.

              In response will be returned the list of operations, on what the tag is not filled in.
              
              This attribute has a higher priority than the **tag**. In case, then **emptyTag: true**, it will override the **tag** filter.
            schema:
              type: boolean
              default: false
          - name: onlyAddable
            in: query
            description: |
              Flag for filtering operations that are not included in this group

              true - will return all operations from version except operations that are already included in this group

              false - will return all operations that are included in this group
            schema:
              type: boolean
              default: false
          - name: kind
            description: |
              Operation kind.
              * bwc - API with backward compatibility support (a.k.a. public).
              * no-bwc - API without backward compatibility support (a.k.a. internal).
              * experimental - APIs for feature testing. Usage is not recommended.
            in: query
            schema:
              type: string
              enum:
                - all
                - bwc
                - no-bwc
                - experimental
              default: all
          - name: deprecated
            description: Filter operations by 'deprecated' status.
            in: query
            schema:
              type: string
              enum:
                - "all"
                - "true"
                - "false"
              default: all
          - name: refPackageId
            description: Filter by package id of ref package, shall be used in case of dashboard.
            in: query
            schema:
              type: string
          - $ref: "#/components/parameters/limit"
          - $ref: "#/components/parameters/page"
        responses:
          "200":
            description: Success
            content:
              application/json:
                schema:
                  description: List of group operations.
                  type: object
                  properties:
                    operations:
                      type: array
                      description: |
                        List of grouped operations that were present in the previous revision and are deleted in the current revision.
                      items:
                        allOf:
                          - oneOf:
                              - $ref: "#/components/schemas/RestOperation"
                              - $ref: "#/components/schemas/GraphQLOperation"
                              - $ref: "#/components/schemas/ProtobufOperation"
                          - type: object
                            properties:
                              packageRef:
                                description: |
                                  Parent package and version link.
                                  Created by the concatenation of the packageId and version name with At sign.
                                type: string
                                example: "QS.CloudQSS.CPQ.Q-TMF@2023.2"
                    packages:
                      description: |
                        A mapped list of the packageId and version name concatenation with At sign to the package objects.
                      type: object
                      additionalProperties:
                        allOf:
                          - $ref: "#/components/schemas/PackageVersionRef"
                          - type: object
                            properties:
                              versionRevision:
                                description: Number of the revision.
                                type: integer
                                format: int32
                                example: 3
                              parentPackages:
                                description: List of parent package names.
                                type: array
                                items:
                                  type: string
                                example: ["qubership", "Qubership JSS", "Sample Management"]
                      example:
                        QS.CloudQSS.CPQ.Q-TMF@2023.2:
                          parentPackages: ["qubership", "Qubership JSS", "Sample Management"]
                          refId: "QS.CloudQSS.CPQ.Q-TMF"
                          kind: "package"
                          name: "Quote Management TMF648"
                          version: "2023.2"
                          status: "release"
                          deletedAt: "2023-05-30T17:17:11.755146Z"
                          deletedBy: "user1221"
                          versionRevision: 3
          "301":
            description: Moved Permanently
            headers:
              Location:
                schema:
                  type: string
                description: Current ednpoint with new packageId of moved package
              X-New-Package-Id:
                schema:
                  type: string
                description: New packageId of moved package
          "400":
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ErrorResponse"
                examples:
                  IncorrectInputParams:
                    $ref: "#/components/examples/IncorrectInputParameters"
          "401":
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ErrorResponse"
          "404":
            description: Not found
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ErrorResponse"
                examples: {}
          "500":
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ErrorResponse"
                examples:
                  InternalServerError:
                    $ref: "#/components/examples/InternalServerError"
    put:
      deprecated: true
      x-deprecation-reason: New version of API is created - PUT /api/v3/packages/{packageId}/versions/{version}/{apiType}/groups/{groupName}
      tags:
        - Versions
        - Operation groups
      summary: Update operation group
      description: |
        Update operation group.\
        It is prohibited to update the prefix groups, only manual groups can be updated.
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - $ref: "#/components/parameters/apiType"
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/groupName"
      requestBody:
        description: Version group update parameters
        content:
          application/json:
            schema:
              type: object
              required:
                - groupName
              properties:
                groupName:
                  description: Name of the group.
                  type: string
                description:
                  description: Description of version group.
                  type: string
                operations:
                  type: array
                  description: One group can contain no more than 200 operations.
                  items:
                    type: object
                    required:
                      - operationId
                    properties:
                      packageId:
                        description: |
                          ID of package.\
                          PackageId and version shall be specified in case of dashboard to identify source package. 
                          If packageId and version are not specified, this will mean that the source of the operation is the current package version.
                        type: string
                        example: "QS.CloudQSS.CPQ.Q-TMF"
                      version:
                        description: Version and revision of the package.
                        type: string
                        example: "2023.3@3"
                      operationId:
                        description: Operation unique identifier.
                        type: string
                        example: get-quoteManagement-v5-quote
      responses:
        "200":
          description: Successful
        "301":
            description: Moved Permanently
            headers:
              Location:
                schema:
                  type: string
                description: Current ednpoint with new packageId of moved package
              X-New-Package-Id:
                schema:
                  type: string
                description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
    patch:
      deprecated: true
      x-deprecation-reason: New version of API is created - PATCH /api/v3/packages/{packageId}/versions/{version}/{apiType}/groups/{groupName}
      tags:
        - Versions
        - Operation groups
      summary: Update parameters of operation group
      description: |
        Update parameters of operation group ( in path).\
        It is prohibited to update the prefix groups, only manual groups can be updated.
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - name: groupName
          description: Old groupName
          in: path
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/apiType"
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/version"
      requestBody:
        description: Version group update parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                groupName:
                  description: Name of the group.
                  type: string
                description:
                  description: Description of version group.
                  type: string
      responses:
        "204":
          description: No content
          content: {}
        "301":
            description: Moved Permanently
            headers:
              Location:
                schema:
                  type: string
                description: Current ednpoint with new packageId of moved package
              X-New-Package-Id:
                schema:
                  type: string
                description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
    delete:
      tags:
        - Versions
        - Operation groups
      summary: Delete operation group
      description: |
        Delete version group.
      operationId: getPackagesIdVersionsIdApiTypeGroups
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - $ref: "#/components/parameters/apiType"
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/groupName"
      responses:
        "204":
          description: No content
          content: {}
        "301":
            description: Moved Permanently
            headers:
              Location:
                schema:
                  type: string
                description: Current ednpoint with new packageId of moved package
              X-New-Package-Id:
                schema:
                  type: string
                description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v3/packages/{packageId}/versions/{version}/{apiType}/groups/{groupName}":
    patch:
      tags:
        - Versions
        - Operation groups
      summary: Update parameters of operation group
      description: |
        Update parameters of operations group.
      operationId: patchPackageIdVersionApiTypeGroupName
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - name: groupName
          description: Old groupName
          in: path
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/apiType"
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/version"
      requestBody:
        description: Version group update parameters
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                groupName:
                  description: |
                    Name of new group. Name must be unique within one API type.\
                    Group name can be changed only for manual group.
                  type: string
                description:
                  description: Description of the operation group (can be update for the manual or rest path prefix group)
                  type: string
                template:
                  description: |
                    OpenAPI specification template that will be used to export operations from an operation group with buildType = mergedSpecification.\
                    Template can be specified for the manual or rest path prefix group, but only with apiType = rest.\
                    Both YAML and JSON file formats are supported.
                  type: string
                  format: binary
                operations:
                  type: array
                  description: Operations in the group. One group can contain no more than 200 operations.
                  items:
                    type: object
                    required:
                      - operationId
                    properties:
                      packageId:
                        description: |
                          ID of package.\
                          PackageId and version shall be specified in case of dashboard to identify source package. 
                          If packageId and version are not specified, this will mean that the source of the operation is the current package version.
                        type: string
                        example: "QS.CloudQSS.CPQ.Q-TMF"
                      version:
                        description: Version and revision of the package.
                        type: string
                        example: "2023.3@3"
                      operationId:
                        description: Operation unique identifier.
                        type: string
                        example: get-quoteManagement-v5-quote
      responses:
        "204":
          description: No content
          content: {}
        "301":
            description: Moved Permanently
            headers:
              Location:
                schema:
                  type: string
                description: Current ednpoint with new packageId of moved package
              X-New-Package-Id:
                schema:
                  type: string
                description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
    put:
      tags:
        - Versions
        - Operation groups
      deprecated: true
      x-deprecation-reason: operations object was added in the requestBody of PATCH /api/v3/packages/{packageId}/versions/{version}/{apiType}/groups/{groupName}. Therefore, current operation is no longer required.
      summary: Update list of operations in the manual group
      operationId: putPackageIdVersionApiTypeGroupName
      description: |
        Update operations in the group. Only operations in the manual group can be changed.
        It is prohibited to update operation in the rest path prefix group, only manual groups can be updated.
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - name: apiType
          description: Type of the API.
          in: path
          required: true
          schema:
            type: string
            enum:
              - rest
              - kafka
              - grpc
              - graphql
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/groupName"
      requestBody:
        description: Version group update parameters
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - groupName
              properties:
                groupName:
                  description: Name of the group.
                  type: string
                description:
                  description: Description of version group.
                  type: string
                template:
                  description: |
                    OpenAPI specification template that will be used to export operations from an operation group with buildType = mergedSpecification.\
                    Template can only be specified for the group with apiType = rest.\
                    Both YAML and JSON file formats are supported.
                  type: string
                  format: binary
                operations:
                  type: array
                  description: Operations in the group. One group can contain no more than 200 operations.
                  items:
                    type: object
                    required:
                      - operationId
                    properties:
                      packageId:
                        description: |
                          ID of package.\
                          PackageId and version shall be specified in case of dashboard to identify source package. 
                          If packageId and version are not specified, this will mean that the source of the operation is the current package version.
                        type: string
                        example: "QS.CloudQSS.CPQ.Q-TMF"
                      version:
                        description: Version and revision of the package.
                        type: string
                        example: "2023.3@3"
                      operationId:
                        description: Operation unique identifier.
                        type: string
                        example: get-quoteManagement-v5-quote
      responses:
        "200":
          description: Successful
        "301":
            description: Moved Permanently
            headers:
              Location:
                schema:
                  type: string
                description: Current ednpoint with new packageId of moved package
              X-New-Package-Id:
                schema:
                  type: string
                description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v1/packages/{packageId}/versions/{version}/{apiType}/groups/{groupName}/template":
    get:
      tags:
        - Versions
        - Operation groups
      summary: Get export template of operation group
      description: |
        Export OpenAPI specification template from an operation group (manual or rest path prefix).
        This feature is supported only for apiType = rest.
      operationId: getPackageIdVersionApiTypeGroupNameTemplate
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - $ref: "#/components/parameters/apiType"
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/version"
        - $ref: "#/components/parameters/groupName"
      responses:
        "200":
          description: Success
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
                description: template
          headers:
            Content-Disposition:
              schema:
                type: string
                description: file name
                example: attachment; filename="<file name>.xlsx"
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  /api/v2/packages/{packageId}/calculateGroups:
    get:
      tags:
        - Versions
      summary: Calculate groups by restGroupingPrefix
      description: |
        Calculate groups by transmitted restGroupingPrefix.
        This is in-flight calculation, i.e. calculated groups will not be saved.
      operationId: postPackagesIdRecalculateGroups
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - $ref: "#/components/parameters/packageId"
        - name: groupingPrefix
          in: query
          description: Regular expression used as criteria for grouping operations.
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: List of groups.
                type: object
                properties:
                  groups:
                    description: Operation groups calculated by groupingPrefix.
                    type: array
                    items:
                      type: string
                    example: ["v1", "v2"]
              examples: {}
        "301":
            description: Moved Permanently
            headers:
              Location:
                schema:
                  type: string
                description: Current ednpoint with new packageId of moved package
              X-New-Package-Id:
                schema:
                  type: string
                description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  /api/v2/packages/{packageId}/recalculateGroups:
    post:
      tags:
        - Versions
      summary: Recalculate package version groups
      description: |
        Recalculate package groups by specified restGroupingPrefix on the package
      operationId: postPackagesIdRecalculateGroups
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - $ref: "#/components/parameters/packageId"
      responses:
        "200":
          description: Success
        "301":
            description: Moved Permanently
            headers:
              Location:
                schema:
                  type: string
                description: Current ednpoint with new packageId of moved package
              X-New-Package-Id:
                schema:
                  type: string
                description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/documents":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - $ref: "#/components/parameters/version"
    get:
      tags:
        - Documents
        - Versions
      summary: Get version documents
      description: |
        Get list of documents in a version. The result depend on the package.kind:
        * For package.kind: package - return the list of version documents.
        * For package.kind: dashboard - return the list of all referenced dashboards and their referenced packages in recursion. 
          The returned list will contain only leaves - referenced packages of the lowest level with their published documents.
      operationId: getPackagesIdVersionsIdDocuments
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/apiTypeQueryParam"
        - name: skipRefs
          in: query
          description: |
            If false and package has references, then package references (including references to the deleted package versions) shall be resolved.
          schema:
            type: boolean
            default: false
        - name: textFilter
          in: query
          description: Filter by document title.
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: List of documents in a package.
                type: object
                properties:
                  documents:
                    type: array
                    items:
                      allOf:
                        - $ref: "#/components/schemas/PackageVersionFile"
                        - type: object
                          properties:
                            packageRef:
                              description: |
                                Parent package and version link. Created by the concatenation of the packageId and version name with At sign.
                              type: string
                              example: QS.CloudQSS.CPQ.Q-TMF@2023.2
                  packages:
                    description: |
                      A mapped list of the packageId and version name concatenation with At sign to the package objects.
                    type: object
                    additionalProperties:
                      allOf:
                        - $ref: "#/components/schemas/ReferencedPackage"
                        - type: object
                    example:
                      QS.CloudQSS.CPQ.Q-TMF@2023.2:
                        refId: QS.CloudQSS.CPQ.Q-TMF
                        kind: package
                        name: Quote Management TMF648
                        version: "2022.2@5"
                        status: release
                        parentPackages: ["qubership", "Qubership JSS", "Sample Management"]
                        deletedAt: "2023-05-30T17:17:11.755146Z"
                        deletedBy: "user1221"
                        notLatestRevision: true
              examples: {}
        "301":
            description: Moved Permanently
            headers:
              Location:
                schema:
                  type: string
                description: Current ednpoint with new packageId of moved package
              X-New-Package-Id:
                schema:
                  type: string
                description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v3/packages/{packageId}/versions/{version}/documents/{slug}":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - $ref: "#/components/parameters/version"
      - $ref: "#/components/parameters/slug"
    get:
      tags:
        - Documents
      summary: Get document details
      description: Get the published content object's details by ID.
      operationId: getPackagesIdVersionsIdDocumentsSlugV2
      security:
        - BearerAuth: []
        - api-key: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PackageVersionFile"
                  - type: object
                    properties:
                      description:
                        description: Document description.
                        type: string
                      info:
                        description: Info object from openapi document
                        type: object
                      externalDocs:
                        description: External documentation object from openapi document
                        type: object
                      operations:
                        description: List of the operations in a file without operation's data.
                        type: array
                        items:
                          oneOf:
                            - $ref: "#/components/schemas/RestOperation"
                            - $ref: "#/components/schemas/GraphQLOperation"
                            - $ref: "#/components/schemas/ProtobufOperation"
              examples: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/documents/{slug}":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - $ref: "#/components/parameters/version"
      - $ref: "#/components/parameters/slug"
    get:
      deprecated: true
      tags:
        - Documents
      summary: Get document details
      description: Get the published content object's details by ID.
      operationId: getPackagesIdVersionsIdDocumentsSlug
      security:
        - BearerAuth: []
        - api-key: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - description: Parameters of published file in package version
                    type: object
                    title: Package version file
                    required:
                      - fileId
                      - filename
                      - slug
                      - type
                      - format
                      - title
                    properties:
                      fileId:
                        type: string
                        description: File name.
                        example: "qitmf-v5.11.json"
                      filename:
                        type: string
                        description: File name (slug+extension).
                        example: "qitmf-v5.11.json"
                      slug:
                        description: Published file slug
                        type: string
                        pattern: "^[a-z0-9-]"
                        example: "qitmf-v5-11-json"
                      type:
                        description: Type of the specification notation.
                        type: string
                        enum:
                          - openapi-3-1
                          - openapi-3-0
                          - openapi-2-0
                          - asyncapi-2
                          - json-schema
                          - markdown
                          - graphql-schema
                          - graphapi
                          - introspection
                          - unknown
                      format:
                        description: Format of the specification document.
                        type: string
                        enum:
                          - json
                          - yaml
                          - md
                          - graphql
                          - gql
                          - unknown
                      title:
                        description: Name/title of the document.
                        type: string
                        example: "Quote Integration TMForum Service"
                      version:
                        description: Document version
                        type: string
                        example: "1.0.1"
                      labels:
                        description: List of file labels.
                        type: array
                        items:
                          type: string
                        example: ["TMF"]
                  - type: object
                    properties:
                      description:
                        description: Document description.
                        type: string
                      info:
                        description: Info object from openapi document
                        type: object
                      externalDocs:
                        description: External documentation object from openapi document
                        type: object
                      operations:
                        description: List of the operations in a file without operation's data.
                        type: array
                        items:
                          allOf:
                            - $ref: "#/components/schemas/Operation"
                            - type: object
                              required:
                                - metadata
                                - searchScopes
                              properties:
                                metadata:
                                  description: Metadata content depend on apiType.
                                  oneOf:
                                    - $ref: "#/components/schemas/RestOperationMeta"
                                    - $ref: "#/components/schemas/GraphQLOperationMeta"
              examples: {}
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/{apiType}/groups/{groupName}/transformation/documents":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - $ref: "#/components/parameters/version"
      - $ref: "#/components/parameters/apiType"
      - name: groupName
        in: path
        required: true
        description: Name of the operation group
        schema:
          type: string
    get:
      deprecated: true
      x-deprecation-reason: New version of API is created - GET /api/v3/packages/{packageId}/versions/{version}/{apiType}/groups/{groupName}/documents
      tags:
        - Documents
        - Versions
      summary: Get version documents for transformation to openAPI
      description: |
        Get list of documents for integration by buildType - documentGroup
      operationId: getPackagesIdVersionsIdTransformationDocuments
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: List of documents in a package.
                type: object
                properties:
                  documents:
                    type: array
                    items:
                      allOf:
                        - description: Parameters of published file in package version
                          type: object
                          title: Package version file
                          required:
                            - fileId
                            - filename
                            - slug
                            - type
                            - format
                            - title
                          properties:
                            fileId:
                              type: string
                              description: File name.
                              example: "qitmf-v5.11.json"
                            filename:
                              type: string
                              description: File name (slug+extension).
                              example: "qitmf-v5.11.json"
                            slug:
                              description: Published file slug
                              type: string
                              pattern: "^[a-z0-9-]"
                              example: "qitmf-v5-11-json"
                            type:
                              description: Type of the specification notation.
                              type: string
                              enum:
                                - openapi-3-1
                                - openapi-3-0
                                - openapi-2-0
                                - asyncapi-2
                                - json-schema
                                - markdown
                                - graphql-schema
                                - graphapi
                                - introspection
                                - unknown
                            format:
                              description: Format of the specification document.
                              type: string
                              enum:
                                - json
                                - yaml
                                - md
                                - graphql
                                - gql
                                - unknown
                            title:
                              description: Name/title of the document.
                              type: string
                              example: "Quote Integration TMForum Service"
                            version:
                              description: Document version
                              type: string
                              example: "1.0.1"
                            labels:
                              description: List of file labels.
                              type: array
                              items:
                                type: string
                              example: ["TMF"]
                            description:
                              description: Document description
                              type: string
                            includedOperationIds:
                              description: List of operation IDs included to specified operation group
                              type: array
                              items:
                                type: string
                              example: [
                                  "get-quoteManagement-v5-quote",
                                  "post-quoteManagement-v5-quote"
                                ]
                            data:
                              description: Content of the operation as a JSON object
                              type: object
                        - type: object
              examples: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v3/packages/{packageId}/versions/{version}/{apiType}/groups/{groupName}/documents":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - $ref: "#/components/parameters/version"
      - $ref: "#/components/parameters/apiType"
      - name: groupName
        in: path
        required: true
        description: Name of the operation group
        schema:
          type: string
    get:
      tags:
        - Documents
        - Versions
      summary: Get documents of operations from operation group.
      description: |
        Get list of package version documents of operations from operation group.
      operationId: getPackagesIdVersionsIdTransformationDocumentsV3
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: List of documents in a package.
                type: object
                properties:
                  documents:
                    type: array
                    items:
                      allOf:
                        - $ref: "#/components/schemas/PackageTransformationFile"
                        - type: object
              examples: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v3/packages/{packageId}/versions/{version}/{apiType}/groups/{groupName}/publish":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - $ref: "#/components/parameters/version"
      - name: apiType
        description: Type of the API.
        in: path
        required: true
        schema:
          type: string
          enum:
            - rest
      - name: groupName
        in: path
        required: true
        description: Name of the operation group
        schema:
          type: string
    post:
      tags:
        - Operation groups
        - Publish
      summary: Start operation group publication
      description: |
        Start operation group publish process.\
        In this process all operations from operation group will be published to the selected package version.
      operationId: postOperationGroupPublish
      security:
        - BearerAuth: []
        - api-key: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - packageId
                - version
                - status
              properties:
                packageId:
                  description: Package unique identifier (full alias).
                  type: string
                  example: QS.CQSS.CPQ.TMF
                version:
                  description: Version name for publication in package.
                  type: string
                  example: "2022.3"
                previousVersion:
                  description: Name of the previous published version in package.
                  type: string
                  example: "2022.2"
                previousVersionPackageId:
                  description: Package id of the previous version. The parameter may be empty if the value is equal to the packageId.
                  type: string
                  example: "QS.CloudQSS.CPQ.Q-TMF"
                status:
                  $ref: "#/components/schemas/VersionStatusEnum"
                versionLabels:
                  description: List of version labels in package.
                  type: array
                  items:
                    type: string
                  example: ["part-of:CloudQSS-CPQBE"]
      responses:
        "202":
          description: Publish process started
          content:
            application/json:
              schema:
                type: object
                properties:
                  publishId:
                    type: string
                    description: Publish process Id
                    format: uuid
                    example: 9c8e9045-dd9c-4946-b9e4-e05e3f41c4cc
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v3/packages/{packageId}/versions/{version}/{apiType}/groups/{groupName}/publish/{publishId}/status":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - $ref: "#/components/parameters/version"
      - name: apiType
        description: Type of the API.
        in: path
        required: true
        schema:
          type: string
          enum:
            - rest
      - name: groupName
        in: path
        required: true
        description: Name of the operation group
        schema:
          type: string
      - name: publishId
        description: Publish Id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          example: 9c8e9045-dd9c-4946-b9e4-e05e3f41c4cc
    get:
      tags:
        - Operation groups
        - Publish
      summary: Get operation group publication status
      description: |
        Get operation group publish status.
      operationId: getOperationGroupPublishStatus
      security:
        - BearerAuth: []
        - api-key: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    description: Publish process status.
                    type: string
                    enum:
                      - running
                      - error
                      - complete
                      - none
                  message:
                    description: The message for **error** status.
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/references":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - $ref: "#/components/parameters/version"
    get:
      deprecated: true
      tags:
        - Documents
        - Versions
      summary: Get version references
      description: |
        Get list of version referenced packages (lowest level by recursion, not having refs in a published version).
      operationId: getPackagesIdVersionsIdReferences
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
        - name: textFilter
          in: query
          description: Filter by package name.
          schema:
            type: string
        - name: kind
          in: query
          description: Filter the packages by kind.
          schema:
            type: string
            enum:
              - package
              - dashboard
            example: "package"
        - name: showAllDescendants
          in: query
          description: |
            Show all the descendants to the parent workspace or group.
            If ```true```, return the list of all child packages/dashboards to the current package (take into account all other filter parameters).
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  references:
                    description: List of nested packages from reference.
                    type: array
                    items:
                      allOf:
                        - description: Package version reference
                          type: object
                          title: Referenced package version
                          required:
                            - refId
                            - name
                            - version
                            - status
                          properties:
                            refId:
                              description: Referenced package Id
                              type: string
                              example: "QS.CloudQSS.CPQ.Q-TMF"
                            kind:
                              description: Package kind
                              type: string
                              enum:
                                - package
                                - dashboard
                            name:
                              description: Name of the referenced package
                              type: string
                              example: "Quote Management TMF648"
                            version:
                              description: Referenced package version number. The <version>@<revision> mask is used to return the revision number.
                              type: string
                              example: "2022.2@5"
                            status:
                              $ref: "#/components/schemas/VersionStatusEnum"
                            deletedAt:
                              description: date when package version was deleted package version
                              type: string
                              format: date-type
                              example: "2023-05-30T17:17:11.755146Z"
                            deletedBy:
                              description: user who deleted package version
                              type: string
                              example: "user1221"
                        - type: object
                          properties:
                            parents:
                              description: List of all parent packages
                              type: array
                              items:
                                description: Base package object for parents list.
                                type: object
                                title: PackageList
                                properties:
                                  packageId:
                                    description: Package unique string identifier (full alias)
                                    type: string
                                  alias:
                                    type: string
                                    description: Package short alias (abbreviation)
                                    maxLength: 10
                                    pattern: "^[a-zA-Z0-9-_]"
                                  parentId:
                                    description: Parent package ID
                                    type: string
                                  kind:
                                    description: Package kind
                                    type: string
                                    enum:
                                      - workspace
                                      - group
                                      - package
                                      - dashboard
                                  name:
                                    description: Name of the package
                                    type: string
                                  imageUrl:
                                    type: string
                                    description: Path to the package icon
                                    format: URL
              examples: {}
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v3/packages/{packageId}/versions/{version}/references":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - $ref: "#/components/parameters/version"
    get:
      tags:
        - Documents
        - Versions
      summary: Get version references
      description: |
        Get flat list of all version references
      operationId: getPackagesIdVersionsIdReferencesv3
      security:
        - BearerAuth: []
        - api-key: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: List of references.
                type: object
                properties:
                  references:
                    type: array
                    items:
                      type: object
                      properties:
                        packageRef:
                          description: |
                            Referenced package and version link.
                            Created by the concatenation of the packageId and version name with At sign.
                          type: string
                          example: "QS.CloudQSS.CPQ.Q-TMF@2023.2"
                        parentPackageRef:
                          description: |
                            Parent referenced package and version link.
                            Created by the concatenation of the packageId and version name with At sign.
                          type: string
                          example: "QS.CloudQSS.CPQ.Q-TMF@2023.2"
                        excluded:
                          description: All excluded refs will be ignored (but will still be visible for package version).
                          type: boolean
                  packages:
                    description: |
                      A mapped list of the packageId and version name concatenation with At sign to the package objects.
                    type: object
                    additionalProperties:
                      allOf:
                        - $ref: "#/components/schemas/ReferencedPackage"
                        - type: object
                    example:
                          QS.CloudQSS.CPQ.Q-TMF@2023.2:
                            refId: QS.CloudQSS.CPQ.Q-TMF
                            kind: package
                            name: Quote Management TMF648
                            version: "2022.2@5"
                            status: release
                            parentPackages: ["qubership", "Qubership JSS", "Sample Management"]
                            deletedAt: "2023-05-30T17:17:11.755146Z"
                            deletedBy: "user1221"
                            notLatestRevision: true
              examples: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/{version}/revisions":
    get:
      tags:
        - Versions
      deprecated: true
      x-deprecation-reason: New version of API is created - GET /api/v3/packages/{packageId}/versions/{version}/revisions.
      summary: Get the version revisions list
      description: |
        Get the list of version revisions.
      operationId: getPackagesIdVersionsIdRevisions
      security:
        - BearerAuth: [ ]
        - api-key: [ ]
      parameters:
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/version"
        - name: textFilter
          in: query
          description: Filter by label|user.
          schema:
            type: string
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  revisions:
                    description: List of version revisions.
                    type: array
                    items:
                      description: Version revision parameters.
                      type: object
                      title: PackageVersionRevision
                      required:
                        - version
                        - revision
                        - status
                        - createdAt
                        - createdBy
                      properties:
                        version:
                          description: Package version name. The <version>@<revision> mask is used to return the revision number.
                          type: string
                          example: "2023.1@5"
                        revision:
                          description: Number of the revision.
                          type: integer
                          format: int32
                          example: 3
                        status:
                          $ref: "#/components/schemas/VersionStatusEnum"
                        createdBy:
                          $ref: "#/components/schemas/User"
                        createdAt:
                          type: string
                          description: Date of revision creation.
                          format: datetime
                        notLatestRevision:
                          type: boolean
                          default: false
                        revisionLabels:
                          description: List of revision labels.
                          type: array
                          items:
                            type: string
                          example: [ "part-of:CloudQSS-CPQBE" ]
                        publishMeta:
                          additionalProperties: true
                          description: Publish metadata.
                          type: object
                          properties:
                            commitId:
                              description: Last Git commit ID of the version.
                              type: string
                              example: a5d45af7
                            repositoryUrl:
                              description: Url of the Git repository.
                              type: string
                              format: URI
                              example: https://<git_group_link>/apihub-registry
                            cloudName:
                              description: Name of the cloud for publication from Agent.
                              type: string
                              example: k8s-apps2
                            cloudUrl:
                              description: Full address of the cloud from Agent.
                              type: string
                              format: URI
                              example: https://k8s-apps2.k8s.sdntest.qubership.org
                            namespace:
                              description: Namespace of Agent's publication.
                              type: string
                              example: cloudQSS-release2
              examples: { }
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: { }
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: { }
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v3/packages/{packageId}/versions/{version}/revisions":
    get:
      tags:
        - Versions
      summary: Get the version revisions list
      description: |
        Get the list of version revisions.
      operationId: getPackagesIdVersionsIdRevisionsV3
      security:
        - BearerAuth: [ ]
        - api-key: [ ]
      parameters:
        - $ref: "#/components/parameters/packageId"
        - $ref: "#/components/parameters/version"
        - name: textFilter
          in: query
          description: Filter by label|user|meta.
          schema:
            type: string
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  revisions:
                    description: List of version revisions.
                    type: array
                    items:
                      $ref: "#/components/schemas/PackageVersionRevision"
              examples: { }
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: { }
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/versions/recursiveDelete":
    parameters:
      - $ref: "#/components/parameters/packageId"
    post:
      tags:
        - Versions
      summary: Delete expired versions recursively
      description: Recursively delete all expired versions in 'Draft' status under group or workspace
      operationId: deleteExpiredVersionsRecursively
      security:
        - BearerAuth: [ ]
        - api-key: [ ]
      requestBody:
        description: Recursive delete parameters
        content:
          application/json:
            schema:
              type: object
              properties:
                olderThanDate:
                  description: Versions published earlier than the date are going to be deleted.
                  type: string
                  format: 'date'
                  example: '2023-05-12'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobId:
                    description: Id of job deleting versions.
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/packages/{packageId}/publish/availableStatuses":
    parameters:
      - $ref: "#/components/parameters/packageId"
    get:
      tags:
        - Publish
        - Packages
      summary: Get a list of available publish statuses for the package
      description: |
        Get a list of available publish statuses for the package.
        List depends on the current user access rights.
      operationId: getPackagesIdAvailableStatuses
      security:
        - BearerAuth: []
        - api-key: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  statuses:
                    description: List of available statuses.
                    type: array
                    items:
                      $ref: "#/components/schemas/VersionStatusEnum"
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                PackageNotFound:
                  $ref: "#/components/examples/PackageNotFound"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/space":
    get:
      tags:
        - Users
      summary: Get user's private workspace
      description: Get personal private workspace of the current user.
      operationId: getSpace
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Package"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
    post:
      tags:
        - Users
      summary: Create own personal private package
      description: |
        Any user is able to create one personal private workspace (*no permissions required*)
        PackageId for this workspace could be set via user creation endpoint (only for new users) or generated automatically when user first logs in to apihub
      operationId: postspace
      security:
        - BearerAuth: []
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Package"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/users/{userId}/space":
    post:
      tags:
        - Users
      summary: Create personal private package for the user
      description: |
        Any user is able to create one personal private workspace (*no permissions required*)
        
        PackageId for this workspace could be set via user creation endpoint (only for new users) or generated automatically when user first logs in to apihub
      operationId: postUsersIdAvailablePackagePromoteStatuses
      security:
        - BearerAuth: []
      parameters:
        - name: userId
          description: Login of the user
          in: path
          required: true
          schema:
            type: string
            example: user1221
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Package"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/users/{userId}/availablePackagePromoteStatuses":
    post:
      x-api-audience: noBWC
      tags:
        - Publish
        - Users
      summary: Get list of available package publish statuses for the user.
      description: |
        By collection of packages, **get** the available statuses for publish into for the particular user.
        
        Statuses list depends on the current user access rights for the particular package.
        
        The response is a **mapped list** of statuses to the packageIds.
      operationId: getUsersIdAvailablePackagePromoteStatuses
      security:
        - BearerAuth: []
      parameters:
        - name: userId
          description: Login of the user
          in: path
          required: true
          schema:
            type: string
            example: user1221
      requestBody:
        description: Packages list to check.
        content:
          application/json:
            schema:
              type: object
              required:
                - packages
              properties:
                packages:
                  description: PackageIds list.
                  type: array
                  items:
                    type: string
                  example: ["QS.CloudQSS.CPQ.Q-TMF","QS.CloudQSS.CPQ.QE-SRV"]
        required: true
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                description: List of packages and available statuses.
                additionalProperties:
                  type: array
                  description: Mapped list of statuses to the packageId.
                  items:
                    type: string
                    enum:
                      - draft
                      - release
                example:
                  QS.CloudQSS.CPQ.Q-TMF:
                    - draft
                    - release
                  QS.CloudQSS.CPQ.QE-SRV:
                    - draft
        '400':
          description: default response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  /playground/proxy:
    get:
      summary: Proxy endpoint for try it in case of non-cloud environments.
      description: Allows to send any request to any address.
      operationId: getAgentsIdNamespacesIdServicesProxy
      security:
        - { }
      tags:
        - TryIt
      parameters:
        - name: X-Apihub-Proxy-Url
          in: header
          required: true
          schema:
            type: string
          description: |
            Full URL that includes paths and query params
          example: http://127.0.0.1:8080/api/v2/escaped/te%20xt/text/text123?escaped=te%20xt
        - name: X-Apihub-Authorization
          in: header
          required: true
          schema:
            type: string
          description: |
            The header is a replacement for Authorization header, because original Authorization header should be passed to the target service.
      responses:
        1XX:
          description: Information responses
          content:
            "*/*":
              schema:
                description: Schema of any type
        2XX:
          description: Successful responses
          content:
            "*/*":
              schema:
                description: Schema of any type
        3XX:
          description: Redirection messages
          content:
            "*/*":
              schema:
                description: Schema of any type
        4XX:
          description: Client error responses
          content:
            "*/*":
              schema:
                description: Schema of any type
        5XX:
          description: Server error responses
          content:
            "*/*":
              schema:
                description: Schema of any type
  "/api/v2/businessMetrics":
    get:
      tags:
        - Admin
      summary: Get business metrics report
      description: |
        Returns collected business metrics
      operationId: getBusinessMetrics
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - name: format
          description: Response format
          in: query
          required: false
          schema:
            type: string
            default: json
            enum:
            - json
            - xlsx
        - name: parentPackageId
          description: Return business metrics only for specific group\workspace
          in: query
          required: false
          schema:
            type: string
            example: SD
        - name: hierarchyLevel
          description: Number of hierarchy levels for grouping packages (level=0 - packageId="SD.TL.TLQSS", level=1 - packageId="SD", level=2 - packageId="SD.TL")
          in: query
          required: false
          schema:
            type: integer
            default: 0
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: List of collected business metrics grouped by package
                type: array
                items:
                  $ref: "#/components/schemas/BusinessMetric"
            application/octet-stream:
              schema:
                type: string
                format: binary
                description: xlsx file to download
          headers:
            Content-Disposition:
              schema:
                type: string
                description: xlsx file name (only filled when format=xlsx)
                example: attachment; filename="business_metrics_2023-12-31.xlsx"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v1/publishHistory":
    get:
      tags:
        - Admin
      summary: Get history of published version revisions
      description: |
        Returns all existing version revisions sorted by publish date from oldest to newest.
        Only for system administrators.
      operationId: getPublishHistory
      x-api-kind: no-BWC
      security:
        - BearerAuth: []
        - api-key: []
      parameters:
        - name: status
          description: version status
          in: query
          required: false
          schema:
            $ref: "#/components/schemas/VersionStatusEnum"
        - name: publishedBefore
          description: Filter to include only revisions published before specific date
          in: query
          required: false
          schema:
            type: string
            format: date-time
            description: RFC3339 format
            example: "2024-03-15T12:00:13.052715Z"
        - name: publishedAfter
          description: Filter to include only revisions published after specific date
          in: query
          required: false
          schema:
            type: string
            format: date-time
            description: RFC3339 format
            example: "2024-03-15T12:00:13.052715Z"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: List of published versions
                type: array
                items:
                  type: object
                  properties:
                    packageId:
                      type: string
                    version:
                      type: string
                    revision:
                      type: integer
                    previousVersionPackageId:
                      type: string
                    previousVersion:
                      type: string
                    publishedAt:
                      type: string
                      format: date-time
                    apiTypes:
                      type: array
                      items:
                        $ref: "#/components/schemas/ApiType"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
components:
  parameters:
    apiAudience:
      name: apiAudience
      in: query
      description: |
        Filter operations by apiAudience.
        * internal - APIs are available for integration within product application.
        * external - APIs exposed outside the boundary of the product application: solution delivery integrations, 3rd party integrations, customer integrations.
        * unknown - If any value other than internal or external is used, the API is considered as unknown.
      schema:
        type: string
        enum:
          - all
          - internal
          - external
          - unknown
        default: all
    AgentId:
      name: agentId
      in: path
      description: Id of Agent instance
      required: true
      schema:
        type: string
      example: K8S-SERVER_api-hub-dev
    Namespace:
      name: name
      description: Cloud Namespace name
      in: path
      required: true
      schema:
        type: string
    severity:
      name: severity
      in: query
      description: Filter API changes by severity.
      schema:
        type: array
        items:
          type: string
          enum:
            - breaking
            - non-breaking
            - deprecated
            - semi-breaking
            - annotation
            - unclassified
    ServiceId:
      name: serviceId
      description: Cloud service identifier
      in: path
      required: true
      schema:
        type: string
    apiType:
      name: apiType
      description: Type of the API.
      in: path
      required: true
      schema:
        type: string
        enum:
          - rest
          - graphql
          - protobuf
    apiTypeQueryParam:
      name: apiType
      in: query
      description: |
        Filter documents by type of the API.
      schema:
        type: string
        enum:
          - rest
          - graphql
          - protobuf
    gitType:
      name: gitType
      description: Integration type
      in: path
      required: true
      schema:
        type: string
        enum:
          - gitLab
        default: gitLab
    repositoryId:
      name: repositoryId
      schema:
        type: string
      description: Repository Id
      in: path
      required: true
    groupName:
      name: groupName
      in: path
      description: Version Group
      required: true
      schema:
        type: string
    builderId:
      name: builderId
      in: path
      description: Builder unique identifier (UUID)
      required: true
      schema:
        type: string
        format: UUID
        example: QS.CloudQSS.CPQ.Q-TMF
    packageId:
      name: packageId
      in: path
      description: Package unique identifier (full alias)
      required: true
      schema:
        type: string
        example: QS.CloudQSS.CPQ.Q-TMF
    version:
      name: version
      in: path
      description: Package version
      required: true
      schema:
        type: string
        example: "2022.3"
    slug:
      name: slug
      in: path
      description: File unique string identifier
      required: true
      schema:
        type: string
        pattern: "^[a-z0-9-]"
        example: "qitmf-v5-11-json"
    limit:
      name: limit
      in: query
      description: Requested number of resources to be provided in response.
      schema:
        type: number
        default: 100
        maximum: 100
        minimum: 1
    page:
      name: page
      in: query
      description: Page number
      schema:
        type: number
        default: 0
    showParents:
      name: showParents
      in: query
      description: Show/hide the list of parent packages.
      schema:
        type: boolean
        default: false
    operationId:
      name: operationId
      in: path
      description: Operation unique identifier (slug). Not the same as operationId tag from the OpenAPI file.
      required: true
      schema:
        type: string
        example: "get-quoteManagement-v5-quote"
    modelName:
      name: modelName
      in: path
      description: Unique model identifier for operation
      required: true
      schema:
        type: string
        example: "CreateItemDto"
  schemas:
    AuthResponse:
      description: Auth response
      type: object
      properties:
        token:
          description: Bearer token
          type: string
        user:
          $ref: "#/components/schemas/User"
      required:
        - token
    ApiKey:
      title: ApiKey
      type: object
      required:
        - id
        - name
      properties:
        id:
          description: ApiKey unique identifier
          type: string
        name:
          description: ApiKey name
          type: string
    DeprecatedItems:
      description: List of deprecated items in the operation.
      type: array
      items:
        type: object
        properties:
          deprecatedInPreviousVersions:
            description: List of previous release versions where item was also deprecated
            type: array
            items:
              type: string
            example: [ "2022.2", "2022,1", "2021.4" ]
          declarationJsonPaths:
            description: Declarative path to deprecated item.
            type: array
            items:
              type: array
              items:
                anyOf:
                - type: string
                - type: integer
            example: [["paths", "/post/saml/", "test", 1], ["paths", "/post/saml/", "test", 22]]
          description:
            description: Human-readable description of deprecated item.
            type: string
            example: "[Deprecated] query parameter 'petId'"
          deprecatedInfo:
            description: |
              Additional information about single deprecated item:
              * for REST API it is value of 'x-deprecated-meta' extension (value of extension must be string), which is defined for deprecated item. 
              * for GraphQL API it is value of 'reason' argument of @deprecated directive.
            type: string
          tolerantHash:
            description: Tolerant hash for Schema object or Parameter object that has been deprecated. It is needed to identify that the same schema/parameter was deprecated in previous version.
            type: string
          hash:
            description: Hash (full) for Schema object or Parameter object that has been deprecated, it is needed to detect semi-breaking changes in UI.
            type: string
    ApiType:
      title: apiType
      type: string
      enum:
        - rest
        - graphql
        - protobuf
    PackageCreate:
      description: Parameters for the package creation
      required:
        - alias
        - name
        - kind
      type: object
      properties:
        parentId:
          description: Parent package ID
          type: string
        kind:
          description: |
            Package kind.
            * If kind = workspace, the parentId will be ignored.
            * If kind = group or package or dashboard, the parentId is required.
          type: string
          enum:
            - workspace
            - group
            - package
            - dashboard
        name:
          description: Name of the new package
          type: string
        alias:
          description: Package short alias (abbreviation)
          type: string
          maxLength: 10
          pattern: "^[a-zA-Z0-9-_]"
        description:
          description: Common description of the package
          type: string
        serviceName:
          description: |
            Service name that package belongs to. Should be equal to service deployment name in kubernetes.
            Ignored for Workspace and Group kind.
          type: string
        imageUrl:
          deprecated: true
          x-deprecation-reason: UI for logo is deprecated. imageUrl parameter will be deleted in 2025.1
          type: string
          description: Path to the package icon
          format: URL
        defaultRole:
          description: Default role of the package.
          type: string
        releaseVersionPattern:
          description: Release version mask. Value shall be inherited from parent group with the ability to override it.
          type: string
        excludeFromSearch:
          description: |
            If true, the package (including child packages) will be ignored by global search.
            Changing the value of the parent package will change the value of all child packages.
            A child package cannot have a negative value if the parent package has a positive value. The default value for a newly created package is equal to the value from the parent package.
          type: boolean
    Package:
      description: Simple package object, without content and dependencies
      type: object
      title: Package
      required:
        - packageId
        - alias
        - kind
        - name
        - isFavorite
        - defaultRole
      properties:
        packageId:
          description: Package unique string identifier (full alias)
          type: string
        alias:
          type: string
          description: Package short alias (abbreviation)
          maxLength: 10
          pattern: "^[a-zA-Z0-9-_]"
        parentId:
          description: Parent package ID
          type: string
        kind:
          description: Package kind
          type: string
          enum:
            - workspace
            - group
            - package
            - dashboard
        name:
          description: Name of the package
          type: string
        description:
          description: Common description of the package
          type: string
        isFavorite:
          description: Sign of the favorite package for the caller user
          type: boolean
          default: false
        serviceName:
          description: Service name that package belongs to. Should be equal to service deployment name in kubernetes.
          type: string
        imageUrl:
          deprecated: true
          x-deprecation-reason: UI for logo is deprecated. imageUrl parameter will be deleted in 2025.1
          type: string
          description: Path to the package icon
          format: URL
        permissions:
          type: array
          description: List of user permissions applicable to the package.
          items:
            $ref: "#/components/schemas/Permission"
          example: ["read", "create_and_update_package", "delete_package"]
        defaultRole:
          description: Default role of the package.
          type: string
        releaseVersionPattern:
          description: Release version mask. Value shall be inherited from parent group with the ability to override it.
          type: string
        excludeFromSearch:
          description: |
            If true, the package (including child packages) will be ignored by global search.
            Changing the value of the parent package will change the value of all child packages.
            A child package cannot have a negative value if the parent package has a positive value. The default value for a newly created package is equal to the value from the parent package.
          type: boolean
        restGroupingPrefix:
          description: |
            Regular expression used as criteria for grouping operations. 
            Groups for the package version are calculated during publication of this version.
          type: string
          example: "/api/v1/{group}/"
    PackageList:
      description: Base package object for parents list.
      type: object
      title: PackageList
      properties:
        packageId:
          description: Package unique string identifier (full alias)
          type: string
        alias:
          type: string
          description: Package short alias (abbreviation)
          maxLength: 10
          pattern: "^[a-zA-Z0-9-_]"
        parentId:
          description: Parent package ID
          type: string
        kind:
          description: Package kind
          type: string
          enum:
            - workspace
            - group
            - package
            - dashboard
        name:
          description: Name of the package
          type: string
        imageUrl:
          deprecated: true
          x-deprecation-reason: UI for logo is deprecated. imageUrl parameter will be deleted in 2025.1
          type: string
          description: Path to the package icon
          format: URL
    PackageUpdate:
      description: Parameters for the package update.
        Not changed parameters must not be transmitted.
        Parameters, required in creation, must not be empty if transmitted.
      type: object
      properties:
        name:
          description: Name of the package
          type: string
        description:
          description: Common description of the package
          type: string
        serviceName:
          description: |
            Service name that package belongs to. Should be equal to service deployment name in kubernetes.
            Parameter may be changed (filled in) only it was empty in creation. Otherwise, the 400 error will be returned.
          type: string
        imageUrl:
          deprecated: true
          x-deprecation-reason: UI for logo is deprecated. imageUrl parameter will be deleted in 2025.1
          type: string
          description: Path to the package icon
          format: URL
        defaultRole:
          description: Default role of the package.
          type: string
        defaultReleaseVersion:
          description: |
            Default release version for the package.
            Only `release` version may be placed as default. Return the error otherwise.
          type: string
          example: "2023.1"
        releaseVersionPattern:
          description: Release version mask. Value shall be inherited from parent group with the ability to override it.
          type: string
        excludeFromSearch:
          description: |
            If true, the package (including child packages) will be ignored by global search.
            Changing the value of the parent package will change the value of all child packages.
            A child package cannot have a negative value if the parent package has a positive value. The default value for a newly created package is equal to the value from the parent package.
          type: boolean
        restGroupingPrefix:
          description: Regular expression used as criteria for grouping operations.
          type: string
    GitBranch:
      description: External Git branch params
      type: object
      properties:
        name:
          description: Branch name
          type: string
    GitBranchFile:
      description: Git branch file
      type: object
      properties:
        name:
          description: item name
          type: string
        isFolder:
          description: Is item is folder
          type: boolean
          default: false
    Repository:
      description: Linked GIT repository params
      type: object
      properties:
        repositoryId:
          description: External GIT repository id
          type: string
        name:
          description: External GIT repository full name
          type: string
        defaultBranch:
          description: Name of the default branch of the linked repository
          type: string
    PackageStatus:
      description: Published package version content
      type: object
      properties:
        status:
          type: string
          enum:
            - exist
            - deleted
    VersionStatusEnum:
      description: Package version status
      type: string
      enum:
        - draft
        - release
        - archived
    User:
      description: APIHUB user
      type: object
      required:
        - id
      properties:
        id:
          description: Login of the user
          type: string
          example: user1221
        name:
          description: Name of the user
          type: string
          example: "Name Surname"
        email:
          description: Email address of the user
          type: string
          format: email
          example: "name.surname@qubership.org"
        avatarUrl:
          description: Avatar of the user
          type: string
          format: URL
    RoleCreate:
      description: Role with set of permissions for creation.
      type: object
      title: Role
      required:
        - role
        - permissions
      properties:
        role:
          type: string
          pattern: "^[a-zA-Z0-9- ]"
          description: Role name.
          example: Editor
        permissions:
          type: array
          description: List of permissions applicable to the role.
          items:
            $ref: "#/components/schemas/Permission"
          example: ["read", "create_and_update_package", "delete_package"]
    Role:
      description: Role details.
      type: object
      title: Role
      required:
        - roleId
        - role
        - permissions
      properties:
        roleId:
          type: string
          description: Unique role identifier. The value is the slug of role name.
          example: editor
        role:
          type: string
          description: Role name.
          example: Editor
    Permission:
      description: Permission
      type: string
      enum:
        - read
        - create_and_update_package
        - delete_package
        - manage_draft_version
        - manage_release_version
        - manage_archived_version
        - user_access_management
        - access_token_management
      example: read
    Member:
      description: User and assigned role
      type: object
      title: Member
      required:
        - user
        - roles
      properties:
        user:
          $ref: "#/components/schemas/User"
        roles:
          type: array
          description: List of user roles in the package.
          items:
            allOf:
              - $ref: "#/components/schemas/Role"
              - type: object
                properties:
                  inheritance:
                    type: object
                    description: Role was inherited from this package
                    properties:
                      packageId:
                        description: Package unique string identifier (full alias)
                        type: string
                      kind:
                        description: Package kind
                        type: string
                        enum:
                          - workspace
                          - group
                      name:
                        description: Name of the package
                        type: string
                        example: qubership
    MemberCreate:
      description: Assign users and role to the package
      type: object
      title: MemberCreate
      required:
        - emails
        - roleIds
      properties:
        emails:
          description: List of email addresses of the users to create.
          type: array
          items:
            type: string
            format: email
          example: ["name.surname@qubership.org"]
        roleIds:
          type: array
          description: List of role IDs, added to the user.
          items:
            type: string
          example: [owner, editor, viewer, none]
    PackageVersion:
      description: Base parameters of published version (without content)
      type: object
      title: PackageVersion
      required:
        - version
        - status
        - createdAt
        - createdBy
      properties:
        version:
          description: Package version name.The <version>@<revision> mask is used to return the revision number.
          type: string
          example: "2022.3@5"
        status:
          $ref: "#/components/schemas/VersionStatusEnum"
        createdBy:
          $ref: "#/components/schemas/Principal"
        createdAt:
          type: string
          description: Date of package creation.
          format: datetime
        versionLabels:
          description: List of version labels.
          type: array
          items:
            type: string
          example: ["part-of:CloudQSS-CPQBE"]
        previousVersion:
          description: previous package version name.The <version>@<revision> mask is used to return the revision number.
          type: string
          example: "2022.2@5"
        previousVersionPackageId:
          description: Package id of the previous version. Can be empty if the value is equal to the package id.
          type: string
          example: "QS.GRP.SOMEPKG"
        notLatestRevision:
          type: boolean
          default: false
    PackageVersionContentV2:
      deprecated: true
      description: Published package version content
      type: object
      required:
        - packageId
        - version
        - createdAt
        - createdBy
        - summary
        - revision
        - revisionsCount
        - status
      properties:
        packageId:
          description: Package unique string identifier (full alias)
          type: string
          example: "QS.CloudQSS.CPQ.Q-TMF"
        version:
          description: Package version name.The <version>@<revision> mask is used to return the revision number.
          type: string
          example: "2022.2@5"
        createdAt:
          description: Date of the package version publication.
          type: string
          format: date-time
        createdBy:
          description: User, published the package version.
          type: string
        previousVersion:
          description: Name of the previous published version.The <version>@<revision> mask is used to return the revision number.
          type: string
          example: "2022.2@5"
        previousVersionPackageId:
          description: Package id of the previous version to compare with. Required for agent snapshots.
          type: string
          example: "QS.GRP.SOMEPKG"
        versionLabels:
          description: List of version labels.
          type: array
          items:
            type: string
          example: ["part-of:CloudQSS-CPQBE"]
        notLatestRevision:
          type: boolean
          default: false
        revisionsCount:
          description: Total number of revisions in the version.
          type: integer
          format: int32
          example: 3
        status:
          $ref: "#/components/schemas/VersionStatusEnum"
    PackageVersionContent:
      description: Published package version content
      type: object
      required:
        - packageId
        - version
        - createdAt
        - createdBy
        - summary
        - revision
        - revisionsCount
        - status
      properties:
        packageId:
          description: Package unique string identifier (full alias)
          type: string
          example: "QS.CloudQSS.CPQ.Q-TMF"
        version:
          description: Package version name.The <version>@<revision> mask is used to return the revision number.
          type: string
          example: "2022.2@5"
        createdAt:
          description: Date of the package version publication.
          type: string
          format: date-time
        createdBy:
          $ref: "#/components/schemas/Principal"
        previousVersion:
          description: Name of the previous published version.The <version>@<revision> mask is used to return the revision number.
          type: string
          example: "2022.2@5"
        previousVersionPackageId:
          description: Package id of the previous version to compare with. Required for agent snapshots.
          type: string
          example: "QS.GRP.SOMEPKG"
        versionLabels:
          description: List of version labels.
          type: array
          items:
            type: string
          example: ["part-of:CloudQSS-CPQBE"]
        notLatestRevision:
          type: boolean
          default: false
        revisionsCount:
          description: Total number of revisions in the version.
          type: integer
          format: int32
          example: 3
        status:
          $ref: "#/components/schemas/VersionStatusEnum"
    PackageVersionFile:
      description: Parameters of published file in package version
      type: object
      title: Package version file
      required:
        - fileId
        - filename
        - slug
        - type
        - format
        - title
      properties:
        fileId:
          type: string
          description: File name.
          example: "qitmf-v5.11.json"
        filename:
          type: string
          description: File name (slug+extension).
          example: "qitmf-v5.11.json"
        slug:
          description: Published file slug
          type: string
          pattern: "^[a-z0-9-]"
          example: "qitmf-v5-11-json"
        type:
          $ref: "#/components/schemas/SpecificationType"
        format:
          $ref: "#/components/schemas/DocumentFormat"
        title:
          description: Name/title of the document.
          type: string
          example: "Quote Integration TMForum Service"
        version:
          description: Document version
          type: string
          example: "1.0.1"
        labels:
          description: List of file labels.
          type: array
          items:
            type: string
          example: ["TMF"]
    PackageTransformationFile:
      description: Parameters of published file in package version
      type: object
      title: Package version file
      required:
        - fileId
        - filename
        - slug
        - type
        - format
        - title
      properties:
        fileId:
          type: string
          description: File name.
          example: "qitmf-v5.11.json"
        filename:
          type: string
          description: File name (slug+extension).
          example: "qitmf-v5.11.json"
        slug:
          description: Published file slug
          type: string
          pattern: "^[a-z0-9-]"
          example: "qitmf-v5-11-json"
        type:
          $ref: "#/components/schemas/SpecificationType"
        format:
          $ref: "#/components/schemas/DocumentFormat"
        title:
          description: Name/title of the document.
          type: string
          example: "Quote Integration TMForum Service"
        version:
          description: Document version
          type: string
          example: "1.0.1"
        labels:
          description: List of file labels.
          type: array
          items:
            type: string
          example: ["TMF"]
        description:
          description: Document description
          type: string
        includedOperationIds:
          description: List of operation IDs included to specified operation group
          type: array
          items:
            type: string
          example: [
              "get-quoteManagement-v5-quote",
              "post-quoteManagement-v5-quote"
            ]
        data:
          description: Content of the operation as a JSON object
          type: object
    PackageVersionRef:
      description: Package version reference
      type: object
      title: Referenced package version
      required:
        - refId
        - name
        - version
        - status
      properties:
        refId:
          description: Referenced package Id
          type: string
          example: "QS.CloudQSS.CPQ.Q-TMF"
        kind:
          description: Package kind
          type: string
          enum:
            - package
            - dashboard
        name:
          description: Name of the referenced package
          type: string
          example: "Quote Management TMF648"
        version:
          description: Referenced package version number. The <version>@<revision> mask is used to return the revision number.
          type: string
          example: "2022.2@5"
        status:
          $ref: "#/components/schemas/VersionStatusEnum"
        deletedAt:
          description: date when package version was deleted package version
          type: string
          format: date-type
          example: "2023-05-30T17:17:11.755146Z"
        deletedBy:
          description: user who deleted package version
          type: string
          example: "user1221"
    Principal:
      description: User or API key
      allOf:
        - oneOf:
          - $ref: "#/components/schemas/User"
          - $ref: "#/components/schemas/ApiKey"
        - type: object
          required:
            - type
          properties:
            type:
              description: Identifies whether principal is user or API key
              type: string
              enum:
                - user
                - apiKey
    ReferencedPackage:
      description: Package reference
      type: object
      title: Referenced package
      required:
        - refId
        - kind
        - name
        - version
        - status
      properties:
        refId:
          description: Referenced package Id.
          type: string
          example: "QS.CloudQSS.CPQ.CORE"
        kind:
          description: Package kind
          type: string
          enum:
            - package
            - dashboard
        name:
          description: Name of the referenced package
          type: string
          example: "Quote Management TMF648"
        version:
          description: Referenced package version number. The <version>@<revision> mask is used to return the revision number.
          type: string
          example: "2022.2@5"
        status:
          $ref: "#/components/schemas/VersionStatusEnum"
        parentPackages:
          description: Array of parent package names
          type: array
          items:
            type: string
        deletedAt:
          description: date when package version was deleted package version
          type: string
          format: date-type
          example: "2023-05-30T17:17:11.755146Z"
        deletedBy:
          description: user who deleted package version
          type: string
          example: "user1221"
        notLatestRevision:
          type: boolean
          default: false
    SearchResultOperation:
      description: |
        Global search result for API operations; must be returned when searchLevel = operation
      title: SearchResultOperation
      allOf:
        - oneOf:
          - $ref: "#/components/schemas/RestOperation"
          - $ref: "#/components/schemas/GraphQLOperation"
        - type: object
          required:
            - packageId
            - name
            - parentPackages
            - version
            - status
          properties:
            packageId:
              description: Package unique string identifier (full alias)
              type: string
              example: "QS.CloudQSS.CPQ.Q-TMF"
            name:
              description: Package name
              type: string
              example: "Quote TMF Service"
            parentPackages:
              description: Array of parent package names
              type: array
              items:
                type: string
            version:
              description: Package version name
              type: string
              example: "2022.2@5"
            status:
              $ref: "#/components/schemas/VersionStatusEnum"
    SearchResultOperationV2:
      description: |
        Global search result for API operations; must be returned when searchLevel = operation
      title: SearchResultOperationV2
      type: object
      deprecated: true
      required:
        - packageId
        - name
        - parentPackages
        - version
        - status
        - operationId
        - title
        - metadata
        - apiType
      properties:
        packageId:
          description: Package unique string identifier (full alias)
          type: string
          example: "QS.CloudQSS.CPQ.Q-TMF"
        name:
          description: Package name
          type: string
          example: "Quote TMF Service"
        parentPackages:
          description: Array of parent package names
          type: array
          items:
            type: string
        version:
          description: Package version name
          type: string
          example: "2022.2@5"
        status:
          $ref: "#/components/schemas/VersionStatusEnum"
        operationId:
          description: Operation unique identifier (slug). Not the same as operationId tag from the OpenAPI file.
          type: string
          example: get-quoteManagement-v5-quote
        title:
          description: Operation summary/title.
          type: string
        deprecated:
          description: Operation deprecate flag.
          type: boolean
          default: false
        apiType:
          type: string
          enum:
            - rest
            - graphql
        metadata:
          description: Parameters for specific API type
          oneOf:
            - type: object
              title: RestParams
              description: Rest API specific parameters
              required:
                - path
                - method
              properties:
                path:
                  description: Operation endpoint path.
                  type: string
                  example: "/quoteManagement/v5/quote"
                method:
                  description: Operation method.
                  type: string
                  enum:
                    - post
                    - get
                    - put
                    - patch
                    - delete
                    - head
                    - options
                    - connect
                    - trace
            - type: object
              title: GraphQLParams
              description: GrapQL specific parameters
              required:
                - type
                - method
              properties:
                type:
                  description: Operation type
                  type: string
                  enum:
                    - query
                    - mutation
                method:
                  description: GraphQL operation method.
                  type: string
                  example: getPaymentMethodSpecificationCore
    SearchResultPackage:
      title: SearchResultPackage
      description: |
        Global search result for packages with kind = package; must be returned when searchLevel = package
        * If search term matches the package id/name/description/service name, return the latest published version only. 
        * If search term matches the version name/label, return that version.
      type: object
      required:
        - packageId
        - name
        - parentPackages
        - createdAt
        - version
        - revision
        - status
      properties:
        packageId:
          description: Package unique string identifier (full alias)
          type: string
          example: "QS.CloudQSS.CPQ.Q-TMF"
        name:
          description: Package name
          type: string
          example: "Quote TMF Service"
        description:
          description: Package description
          type: string
        serviceName:
          description: Service name that package belongs to. Should be equal to service deployment name in kubernetes.
          type: string
        parentPackages:
          description: Array of parent package names
          type: array
          items:
            type: string
        version:
          description: Package version name.
          type: string
          example: "2022.2@5"
        latestRevision:
          description: |
            true if revision is the latest one.
          type: boolean
          default: false
        status:
          $ref: "#/components/schemas/VersionStatusEnum"
        createdAt:
          description: Date of the package version publication
          type: string
          format: date-time
        labels:
          description: List of package version labels
          type: array
          items:
            type: string
    SearchResultDocument:
      description: Global search result for documents; must be returned when searchLevel = document
      title: SearchResultDocument
      type: object
      required:
        - packageId
        - name
        - parentPackages
        - version
        - status
        - files
        - slug
        - type
        - title
      properties:
        packageId:
          description: Package unique string identifier (full alias)
          type: string
          example: "QS.CloudQSS.CPQ.Q-TMF"
        name:
          description: Package name
          type: string
          example: "Quote TMF Service"
        parentPackages:
          description: Array of parent package names
          type: array
          items:
            type: string
        version:
          description: Package version name.
          type: string
          example: "2022.2@5"
        status:
          $ref: "#/components/schemas/VersionStatusEnum"
        slug:
          description: Published document slug
          type: string
          pattern: "^[a-z0-9-]"
          example: "qitmf-v5-11-json"
        type:
          description: Type of the specification notation.
          type: string
          enum:
            - openapi-3-1
            - openapi-3-0
            - openapi-2-0
            - json-schema
            - markdown
            - unknown
        title:
          description: Name/title of the document.
          type: string
          example: "Quote Integration TMForum Service"
        labels:
          description: List of documents labels.
          type: array
          items:
            type: string
          example: ["TMF"]
        createdAt:
          description: Date of the package version publication
          type: string
          format: date-time
        content:
          type: string
          description: |
            String with search term occurrences in the document.
            If document content does not contain search term, then return N first characters.
            If document is empty, then this property will be empty.
    ErrorResponse:
      description: An error description
      type: object
      properties:
        status:
          description: HTTP Status Code
          type: number
        code:
          description: Internal string error code. Mandatory in response.
          type: string
        message:
          description: The attribute contains an error message.
          type: string
        params:
          type: object
          description: Message parameters
          example:
            id: 12345
            type: string
        debug:
          description: The attribute contains debug details (e.g. stack-trace). Presented in the error response only on Dev/Test environments if corresponding logging level is enabled.
          type: string
      required:
        - status
        - code
        - message
    PackageApiKey:
      type: object
      description: ApiKey details for the package
      title: PackageApiKey
      required:
        - id
        - name
        - createdBy
        - createdAt
        - roles
      properties:
        id:
          description: ApiKey unique identifier
          type: string
        packageId:
          description: Internal unique package ID (full alias)
          type: string
        name:
          description: ApiKey name
          type: string
        createdBy:
          $ref: "#/components/schemas/User"
        createdFor:
          $ref: "#/components/schemas/User"
        createdAt:
          description: Date and time of ApiKey creation
          type: string
          format: datetime
        roles:
          description: List of roles.
          type: array
          items:
            type: string
    SpecificationType:
      title: type
      description: Type of the specification notation.
      type: string
      enum:
        - openapi-3-1
        - openapi-3-0
        - openapi-2-0
        - json-schema
        - markdown
        - graphql-schema
        - graphapi
        - introspection
        - protobuf-3
        - unknown
    DocumentFormat:
      title: format
      description: Format of the specification document.
      type: string
      enum:
        - json
        - yaml
        - md
        - graphql
        - gql
        - proto
        - unknown
    Operation:
      description: Operation object
      title: Operation
      type: object
      required:
        - operationId
        - title
        - apiType
        - dataHash
        - apiAudience
        - apiKind
      properties:
        operationId:
          description: Operation unique identifier (slug). Not the same as operationId tag from the OpenAPI file.
          type: string
          example: get-quoteManagement-v5-quote
        title:
          description: Operation summary/title.
          type: string
        apiType:
        #  description: Type of the API.
        #  type: string
        #  enum:
        #    - rest
        #    - kafka
        #    - grpc
        #    - graphql
        #    - protobuf
          $ref: "#/components/schemas/ApiType"
        dataHash:
          description: Operation hash.
          type: string
          example: sdfsdfsf242
        externalMetadata:
          description: External operation metadata.
          type: object
        deprecated:
          description: Operation deprecate flag.
          type: boolean
          default: false
        apiAudience:
          description: |
            Operation's target audience.
            * internal - APIs are available for integration within product application.
            * external - APIs exposed outside the boundary of product application: solution delivery integrations, 3rd party integrations, customer integrations.
            * unknown - If any value other than internal or external is used, the API is considered as unknown.
          type: string
          enum:
            - internal
            - external
            - unknown
        apiKind:
          description: |
            Operation API kind.
            * bwc - API with backward compatibility support (a.k.a. public).
            * no-bwc - API without backward compatibility support (a.k.a. internal).
            * experimental - APIs for feature testing. Usage is not recommended.
          type: string
          enum:
            - bwc
            - no-bwc
            - experimental
          default: bwc
        tags:
          description: |
            List of operation tags.
            * in rest, tag is OpenAPI tag.
            * in graphql, tag is root schema type - query, mutation, subscription.
            * in protobuf, tag is service of method.
          type: array
          items:
            type: string
          example: ["RestControllerV5"]
    OperationGroup:
      description: Operation object
      title: Operation
      type: object
      required:
        - operationId
        - title
        - path
        - method
        - tags
        - packageRef
        - apiKind
      properties:
        operationId:
          description: Operation unique identifier (slug). Not the same as operationId tag from the OpenAPI file.
          type: string
          example: get-quoteManagement-v5-quote
        title:
          description: Operation summary/title.
          type: string
        path:
          description: Operation endpoint path.
          type: string
          example: "/quoteManagement/v5/quote"
        method:
          description: Operation method.
          type: string
          enum:
            - post
            - get
            - put
            - patch
            - delete
            - head
            - options
            - connect
            - trace
        tags:
          description: List of operation tags.
          type: array
          items:
            type: string
          example: ["RestControllerV5"]
        packageRef:
          description: Parent package and version link.
          type: string
          example: "QS.CloudQSS.CPQ.Q-TMF@2023.2"
        apiKind:
          description: |
            Operation API kind.
            * bwc - API with backward compatibility support (a.k.a. public).
            * no-bwc - API without backward compatibility support (a.k.a. internal).
            * experimental - APIs for feature testing. Usage is not recommended.
          type: string
          enum:
            - bwc
            - no-bwc
            - experimental
          default: bwc
    RestOperation:
      description: REST operation object.
      title: RestOperation
      allOf:
        - $ref: "#/components/schemas/Operation"
        - $ref: "#/components/schemas/RestOperationMeta"
    ProtobufOperation:
      description: Protobuf operation object.
      title: ProtobufOperation
      allOf:
        - $ref: "#/components/schemas/Operation"
        - $ref: "#/components/schemas/ProtobufOperationMeta"
    GraphQLOperation:
      description: GraphQL operation object.
      title: GraphQLOperation
      allOf:
        - $ref: "#/components/schemas/Operation"
        - $ref: "#/components/schemas/GraphQLOperationMeta"
    RestOperationMeta:
      description: Specific parameters for REST operation.
      title: RestOperationMeta
      required:
        - path
        - method
      type: object
      properties:
        path:
          description: Operation endpoint path.
          type: string
          example: "/quoteManagement/v5/quote"
        method:
          description: Operation method.
          type: string
          enum:
            - post
            - get
            - put
            - patch
            - delete
            - head
            - options
            - connect
            - trace
        title:
          description: Operation summary/title.
          type: string
        customTags:
          description: Custom tags.
          type: object
    GraphQLOperationMeta:
      description: Specific parameters for GraphQL operation.
      title: GraphQLOperationMeta
      required:
        - type
        - method
      type: object
      properties:
        type:
          description: Operation type
          type: string
          enum:
            - query
            - mutation
            - subscription
        method:
          description: GraphQL operation method.
          type: string
          example: getPaymentMethodSpecificationCore
        title:
          description: Operation summary/title.
          type: string
        customTags:
          description: Custom tags.
          type: object
    ProtobufOperationMeta:
      description: Specific parameters for Protobuf operation.
      title: GraphQLOperationMeta
      required:
        - type
        - method
      type: object
      properties:
        type:
          description: Operation type
          type: string
          enum: #open questions what types shall be supported?
            - unary
            - serverStreaming
            - clientStreaming
            - bidirectionalStreaming
        method:
          description: Protobuf method name.
          type: string
          example: ListActionLogItems
        title:
          description: Operation title (same as method name but with adding spaces between capital letters)
          type: string
          example: List Action Log Items
    OperationInfoFromDifferentVersions:
      description: Operation info from previous/current version.
      type: object
      required:
        - title
        - apiKind
        - dataHash
        - apiAudience
      properties:
        title:
          description: Operation summary/title.
          type: string
        apiKind:
          type: string
          enum:
            - bwc
            - no-bwc
            - experimental
        apiAudience:
          description: |
            Operation's target audience:
            * internal - APIs are available for integration within product application.
            * external - APIs exposed outside the boundary of product application: solution delivery integrations, 3rd party integrations, customer integrations.
            * unknown - If any value other than internal or external is used, the API is considered as unknown.
          type: string
          enum:
            - internal
            - external
            - unknown
        dataHash:
          description: Operation hash.
          type: string
          example: sdfsdfsf242
        packageRef:
          description: >
            Parent package and version link. Created by
            the concatenation of the packageId and
            version name with At sign.
          type: string
          example: QS.CloudQSS.CPQ.Q-TMF@2023.2
    BusinessMetric:
      description: Business metric
      title: BusinessMetric
      required:
        - packageId
        - date
        - metric
        - value
      type: object
      properties:
        packageId:
          description: Package unique string identifier
          type: string
        date:
          description: Date on which business metric was collected.
          type: string
          format: date
          example: '2023-12-31'
        username:
          description: Name of the user that has been counted for a specific metric.
          type: string
        metric:
          description: Name of business metric.
          type: string
          example: comparisons_called
        value:
          description: Value associated with business metric.
          type: integer
    BuildResultV2:
      description: |
        Result of build operation in ZIP archive.
        * The archive contains folders with sources, builded JSON documents and JSON operation files. 
        * In addition, several config files are provided. he structure of these files is described below.
      title: BuildResult
      type: object
      required:
        - info.json
        - documents.json
      properties:
        info.json:
          description: |
            Build configuration, published version details.
          type: object
          required:
            - packageId
            - version
          properties:
            packageId:
              description: Package unique string identifier (full alias).
              type: string
              example: "QS.CloudQSS.CPQ.Q-TMF"
            version:
              description: Version name for publication.
              type: string
              example: "2022.3"
            previousVersion:
              description: |
                Name of the previous published version.
                The mask <version>@<revision> may be used to return the revision number.
              type: string
              example: "2022.2@4"
              default: ""
            previousVersionPackageId:
              description: Previous release version package id.
              type: string
              example: "QS.CloudQSS.CPQ.Q-TMF"
            buildType:
              description: |
                Type of the build process. Available options are:

                **build** - Standard build process. 
                Consist of contract and operations build and validation, calculation of the changelog, creation of the final version of the published contracts.

                **changelog** - Only the changelog calculation, no API contracts version will be created.
                both version and previousVersion fields *must* contain @<revision> suffix when using changelog buildType

                **documentGroup** - Process to transform documents so that they will contain operations only from specific operations group.
                Consists of info.json and documents.json
              type: string
              enum:
                - build
                - changelog
                - documentGroup
            metadata:
              description: Common publish metadata.
              type: object
              properties:
                commitId:
                  description: Last Git commit ID of the version.
                  type: string
                  example: a5d45af7
                repositoryUrl:
                  description: Url of the Git repository.
                  type: string
                  format: URI
                  example: 'https://<git_group_link>/apihub-registry'
                labels:
                  description: List of version labels.
                  type: array
                  items:
                    type: string
                  example: ["TMF"]
                cloudName:
                  description: Name of the cloud for publication from Agent.
                  type: string
                  example: 'k8s-apps2'
                cloudUrl:
                  description: Full address of the cloud from Agent.
                  type: string
                  format: URI
                  example: 'https://k8s-apps2.k8s.sdntest.qubership.org'
                namespace:
                  description: Namespace of Agent's publication.
                  type: string
                  example: 'cloudQSS-release2'
            refs:
              description:  |
                Detailed data about referenced versions for current package version.
              type: array
              items:
                type: object
                required:
                  - refId
                  - version
                  - type
                properties:
                  refId:
                    description: Referenced package Id.
                    type: string
                    example: "QS.CloudQSS.CPQ.CORE"
                  version:
                    description: Referenced package version number.
                    type: string
                    example: "2022.3@5"
                  parentRefId:
                    description: Referenced parent package Id.
                    type: string
                    example: "QS.CloudQSS.CPQ.CORE"
                  parentVersion:
                    description:  |
                      Referenced parent version.
                      The mask <version>@<revision> may be used to link with a specific revision.
                      If the @revision is not provided, the latest version's revision will be used.
                    type: string
                    example: "2022.2@4"
                  excluded:
                    description: All excluded refs will be ignored (but will still be visible for package version).
                    type: boolean
            externalMetadata:
              description: External build result metadata
              type: object
              properties:
                operations:
                  type: array
                  items:
                    type: object
                    properties:
                      apiType:
                        type: string
                        enum:
                          - rest
                      method:
                        type: string
                        description: HTTP method
                      path:
                        type: string
                        description: HTTP path
                      externalMetadata:
                        description: External operation metadata
                        type: object
        documents.json:
          type: object
          description: List of documents data.
          properties:
            documents:
              type: array
              items:
                description: List of builded files.
                type: object
                required:
                  - fileId
                  - slug
                  - title
                  - format
                  - type
                  - operations
                properties:
                  fileId:
                    type: string
                    description: File name with folders.
                    example: "docs/qitmf-v5.11.json"
                  fileName:
                    type: string
                    description: File name (slug+extension).
                    example: "qitmf-v5.11.json"
                  slug:
                    description: Published file slug.
                    type: string
                    pattern: "^[a-z0-9-]"
                    example: "qitmf-v5-11-json"
                  type:
                    description: Type of the specification notation.
                    type: string
                    enum:
                      - openapi-3-1
                      - openapi-3-0
                      - openapi-2-0
                      - asyncapi-2
                      - json-schema
                      - markdown
                      - graphql-schema
                      - graphapi
                      - introspection
                      - unknown
                  format:
                    description: Format of the specification document.
                    type: string
                    enum:
                      - json
                      - yaml
                      - md
                      - graphql
                      - gql
                      - unknown
                  title:
                    description: Document title and summary.
                    type: string
                  description:
                    description: Document description.
                    type: string
                  version:
                    description: Document version. For openapi document, version is taken from info object.
                    type: string
                    example: "1.0.1"
                  operationIds:
                    description: List of operation IDs.
                    type: array
                    items:
                      type: string
                    example: ["get-quoteManagement-v5-quote"]
                  metadata:
                    description: Meta parameters from config file.
                    type: object
                    properties:
                      info:
                        description: Info object from openapi document
                        type: object
                      externalDocs:
                        description: External documentation object from openapi document
                        type: object
                      labels:
                        description: List of file labels.
                        type: array
                        items:
                          type: string
                        example: ["TMF"]
                      blobId:
                        description: Git blob ID of the file.
                        type: string
                        example: a5d84af7
                      tags:
                        type: object
                        properties:
                          name:
                            type: string
                          description:
                            type: string
                          externalDocs:
                            type: object
                            properties:
                              description:
                                type: string
                              url:
                                type: string
        comparisons.json:
          type: object
          properties:
            comparisons:
              type: array
              items:
                type: object
                required:
                  - operationTypes
                properties:
                  comparisonFileId:
                    type: string
                    description: Pointer to the file with changes. Optional, required only if package contains documents. Not required in case of refs only (dashboard).
                    example: "comparisonFile1.json"
                  packageId:
                    description: Package unique string identifier (full alias).
                    type: string
                    example: "QS.CloudQSS.CPQ.Q-TMF"
                  version:
                    description: Version name for publication.
                    type: string
                    example: "2022.3"
                  revision:
                    type: number
                  previousVersion:
                    description: |
                      Name of the previous published version.
                    type: string
                    example: "2022.2"
                    default: ""
                  previousVersionPackageId:
                    description: Previous release version package id.
                    type: string
                    example: "QS.CloudQSS.CPQ.Q-TMF"
                  previousVersionRevision:
                    type: number
                  operationTypes:
                    type: array
                    items:
                      type: object
                      properties:
                        apiType:
                          type: string
                        changesSummary:
                          $ref: "#/components/schemas/ChangeSummary"
                        tags:
                          type: array
                          items:
                            type: string
                          example:
                            ["a", "b"]
                  fromCache:
                    description: True if the changes were retrieved from BE (not calculated)
                    type: boolean
        comparisons/{comparisonFileId}:
          type: object
          description: List of changes data.
          properties:
            operations:
              description: Collection of changes depend on apiType.
              type: array
              items:
                type: object
                required:
                  - operationId
                  - changes
                  - changesSummary
                properties:
                  operationId:
                    description: >-
                      Operation unique identifier (slug). Not the same as
                      operationId tag from the OpenAPI file.
                    type: string
                    example: get-quoteManagement-v5-quote
                  dataHash:
                    description: Operation hash.
                    type: string
                    example: sdfsdfsf242
                  previousDataHash:
                    description: Hash of the previous published version operation.
                    type: string
                    example: sdfsdfsf24dds2
                  changeSummary:
                    $ref: "#/components/schemas/ChangeSummary"
                  changes:
                    description: Collection of changes for each operation.
                    type: array
                    items:
                      type: object
                      description: Discrepancy data in a single operation.
                      properties:
                        jsonPath:
                          description: |
                            (below, a document is not considered to be an original document, but a document with one specific operation)\
                            When comparing two documents (origin and changed; difference from changed document apended to the original document), a jsonPath is calculated for each change. jsonPath is the location of a specific change in the changed document.
                          type: array
                          items:
                            type: string
                          example: ["paths", "/quoteManagement/v5/quote", "get", "parameters", "0", "description"]
                        description:
                          description: >-
                            Human-readable description of point of change.
                          type: string
                          example: "[ Added ] Property: summary."
                        action:
                          description: Action, what was done with the endpoint.
                          type: string
                          enum:
                            - add
                            - remove
                            - change
                        severity:
                          $ref: "#/components/schemas/ChangeSeverity"
        operations.json:
          description: List of operations for publish.
          type: object
          properties:
            operations:
              type: array
              items:
                allOf:
                  - description: Operation object
                    title: Operation
                    type: object
                    required:
                      - operationId
                      - title
                      - apiType
                      - dataHash
                      - apiKind
                    properties:
                      operationId:
                        description: Operation unique identifier (slug). Not the same as operationId tag from the OpenAPI file.
                        type: string
                        example: get-quoteManagement-v5-quote
                      title:
                        description: Operation summary/title.
                        type: string
                      apiType:
                        description: Type of the API.
                        type: string
                        enum:
                          - rest
                          - kafka
                          - grpc
                          - graphql
                      dataHash:
                        description: Operation hash.
                        type: string
                        example: sdfsdfsf242
                      deprecated:
                        description: Operation deprecate flag.
                        type: boolean
                        default: false
                      apiKind:
                        description: |
                          Operation API kind.
                          * bwc - API with backward compatibility support (a.k.a. public).
                          * no-bwc - API without backward compatibility support (a.k.a. internal).
                          * experimental - APIs for feature testing. Usage is not recommended.
                        type: string
                        enum:
                          - bwc
                          - no-bwc
                          - experimental
                        default: bwc
                      tags:
                        description: List of operation tags.
                        type: array
                        items:
                          type: string
                        example: ["RestControllerV5"]
                  - type: object
                    required:
                      - data
                      - metadata
                      - searchScopes
                    properties:
                      models:
                        description: Map<name:string, hash:string> of operation models
                        type: object
                        additionalProperties:
                          type: string
                          example:
                            Template: a6b1596abe745a4a0cd3de25a411dbe671a3ba7c
                            ErrorResponse: cf1d87cf3895af106a3ad29f2098dcc2cc477e71
                            CreateItemDto: 72bfdc14758213e5c09620b29054da86b75d4868
                      deprecatedInfo:
                        description: Additional information about deprecated operation
                        type: object
                      deprecatedInPreviousVersions:
                        description: List of previous release versions where operation was also deprecated
                        type: array
                        items:
                          type: string
                        example: ["2022.2", "2022,1", "2021.4"]
                      deprecatedItems:
                        description: List of deprecated items inside operation.
                        type: array
                        items:
                          type: object
                          properties:
                            jsonPath:
                              description: jsonPath to point of deprecation.
                              type: array
                              items:
                                type: string
                              example: ["paths", "/quoteManagement/v5/quote", "get", "parameters", "0", "description"]
                            description:
                              description: Human-readable description of deprecated item.
                              type: string
                              example: "parameter Type in response 200"
                            deprecatedInfo:
                              description: Additional information about single deprecated item
                              type: object
                            deprecatedInPreviousVersions:
                              description: List of previous release versions where item was also deprecated
                              type: array
                              items:
                                type: string
                              example: ["2022.2", "2022,1", "2021.4"]
                      metadata:
                        description: Metadata content depend on apiType.
                        oneOf:
                          - allOf:
                            - $ref: "#/components/schemas/RestOperationMeta"
                            - type: object
                              properties:
                                originalPath:
                                  description: "Operation path as it presented in initial documentation file"
                                  type: string
                          - $ref: "#/components/schemas/GraphQLOperationMeta"
                      searchScopes:
                        description: Scopes for search indexes.
                        type: object
                        additionalProperties:
                          type: string
                        example:
                          all: "Quote Snapshot V6 Performs full text search ofQuotes Statistics By Phrase fullTextSearchStatistics searchPhrase offset int32 limit int32 fields 200 OK application/json quote anonymousCustomerData assignTo The name of the user/team to whom the Quote is assigned cancellationReason The entity that represents common information about a customer's request cancellationReasonDescription The reason (from the free text field) why the Quote has been cancelled contactMedium A list of contact mediums (ContactMedium [*]). Indicates the contact medium that could be used to contact the party deliveryMethod Id of the Delivery Method (from the Delivery Method list) for Quote description Description of the Quote extendedParameters additionalProperties The attribute contains additional parameters of the Quote The attribute contains additional parameters of the Quote Map<String,List<String>> The attribute contains additional parameters of the Quote externalRefs Represents a reference to an external object id Unique identifier of the Quote name Quote name quoteDate Date and time when the Quote was created date-time quoteTotalPrice Represents Quote total price relatedParty A list of related party references (RelatedPartyRef [*]).A related party defines party or party role linked to a specific entity relatedQuote A list of related quotes (RelatedQuote [*]). It represents another revision of the in-flight Quote from the same chain, i.e. in-flight Quote with the same initialBaselineQuoteId value. This class is returned in the API response only in case of enhancedListQuotes API operation is called. It can be empty if there are no other in-flight Quotes in this chain revision Attribute is used to mark in-flight Quote. Increased in case changes are done to the Quote after submission int32 state State of the Quote updatedWhen Date and time when the Quote was updated date-time validFor Quote with reduced scope of attributes quoteItemStatistic Shows the number of Quote's root Quote Items grouped by some criteria(e.g. by Product Offering, Action) action Numbers of root Quote Items grouped by Action count Number of Quote Items for the specific value int32 name Action name Shows the number of Customer's Product Instances for specified criteria (e.g. Product Family, Billing Account and so on) productFamilyId Unique identifier of Product Family productFamilyName Product family name. Name is returned in the default locale. If alternative locale is passed in Accept-language header in the API request the system returns corresponding localized name in the response. productOfferingId Unique identifier of Product Offering productOfferingName Product offering name. Attribute is returned in the response for catalog entities only (product offering). Name is returned in the default locale. If alternative locale is passed in Accept-language header in the API request the system returns corresponding localized name in the response Shows the number of Quote's root Quote Items grouped by some criteria(e.g. by Product Offering, Action) Shows the Quote with a number of root Quote Items 4XX default response application/json;charset=UTF-8;model=errorResponse;version=1 5XX default response application/json;charset=UTF-8;model=errorResponse;version=1 "
    BuildResult:
      description: |
        Result of build operation in ZIP archive.
        * The archive contains folders with sources, builded JSON documents and JSON operation files. 
        * In addition, several config files are provided. he structure of these files is described below.
      title: BuildResult
      type: object
      required:
        - info.json
        - documents.json
      properties:
        info.json:
          description: |
            Build configuration, published version details.
          type: object
          required:
            - packageId
            - version
            - buildType
          properties:
            packageId:
              description: Package unique string identifier (full alias).
              type: string
              example: "QS.CloudQSS.CPQ.Q-TMF"
            version:
              description: Version name for publication.
              type: string
              example: "2022.3"
            previousVersion:
              description: |
                Name of the previous published version.
                The mask <version>@<revision> may be used to return the revision number.
              type: string
              example: "2022.2@4"
              default: ""
            previousVersionPackageId:
              description: Previous release version package id.
              type: string
              example: "QS.CloudQSS.CPQ.Q-TMF"
            buildType:
              description: |
                Type of the build process. Available options are:
                - **build** - Standard build process.Consist of contract and operations build and validation, calculation of the changelog, creation of the final version of the published contracts.
                - **changelog** - Only the changelog calculation, no API contracts version will be created. Both version and previousVersion fields *must* contain @<revision> suffix when using changelog buildType
                - **reducedSourceSpecifications** - proccess that finds source specifications for all operations from operation group and removes from these specifications operations other than those that are included into operation group.
                - **mergedSpecification** - process the merges all operations from an operation group into one specification.
              type: string
              enum:
                - build
                - changelog
                - mergedSpecification
                - reducedSourceSpecifications
            format:
              description: Should be specified if buildType equal to mergedSpecification or reducedSourceSpecifications
              type: string
              enum:
                - yaml
                - json
                - html
              default: json
            metadata:
              description: Common publish metadata.
              type: object
              properties:
                commitId:
                  description: Last Git commit ID of the version.
                  type: string
                  example: a5d45af7
                repositoryUrl:
                  description: Url of the Git repository.
                  type: string
                  format: URI
                  example: 'https://<git_group_link>/apihub-registry'
                labels:
                  description: List of version labels.
                  type: array
                  items:
                    type: string
                  example: ["TMF"]
                cloudName:
                  description: Name of the cloud for publication from Agent.
                  type: string
                  example: 'k8s-apps2'
                cloudUrl:
                  description: Full address of the cloud from Agent.
                  type: string
                  format: URI
                  example: "https://k8s-apps2.k8s.sdntest.qubership.org"
                namespace:
                  description: Namespace of Agent's publication.
                  type: string
                  example: "cloudQSS-release2"
            refs:
              description:  |
                Detailed data about referenced versions for current package version.
              type: array
              items:
                type: object
                required:
                  - refId
                  - version
                  - type
                properties:
                  refId:
                    description: Referenced package Id.
                    type: string
                    example: "QS.CloudQSS.CPQ.CORE"
                  version:
                    description: Referenced package version number.
                    type: string
                    example: "2022.3@5"
                  parentRefId:
                    description: Referenced parent package Id.
                    type: string
                    example: "QS.CloudQSS.CPQ.CORE"
                  parentVersion:
                    description:  |
                      Referenced parent version.
                      The mask <version>@<revision> may be used to link with a specific revision.
                      If the @revision is not provided, the latest version's revision will be used.
                    type: string
                    example: "2022.2@4"
                  excluded:
                    description: All excluded refs will be ignored (but will still be visible for package version).
                    type: boolean
        documents.json:
          type: object
          description: List of documents data.
          properties:
            documents:
              type: array
              items:
                description: List of builded files.
                type: object
                required:
                  - fileId
                  - slug
                  - title
                  - format
                  - type
                  - operations
                properties:
                  fileId:
                    type: string
                    description: File name with folders.
                    example: "docs/qitmf-v5.11.json"
                  fileName:
                    type: string
                    description: File name (slug+extension).
                    example: "qitmf-v5.11.json"
                  slug:
                    description: Published file slug.
                    type: string
                    pattern: "^[a-z0-9-]"
                    example: "qitmf-v5-11-json"
                  type:
                    $ref: "#/components/schemas/SpecificationType"
                  format:
                    $ref: "#/components/schemas/DocumentFormat"
                  title:
                    description: Document title and summary.
                    type: string
                  description:
                    description: Document description.
                    type: string
                  version:
                    description: Document version. For openapi document, version is taken from info object.
                    type: string
                    example: "1.0.1"
                  operationIds:
                    description: List of operation IDs.
                    type: array
                    items:
                      type: string
                    example: ["get-quoteManagement-v5-quote"]
                  metadata:
                    description: Meta parameters from config file.
                    type: object
                    properties:
                      info:
                        description: Info object from openapi document
                        type: object
                      externalDocs:
                        description: External documentation object from openapi document
                        type: object
                      labels:
                        description: List of file labels.
                        type: array
                        items:
                          type: string
                        example: ["TMF"]
                      blobId:
                        description: Git blob ID of the file.
                        type: string
                        example: a5d84af7
                      tags:
                        type: object
                        properties:
                          name:
                            type: string
                          description:
                            type: string
                          externalDocs:
                            type: object
                            properties:
                              description:
                                type: string
                              url:
                                type: string
        comparisons.json:
          type: object
          properties:
            comparisons:
              type: array
              items:
                type: object
                required:
                  - operationTypes
                properties:
                  comparisonFileId:
                    type: string
                    description: Pointer to the file with changes. Optional, required only if package contains documents. Not required in case of refs only (dashboard).
                    example: "comparisonFile1.json"
                  packageId:
                    description: Package unique string identifier (full alias).
                    type: string
                    example: "QS.CloudQSS.CPQ.Q-TMF"
                  version:
                    description: Version name for publication.
                    type: string
                    example: "2022.3"
                  revision:
                    type: number
                  previousVersion:
                    description: |
                      Name of the previous published version.
                    type: string
                    example: "2022.2"
                    default: ""
                  previousVersionPackageId:
                    description: Previous release version package id.
                    type: string
                    example: "QS.CloudQSS.CPQ.Q-TMF"
                  previousVersionRevision:
                    type: number
                  operationTypes:
                    type: array
                    items:
                      type: object
                      properties:
                        apiType:
                          type: string
                        changesSummary:
                          $ref: "#/components/schemas/ChangeSummary"
                        numberOfImpactedOperations:
                          allOf:
                            - $ref: '#/components/schemas/ChangeSummary'
                            - type: object
                              description: Number of operations impacted by each severety type.
                        apiAudienceTransitions:
                              type: array
                              description: Shows transitions of operations' apiAudience value (compared to the previous release version) and number of operations in which this transition occurred. The array contains only records of transitions that actually occurred in operations.
                              items:
                                type: object
                                properties:
                                  currentAudience:
                                    type: string
                                    description: Current apiAudience value (currentAudience must not be equal to previousAudience)
                                    enum:
                                      - internal
                                      - external
                                      - unknown
                                  previousAudience:
                                    type: string
                                    description: Previous apiAudience value
                                    enum:
                                      - internal
                                      - external
                                      - unknown
                                  operationsCount:
                                    type: number
                                    description: Number of operations in which the apiAudience was changed from previousAudience to currentAudience
                        tags:
                          type: array
                          items:
                            type: string
                          example:
                            ["a", "b"]
                  fromCache:
                    description: True if the changes were retrieved from BE (not calculated)
                    type: boolean
        comparisons/{comparisonFileId}:
          type: object
          description: List of changes data.
          properties:
            operations:
              description: Collection of changes depend on apiType.
              type: array
              items:
                type: object
                required:
                  - operationId
                  - changes
                  - changesSummary
                properties:
                  operationId:
                    description: >-
                      Operation unique identifier (slug). Not the same as
                      operationId tag from the OpenAPI file.
                    type: string
                    example: get-quoteManagement-v5-quote
                  dataHash:
                    description: Operation hash.
                    type: string
                    example: sdfsdfsf242
                  previousDataHash:
                    description: Hash of the previous published version operation.
                    type: string
                    example: sdfsdfsf24dds2
                  changeSummary:
                    $ref: "#/components/schemas/ChangeSummary"
                  changes:
                    description: Collection of changes for each operation.
                    type: array
                    items:
                      $ref: "#/components/schemas/SingleOperationChange"
        operations.json:
          description: List of operations for publish.
          type: object
          properties:
            operations:
              type: array
              items:
                allOf:
                  - $ref: "#/components/schemas/Operation"
                  - type: object
                    required:
                      - data
                      - metadata
                      - searchScopes
                    properties:
                      models:
                        description: Map<name:string, hash:string> of operation models
                        type: object
                        additionalProperties:
                          type: string
                          example:
                            Template: a6b1596abe745a4a0cd3de25a411dbe671a3ba7c
                            ErrorResponse: cf1d87cf3895af106a3ad29f2098dcc2cc477e71
                            CreateItemDto: 72bfdc14758213e5c09620b29054da86b75d4868
                      deprecatedInfo:
                        description: |
                          Additional information about deprecated operation:
                          * for REST API it is value of 'x-deprecated-meta' extension (value of extension must be string), which is defined for deprecated operation. 
                          * for GraphQL API it is value of 'reason' argument of @deprecated directive, which is defined for deprecated operation.
                        type: string
                      deprecatedInPreviousVersions:
                        description: List of previous release versions where operation was also deprecated
                        type: array
                        items:
                          type: string
                        example: ["2022.2", "2022,1", "2021.4"]
                      deprecatedItems:
                        $ref: "#/components/schemas/DeprecatedItems"
                      metadata:
                        description: Metadata content depend on apiType.
                        oneOf:
                          - $ref: "#/components/schemas/RestOperationMeta"
                          - $ref: "#/components/schemas/GraphQLOperationMeta"
                          - $ref: "#/components/schemas/ProtobufOperationMeta"
                      searchScopes:
                        description: Scopes for search indexes.
                        type: object
                        additionalProperties:
                          type: string
                        example:
                          all: "Quote Snapshot V6 Performs full text search ofQuotes Statistics By Phrase fullTextSearchStatistics searchPhrase offset int32 limit int32 fields 200 OK application/json quote anonymousCustomerData assignTo The name of the user/team to whom the Quote is assigned cancellationReason The entity that represents common information about a customer's request cancellationReasonDescription The reason (from the free text field) why the Quote has been cancelled contactMedium A list of contact mediums (ContactMedium [*]). Indicates the contact medium that could be used to contact the party deliveryMethod Id of the Delivery Method (from the Delivery Method list) for Quote description Description of the Quote extendedParameters additionalProperties The attribute contains additional parameters of the Quote The attribute contains additional parameters of the Quote Map<String,List<String>> The attribute contains additional parameters of the Quote externalRefs Represents a reference to an external object id Unique identifier of the Quote name Quote name quoteDate Date and time when the Quote was created date-time quoteTotalPrice Represents Quote total price relatedParty A list of related party references (RelatedPartyRef [*]).A related party defines party or party role linked to a specific entity relatedQuote A list of related quotes (RelatedQuote [*]). It represents another revision of the in-flight Quote from the same chain, i.e. in-flight Quote with the same initialBaselineQuoteId value. This class is returned in the API response only in case of enhancedListQuotes API operation is called. It can be empty if there are no other in-flight Quotes in this chain revision Attribute is used to mark in-flight Quote. Increased in case changes are done to the Quote after submission int32 state State of the Quote updatedWhen Date and time when the Quote was updated date-time validFor Quote with reduced scope of attributes quoteItemStatistic Shows the number of Quote's root Quote Items grouped by some criteria(e.g. by Product Offering, Action) action Numbers of root Quote Items grouped by Action count Number of Quote Items for the specific value int32 name Action name Shows the number of Customer's Product Instances for specified criteria (e.g. Product Family, Billing Account and so on) productFamilyId Unique identifier of Product Family productFamilyName Product family name. Name is returned in the default locale. If alternative locale is passed in Accept-language header in the API request the system returns corresponding localized name in the response. productOfferingId Unique identifier of Product Offering productOfferingName Product offering name. Attribute is returned in the response for catalog entities only (product offering). Name is returned in the default locale. If alternative locale is passed in Accept-language header in the API request the system returns corresponding localized name in the response Shows the number of Quote's root Quote Items grouped by some criteria(e.g. by Product Offering, Action) Shows the Quote with a number of root Quote Items 4XX default response application/json;charset=UTF-8;model=errorResponse;version=1 5XX default response application/json;charset=UTF-8;model=errorResponse;version=1 "
    SingleOperationChange:
      allOf:
        - type: object
          description: Discrepancy data in a single operation.
          properties:
            description:
              description: >-
                Human-readable description of point of change.
              type: string
              example: "[Added] Property: summary."
            severity:
              $ref: "#/components/schemas/ChangeSeverity"
            scope:
              type: string
              description: |
                Part of operation (like request/response) where change was made. Scope differs for apiTypes.\
                Scope is needed to correctly identify severity of change, because the same change can have different severity in request/response.
            action:
              description: Action, what was done with the endpoint.
              type: string
              enum:
                - add
                - remove
                - replace
                - rename
        - oneOf:
          - $ref: "#/components/schemas/ChangeAdd"
          - $ref: "#/components/schemas/ChangeRemove"
          - $ref: "#/components/schemas/ChangeReplace"
          - $ref: "#/components/schemas/ChangeRename"
    ChangeAdd:
      type: object
      description: Data of single operation change when change action = add
      properties:
        currentDeclarationJsonPaths:
          description: |
            (below, a document is not considered to be an original document, but a document with one specific operation)\
            When comparing two documents (origin and changed; difference from changed document apended to the original document), a declarative jsonPath is calculated for each change.
          type: array
          items:
            type: array
            items:
              anyOf:
               - type: string
               - type: integer
          example: [["components/schemas/Cat/minProperties", "components/schemas/Dog/minProperties"],["/quoteManagement/v5/quote"]]
        currentValueHash:
          type: string
          description: |
            Hash of the added entity.\
            Hash is needed to identify that the same enitity was changed in other operations, that allows calculating declarative number of changes in package version.
    ChangeRemove:
      type: object
      description: Data of single operation change when change action = remove.
      properties:
        previousDeclarationJsonPaths:
          description: |
            (below, a document is not considered to be an original document, but a document with one specific operation)\
            When comparing two documents (origin and changed; difference from changed document apended to the original document), a declarative jsonPath is calculated for each change.
          type: array
          items:
            type: array
            items:
              anyOf:
               - type: string
               - type: integer
          example: [["components/schemas/Cat/minProperties", "components/schemas/Dog/minProperties"],["/quoteManagement/v5/quote"]]
        previousValueHash:
          type: string
          description: |
            Hash of the removed entity.\
            Hash is needed to identify that the same enitity was changed in other operations, that allows calculating declarative number of changes in package version.
    ChangeReplace:
      type: object
      description: Data of single operation change when change action = replace
      properties:
        currentDeclarationJsonPaths:
          description: |
            (below, a document is not considered to be an original document, but a document with one specific operation)\
            When comparing two documents (origin and changed; difference from changed document apended to the original document), a declarative jsonPath is calculated for each change.
          type: array
          items:
            type: array
            items:
              anyOf:
               - type: string
               - type: integer
          example: [["components/schemas/Cat/minProperties", "components/schemas/Dog/minProperties"],["/quoteManagement/v5/quote"]]
        previousDeclarationJsonPaths:
          description: |
            (below, a document is not considered to be an original document, but a document with one specific operation)\
            When comparing two documents (origin and changed; difference from changed document apended to the original document), a declarative jsonPath is calculated for each change.
          type: array
          items:
            type: array
            items:
              anyOf:
               - type: string
               - type: integer
          example: [["components/schemas/Cat/minProperties", "components/schemas/Dog/minProperties"],["/quoteManagement/v5/quote"]]
        previousValueHash:
          type: string
          description: |
            Previous hash of the changed entity.\
            Hash is needed to identify that the same enitity was changed in other operations, that allows calculating declarative number of changes in package version.
        currentValueHash:
          type: string
          description: |
            Current hash of the changed entity.\
            Hash is needed to identify that the same enitity was changed in other operations, that allows calculating declarative number of changes in package version.
    ChangeRename:
      type: object
      description: Data of single operation change when change action = rename.
      properties:
        currentDeclarationJsonPaths:
          description: |
            (below, a document is not considered to be an original document, but a document with one specific operation)\
            When comparing two documents (origin and changed; difference from changed document apended to the original document), a declarative jsonPath is calculated for each change.
          type: array
          items:
            type: array
            items:
              anyOf:
               - type: string
               - type: integer
          example: [["components/schemas/Cat/minProperties", "components/schemas/Dog/minProperties"],["/quoteManagement/v5/quote"]]
        previousDeclarationJsonPaths:
          description: |
            (below, a document is not considered to be an original document, but a document with one specific operation)\
            When comparing two documents (origin and changed; difference from changed document apended to the original document), a declarative jsonPath is calculated for each change.
          type: array
          items:
            type: array
            items:
              anyOf:
               - type: string
               - type: integer
          example: [["components/schemas/Cat/minProperties", "components/schemas/Dog/minProperties"],["/quoteManagement/v5/quote"]]
        previousKey:
          type: string
          description: Previous key (name) of the renamed entity.
        currentKey:
          type: string
          description: Current key (name) of the renamed entity.
    BuildConfig:
      type: object
      description: |
        Configuration of the source files. 
        Content can not be empty, files or refs are **required**.
      required:
        - version
        - status
      properties:
        version:
          description: Version name for publication.
          type: string
          example: "2022.3"
        previousVersion:
          description: |
            Name of the previous published version.
            The mask <version>@<revision> is required for 'changelog' buildType.
          type: string
          example: "2022.2"
          default: ""
        previousVersionPackageId:
          description: | 
            Required in case of snapshot when publishing version should be compared to different package. 
            Do not set anything if the package sould be compared to itself. Value equals to packageId is forbidden.
          type: string
          example: "QS.CloudOSS.PL.MC"
        status:
          $ref: "#/components/schemas/VersionStatusEnum"
        groupName:
          description: |
            Operation group name. groupName is required if buildType = documentGroup.
          type: string
          example: v1
        apiType:
          $ref: "#/components/schemas/ApiType"
        buildType:
          description: |
            Type of the build process. Available options are:

            **build** - Standard build process to publish new version.
            Consist of contract and operations build and validation, calculation of the changelog, creation of the final version of the published contracts.

            **changelog** - Only the changelog calculation, no API contracts version will be created.
            The ```files``` and ```refs``` objects are not required in this case.

            **documentGroup** - Process to transform documents so that they will contain operations only from specific operations group.
          type: string
          enum:
            - build
            - changelog
            - documentGroup
          default: build
        metadata:
          description: Common publish metadata.
          type: object
          properties:
            commitId:
              description: Last Git commit ID of the version.
              type: string
              example: a5d45af7
            repositoryUrl:
              description: Url of the Git repository.
              type: string
              format: URI
              example: "https://<git_group_link>/apihub-registry"
            versionLabels:
              description: List of version labels. Label is a string.
              type: array
              items:
                type: string
              example: ["part-of:CloudQSS-CPQBE"]
            cloudName:
              description: Name of the cloud for publication from Agent.
              type: string
              example: "k8s-apps2"
            cloudUrl:
              description: Full address of the cloud from Agent.
              type: string
              format: URI
              example: "https://k8s-apps2.k8s.sdntest.qubership.org"
            namespace:
              description: Namespace of Agent's publication.
              type: string
              example: "cloudQSS-release2"
        externalMetadata:
          description: External build metadata
          type: object
          properties:
            operations:
              type: array
              items:
                type: object
                properties:
                  apiType:
                    type: string
                    enum:
                      - rest
                  method:
                    type: string
                    description: HTTP method
                  path:
                    type: string
                    description: HTTP path
                  externalMetadata:
                    description: External operation metadata
                    type: object
        files:
          description: |
            Detailed data about files in sources archive.
            Required if no Refs are provided.
          type: array
          items:
            type: object
            required:
              - fileId
            properties:
              fileId:
                type: string
                description: File name.
                example: "qitmf-v5.11.json"
              publish:
                description: | 
                  Flag, publish the source file or not. 
                  Required for case with external refs when specification is separated into multiple files. 
                  After dereference in scope of build process the source files(parts) are no longer required. So it's possible to skip publish of such files.
                type: boolean
                default: true
              labels:
                description: List of file labels. Label is a string.
                type: array
                items:
                  type: string
                example: ["TMF"]
              blobId:
                description: Git blob ID of the file.
                type: string
                example: a5d45af7
              xApiKind:
                description: Custom x-api-kind parameter for the file. Specify if this API is backward compatible.
                type: string
                example: "no-BWC"
        refs:
          description: |
            Detailed data about referenced versions for current package version.
            Required if no Files provided.
          type: array
          items:
            type: object
            required:
              - refId
              - version
              - type
            properties:
              refId:
                description: Referenced package Id. I.e. link to another package.
                type: string
                example: "QS.CloudQSS.CPQ.CORE"
              version:
                description: Referenced package version. I.e. link to another package's version.
                  The mask <version>@<revision> may be used to link with a specific revision.
                  If the @revision is not provided, the latest version's revision will be used.
                type: string
                example: "2022.3@5"
              parentRefId:
                description: Required to build reference(dependencies) graph. Allows to specify the parent node package id in the graph.
                type: string
                example: "QS.CloudQSS.CPQ.CORE"
              parentVersion:
                description:  |
                  Required to build reference(dependencies) graph. Allows to specify the parent node version in the graph.
                  The mask <version>@<revision> may be used to link with a specific revision.
                  If the @revision is not provided, the latest version's revision will be used.
                type: string
                example: "2022.2@4"
              excluded:
                description: |
                  Required for conflict resolution case when different versions of the same package appear in the publication config.
                  All excluded refs will be ignored (but will still be visible for package version).
                type: boolean
    ChangeSummary:
      description: |
        Numbers of changes between the current and previous published version.
      type: object
      properties:
        breaking:
          description: Number of changes, breaking the backward compatibility.
          type: integer
          default: 0
        semi-breaking:
          description: Number of changes, breaking the backward compatibility in a legal way. For example, deleting correctly deprecated endpoint.
          type: integer
          default: 0
        deprecated:
          description: Number of deprecated endpoints.
          type: integer
          default: 0
        non-breaking:
          description: Number of non-breaking changes.
          type: integer
          default: 0
        annotation:
          description: Number of annotation changes.
          type: integer
          default: 0
        unclassified:
          description: Number of unclassified changes.
          type: integer
          default: 0
    ChangeSummaryByApiType:
      description: |
        Numbers of changes between the current and previous published version by api type.
      type: object
      additionalProperties:
        type: object
        properties:
          breaking:
            description: Number changes, breaking the backward compatibility.
            type: integer
            default: 0
          semi-breaking:
            description: Number of changes, breaking the backward compatibility in a legal way.
            type: integer
            default: 0
          deprecated:
            description: Number of deprecated endpoints.
            type: integer
            default: 0
          non-breaking:
            description: Number of non-breaking changes.
            type: integer
            default: 0
          annotation:
            description: Number of annotation changes.
            type: integer
            default: 0
          unclassified:
            description: Number of unclassified changes.
            type: integer
            default: 0
      example:
        rest:
          breaking: 15
          semi-breaking: 3
          deprecated: 2
          non-breaking: 45
          annotation: 233
          unclassified: 0
        graphql:
          breaking: 0
          semi-breaking: 0
          deprecated: 0
          non-breaking: 5
          annotation: 20
          unclassified: 0
    OperationSummary:
      description: Numbers of operations of each type.
      type: object
      properties:
        endpoints:
          description: Overall number of operations.
          type: integer
          default: 0
        deprecated:
          description: Number of newly deprecated operations (comparing with the previous version).
          type: integer
          default: 0
        created:
          description: Number of newly created operations (comparing with the previous version).
          type: integer
          default: 0
        deleted:
          description: Number of deleted operations (comparing with the previous version).
          type: integer
          default: 0
    CreateOperationGroup:
      description: Version group.
      type: object
      required:
        - groupName
        - apiType
        - isPrefixGroup
      properties:
        groupName:
          type: string
          description: Unique group name.
          example: New_operation_group
        apiType:
          $ref: "#/components/schemas/ApiType"
        description:
          type: string
          description: Description of group.
        isPrefixGroup:
          type: boolean
          description: true - if the group created automatically via restGroupingPrefix.
          example: false
        exportTemplateFileName:
          type: string
          description: The name of the export template file, if there is one.
          example: template123.json
    BuildTypes:
      type: string
      description: | 
        Type of the build process. Available options are:\
        **build** - Standard build process to publish new version. Consist of contract and operations build and validation, calculation of the changelog, creation of the final version of the published contracts.\
        **changelog** - Only the changelog calculation, no API contracts version will be created. The ```files``` and ```refs``` objects are not required in this case.\
        **documentGroup** - Process to transform documents so that they will contain operations only from specific operations group.
        **reducedSourceSpecifications** - Process to take operations from the operation group and ex
        **mergedSpecification**
      enum:
        - build
        - changelog
        - reducedSourceSpecifications
        - mergedSpecification
    BuildErrors:
      type: object
      properties:
        errors:
          type: string
          description: Build error message.
    ChangeSeverity:
      description: Severity of the particular change.
      type: string
      enum:
        - breaking
        - semi-breaking
        - deprecated
        - non-breaking
        - annotation
        - unclassified
    PackageVersionRevision:
      description: Version revision parameters.
      type: object
      title: PackageVersionRevision
      required:
        - version
        - revision
        - status
        - createdAt
        - createdBy
      properties:
        version:
          description: Package version name. The <version>@<revision> mask is used to return the revision number.
          type: string
          example: "2023.1@5"
        revision:
          description: Number of the revision.
          type: integer
          format: int32
          example: 3
        status:
          $ref: "#/components/schemas/VersionStatusEnum"
        createdBy:
          $ref: "#/components/schemas/Principal"
        createdAt:
          type: string
          description: Date of revision creation.
          format: datetime
        notLatestRevision:
          type: boolean
          default: false
        revisionLabels:
          description: List of revision labels.
          type: array
          items:
            type: string
          example: [ "part-of:CloudQSS-CPQBE" ]
        publishMeta:
          additionalProperties: true
          description: Publish metadata.
          type: object
          properties:
            commitId:
              description: Last Git commit ID of the version.
              type: string
              example: a5d45af7
            repositoryUrl:
              description: Url of the Git repository.
              type: string
              format: URI
              example: https://<git_group_link>/apihub-registry
            cloudName:
              description: Name of the cloud for publication from Agent.
              type: string
              example: k8s-apps2
            cloudUrl:
              description: Full address of the cloud from Agent.
              type: string
              format: URI
              example: https://k8s-apps2.k8s.sdntest.qubership.org
            namespace:
              description: Namespace of Agent's publication.
              type: string
              example: cloudQSS-release2
  examples:
    Package:
      description: Example of the package params
      value:
        packageId: "QS.QSS.PRG.APIHUB"
        parentId: "QS.QSS.PRG"
        kind: "package"
        name: "Test package"
        alias: "APIHUB"
        description: "Package for the test purpose"
        isFavorite: false
        serviceName: "apihub-be"
        defaultRole: Viewer
    PackageCreate:
      description: Example of the package creation params
      value:
        parentId: "QS.QSS.PRG"
        kind: "package"
        name: "Test package"
        alias: "APIHUB"
        description: "Package for the test purpose"
        serviceName: "apihub-be"
    PackageNotFound:
      description: Package not found by ID. Response for the 404 error
      value:
        status: 404
        code: "APIHUB-3020"
        message: "package with packageId = $packageId not found"
    VersionNotFound:
      description: Version not found by number. Response for the 404 error
      value:
        status: 404
        code: "APIHUB-3050"
        message: "Published version $version not found"
    FileNotFound:
      description: File not found by slug. Response for the 404 error
      value:
        status: 404
        code: "APIHUB-3043"
        message: "File for path $fileId not found"
    IncorrectInputParameters:
      description: Incorrect input parameters
      value:
        status: 400
        code: "APIHUB-COMMON-4001"
        message: "Incorrect input parameters"
    InternalServerError:
      description: Default internal server error
      value:
        status: 500
        code: "APIHUB-8000"
        reason: "InternalServerError"
        message: "InternalServerError"
  securitySchemes:
    BearerAuth:
      type: http
      description: Bearer token authentication. Default security scheme for API usage.
      scheme: bearer
      bearerFormat: JWT
    api-key:
      type: apiKey
      description: Api-key authentication.
      name: api-key
      in: header
    BasicAuth:
      type: http
      description: Login/password authentication.
      scheme: basic