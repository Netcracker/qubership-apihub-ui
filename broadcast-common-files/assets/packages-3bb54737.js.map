{"version":3,"file":"packages-3bb54737.js","sources":["../../packages/shared/src/entities/packages.ts"],"sourcesContent":["/**\n * Copyright 2024-2025 NetCracker Technology Corporation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { PackagePermissions } from './package-permissions'\nimport type { UserRole } from './user-roles'\nimport type { StatusMarkerVariant } from '../components/StatusMarker'\nimport type { Key, VersionKey } from './keys'\n\nexport const GROUP_KIND = 'group'\nexport const PACKAGE_KIND = 'package'\nexport const WORKSPACE_KIND = 'workspace'\nexport const DASHBOARD_KIND = 'dashboard'\n\nexport type PackageKind =\n  | typeof GROUP_KIND\n  | typeof PACKAGE_KIND\n  | typeof WORKSPACE_KIND\n  | typeof DASHBOARD_KIND\n\nexport type BwcErrors = Readonly<{\n  type: StatusMarkerVariant\n  count: number\n}>\n\nexport type LastReleaseVersionDetailsDto = Readonly<{\n  version?: string\n  notLatestRevision?: boolean\n  summary?: PackageSummary\n}>\n\nexport type LastReleaseVersionDetails = Readonly<{\n  version?: string\n  latestRevision?: boolean\n  summary?: PackageSummary\n}>\n\nexport type PackageSummary = Readonly<{\n  breaking?: number\n  semiBreaking?: number\n  nonBreaking?: number\n  deprecate?: number\n  annotation?: number\n  unclassified?: number\n}>\n\nexport type PackageDto = Readonly<{\n  packageId: Key\n  parentId?: Key\n  alias: string\n  name: string\n  kind: PackageKind\n  description?: string\n  isFavorite?: boolean\n  serviceName?: string\n  userRole?: UserRole\n  permissions?: PackagePermissions\n  defaultRole?: DefaultPackageRoleType\n  defaultReleaseVersion?: string\n  releaseVersionPattern?: string\n  restGroupingPrefix?: string\n  parents?: ParentPackagesDto\n  defaultVersion?: VersionKey\n  lastReleaseVersionDetails?: LastReleaseVersionDetailsDto\n}>\n\nexport type PackagesDto = Readonly<{\n  packages: ReadonlyArray<PackageDto>\n}>\n\nexport type Package = Readonly<{\n  key: Key\n  alias: string\n  name: string\n  parentGroup?: Key\n  kind: PackageKind\n  description?: string\n  isFavorite?: boolean\n  serviceName?: string\n  // todo remove userRole after full transition to permissions\n  userRole?: UserRole\n  permissions?: PackagePermissions\n  restGroupingPrefix?: string\n  parents?: ParentPackages\n  defaultRole?: DefaultPackageRoleType\n  packageVisibility?: boolean\n  defaultReleaseVersion?: string\n  releaseVersionPattern?: string\n  defaultVersion?: VersionKey\n  lastReleaseVersionDetails?: LastReleaseVersionDetails\n  bwcErrors?: BwcErrors\n}>\n\nexport type Packages = ReadonlyArray<Package>\n\nexport type ParentPackageDto = {\n  packageId: Key\n  kind: PackageKind\n  alias: string\n  name: string\n  parentId?: Key\n}\n\nexport type ParentPackagesDto = ReadonlyArray<ParentPackageDto>\n\nexport type ParentPackage = {\n  key: Key\n  alias: string\n  name: string\n  parentGroup?: Key\n  kind: PackageKind\n}\n\nexport type ParentPackages = ReadonlyArray<ParentPackage>\n\nexport type CreatePackageProps = {\n  alias: string\n  name: string\n  parentId?: Key\n  kind: PackageKind\n  description?: string\n  defaultRole?: DefaultPackageRoleType\n}\n\nexport type InvalidatePackagesProps = {\n  key?: Key\n  parentId?: Key\n  kind: PackageKind\n  limit?: number | null\n  page?: number | null\n  onlyFavorite?: boolean\n  onlyShared?: boolean\n  textFilter?: string\n}\n\nexport const PUBLIC_PACKAGE_ROLE = 'viewer'\n\nexport const PRIVATE_PACKAGE_ROLE = 'none'\nexport type DefaultPackageRoleType =\n  | typeof PUBLIC_PACKAGE_ROLE\n  | typeof PRIVATE_PACKAGE_ROLE\n\nexport const EMPTY_PACKAGE: Package = {\n  key: '',\n  kind: PACKAGE_KIND,\n  alias: '',\n  name: '',\n}\n\nexport const PACKAGE_KIND_MAP: Record<PackageKind, string> = {\n  [GROUP_KIND]: 'Group',\n  [PACKAGE_KIND]: 'Package',\n  [WORKSPACE_KIND]: 'Workspace',\n  [DASHBOARD_KIND]: 'Dashboard',\n}\n"],"names":["GROUP_KIND","PACKAGE_KIND","WORKSPACE_KIND","DASHBOARD_KIND","EMPTY_PACKAGE"],"mappings":"AAqBO,MAAMA,EAAa,QACbC,EAAe,UACfC,EAAiB,YACjBC,EAAiB,YAkIjBC,EAAyB,CACpC,IAAK,GACL,KAAMH,EACN,MAAO,GACP,KAAM,EACR"}